quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"in transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBox.html:20671,variab,variable,20671,root/html528/TEveBox.html,https://root.cern,https://root.cern/root/html528/TEveBox.html,6,['variab'],['variable']
Modifiability,"in which are merged several species of events. These species represent various signal components and background components which all together account for the data sample. The different terms of the log-Likelihood are:. \(N\) : the total number of events in the data sample,; \({\rm N}_{\rm s}\) : the number of species of events populating the data sample,; \(N_i\) : the number of events expected on the average for the \(i^{\rm th}\) species,; \({\rm f}_i(y_e)\) : the value of the PDFs of the discriminating variables \(y\) for the \(i^{th}\) species and for event \(e\),; \(x\) : the set of control variables which, by definition, do not appear in the expression of the Likelihood function \({\cal L}\). The extended log-Likelihood reads:. \[; {\cal L}=\sum_{e=1}^{N}\ln \Big\{ \sum_{i=1}^{{\rm N}_{\rm s}}N_i{\rm f}_i(y_e) \Big\} -\sum_{i=1}^{{\rm N}_{\rm s}}N_i \tag{1}; \]. From this expression, after maximization of \({\cal L}\) with respect to the \(N_i\) parameters, a weight can be computed for every event and each species, in order to obtain later the true distribution \(\hbox{M}_i(x)\) of variable \(x\). If \({\rm n}\) is one of the \({\rm N}_{\rm s}\) species present in the data sample, the weight for this species is defined by:. \[; \fbox{$; {_s{\cal P}}_{\rm n}(y_e)={\sum_{j=1}^{{\rm N}_{\rm s}} \hbox{V}_{{\rm n}j}{\rm f}_j(y_e)\over\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e) } $} , \tag{2}; \]. where \(\hbox{V}_{{\rm n}j}\); is the covariance matrix resulting from the Likelihood maximization. This matrix can be used directly from the fit, but this is numerically less accurate than the direct computation:. \[; \hbox{ V}^{-1}_{{\rm n}j}~=~; {\partial^2(-{\cal L})\over\partial N_{\rm n}\partial N_j}~=~; \sum_{e=1}^N {{\rm f}_{\rm n}(y_e){\rm f}_j(y_e)\over(\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e))^2} . \tag{3}; \]. The distribution of the control variable \(x\) obtained by histogramming the weighted events reproduces, on average, the true distribution \({\hbo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:3369,variab,variable,3369,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,1,['variab'],['variable']
Modifiability,"in which we need fTrainInfo. protected:. Bool_tfCutTypetrue: if event variable > cutValue ==> signal , false otherwise; Float_tfCutValuecut value appplied on this node to discriminate bkg against sig; UInt_tTMVA::Node::fDepthdepth of the node within the tree (seen from root node); vector<Double_t>fFisherCoeffthe other fisher coeff (offset at the last element; Bool_tfIsTerminalNode! flag to set node as terminal (i.e., without deleting its descendants); TMVA::Node*TMVA::Node::fLeftpointers to the two ""daughter"" nodes; Int_tfNodeTypeType of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal; TMVA::Node*TMVA::Node::fParentthe previous (parent) node; TMVA::BinaryTree*TMVA::Node::fParentTreepointer to the parent tree to which the Node belongs ; charTMVA::Node::fPosposition, i.e. it is a left (l) or right (r) daughter ; Float_tfPuritythe node purity; Float_tfRMSresponse RMS of the regression node; Float_tfResponseresponse value in case of regression; TMVA::Node*TMVA::Node::fRightpointers to the two ""daughter"" nodes; Short_tfSelectorindex of variable used in node selection (decision tree); TMVA::DTNodeTrainingInfo*fTrainInfo; static TMVA::MsgLogger*fgLoggerstatic because there is a huge number of nodes... Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; DecisionTreeNode(); constructor of an essentially ""empty"" node floating in space. DecisionTreeNode(TMVA::Node* p, char pos); constructor of a daughter node as a daughter of 'p'. DecisionTreeNode(const TMVA::DecisionTreeNode& n, TMVA::DecisionTreeNode* parent = NULL); copy constructor of a node. It will result in an explicit copy of; the node and recursively all it's daughters. ~DecisionTreeNode(); destructor. Bool_t GoesRight(const TMVA::Event& ) const; test event if it decends the tree at this node to the right. Bool_t GoesLeft(const TMVA::Event& ) const; test event if it decends the tree at this node to the left. void SetPurity( void ); return the S/(S+B) (purity) for the node; RE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTreeNode.html:5796,variab,variable,5796,root/html528/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTreeNode.html,1,['variab'],['variable']
Modifiability,"in work[0,...,k-1] and all indices of the larger element in arbitrary order in work[k+1,..,n-1] work[k] will contain instead the index of the returned element.; Taken from ""Numerical Recipes in C++"" without the index array implemented by Anna Khreshuk.; See also the declarations at the top of this file ; Definition at line 1359 of file TMath.h. ◆ KUncertainty(). constexpr Double_t TMath::KUncertainty ; (; ). constexpr . Boltzmann's constant uncertainty. ; Definition at line 261 of file TMath.h. ◆ Landau(). Double_t TMath::Landau ; (; Double_t ; x, . Double_t ; mu = 0, . Double_t ; sigma = 1, . Bool_t ; norm = kFALSE . ). The LANDAU function. ; mu is a location parameter and correspond approximately to the most probable value and sigma is a scale parameter (not the sigma of the full distribution which is not defined) Note that for mu=0 and sigma=1 (default values) the exact location of the maximum of the distribution (most proper value) is at x = -0.22278 This function has been adapted from the CERNLIB routine G110 denlan. If norm=kTRUE (default is kFALSE) the result is divided by sigma ; Definition at line 492 of file TMath.cxx. ◆ LandauI(). Double_t TMath::LandauI ; (; Double_t ; x). Returns the cumulative (lower tail integral) of the Landau distribution function at point x. ; (see ROOT::Math::landau_cdf) The algorithm was taken from the Cernlib function dislan(G110) Reference: K.S.Kolbig and B.Schorr, ""A program package for the Landau; distribution"", Computer Phys.Comm., 31(1984), 97-111 ; Definition at line 2845 of file TMath.cxx. ◆ LaplaceDist(). Double_t TMath::LaplaceDist ; (; Double_t ; x, . Double_t ; alpha = 0, . Double_t ; beta = 1 . ). Computes the probability density function of Laplace distribution at point x, with location parameter alpha and shape parameter beta. ; By default, alpha=0, beta=1 This distribution is known under different names, most common is double exponential distribution, but it also appears as the two-tailed exponential or the bilate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMath.html:56493,adapt,adapted,56493,doc/master/namespaceTMath.html,https://root.cern,https://root.cern/doc/master/namespaceTMath.html,1,['adapt'],['adapted']
Modifiability,"in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing norma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf210__angularconv_8C.html:6168,variab,variable,6168,doc/master/rf210__angularconv_8C.html,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html,1,['variab'],['variable']
Modifiability,"in(Int_t ibin, const RooAbsBinning& binning); virtual voidRooAbsRealLValue::setBinFast(Int_t ibin, const RooAbsBinning& binning); voidsetBinning(const RooAbsBinning& binning, const char* name = 0); voidsetBins(Int_t nBins); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidRooAbsRealLValue::setConstant(Bool_t value = kTRUE); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetMax(Double_t value); voidsetMax(const char* name, Double_t value); voidsetMin(Double_t value); voidsetMin(const char* name, Double_t value); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidsetRange(Double_t min, Double_t max); voidsetRange(const char* name, Double_t min, Double_t max); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooErrorVar.html:28770,config,config,28770,root/html534/RooErrorVar.html,https://root.cern,https://root.cern/root/html534/RooErrorVar.html,6,['config'],['config']
Modifiability,"in) override;  Copy and release. ;  ; Bool_t CopyPoints (Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) override;  Copy errors from fE*** to arrays[***] or to f*** Copy points. ;  ; Bool_t CtorAllocate ();  Should be called from ctors after fNpoints has been set Note: This function should be called only from the constructor since it does not delete previously existing arrays. ;  ; Bool_t DoMerge (const TGraph *tg) override;  Protected function to perform the merge operation of a graph with multiple asymmetric errors. ;  ; void FillZero (Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) override;  Set zero values for point arrays in the range [begin, end]. ;  ; void SwapPoints (Int_t pos1, Int_t pos2) override;  Swap points. ;  ; void UpdateArrays (const std::vector< Int_t > &sorting_indices, Int_t numSortedPoints, Int_t low) override;  Update the fX, fY, fExL, fExH, fEyL and fEyH arrays with the sorted values. ;  ;  Protected Member Functions inherited from TGraph; Double_t ** AllocateArrays (Int_t Narrays, Int_t arraySize);  Allocate arrays. ;  ; Bool_t CtorAllocate ();  In constructors set fNpoints than call this method. ;  ; Double_t ** ExpandAndCopy (Int_t size, Int_t iend);  if size > fMaxSize allocate new arrays of 2*size points and copy iend first points. ;  ; TString SaveArray (std::ostream &out, const char *suffix, Int_t frameNumber, Double_t *arr);  Save array as C++ code Returns name of created array. ;  ; void SaveHistogramAndFunctions (std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option);  Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes. ;  ; Double_t ** ShrinkAndCopy (Int_t size, Int_t iend);  if size*2 <= fMaxSize allocate new arrays of size points, copy points [0,oend). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:41063,inherit,inherited,41063,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['inherit'],['inherited']
Modifiability,"in, CSV files, SQLite files, RNTuples, and it can be extended to custom data formats. From Python, NumPy arrays can be imported into RDataFrame as well.; Transform the dataframe by:; Applying filters. This selects only specific rows of the dataset.; Creating custom columns. Custom columns can, for example, contain the results of a computation that must be performed for every row of the dataset. Produce results. Actions are used to aggregate data into results. Most actions are lazy, i.e. they are not executed on the spot, but registered with RDataFrame and executed only when a result is accessed for the first time. Make sure to book all transformations and actions before you access the contents of any of the results. This lets RDataFrame accumulate work and then produce all results at the same time, upon first access to any of them.; The following table shows how analyses based on TTreeReader and TTree::Draw() translate to RDataFrame. Follow the crash course to discover more idiomatic and flexible ways to express analyses with RDataFrame. . TTreeReader ROOT::RDataFrame . TTreeReader reader(""myTree"", file);; TTreeReaderValue<A_t> a(reader, ""A"");; TTreeReaderValue<B_t> b(reader, ""B"");; TTreeReaderValue<C_t> c(reader, ""C"");; while(reader.Next()) {; if(IsGoodEvent(*a, *b, *c)); DoStuff(*a, *b, *c);; }; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; TTreeReaderValueAn interface for reading values stored in ROOT columnar datasets.Definition TTreeReaderValue.h:146; TTreeReaderA simple, robust and fast interface to read values from ROOT columnar datasets such as TTree,...Definition TTreeReader.h:44; ROOT::RDataFrame d(""myTree"", file, {""A"", ""B"", ""C""});; d.Filter(IsGoodEvent).Foreach(DoStuff);; ROOT::RDF::RInterface::FilterRInterface< RDFDetail::RFilter< F, Proxied >, DS_t > Filter(F f, const ColumnNames_t &columns={}, std::string_view name="""")Append a filter to the call graph.Definition RInterface.hxx:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:11485,flexible,flexible,11485,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,1,['flexible'],['flexible']
Modifiability,"in, CSV files, SQLite files, RNTuples, and it can be extended to custom data formats. From Python, NumPy arrays can be imported into RDataFrame as well.; Transform the dataframe by:; Applying filters. This selects only specific rows of the dataset.; Creating custom columns. Custom columns can, for example, contain the results of a computation that must be performed for every row of the dataset. Produce results. Actions are used to aggregate data into results. Most actions are lazy, i.e. they are not executed on the spot, but registered with RDataFrame and executed only when a result is accessed for the first time. Make sure to book all transformations and actions before you access the contents of any of the results. This lets RDataFrame accumulate work and then produce all results at the same time, upon first access to any of them.; The following table shows how analyses based on TTreeReader and TTree::Draw() translate to RDataFrame. Follow the crash course to discover more idiomatic and flexible ways to express analyses with RDataFrame. . TTreeReader ROOT::RDataFrame . TTreeReader reader(""myTree"", file);; TTreeReaderValue<A_t> a(reader, ""A"");; TTreeReaderValue<B_t> b(reader, ""B"");; TTreeReaderValue<C_t> c(reader, ""C"");; while(reader.Next()) {; if(IsGoodEvent(*a, *b, *c)); DoStuff(*a, *b, *c);; }; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; TTreeReaderValueAn interface for reading values stored in ROOT columnar datasets.Definition TTreeReaderValue.h:174; TTreeReaderA simple, robust and fast interface to read values from ROOT columnar datasets such as TTree,...Definition TTreeReader.h:46; ROOT::RDataFrame d(""myTree"", file, {""A"", ""B"", ""C""});; d.Filter(IsGoodEvent).Foreach(DoStuff);; ROOT::RDF::RInterface::FilterRInterface< RDFDetail::RFilter< F, Proxied >, DS_t > Filter(F f, const ColumnNames_t &columns={}, std::string_view name="""")Append a filter to the call graph.Definition RInterface.hxx:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame.html:11874,flexible,flexible,11874,doc/master/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame.html,1,['flexible'],['flexible']
Modifiability,"in, Double_t error); virtual voidSetBinError(Int_t binx, Int_t biny, Double_t error); virtual voidSetBinError(Int_t binx, Int_t biny, Int_t binz, Double_t error); virtual voidSetBinErrorOption(TH1::EBinErrorOpt type); virtual voidSetBins(Int_t nx, const Double_t* xBins); virtual voidSetBins(Int_t nx, Double_t xmin, Double_t xmax); virtual voidSetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); virtual voidSetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); virtual voidSetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); virtual voidSetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); virtual voidSetBinsLength(Int_t = -1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBuffer(Int_t buffersize, Option_t* option = """"); virtual UInt_tSetCanExtend(UInt_t extendBitMask); virtual voidSetCellContent(Int_t binx, Int_t biny, Double_t content); virtual voidSetCellError(Int_t binx, Int_t biny, Double_t content); virtual voidSetContent(const Double_t* content); virtual voidSetContour(Int_t nlevels, const Double_t* levels = 0); virtual voidSetContourLevel(Int_t level, Double_t value); static voidSetDefaultBufferSize(Int_t buffersize = 1000); static voidSetDefaultSumw2(Bool_t sumw2 = kTRUE); virtual voidSetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntries(Double_t n); virtual voidSetError(const Double_t* error); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidSetLabelColor(Color_t color = 1, Option_t* axis = ""X""); virtual voidSetLabelFont(Style_t font = 62, Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:31024,extend,extendBitMask,31024,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,4,['extend'],['extendBitMask']
Modifiability,"in, double &xlo, double &xhi) const;  Return upper and lower bound of bin 'bin'. ;  ; void updateBinCount ();  Update the internal bin counter. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double * _array = nullptr;  ! Array of boundaries ;  ; Int_t _blo = 0.0;  ! bin number for _xlo ;  ; std::vector< double > _boundaries;  Boundaries. ;  ; Int_t _nbins;  Number of bins. ;  ; bool _ownBoundHi = true;  Does the upper bound coincide with a bin boundary. ;  ; bool _ownBoundLo = true;  Does the lower bound coincide with a bin boundary. ;  ; double _xhi = 0.0;  Upper bound. ;  ; double _xlo = 0.0;  Lower bound. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinning.html:17527,inherit,inherited,17527,doc/master/classRooBinning.html,https://root.cern,https://root.cern/doc/master/classRooBinning.html,1,['inherit'],['inherited']
Modifiability,"in,""[cutg1,cutg2]"");; NOTE that if a TH1D named ""name"" exists in the current directory or pad and having a compatible axis, the histogram is reset and filled again with the projected contents of the TH2. In the case of axis incompatibility, an error is reported and a NULL pointer is returned.; NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection. ; Definition at line 2476 of file TH2.cxx. ◆ PutStats(). void TH2::PutStats ; (; Double_t * ; stats). overridevirtual . Replace current statistics with the values in array stats. ; Reimplemented from TH1.; Reimplemented in TProfile2D.; Definition at line 2485 of file TH2.cxx. ◆ QuantilesX(). TH1D * TH2::QuantilesX ; (; Double_t ; prob = 0.5, . const char * ; name = ""_qx"" . ); const. Compute the X distribution of quantiles in the other variable Y name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ; According to this approximate formula the error on the quantile is estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and n is the number of events used to compute the quantile and f(q) is the probability distribution for the other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be a normal distribution. ; Definition at line 2505 of file TH2.cxx. ◆ QuantilesY(). TH1D * TH2::QuantilesY ; (; Double_t ; prob = 0.5, . const char * ; name = ""_qy"" . ); const. Compute the Y distribution of quantiles in the other variable X name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ; Definition at line 2518 of file TH2.cxx. ◆ Rebin(). TH2 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:101427,variab,variable,101427,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability,"in. ;  ; double binLow (Int_t bin) const override;  Return the low edge of the 'i'-th fit bin. ;  ; void binNumbers (double const *x, int *bins, std::size_t n, int coef) const override;  Return the fit bin index for the current value. ;  ; double binWidth (Int_t bin) const override;  Return average bin width. ;  ; RooAbsBinning * clone (const char *name=nullptr) const override;  ; double highBound () const override;  ; RooAbsReal * highBoundFunc () const override;  Return pointer to RooAbsReal parameterized upper bound, if any. ;  ; void insertHook (RooAbsRealLValue &) const override;  Hook function called by RooAbsRealLValue when this binning is inserted as binning for into given owner. ;  ; TClass * IsA () const override;  ; bool isParameterized () const override;  Interface function. ;  ; bool isShareable () const override;  If true (default), the range definition can be shared across clones of a RooRealVar. ;  ; double lowBound () const override;  ; RooAbsReal * lowBoundFunc () const override;  Return pointer to RooAbsReal parameterized lower bound, if any. ;  ; Int_t numBoundaries () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Print details of binning. ;  ; void removeHook (RooAbsRealLValue &) const override;  Hook function called by RooAbsRealLValue when this binning is removed as binning for into given owner. ;  ; void setRange (double xlo, double xhi) override;  Adjust range by adjusting values of external RooAbsReal values Only functional when external representations are lvalues. ;  ; void Streamer (TBuffer &) override;  Custom streamer implementing schema evolution between V1 and V2 persistent binnings. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsBinning;  RooAbsBinning (const char *name=nullptr);  ;  RooAbsBinning (const RooAbsBinning &other, const char *name=nullptr);  ; int binNumber (double x) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParamBinning.html:2688,parameteriz,parameterized,2688,doc/master/classRooParamBinning.html,https://root.cern,https://root.cern/doc/master/classRooParamBinning.html,1,['parameteriz'],['parameterized']
Modifiability,"in2, Double_t rmax2, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  ; static const char * DeclFileName ();  ; static Double_t DistFromInsideS (const Double_t *point, const Double_t *dir, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t c1, Double_t s1, Double_t c2, Double_t s2, Double_t cm, Double_t sm, Double_t cdfi);  ; static Double_t DistFromOutsideS (const Double_t *point, const Double_t *dir, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t c1, Double_t s1, Double_t c2, Double_t s2, Double_t cm, Double_t sm, Double_t cdfi);  ; static Double_t DistToCons (const Double_t *point, const Double_t *dir, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Double_t phi1, Double_t phi2);  ; static Double_t SafetyS (const Double_t *point, Bool_t in, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t phi1, Double_t phi2, Int_t skipz=0);  ;  Static Public Member Functions inherited from TGeoCone; static Double_t Capacity (Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2);  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ComputeNormalS (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2);  ; static const char * DeclFileName ();  ; static Double_t DistFromInsideS (const Double_t *point, const Double_t *dir, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2);  ; static Double_t DistFromOutsideS (const Double_t *point, const Double_t *dir, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2);  ; static void DistToCone (const Double_t *point, const Double_t *dir, Double_t dz, Double_t r1, Double_t r2, Double_t &b, Double_t &delta);  ; static Double_t SafetyS (const Double_t *point, Bool_t in, Double_t dz, Double_t rmin1, Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoConeSeg.html:16605,inherit,inherited,16605,doc/master/classTGeoConeSeg.html,https://root.cern,https://root.cern/doc/master/classTGeoConeSeg.html,1,['inherit'],['inherited']
Modifiability,"in::fProofChain! chain proxy when going to be processed by PROOF; Long64_tTTree::fReadEntry! Number of the entry being processed; Long64_tTTree::fSavedBytesNumber of autosaved bytes; Int_tTTree::fScanFieldNumber of runs before prompting in Scan; TDSet*fSetTDSet; TList*TChain::fStatus-> List of active/inactive branches (TChainElement, owned); Int_tTTree::fTimerIntervalTimer interval in milliseconds; TStringTNamed::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TTree*TChain::fTree! Pointer to current tree (Note: We do *not* own this tree.); TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tTChain::fTreeNumber! Current Tree number in fTreeOffset table; Long64_t*TChain::fTreeOffset[fTreeOffsetLen] Array of variables; Int_tTChain::fTreeOffsetLenCurrent size of fTreeOffset array; Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofChain(); Crates a new PROOF chain proxy. TProofChain(TChain* chain, Bool_t gettreeheader); Crates a new PROOF chain proxy containing the files from the chain. TProofChain(TDSet* dset, Bool_t gettreeheader); Creates a new PROOF chain proxy containing the files from the dset. ~TProofChain(); Destructor. void Browse(TBrowser* b); Forwards the execution to the dummy tree header.; See TTree::Browse(). Long64_t Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Forwards the execution to the TD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofChain.html:25258,variab,variables,25258,root/html528/TProofChain.html,https://root.cern,https://root.cern/root/html528/TProofChain.html,1,['variab'],['variables']
Modifiability,"in;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGOSXGL.h>. Inheritance diagram for TGOSXGLManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ CtxToWindowMap_t. typedef std::map<Handle_t, Window_t> TGOSXGLManager::CtxToWindowMap_t. private . Definition at line 51 of file TGOSXGL.h. Constructor & Destructor Documentation. ◆ TGOSXGLManager() [1/2]. TGOSXGLManager::TGOSXGLManager ; (; ). Definition at line 19 of file TGOSXGL.mm. ◆ ~TGOSXGLManager(). TGOSXGLManager::~TGOSXGLManager ; (; ). override . Definition at line 36 of file TGOSXGL.mm. ◆ TGOSXGLManager() [2/2]. TGOSXGLManager::TGOSXGLManager ; (; const TGOSXGLManager & ; ). private . Member Function Documentation. ◆ AttachOffScreenDevice(). Bool_t TGOSXGLManager::AttachOffScreenDevice ; (; Int_t ; ctxInd, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Implements TGLManager.; Definition at line 125 of fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGOSXGLManager.html:13020,inherit,inherited,13020,doc/master/classTGOSXGLManager.html,https://root.cern,https://root.cern/doc/master/classTGOSXGLManager.html,1,['inherit'],['inherited']
Modifiability,"inCorrectionBernsteinCorrection is a utility in RooStats to augment a nominal PDF with a polynomial correction term ;  CCombinedCalculatorCombinedCalculator is an interface class for a tools which can produce both RooStats HypoTestResults and ConfIntervals ;  CConfidenceBeltConfidenceBelt is a concrete implementation of the ConfInterval interface ;  CConfIntervalConfInterval is an interface class for a generic interval in the RooStats framework ;  CDebuggingSampler;  CDebuggingTestStat;  CDetailedOutputAggregatorThis class is designed to aid in the construction of RooDataSets and RooArgSets, particularly those naturally arising in fitting operations ;  CFeldmanCousins(like the Feldman-Cousins technique) is essentially a specific configuration of the more general NeymanConstruction ;  CFrequentistCalculatorDoes a frequentist hypothesis test ;  CHeavisideRepresents the Heaviside function ;  CHLFactoryHLFactory is an High Level model Factory allows you to describe your models in a configuration file (datacards) acting as an interface with the RooFactoryWSTool ;  CHybridCalculatorSame purpose as HybridCalculatorOriginal, but different implementation ;  CHybridCalculatorOriginalHybridCalculatorOriginal class ;  CHybridPlotThis class provides the plots for the result of a study performed with the HybridCalculatorOriginal class ;  CHybridResultClass encapsulating the result of the HybridCalculatorOriginal ;  CHypoTestCalculatorHypoTestCalculator is an interface class for a tools which produce RooStats HypoTestResults ;  CHypoTestCalculatorGenericCommon base class for the Hypothesis Test Calculators ;  CHypoTestInverterHypoTestInverter class for performing an hypothesis test inversion by scanning the hypothesis test results of an HypoTestCalculator for various values of the parameter of interest ;  CHypoTestInverterOriginalThis class is now deprecated and to be replaced by the HypoTestInverter ;  CHypoTestInverterPlotClass to plot an HypoTestInverterResult, result of the Hy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:4679,config,configuration,4679,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,5,['config'],['configuration']
Modifiability,"inCount = 0;; 1550 binError = 0;; 1551 binSumw2 = 0;; 1552 for(i=oldbin;i<=nbins+1;i++); 1553 {; 1554 binContent += oldBins[i];; 1555 binCount += oldCount[i];; 1556 binError += oldErrors[i];; 1557 if (fBinSumw2.fN) binSumw2 += oldBinw2[i];; 1558 }; 1559 hnew->fArray[newbins+1] = binContent;; 1560 hnew->fBinEntries[newbins+1] = binCount;; 1561 hnew->fSumw2[newbins+1] = binError;; 1562 if ( fBinSumw2.fN ) hnew->fBinSumw2[newbins+1] = binSumw2;; 1563 ; 1564 ; 1565 delete [] oldBins;; 1566 delete [] oldCount;; 1567 delete [] oldErrors;; 1568 if (oldBinw2) delete [] oldBinw2;; 1569 return hnew;; 1570}; 1571 ; 1572////////////////////////////////////////////////////////////////////////////////; 1573/// Profile histogram is resized along x axis such that x is in the axis range.; 1574/// The new axis limits are recomputed by doubling iteratively; 1575/// the current axis range until the specified value x is within the limits.; 1576/// The algorithm makes a copy of the histogram, then loops on all bins; 1577/// of the old histogram to fill the extended histogram.; 1578/// Takes into account errors (Sumw2) if any.; 1579/// The axis must be extendable before invoking this function.; 1580///; 1581/// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`; 1582 ; 1583void TProfile::ExtendAxis(Double_t x, TAxis *axis); 1584{; 1585 TProfile* hold = TProfileHelper::ExtendAxis(this, x, axis);; 1586 if ( hold ) {; 1587 fTsumwy = hold->fTsumwy;; 1588 fTsumwy2 = hold->fTsumwy2;; 1589 ; 1590 delete hold;; 1591 }; 1592}; 1593 ; 1594////////////////////////////////////////////////////////////////////////////////; 1595/// Reset contents of a Profile histogram.; 1596 ; 1597void TProfile::Reset(Option_t *option); 1598{; 1599 TH1D::Reset(option);; 1600 fBinEntries.Reset();; 1601 fBinSumw2.Reset();; 1602 TString opt = option;; 1603 opt.ToUpper();; 1604 if (opt.Contains(""ICE"") && !opt.Contains(""S"")) return;; 1605 fTsumwy = 0;; 1606 fTsumwy2 = 0;; 1607}; 1608 ; 1609/////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:58072,extend,extended,58072,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['extend'],['extended']
Modifiability,"inData& data, const ROOT::Math::IParametricGradFunctionMultiDim& func); boolFitFCN(); boolFitFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); ROOT::Fit::FitterFitter(); ROOT::Math::IMultiGenFunction*GetFCN() const; ROOT::Math::Minimizer*GetMinimizer() const; boolIsBinFit() const; boolLeastSquareFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::UnBinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, bool extended); boolLikelihoodFit(const ROOT::Fit::BinData& data, const ROOT::Math::IParametricFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, const ROOT::Math::IParametricFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::BinData& data, const ROOT::Math::IParametricGradFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, const ROOT::Math::IParametricGradFunctionMultiDim& func, bool extended); boolLinearFit(const ROOT::Fit::BinData& data); const ROOT::Fit::FitResult&Result() const; boolSetFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(const ROOT::Math::IMultiGradFunction& fcn, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__Fitter.html:2672,extend,extended,2672,root/html532/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__Fitter.html,4,['extend'],['extended']
Modifiability,"inData.h:605; ROOT::Fit::BinData::ValuePtrconst double * ValuePtr(unsigned int ipoint) constreturn a pointer to the value for the given fit pointDefinition BinData.h:232; ROOT::Fit::BinData::Initializevoid Initialize(unsigned int newPoints, unsigned int dim=1, ErrorType err=kValueError)Preallocate a data set with given size, dimension and error type.Definition BinData.h:122; ROOT::Fit::BinData::GetCoordErrorComponentdouble GetCoordErrorComponent(unsigned int ipoint, unsigned int icoord) constreturns a single coordinate error component of a point.Definition BinData.h:395; ROOT::Fit::BinData::operator=BinData & operator=(const BinData &rhs)assignment operatorDefinition BinData.cxx:230; ROOT::Fit::BinData::fBinEdgestd::vector< std::vector< double > > fBinEdgeDefinition BinData.h:631; ROOT::Fit::BinData::GetAsymErrorvoid GetAsymError(unsigned int ipoint, double &lowError, double &highError) constDefinition BinData.h:307; ROOT::Fit::BinData::fRefVolumedouble fRefVolumereference bin volume - used to normalize the bins in case of variable bins dataDefinition BinData.h:604; ROOT::Fit::BinData::GetBinUpEdgeCoordinatesvoid GetBinUpEdgeCoordinates(unsigned int ipoint, double *x) constThread save version of function retrieving the bin up-edge in case of multidimensions.Definition BinData.h:532; ROOT::Fit::BinData::fDataErrorPtrconst double * fDataErrorPtrDefinition BinData.h:623; ROOT::Fit::BinData::fSumError2double fSumError2total sum square of the errorsDefinition BinData.h:606; ROOT::Fit::BinData::fpTmpBinEdgeVectordouble * fpTmpBinEdgeVectornot threadsafe stuff!Definition BinData.h:634; ROOT::Fit::BinData::fDataErrorstd::vector< double > fDataErrorDefinition BinData.h:620; ROOT::Fit::BinData::Errordouble Error(unsigned int ipoint) constReturn the error on the given point.Definition BinData.h:262; ROOT::Fit::BinData::HaveAsymErrorsbool HaveAsymErrors() constflag to control if data provides asymmetric errors on the valueDefinition BinData.h:146; ROOT::Fit::BinData::SumOfError",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:28932,variab,variable,28932,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,1,['variab'],['variable']
Modifiability,"inFrame::fWMMaxWidthWM max width; UInt_tTGMainFrame::fWMMinHeightWM min height; UInt_tTGMainFrame::fWMMinWidthWM min width; UInt_tTGMainFrame::fWMWidthWM width; UInt_tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TObject * GetSelected(); static; return selected object. ~TGeoTreeDialog(); Destructor. void DoSelect(TGListTreeItem* item); Update dialog to reflect current clicked object. void BuildListTree(). void ConnectSignalsToSlots(). void DoClose(); Slots. void DoItemClick(TGListTreeItem* item, Int_t btn). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTreeDialog.html:22813,Inherit,Inheritance,22813,root/html534/TGeoTreeDialog.html,https://root.cern,https://root.cern/root/html534/TGeoTreeDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inFrame::fWMWidthWM width; UInt_tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMaterialDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build volume specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. virtual ~TGeoMaterialDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTabManager.h 21565 2007-12-28 12:28:46Z brun $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMaterialDialog.html:22892,Inherit,Inheritance,22892,root/html532/TGeoMaterialDialog.html,https://root.cern,https://root.cern/root/html532/TGeoMaterialDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inFrameLayoutlayout for main frame; TGMenuBar*fMenuBarmenubar; TGLayoutHints*fMenuBarHelpLayoutlayout hint for help menu in menubar; TGLayoutHints*fMenuBarItemLayoutlayout hints for menu in menubar; TGLayoutHints*fMenuBarLayoutmenubar layout hints; TGPopupMenu*fOptionMenuoption menu; TGStatusBar*fStatusBarstatusbar widget; TGLayoutHints*fStatusBarLayoutlayout hints for statusbar; TGToolBar*fToolBaricon button toolbar; TGLayoutHints*fToolBarLayoutlayout for toolbar widget; TGHorizontal3DLine*fToolBarSeptoolbar separator; TGDockableFrame*fToolDockdockable frame holding the toolbar; TGToolTip*fToolTiptooltip for object info; TGPopupMenu*fToolsMenutools menu; TGVertical3DLine*fVertical1toolbar vertical separator; TGLayoutHints*fVertical1Layoutlayout hints for separator; TGVertical3DLine*fVertical2toolbar vertical separator; TGLayoutHints*fVertical2Layoutlayout hints for separator; TGPopupMenu*fViewMenuview menu; TGPopupMenu*fViewWithMenuview with... cascade submenu. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGMainFrame. TCanvasImp. ←; TRootCanvas. Function documentation; TRootCanvas(TCanvas* c = 0, const char* name = ""ROOT Canvas"", UInt_t width = 500, UInt_t height = 300); Create a basic ROOT canvas. TRootCanvas(TCanvas* c, const char* name, Int_t x, Int_t y, UInt_t width, UInt_t height); Create a basic ROOT canvas. void CreateCanvas(const char* name); Create the actual canvas. ~TRootCanvas(); Delete ROOT basic canvas. Order is significant. Delete in reverse; order of creation. void Close(); Called via TCanvasImp interface by TCanvas. void ReallyDelete(); Really delete the canvas and this GUI. void CloseWindow(); In case window is closed via WM we get here. UInt_t GetCwidth() const; Return width of canvas container. UInt_t GetCheight() const; Return height of canvas container. UInt_t GetWindowGeometry(Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); Gets the size and position of the window containing the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootCanvas.html:26235,Inherit,Inheritance,26235,root/html602/TRootCanvas.html,https://root.cern,https://root.cern/root/html602/TRootCanvas.html,2,['Inherit'],['Inheritance']
Modifiability,"inHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMdiContainer(const TGMdiMainFrame* p, Int_t w, Int_t h, UInt_t options = 0, ULong_t back = GetDefaultFrameBackground()); TGMdiContainer constructor. TGDimension GetDefaultSize() const; Return dimension of MDI container. Bool_t HandleConfigureNotify(Event_t* event); Handle configure notify events for MDI container. » Author: Bertrand Bellenot 20/08/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGMdiMainFrame.h 40531 2011-08-10 13:56:13Z bellenot $ » Last generated: 2011-11-03 20:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMdiContainer.html:17135,config,configure,17135,root/html532/TGMdiContainer.html,https://root.cern,https://root.cern/root/html532/TGMdiContainer.html,4,"['Inherit', 'config']","['Inheritance', 'Inherited', 'configure']"
Modifiability,"inManager.h:289; TPluginManager::AddHandlervoid AddHandler(const char *base, const char *regexp, const char *className, const char *pluginName, const char *ctor=nullptr, const char *origin=nullptr)Add plugin handler to the list of handlers.Definition TPluginManager.cxx:569; Plugin handlers can also be defined via resources in the .rootrc file. Although now deprecated this method still works for backward compatibility, e.g.: Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; TFitter<div class=""legacybox""><h2>Legacy Code</h2> TFitter is a legacy interface: there will be no bug fixes...Definition TFitter.h:19; TMySQLServerDefinition TMySQLServer.h:51; TPgSQLServerDefinition TPgSQLServer.h:23; TSQLServer::TSQLServerTSQLServer()Definition TSQLServer.h:52; Where the + in front of Plugin.TSQLServer says that it extends the existing definition of TSQLServer, useful when there is more than one plugin that can extend the same base class. The ""<constructor>"" should be the constructor or a static method that generates an instance of the specified class. Global methods should start with ""::"" in their name, like ""::CreateFitter()"". Instead of being a shared library a plugin can also be a CINT script, so instead of libDialog.so one can have Dialog.C. The * is a placeholder in case there is no need for a URI to differentiate between different plugins for the same base class. For the default plugins see $ROOTSYS/etc/system.rootrc.; Plugin handlers can also be registered at run time, e.g.: gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServer(const char*,const char*,const char*)"");; A list of currently defined handlers can be printed using: gPluginMgr->Print(); // use option=""a"" to see ctors; TPluginManager::Printvoid Print(Option_t *opt="""") const overridePrint list of registered plugin handlers.Definition TPlugin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:2826,extend,extends,2826,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,3,"['extend', 'plugin']","['extend', 'extends', 'plugin']"
Modifiability,"inName, const char* ctor, const char* origin); Create a plugin handler. Called by TPluginManager. Bool_t CanHandle(const char* base, const char* uri); Check if regular expression appears in the URI, if so return kTRUE.; If URI = 0 always return kTRUE. void SetupCallEnv(); Setup ctor or static method call environment. Int_t CheckPlugin() const; Check if the plugin library for this handler exits. Returns 0; when it exists and -1 in case the plugin does not exist. Int_t LoadPlugin(); Load the plugin library for this handler. Returns 0 on successful loading; and -1 in case the library does not exist or in case of error. Long_t ExecPlugin(Int_t va_(nargs), ...); Execute ctor for this plugin and return pointer to object of specific; class. User must cast the returned long to the correct class.; This method accepts a variable number of arguments to be passed; to the ctor, where nargs is the number of arguments, followed; by nargs arguments. Returns 0 in case of error. void Print(Option_t* opt = """") const; Print info about the plugin handler. If option is ""a"" print; also the ctor's that will be used. TPluginHandler(); { }. TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin). TPluginHandler& operator=(const TPluginHandler& ). const char * GetBase() const; { return fBase; }. const char * GetRegexp() const; { return fRegexp; }. const char * GetPlugin() const; { return fPlugin; }. const char * GetCtor() const; { return fCtor; }. const char * GetOrigin() const; { return fOrigin; }. const char * GetClass() const; { return fClass; }. » Author: Fons Rademakers 26/1/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TPluginManager.h 37497 2010-12-10 12:22:54Z rdm $ » Last generated: 2010-12-10 14:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginHandler.html:10446,plugin,plugin,10446,root/html528/TPluginHandler.html,https://root.cern,https://root.cern/root/html528/TPluginHandler.html,2,['plugin'],"['plugin', 'pluginName']"
Modifiability,"inName, const char* ctor, const char* origin); Create a plugin handler. Called by TPluginManager. Bool_t CanHandle(const char* base, const char* uri); Check if regular expression appears in the URI, if so return kTRUE.; If URI = 0 always return kTRUE. void SetupCallEnv(); Setup ctor or static method call environment. Int_t CheckPlugin() const; Check if the plugin library for this handler exits. Returns 0; when it exists and -1 in case the plugin does not exist. Int_t LoadPlugin(); Load the plugin library for this handler. Returns 0 on successful loading; and -1 in case the library does not exist or in case of error. Long_t ExecPlugin(Int_t va_(nargs), ...); Execute ctor for this plugin and return pointer to object of specific; class. User must cast the returned long to the correct class.; This method accepts a variable number of arguments to be passed; to the ctor, where nargs is the number of arguments, followed; by nargs arguments. Returns 0 in case of error. void Print(Option_t* opt = """") const; Print info about the plugin handler. If option is ""a"" print; also the ctor's that will be used. TPluginHandler(); { }. TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin). TPluginHandler& operator=(const TPluginHandler& ). const char * GetBase() const; { return fBase; }. const char * GetRegexp() const; { return fRegexp; }. const char * GetPlugin() const; { return fPlugin; }. const char * GetCtor() const; { return fCtor; }. const char * GetOrigin() const; { return fOrigin; }. const char * GetClass() const; { return fClass; }. » Author: Fons Rademakers 26/1/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TPluginManager.h 37497 2010-12-10 12:22:54Z rdm $ » Last generated: 2011-07-04 15:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPluginHandler.html:10515,plugin,plugin,10515,root/html530/TPluginHandler.html,https://root.cern,https://root.cern/root/html530/TPluginHandler.html,2,['plugin'],"['plugin', 'pluginName']"
Modifiability,"inName, const char* ctor, const char* origin); Create a plugin handler. Called by TPluginManager. Bool_t CanHandle(const char* base, const char* uri); Check if regular expression appears in the URI, if so return kTRUE.; If URI = 0 always return kTRUE. void SetupCallEnv(); Setup ctor or static method call environment. Int_t CheckPlugin() const; Check if the plugin library for this handler exits. Returns 0; when it exists and -1 in case the plugin does not exist. Int_t LoadPlugin(); Load the plugin library for this handler. Returns 0 on successful loading; and -1 in case the library does not exist or in case of error. Long_t ExecPlugin(Int_t va_(nargs), ...); Execute ctor for this plugin and return pointer to object of specific; class. User must cast the returned long to the correct class.; This method accepts a variable number of arguments to be passed; to the ctor, where nargs is the number of arguments, followed; by nargs arguments. Returns 0 in case of error. void Print(Option_t* opt = """") const; Print info about the plugin handler. If option is ""a"" print; also the ctor's that will be used. TPluginHandler(); { }. TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin). TPluginHandler& operator=(const TPluginHandler& ). const char * GetBase() const; { return fBase; }. const char * GetRegexp() const; { return fRegexp; }. const char * GetPlugin() const; { return fPlugin; }. const char * GetCtor() const; { return fCtor; }. const char * GetOrigin() const; { return fOrigin; }. const char * GetClass() const; { return fClass; }. » Author: Fons Rademakers 26/1/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TPluginManager.h 37497 2010-12-10 12:22:54Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPluginHandler.html:10515,plugin,plugin,10515,root/html532/TPluginHandler.html,https://root.cern,https://root.cern/root/html532/TPluginHandler.html,4,['plugin'],"['plugin', 'pluginName']"
Modifiability,"inQ, Float_t maxQ); static Bool_tIsU1IntervalOverlappingByMeanDelta(Float_t meanM, Float_t deltaM, Float_t meanQ, Float_t deltaQ); static Bool_tIsU1IntervalOverlappingByMinMax(Float_t minM, Float_t maxM, Float_t minQ, Float_t maxQ); static voidLoadMacro(const char* mac); static voidMacro(const char* mac); TEveUtil&operator=(const TEveUtil&); static voidSetColorBrightness(Float_t value, Bool_t full_redraw = kFALSE); static voidSetupEnvironment(); static voidSetupGUI(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. static TObjArray*fgDefaultColors. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupEnvironment(); Setup Include and Macro paths.; Since inclusion into ROOT this does nothing but could; potentially be reactivated if some common macros are established; and shipped with binary ROOT (in macros/eve). For example, these; might be used to spawn specific GUI / GL configurations. void SetupGUI(); Setup icon pictures and mime-types. Bool_t CheckMacro(const char* mac); Checks if macro 'mac' is loaded. void AssertMacro(const char* mac); Load and execute macro 'mac' if it has not been loaded yet. void Macro(const char* mac); Execute macro 'mac'. Do not reload the macro. void LoadMacro(const char* mac); Makes sure that macro 'mac' is loaded, but do not reload it. void ColorFromIdx(Color_t ci, UChar_t* col, Bool_t alpha = kTRUE); Fill col with RGBA values corresponding to index ci. If alpha; is true, set alpha component of col to 255.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Color_t ci, UChar_t* col, Char_t transparency); Fill col with RGBA values corresponding to index ci and transparency.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Float_t f1, Color_t c1, Float_t f2, Color_t c2, UChar_t* col, Bool_t alpha = kTRUE); Fill col with weighted RGBA values corre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveUtil.html:2150,config,configurations,2150,root/html528/TEveUtil.html,https://root.cern,https://root.cern/root/html528/TEveUtil.html,4,['config'],['configurations']
Modifiability,"inTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompound(const char* n = ""TEveCompound"", const char* t = """", Bool_t doColor = kTRUE, Bool_t doTransparency = kFALSE); Constructor. void SetMainColor(Color_t color); SetMainColor for the compound.; The color is also propagated to children with compound set to this; whose current color is the same as the old color. The following CompoundSelectionColorBits have further influence:; kCSCBApplyMainColorToAllChildren - apply color to all children;; kCSCBApplyMainColorToMatchingChildren - apply color to children who have; matching old color. void SetMainTransparency(Char_t t); SetMainTransparency for the compound.; The transparenct is also propagated to children with compound set to this; whose current transparency is the same as the old transparency. The following CompoundSelectionColorBits have further influence:; kCSCBApplyMainTransparencyToAllChildren - apply transparency to all children;; kCSCBApplyMainTransparencyToMatchingChildren -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCompound.html:19580,Inherit,Inheritance,19580,root/html532/TEveCompound.html,https://root.cern,https://root.cern/root/html532/TEveCompound.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementList(const char* n = ""TEveElementList"", const char* t = """", Bool_t doColor = kFALSE, Bool_t doTransparency = kFALSE); Constructor. TEveElementList(const TEveElementList& e); Copy constructor. TEveElementList* CloneElement() const; Clone the element via copy constructor.; Virtual from TEveElement. Bool_t AcceptElement(TEveElement* el); Check if TEveElement el is inherited from fChildClass.; Virtual from TEveElement. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCompoundProjected class. TEveElement& operator=(const TEveElementList& ). const char* GetElementName() const. const char* GetElementTitle() const. void SetElementName(const char* name). void SetElementTitle(const char* title). void SetElementNameTitle(const char* name, const char* title). TObject* GetObject(const TEveException& = ""TEveElementList::GetObject "") const. virtual ~TEveElementList(); {}. TClass* GetChildClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveElementList.html:19448,Inherit,Inheritance,19448,root/html532/TEveElementList.html,https://root.cern,https://root.cern/root/html532/TEveElementList.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveSceneList(const char* n = ""TEveSceneList"", const char* t = """"); Constructor. void DestroyScenes(); Destroy all scenes and their contents.; Tho object with non-zero deny-destroy will still survive. void RepaintChangedScenes(Bool_t dropLogicals); Repaint scenes that are tagged as changed. void RepaintAllScenes(Bool_t dropLogicals); Repaint all scenes. void DestroyElementRenderers(TEveElement* element); Loop over all scenes and remove all instances of element from; them. void ProcessSceneChanges(Bool_t dropLogicals, TExMap* stampMap); Loop over all scenes and update them accordingly:; a) if scene is marked as changed, it is repainted;; b) otherwise iteration is done over the set of stamped elements and; their physical/logical shapes are updated accordingly. This allows much finer update granularity without resetting of; complex GL-viewer and GL-scene state. TEveScene& operator=(const TEveSceneList& ). TEveSceneList(const TEveSceneList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveSceneList.html:19746,Inherit,Inheritance,19746,root/html532/TEveSceneList.html,https://root.cern,https://root.cern/root/html532/TEveSceneList.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"in[0], &rmax[0]);; 1760 for (int i = 0; i < ndim; ++i) {; 1761 const char *xname = nullptr;; 1762 double stepSize = 0.1;; 1763 // use range for step size or give some value depending on x if range is not defined; 1764 if (rmax[i] > rmin[i]); 1765 stepSize = (rmax[i] - rmin[i]) / 100;; 1766 else if (std::abs(x[i]) > 1.); 1767 stepSize = 0.1 * x[i];; 1768 ; 1769 // set variable names; 1770 if (ndim <= 3) {; 1771 if (i == 0) {; 1772 xname = ""x"";; 1773 } else if (i == 1) {; 1774 xname = ""y"";; 1775 } else {; 1776 xname = ""z"";; 1777 }; 1778 } else {; 1779 xname = TString::Format(""x_%d"", i);; 1780 // arbitrary step sie (should be computed from range); 1781 }; 1782 ; 1783 if (rmin[i] < rmax[i]) {; 1784 //Info(""GetMinMax"",""setting limits on %s - [ %f , %f ]"",xname,rmin[i],rmax[i]);; 1785 min->SetLimitedVariable(i, xname, x[i], stepSize, rmin[i], rmax[i]);; 1786 } else {; 1787 min->SetVariable(i, xname, x[i], stepSize);; 1788 }; 1789 }; 1790 ; 1791 bool ret = min->Minimize();; 1792 if (!ret) {; 1793 Error(""GetMinimumNDim"", ""Error minimizing function %s"", GetName());; 1794 }; 1795 if (min->X()) std::copy(min->X(), min->X() + ndim, x);; 1796 double fmin = min->MinValue();; 1797 delete min;; 1798 // need to revert sign in case looking for maximum; 1799 return (findmax) ? -fmin : fmin;; 1800 ; 1801}; 1802 ; 1803 ; 1804////////////////////////////////////////////////////////////////////////////////; 1805/// Returns the X value corresponding to the minimum value of the function; 1806/// on the (xmin, xmax) interval; 1807///; 1808/// Method:; 1809/// First, the grid search is used to bracket the maximum; 1810/// with the step size = (xmax-xmin)/fNpx. This way, the step size; 1811/// can be controlled via the SetNpx() function. If the function is; 1812/// unimodal or if its extrema are far apart, setting the fNpx to; 1813/// a small value speeds the algorithm up many times.; 1814/// Then, Brent's method is applied on the bracketed interval; 1815/// epsilon (default = 1.E-10) controls ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:64870,variab,variable,64870,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"in] for which diff =...Definition TH2.cxx:1117; TH2::ProfileXTProfile * ProfileX(const char *name=""_pfx"", Int_t firstybin=1, Int_t lastybin=-1, Option_t *option="""") constProject a 2-D histogram into a profile histogram along X.Definition TH2.cxx:2109; TH2::AddBinContentvoid AddBinContent(Int_t bin) overrideIncrement bin content by 1.Definition TH2.cxx:238; TH2::TH2TH2(const TH2 &)=delete; TH2::RebinTH2 * Rebin(Int_t ngroup=2, const char *newname="""", const Double_t *xbins=nullptr) overrideOverride TH1::Rebin as TH2::RebinX Rebinning in variable binning as for TH1 is not allowed If a non-n...Definition TH2.cxx:1663; TH2::FillNvoid FillN(Int_t, const Double_t *, const Double_t *, Int_t) overrideFill this histogram with an array x and weights w.Definition TH2.h:84; TH2::BufferFillInt_t BufferFill(Double_t, Double_t) overrideaccumulate arguments in buffer.Definition TH2.h:56; TH2::QuantilesYTH1D * QuantilesY(Double_t prob=0.5, const char *name=""_qy"") constCompute the Y distribution of quantiles in the other variable X name is the name of the returned hist...Definition TH2.cxx:2518; TH2::ProfileYTProfile * ProfileY(const char *name=""_pfy"", Int_t firstxbin=1, Int_t lastxbin=-1, Option_t *option="""") constProject a 2-D histogram into a profile histogram along Y.Definition TH2.cxx:2159; TH2::Copyvoid Copy(TObject &hnew) const overrideCopy.Definition TH2.cxx:380; TH2::DoQuantilesvirtual TH1D * DoQuantiles(bool onX, const char *name, Double_t prob) constImplementation of quantiles for x or y.Definition TH2.cxx:2527; TH2::fTsumwxyDouble_t fTsumwxyTotal Sum of weight*X*Y.Definition TH2.h:36; TH2::SetBinContentvoid SetBinContent(Int_t bin, Double_t content) overrideSet bin content.Definition TH2.cxx:2616; TH2::FillInt_t Fill(const char *, Double_t) overrideIncrement bin with namex with a weight w.Definition TH2.h:58; TH2::BufferEmptyInt_t BufferEmpty(Int_t action=0) overrideFill histogram with all entries in the buffer.Definition TH2.cxx:278; TH2::Integralvirtual Double_t Integral",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h_source.html:37580,variab,variable,37580,doc/master/TH2_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2_8h_source.html,1,['variab'],['variable']
Modifiability,"inal documentation of CERNLIB package F112. double * trasat(const double* a, const double* s, double* r, int m, int n); Transformation of Symmetric Matrix; CERN PROGLIB# F112 TRASAT .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *; trasat.F -- translated by f2c (version 19970219). ; see original documentation of CERNLIB package F112. float * trasat(const double* a, const float* s, float* r, int m, int n); Transformation of Symmetric Matrix; CERN PROGLIB# F112 TRASAT .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *; trasat.F -- translated by f2c (version 19970219). ; see original documentation of CERNLIB package F112. float * trata(const float* a, float* r, int m, int n); trata.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRATA .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trats(const float* a, const float* s, float* b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trchlu(const float* a, float* b, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trpck(const float* s, float* u, int n); trpck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRPCK .VERSION KERNFOR 2.08 741218 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trqsq(const float* q, const float* s, float* r, int m); trqsq.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRQSQ .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trsa(const float* s, const float* a, float* b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRSA .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. Local variables. float * trupck(const float* u, float* s, int m); trupck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRUPCK .V",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TCL.html:14238,variab,variables,14238,root/html528/TCL.html,https://root.cern,https://root.cern/root/html528/TCL.html,10,['variab'],['variables']
Modifiability,"inal node with just one point minimum and maximum for each; dimension are the same.; Boundaries can be retrieved by calling GetBoundaryExact(inode) function that would; return an array of boundaries for the specified node, or GetBoundaries() function; that would return the complete array. void TKDTree<Index, Value> FindBNodeA(float* point, float* delta, Int_t& inode). find the smallest node covering the full range - start. Value* TKDTree<Index, Value> GetBoundaries(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundariesExact(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundary(const Int_t node); Get a boundary. Value* TKDTree<Index, Value> GetBoundaryExact(const Int_t node); Get a boundary. Int_t GetLeft(Int_t inode) const; Get indexes of left and right daughter nodes. {return inode*2+1;}. Int_t GetRight(Int_t inode) const; {return (inode+1)*2;}. Int_t GetParent(Int_t inode) const. Other getters. {return (inode-1)/2;}. UChar_t GetNodeAxis(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fAxis[id];}. Value GetNodeValue(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fValue[id];}. Int_t GetNNodes() const; {return fNNodes;}. Int_t GetTotalNodes() const; {return fTotalNodes;}. Index GetNPoints(); { return fNPoints; }. Index GetNDim(); { return fNDim; }. Int_t GetRowT0(); Getters for internal variables. {return fRowT0;}. Int_t GetCrossNode(); {return fCrossNode;}. Int_t GetOffset(); {return fOffset;}. Index* GetIndPoints(); {return fIndPoints;}. Index GetBucketSize(); {return fBucketSize;}. Bool_t IsTerminal(int inode) const; {return (inode>=fNNodes);}. Int_t IsOwner(); { return fDataOwner; }. void SetOwner(Int_t owner); { fDataOwner = owner; }. TKDTree<Index, Value>& operator=(const TKDTree<int,float>& ). » Last changed: Mon Jul 4 15:33:41 2011 » Last generated: 2011-07-04 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TKDTree_int_float_.html:24033,variab,variables,24033,root/html530/TKDTree_int_float_.html,https://root.cern,https://root.cern/root/html530/TKDTree_int_float_.html,1,['variab'],['variables']
Modifiability,"inal node with just one point minimum and maximum for each; dimension are the same.; Boundaries can be retrieved by calling GetBoundaryExact(inode) function that would; return an array of boundaries for the specified node, or GetBoundaries() function; that would return the complete array. void TKDTree<Index, Value> FindBNodeA(float* point, float* delta, Int_t& inode). find the smallest node covering the full range - start. Value* TKDTree<Index, Value> GetBoundaries(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundariesExact(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundary(const Int_t node); Get a boundary. Value* TKDTree<Index, Value> GetBoundaryExact(const Int_t node); Get a boundary. Int_t GetLeft(Int_t inode) const; Get indexes of left and right daughter nodes. {return inode*2+1;}. Int_t GetRight(Int_t inode) const; {return (inode+1)*2;}. Int_t GetParent(Int_t inode) const. Other getters. {return (inode-1)/2;}. UChar_t GetNodeAxis(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fAxis[id];}. Value GetNodeValue(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fValue[id];}. Int_t GetNNodes() const; {return fNNodes;}. Int_t GetTotalNodes() const; {return fTotalNodes;}. Index GetNPoints(); { return fNPoints; }. Index GetNDim(); { return fNDim; }. Int_t GetRowT0(); Getters for internal variables. {return fRowT0;}. Int_t GetCrossNode(); {return fCrossNode;}. Int_t GetOffset(); {return fOffset;}. Index* GetIndPoints(); {return fIndPoints;}. Index GetBucketSize(); {return fBucketSize;}. Bool_t IsTerminal(int inode) const; {return (inode>=fNNodes);}. Int_t IsOwner(); { return fDataOwner; }. void SetOwner(Int_t owner); { fDataOwner = owner; }. TKDTree<Index, Value>& operator=(const TKDTree<int,float>& ). » Last changed: Thu Nov 3 20:19:06 2011 » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKDTree_int_float_.html:24033,variab,variables,24033,root/html532/TKDTree_int_float_.html,https://root.cern,https://root.cern/root/html532/TKDTree_int_float_.html,2,['variab'],['variables']
Modifiability,"inal node with just one point minimum and maximum for each; dimension are the same.; Boundaries can be retrieved by calling GetBoundaryExact(inode) function that would; return an array of boundaries for the specified node, or GetBoundaries() function; that would return the complete array. void TKDTree<Index, Value> FindBNodeA(float* point, float* delta, Int_t& inode). find the smallest node covering the full range - start. Value* TKDTree<Index, Value> GetBoundaries(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundariesExact(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundary(const Int_t node); Get a boundary. Value* TKDTree<Index, Value> GetBoundaryExact(const Int_t node); Get a boundary. Int_t GetLeft(Int_t inode) const; Get indexes of left and right daughter nodes. {return inode*2+1;}. Int_t GetRight(Int_t inode) const; {return (inode+1)*2;}. Int_t GetParent(Int_t inode) const. Other getters. {return (inode-1)/2;}. UChar_t GetNodeAxis(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fAxis[id];}. Value GetNodeValue(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fValue[id];}. Int_t GetNNodes() const; {return fNNodes;}. Int_t GetTotalNodes() const; {return fTotalNodes;}. Index GetNPoints(); { return fNPoints; }. Index GetNDim(); { return fNDim; }. Int_t GetRowT0(); Getters for internal variables. {return fRowT0;}. Int_t GetCrossNode(); {return fCrossNode;}. Int_t GetOffset(); {return fOffset;}. Index* GetIndPoints(); {return fIndPoints;}. Index GetBucketSize(); {return fBucketSize;}. Bool_t IsTerminal(int inode) const; {return (inode>=fNNodes);}. Int_t IsOwner(); { return fDataOwner; }. void SetOwner(Int_t owner); { fDataOwner = owner; }. TKDTree<Index, Value>& operator=(const TKDTree<int,float>& ). » Last changed: Tue Jun 2 16:13:52 2015 » Last generated: 2015-06-02 16:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TKDTree_int_float_.html:24674,variab,variables,24674,root/html604/TKDTree_int_float_.html,https://root.cern,https://root.cern/root/html604/TKDTree_int_float_.html,2,['variab'],['variables']
Modifiability,"inal object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveLine::fRnrLine; Bool_tTEveLine::fRnrPoints; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveLine::fSmooth; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringTEvePointSet::fTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTEveLine::fgDefaultSmooth. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveLineProjected(); Default constructor. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); Set projection manager and projection model.; Virtual from TEveProjected. void SetDepthLocal(Float_t d); Set depth (z-coordinate) of the projected points. void UpdateProjection(); Re-apply the projection.; Virtual from TEveProjected. TEveLine& operator=(const TEveLineProjected& ). TEveLineProjected(const TEveLineProjected& ). virtual ~TEveLineProjected(); {}. TEveElement* GetProjectedAsElement(); { return this; }. » Last changed: root/eve:$Id: TEveLine.h 35074 2010-08-30 15:18:02Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveLineProjected.html:28805,Inherit,Inheritance,28805,root/html532/TEveLineProjected.html,https://root.cern,https://root.cern/root/html532/TEveLineProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,inant←. TMVA::PDEFoamDecisionTree. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTSparseDiag<float>. TMatrixTSparseRow<double>. TMatrixTSparseRow<float>. TMatrixTSub<double>. TMatrixTSub<float>. TMatrixTSym<d,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:77311,Variab,VariableDecorrTransform,77311,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,2,['Variab'],['VariableDecorrTransform']
Modifiability,"inary () const;  Cross entropy error for sigmoid output neurons, for a given event. ;  ; void GetEntry (Int_t) const;  Load an entry into the network. ;  ; Double_t GetSumSquareError () const;  Error on the output for a given event. ;  ; Bool_t LineSearch (Double_t *, Double_t *);  Search along the line defined by direction. ;  ; void MLP_Batch (Double_t *);  One step for the batch (stochastic) method. ;  ; void MLP_Stochastic (Double_t *);  One step for the stochastic method buffer should contain the previous dw vector and will be updated. ;  ; void SetGammaDelta (TMatrixD &, TMatrixD &, Double_t *);  Sets the gamma \((g_{(t+1)}-g_{(t)})\) and delta \((w_{(t+1)}-w_{(t)})\) vectors Gamma is computed here, so ComputeDEDw cannot have been called before, and delta is a direct translation of buffer into a TMatrixD. ;  ; void SteepestDir (Double_t *);  Sets the search direction to steepest descent. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMultiLayerPerceptron (const TMultiLayerPerceptron &);  ; void BuildFirstLayer (TString &);  Instantiates the neurons in input Inputs are normalised and the type is set to kOff (simple forward of the formula value) ;  ; void BuildHiddenLayers (TString &);  Builds hidden layers. ;  ; void BuildLastLayer (TString &, Int_t);  Builds the output layer Neurons are linear combinations of input, by default. ;  ; void BuildOneHiddenLayer (const TString &sNumNodes, Int_t &layer, Int_t &prevStart, Int_t &prevStop, Bool_t lastLayer);  Builds a hidden layer, updates the number of layers. ;  ; void ExpandStructure ();  Expand the structure of the first layer. ;  ; void MLP_Line (Double_t *, Double_t *, Double_t);  Sets the weights to a point along a line Weights are set to [origin + (dist * dir)]. ;  ; TMultiLayerPerceptron & operator= (const TMultiLay",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:24905,inherit,inherited,24905,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['inherit'],['inherited']
Modifiability,"inaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:31712,inherit,inherited,31712,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,2,['inherit'],['inherited']
Modifiability,"inaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . #include <TWebFile.h>. Inheritance diagram for TWebFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWebFile() [1/3]. TWebFile::TWebFile ; (; ). inlineprivate . Definition at line 39 of file TWebFile.h. ◆ TWebFile() [2/3]. TWebFile::TWebFile ; (; const char * ; url, . Option_t * ; opt = """" . ). Create a Web file object. ; A web file is the same as a read-only T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:42764,inherit,inherited,42764,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['inherit'],['inherited']
Modifiability,"inaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetFile.html:40918,inherit,inherited,40918,doc/master/classTNetFile.html,https://root.cern,https://root.cern/doc/master/classTNetFile.html,1,['inherit'],['inherited']
Modifiability,"inaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TWebFile; static Long64_t fgMaxFullCacheSize = 500000000;  ; static TUrl fgProxy;  size of the cached content ;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:44916,inherit,inherited,44916,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['inherit'],['inherited']
Modifiability,"inateSystemTag>&SetY(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>Unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const. Data Members; private:. ROOT::Math::Cartesian2D<double>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXY(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). DisplacementVector2D & operator=( const ForeignVector & v). Assignment from a foreign 2D vector type, for example, Hep2Vector; Precondition: v must implement methods x() and y(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector2D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). Set internal data based on 2 Scalar numbers.; These are for example (x,y) for a cartesian vector or (r,phi) for a p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html:7986,Inherit,Inheritance,7986,root/html602/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inateSystemTag>&SetY(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>Unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const. Data Members; private:. ROOT::Math::Cartesian2D<double>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXY(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). DisplacementVector2D & operator=(const ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>& ). Assignment from a foreign 2D vector type, for example, Hep2Vector; Precondition: v must implement methods x() and y(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector2D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). Set internal data based on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html:7703,Inherit,Inheritance,7703,root/html532/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inateSystemTag>&SetY(ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>Unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const. Data Members; private:. ROOT::Math::Polar2D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXY(ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). DisplacementVector2D & operator=(const ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& ). Assignment from a foreign 2D vector type, for example, Hep2Vector; Precondition: v must implement methods x() and y(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector2D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Polar2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). Set internal data based on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DisplacementVector2D_-p1Polar2D_Double32_t__-p1DefaultCoordinateSystemTag_.html:7576,Inherit,Inheritance,7576,root/html532/ROOT__Math__DisplacementVector2D_-p1Polar2D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DisplacementVector2D_-p1Polar2D_Double32_t__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:9797,Inherit,Inheritance,9797,root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:9797,Inherit,Inheritance,9797,root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inates. Input: IORDR - order of variables (0 - R,PHI; 1 - PHI,R); NA - number of steps along 1st variable; NB - number of steps along 2nd variable. FUN(IA,IB,NV,AB,V,TT) - external routine; IA - cell number for 1st variable; IB - cell number for 2nd variable; NV - number of values for given cell; AB(2,4) - coordinates of the cell corners; V(NV) - cell values; TT(4,*) - additional function. DRFACE(ICODES,XYZ,NP,IFACE,T) - routine for face drawing; ICODES(*) - set of codes for this face; ICODES(1) - IA; ICODES(2) - IB; ICODES(3) - IV; ICODES(4) - side: 1-internal,2-right,3-external,4-left; 5-bottom, 6-top; XYZ(3,*) - coordinates of nodes; NP - number of nodes in face; IFACE(NP) - face; T(NP) - additional function. CHOPT - options: 'BF' - from BACK to FRONT; 'FB' - from FRONT to BACK. /*; ; */. void LegoCylindrical(Int_t iordr, Int_t na, Int_t nb, const char* chopt); Draw stack of lego-plots in cylindrical coordinates. Input: IORDR - order of variables (0 - Z,PHI; 1 - PHI,Z); NA - number of steps along 1st variable; NPHI - number of steps along 2nd variable. FUN(IA,IB,NV,AB,V,TT) - external routine; IA - cell number for 1st variable; IB - cell number for 2nd variable; NV - number of values for given cell; AB(2,4) - coordinates of the cell corners; V(NV) - cell values; TT(4,*) - additional function. DRFACE(ICODES,XYZ,NP,IFACE,T) - routine for face drawing; ICODES(*) - set of codes for this face; ICODES(1) - IA; ICODES(2) - IB; ICODES(3) - IV; ICODES(4) - side: 1,2,3,4 - ordinary sides; 5-bottom,6-top; XYZ(3,*) - coordinates of nodes; NP - number of nodes in face; IFACE(NP) - face; T(NP) - additional function. CHOPT - options: 'BF' - from BACK to FRONT; 'FB' - from FRONT to BACK. /*; ; */. void LegoSpherical(Int_t ipsdr, Int_t iordr, Int_t na, Int_t nb, const char* chopt); Draw stack of lego-plots spheric coordinates. Input: IPSDR - pseudo-rapidity flag; IORDR - order of variables (0 - THETA,PHI; 1 - PHI,THETA); NA - number of steps along 1st variable; NB - number of ste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPainter3dAlgorithms.html:24171,variab,variables,24171,root/html528/TPainter3dAlgorithms.html,https://root.cern,https://root.cern/root/html528/TPainter3dAlgorithms.html,30,['variab'],"['variable', 'variables']"
Modifiability,"include <TLegendEntry.h>. Inheritance diagram for TLegendEntry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLegendEntry() [1/3]. TLegendEntry::TLegendEntry ; (; ). TLegendEntry do-nothing default constructor. ; Definition at line 30 of file TLegendEntry.cxx. ◆ TLegendEntry() [2/3]. TLegendEntry::TLegendEntry ; (; const TObject * ; obj, . const char * ; label = nullptr, . Option_t * ; option = ""lpf"" . ). TLegendEntry normal constructor for one entry in a TLegend. ; obj is the object this entry will represent. If obj has line/fill/marker attributes, then the TLegendEntry will display these attributes.; label is the text that will describe the entry, it is displayed using TLatex, so may have a complex format.; option may have values; L draw line associated w/ TAttLine if obj inherits from TAttLine; P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; F draw a box with fill associated w/ TAttFill if obj inherits TAttFill default is object = ""LPF"" . Definition at line 51 of file TLegendEntry.cxx. ◆ TLegendEntry() [3/3]. TLegendEntry::TLegendEntry ; (; const TLegendEntry & ; entry). TLegendEntry copy constructor. ; Definition at line 64 of file TLegendEntry.cxx. ◆ ~TLegendEntry(). TLegendEntry::~TLegendEntry ; (; ). override . TLegendEntry default destructor. ; Definition at line 72 of file TLegendEntry.cxx. Member Function Documentation. ◆ Class(). static TClass * TLegendEntry::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLegendEntry::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TLegendEntry::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 50 of file TLegendEntry.h. ◆ Copy(). void TLegendEntry::Copy ; (; TObject & ; obj); const. overridevirtual . copy this TLegendEntry into obj ; Reimplemented from TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegendEntry.html:19952,inherit,inherits,19952,doc/master/classTLegendEntry.html,https://root.cern,https://root.cern/doc/master/classTLegendEntry.html,2,['inherit'],['inherits']
Modifiability,"including the buffer). void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the; product operator construction. void calcParams(); (Re)calculate effective parameters of this p.d.f. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); calcParams() ;. RooFFTConvPdf(); coverity[UNINIT_CTOR]. TObject* clone(const char* newname) const; { return new RooFFTConvPdf(*this,newname); }. void setShift(Double_t val1, Double_t val2); { _shift1 = val1 ; _shift2 = val2 ; }. void setCacheObservables(const RooArgSet& obs); { _cacheObs.removeAll() ; _cacheObs.add(obs) ; }. const RooArgSet& cacheObservables() const; { return _cacheObs ; }. Double_t bufferFraction() const; Return value of buffer fraction applied in FFT calculation array beyond either; end of the observable domain to reduce cyclical effects. BufStrat bufferStrategy() const; Return the strategy currently used to fill the buffer:; 'Extend' means is that the input p.d.f convolution observable range is widened to include the buffer range; 'Flat' means that the buffer is filled with the p.d.f. value at the boundary of the observable range; 'Mirror' means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary. Int_t getMaxVal(const RooArgSet& vars) const; Propagate maximum value estimate of pdf1 as convolution can only result in lower max values. { return _pdf1.arg().getMaxVal(vars) ; }. Double_t maxVal(Int_t code) const; { return _pdf1.arg().maxVal(code) ; }. Double_t evaluate() const; { RooArgSet dummy(_x.arg()) ; return getVal(&dummy) ; }. PdfCacheElem* createCache(const RooArgSet* nset) const. » Last changed: Thu Nov 3 20:08:06 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFFTConvPdf.html:53448,Extend,Extend,53448,root/html532/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html532/RooFFTConvPdf.html,1,['Extend'],['Extend']
Modifiability,"including the buffer). void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the; product operator construction. void calcParams(); (Re)calculate effective parameters of this p.d.f. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); calcParams() ;. RooFFTConvPdf(); coverity[UNINIT_CTOR]. TObject* clone(const char* newname) const; { return new RooFFTConvPdf(*this,newname); }. void setShift(Double_t val1, Double_t val2); { _shift1 = val1 ; _shift2 = val2 ; }. void setCacheObservables(const RooArgSet& obs); { _cacheObs.removeAll() ; _cacheObs.add(obs) ; }. const RooArgSet& cacheObservables() const; { return _cacheObs ; }. Double_t bufferFraction() const; Return value of buffer fraction applied in FFT calculation array beyond either; end of the observable domain to reduce cyclical effects. BufStrat bufferStrategy() const; Return the strategy currently used to fill the buffer:; 'Extend' means is that the input p.d.f convolution observable range is widened to include the buffer range; 'Flat' means that the buffer is filled with the p.d.f. value at the boundary of the observable range; 'Mirror' means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary. Int_t getMaxVal(const RooArgSet& vars) const; Propagate maximum value estimate of pdf1 as convolution can only result in lower max values. { return _pdf1.arg().getMaxVal(vars) ; }. Double_t maxVal(Int_t code) const; { return _pdf1.arg().maxVal(code) ; }. Double_t evaluate() const; { RooArgSet dummy(_x.arg()) ; return getVal(&dummy) ; }. PdfCacheElem* createCache(const RooArgSet* nset) const. » Last changed: Tue Jun 2 15:30:46 2015 » Last generated: 2015-06-02 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFFTConvPdf.html:57545,Extend,Extend,57545,root/html604/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html604/RooFFTConvPdf.html,1,['Extend'],['Extend']
Modifiability,"ind all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionTree::EventConstList& eventSample, TMVA::DecisionTreeNode* node); Decide how to split a node using one of the variables that gives; the best separation of signal/background. In order to do this, for each; variable a scan of the different cut values in a grid (grid = fNCuts) is; performed and the resulting separation gains are compared.; in addition to the individual variables, one can also ask for a fisher; discriminant being built out of (some) of the variables and used as a; possible multivariate split. std::vector<Double_t> GetFisherCoefficients(const TMVA::DecisionTree::EventConstList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventConstList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boosting). Double_t CheckEvent(const TMVA::Event* , Bool_t UseYesNoLeaf = kFALSE) const; the event e is put into the decision tree (starting at the root node); and the output is NodeType (signal) or (background) of the final node (basket); in which the gi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__DecisionTree.html:13431,variab,variable,13431,root/html534/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html534/TMVA__DecisionTree.html,6,['variab'],['variable']
Modifiability,"ind the maximum stepsize of v in direction dir before violating the nonnegativity constraints. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpVar.h>. Inheritance diagram for TQpVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EVarBlock. enum TQpVar::EVarBlock. Enumeratorkno_block ; kt_block ; klambda_block ; ku_block ; kpi_block ; kv_block ; kgamma_block ; kw_block ; kphi_block . Definition at line 127 of file TQpVar.h. Constructor & Destructor Documentation. ◆ TQpVar() [1/4]. TQpVar::TQpVar ; (; ). Default constructor. ; Definition at line 59 of file TQpVar.cxx. ◆ TQpVar() [2/4]. TQpVar::TQpVar ; (; TVectorD & ; x_in, . TVectorD & ; s_in, . TVectorD & ; y_in, . TVectorD & ; z_in, . TVectorD & ; v_in, . TVectorD & ; gamma_in, . TVectorD & ; w_in, . TVectorD & ; phi_in, . TVectorD & ; t_in, . TVectorD & ; lambda_in, . TVectorD & ; u_in, . TVectorD & ; pi_in, . T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpVar.html:13263,inherit,inherited,13263,doc/master/classTQpVar.html,https://root.cern,https://root.cern/doc/master/classTQpVar.html,2,['inherit'],['inherited']
Modifiability,"ind1, UInt_t ind2, Double_t neff) const;  risk assessment ;  ; Double_t Risk (UInt_t ind1, UInt_t ind2, Double_t neff, UInt_t itau) const;  risk assessment for tau model <itau> ;  ; Double_t RiskPath () const;  ; Double_t RiskPerf () const;  ; Double_t RiskPerf (UInt_t itau) const;  ; UInt_t RiskPerfTst ();  Estimates the error rate with the current set of parameters. ;  ; void SetGDErrScale (Double_t s);  ; void SetGDNPathSteps (Int_t np);  ; void SetGDPathStep (Double_t s);  ; void SetGDTau (Double_t t);  ; void SetGDTauPrec (Double_t p);  ; void SetGDTauRange (Double_t t0, Double_t t1);  ; void SetGDTauScan (UInt_t n);  ; void SetMsgType (EMsgType t);  ; void SetRuleFit (RuleFit *rf);  ; Int_t Type (const Event *e) const;  . Protected Types; typedef std::vector< constTMVA::Event * >::const_iterator EventItr;  . Protected Member Functions; Double_t CalcAverageResponse ();  calculate the average response - TODO : rewrite bad dependancy on EvaluateAverage() ! ;  ; Double_t CalcAverageResponseOLD ();  ; Double_t CalcAverageTruth ();  calculate the average truth ;  ; void CalcFStar ();  Estimates F* (optimum scoring function) for all events for the given sets. ;  ; void CalcGDNTau ();  ; void CalcTstAverageResponse ();  calc average response for all test paths - TODO: see comment under CalcAverageResponse() note that 0 offset is used ;  ; Double_t ErrorRateBin ();  Estimates the error rate with the current set of parameters It uses a binary estimate of (y-F*(x)) (y-F*(x)) = (Num of events where sign(F)!=sign(y))/Neve y = {+1 if event is signal, -1 otherwise} — NOT USED —. ;  ; Double_t ErrorRateReg ();  Estimates the error rate with the current set of parameters This code is pretty messy at the moment. ;  ; Double_t ErrorRateRoc ();  Estimates the error rate with the current set of parameters. ;  ; Double_t ErrorRateRocRaw (std::vector< Double_t > &sFsig, std::vector< Double_t > &sFbkg);  Estimates the error rate with the current set of parameters. ;  ; void ErrorRateR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html:2697,rewrite,rewrite,2697,doc/master/classTMVA_1_1RuleFitParams.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html,1,['rewrite'],['rewrite']
Modifiability,"ind=='Command'. ; Definition at line 1164 of file TRootSniffer.cxx. ◆ FindInHierarchy(). void * TRootSniffer::FindInHierarchy ; (; const char * ; path, . TClass ** ; cl = nullptr, . TDataMember ** ; member = nullptr, . Int_t * ; chld = nullptr . ). virtual . Search element with specified path Returns pointer on element Optionally one could obtain element class, member description and number of childs. ; When chld!=nullptr, not only element is searched, but also number of childs are counted. When member!=0, any object will be scanned for its data members (disregard of extra options) ; Reimplemented in TRootSnifferFull.; Definition at line 1041 of file TRootSniffer.cxx. ◆ FindTObjectInHierarchy(). TObject * TRootSniffer::FindTObjectInHierarchy ; (; const char * ; path). Search element in hierarchy, derived from TObject. ; Definition at line 1086 of file TRootSniffer.cxx. ◆ GetAutoLoad(). const char * TRootSniffer::GetAutoLoad ; (; ); const. return name of configured autoload scripts (or 0) ; Definition at line 490 of file TRootSniffer.cxx. ◆ GetItem(). TObject * TRootSniffer::GetItem ; (; const char * ; fullname, . TFolder *& ; parent, . Bool_t ; force = kFALSE, . Bool_t ; within_objects = kTRUE . ). protected . Return item from the subfolders structure. ; Definition at line 1571 of file TRootSniffer.cxx. ◆ GetItemField() [1/2]. const char * TRootSniffer::GetItemField ; (; const char * ; fullname, . const char * ; name . ). Return field for specified item. ; Definition at line 1836 of file TRootSniffer.cxx. ◆ GetItemField() [2/2]. const char * TRootSniffer::GetItemField ; (; TFolder * ; parent, . TObject * ; item, . const char * ; name . ). protected . Return field for specified item. ; Definition at line 1820 of file TRootSniffer.cxx. ◆ GetItemHash(). ULong_t TRootSniffer::GetItemHash ; (; const char * ; itemname). virtual . Get hash function for specified item used to detect any changes in the specified object. ; Reimplemented in TRootSnifferFull.; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSniffer.html:24893,config,configured,24893,doc/master/classTRootSniffer.html,https://root.cern,https://root.cern/doc/master/classTRootSniffer.html,1,['config'],['configured']
Modifiability,"indNode (Double_t *point, const Double_t *dir=nullptr) override;  get the node division containing the query point ;  ; Int_t GetDivAxis () override;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; TGeoPatternParaX & operator= (const TGeoPatternParaX &);  assignment operator ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternParaX.html:1975,inherit,inherited,1975,doc/master/classTGeoPatternParaX.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html,1,['inherit'],['inherited']
Modifiability,"indNode (Double_t *point, const Double_t *dir=nullptr) override;  get the node division containing the query point ;  ; Int_t GetDivAxis () override;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; TGeoPatternParaY & operator= (const TGeoPatternParaY &);  assignment operator ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternParaY.html:1997,inherit,inherited,1997,doc/master/classTGeoPatternParaY.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html,1,['inherit'],['inherited']
Modifiability,"indNode (Double_t *point, const Double_t *dir=nullptr) override;  get the node division containing the query point ;  ; Int_t GetDivAxis () override;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; TGeoPatternParaZ & operator= (const TGeoPatternParaZ &);  assignment operator ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternParaZ.html:1997,inherit,inherited,1997,doc/master/classTGeoPatternParaZ.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaZ.html,1,['inherit'],['inherited']
Modifiability,"indObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveClass.html:11427,inherit,inherits,11427,doc/master/classTPaveClass.html,https://root.cern,https://root.cern/doc/master/classTPaveClass.html,8,['inherit'],['inherits']
Modifiability,"indObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetN(Int_t pid) const; virtual const char*TObject::GetName() const; Int_tGetNumPIDs() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetOwner() const; TObject*GetParent(Int_t uid, TProcessID* context = 0) const; TObjArray*GetParents() const; static TRefTable*GetRefTable(); Int_tGetSize(Int_t pid) const; virtual const char*TObject::GetTitle() const; UInt_tGetUID() const; TProcessID*GetUIDContext() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRefTable&operator=(const TRefTa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRefTable.html:4051,Inherit,InheritsFrom,4051,root/html532/TRefTable.html,https://root.cern,https://root.cern/root/html532/TRefTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"indObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetN(Int_t pid) const; virtual const char*TObject::GetName() const; Int_tGetNumPIDs() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetOwner() const; TObject*GetParent(Int_t uid, TProcessID* context = 0) const; TObjArray*GetParents() const; static TRefTable*GetRefTable(); Int_tGetSize(Int_t pid) const; virtual const char*TObject::GetTitle() const; UInt_tGetUID() const; TProcessID*GetUIDContext() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRefTable&operator=(const TRefTable&); virtual voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRefTable.html:3994,Inherit,InheritsFrom,3994,root/html602/TRefTable.html,https://root.cern,https://root.cern/root/html602/TRefTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"indObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TH2D*GetAdetCovMatrix(Int_t ntoys, Int_t seed = 1); TH1D*GetD() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetKReg() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1D*GetSV() const; virtual const char*TObject::GetTitle() const; TH2D*GetUnfoldCovMatrix(const TH2D* cov, Int_t ntoys, Int_t seed = 1); virtual UInt_tTObject::GetUniqueID() const; TH2D*GetXinv() const; TH2D*GetXtau() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSVDUnfold.html:5522,Inherit,InheritsFrom,5522,root/html532/TSVDUnfold.html,https://root.cern,https://root.cern/root/html532/TSVDUnfold.html,1,['Inherit'],['InheritsFrom']
Modifiability,"indObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; Int_tGetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__FitterBase.html:3012,Inherit,InheritsFrom,3012,root/html532/TMVA__FitterBase.html,https://root.cern,https://root.cern/root/html532/TMVA__FitterBase.html,2,['Inherit'],['InheritsFrom']
Modifiability,"indObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static TGeoElementTable*TGeoElement::GetElementTable(); virtual const char*TObject::GetIconName() const; TGeoIsotope*TGeoElement::GetIsotope(Int_t i) const; virtual const char*TNamed::GetName() const; Int_tGetNdecays() const; Int_tTGeoElement::GetNisotopes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoElement::GetRelativeAbundance(Int_t i) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tHalfLife() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoElement::HasIsotopes() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoElement::IsDefined() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Int_tIsoNo() const; virtual Bool_tIsRadioNuclide() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoElement::IsUsed() const; Bool_tTObject::IsZombie() const; Double_tLevel() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMassEx() const; Int_tMassNo() const; voidTObject::MayNotUse(const char* method) const; Int_tTGeoElement::N() const; Double_tNatAbun() const; Double_tTGeoElement::Neff() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoElementRN.html:3600,Inherit,InheritsFrom,3600,root/html532/TGeoElementRN.html,https://root.cern,https://root.cern/root/html532/TGeoElementRN.html,1,['Inherit'],['InheritsFrom']
Modifiability,"indObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tGetBBox(); virtual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsHorizontal(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsVertical(); Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLine.html:2883,Inherit,InheritsFrom,2883,root/html534/TLine.html,https://root.cern,https://root.cern/root/html534/TLine.html,1,['Inherit'],['InheritsFrom']
Modifiability,"indObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tGetBBox(); virtual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsHorizontal(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsVertical(); Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLine.html:2789,Inherit,InheritsFrom,2789,root/html602/TLine.html,https://root.cern,https://root.cern/root/html602/TLine.html,2,['Inherit'],['InheritsFrom']
Modifiability,"inder""). ;  ; double Root () const override;  Returns root value. ;  ; virtual bool SetFunction (const ROOT::Math::IGenFunction &, double, double);  Set function to solve and the interval in where to look for the root. ;  ; bool SetFunction (const ROOT::Math::IGenFunction &f, double xlow, double xup) override;  Sets the function for the rest of the algorithms. ;  ; virtual bool SetFunction (const ROOT::Math::IGradFunction &, double);  Set function to solve and the interval in where to look for the root. ;  ; void SetLogScan (bool on);  Set a log grid scan (default is equidistant bins) will work only if xlow > 0. ;  ; void SetNpx (int npx);  Set the number of point used to bracket root using a grid. ;  ; bool Solve (int maxIter=100, double absTol=1E-8, double relTol=1E-10) override;  Returns the X value corresponding to the function value fy for (xmin<x<xmax). ;  ; int Status () const override;  Returns status of last estimate. ;  ;  Public Member Functions inherited from ROOT::Math::IRootFinderMethod;  IRootFinderMethod ();  Default Constructor. ;  ; virtual ~IRootFinderMethod ();  Default Destructor. ;  ; virtual int Iterate ();  This method is implemented only by the GSLRootFinder and GSLRootFinderDeriv classes and will return an error if it's not one of them. ;  . Static Public Member Functions; static void SetDefaultNpx (int npx);  set number of default Npx used at construction time (when SetNpx is not called) Default value is 100 ;  ; static void SetDefaultNSearch (int n);  set number of times the bracketing search in combination with is done to find a good interval Default value is 10 ;  . Private Attributes; const IGenFunction * fFunction;  Pointer to the function. ;  ; bool fLogScan;  flag to control usage of a log scan ;  ; int fNIter;  Number of iterations needed for the last estimation. ;  ; int fNpx;  Number of points to bracket root with initial grid (def is 100) ;  ; double fRoot;  Current estimation of the function root. ;  ; int fStatus;  Status of co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BrentRootFinder.html:2724,inherit,inherited,2724,doc/master/classROOT_1_1Math_1_1BrentRootFinder.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BrentRootFinder.html,1,['inherit'],['inherited']
Modifiability,"index,; either by linking it or by including it.; The files for modules are searched based on the source file directory of the; module's classes.; A filename starting with ""index."" will be included in the index page;; all other files will be linked.; Only files ending on .html or .txt will be taken into account;; the text files will first be run through; THtml::Convert().; You can see an example here;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.; VI. Auxiliary files: style sheet, JavaScript, help page; The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running MakeAll();; they can be generated on; demand by calling CreateAuxiliaryFiles().; VII. Class Charts; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged ontop of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies.; These graphs are generated using the Graphviz; package. You can install it from http://www.graphviz.org.; You can either put it into your $PATH, or tell THtml where to find it by calling; SetDotDir().; VIII. Configuration variables; Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; TEnv. Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THtml.html:15250,inherit,inheritance,15250,root/html530/THtml.html,https://root.cern,https://root.cern/root/html530/THtml.html,34,['inherit'],"['inheritance', 'inherited']"
Modifiability,"inding ; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; TString_intNameIntegrand name; ROOT::Math::AdaptiveIntegratorMultiDim*_integrator; Int_t_nErrorNumber of error occurrences; Int_t_nWarnMax number of warnings to be issued ;; Int_t_nmaxMax number of divisions; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_xmaxUpper bound in each dimension; Double_t*_xminLower bound in each dimension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooAdaptiveIntegratorND, its parameters, dependencies and capabilities with RooNumIntFactory. RooAdaptiveIntegratorND(); Default ctor. RooAdaptiveIntegratorND(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor of integral on given function binding and with given configuration. The; integration limits are taken from the definition in the function binding; _func = function. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Virtual constructor with given function and configuration. Needed by RooNumIntFactory. ~RooAdaptiveIntegratorND(); Destructor. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Double_t integral(const Double_t* yvec = 0); Evaluate integral at given function binding parameter values. RooAdaptiveIntegratorND(); Constructors, assignment etc. Bool_t canIntegrate1D() const; { ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAdaptiveIntegratorND.html:7270,config,config,7270,root/html526/RooAdaptiveIntegratorND.html,https://root.cern,https://root.cern/root/html526/RooAdaptiveIntegratorND.html,12,['config'],"['config', 'configuration']"
Modifiability,"inding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t[] xvector) const; Load the vector of variable values into the RooRealVars associated; as variables with the bound RooAbsReal function. Double_t operator()(const Double_t[] xvector) const; Evaluate the bound RooAbsReal at the variable values provided in xvector. Double_t getMinLimit(UInt_t dimension) const; Return lower limit on i-th variable. Double_t getMaxLimit(UInt_t dimension) const; Return upper limit on i-th variable. const char* getName() const; Return name of function. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& , Double_t , Double_t ) const. std::list<Double_t>* binBoundaries(Int_t ) const. » Last changed: Tue Jun 2 15:33:19 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooRealBinding.html:3340,variab,variables,3340,root/html604/RooRealBinding.html,https://root.cern,https://root.cern/root/html604/RooRealBinding.html,12,['variab'],"['variable', 'variables']"
Modifiability,"inding of integrand; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimitsUse limits in function binding?; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooGaussKronrodIntegrator1D, its parameters and capabilities with RooNumIntConfig. RooGaussKronrodIntegrator1D(); coverity[UNINIT_CTOR]; Default constructor. RooGaussKronrodIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Construct integral on 'function' using given configuration object. The integration; range is taken from the definition in the function binding. RooGaussKronrodIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Construct integral on 'function' using given configuration object in the given range. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with given function and configuration. Needed for RooNumIntFactory. Bool_t initialize(); Perform one-time initialization of integrator. ~RooGaussKronrodIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Double_t integral(const Double_t* yvec = 0); Calculate and return integral. RooGaussKronrodIntegrator1D(); Constructors, assignment etc. Bool_t setUseIntegrandLimits(Bool_t flag); {_useIntegrandLimits = flag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooGaussKronrodIntegrator1D.html:8307,config,config,8307,root/html530/RooGaussKronrodIntegrator1D.html,https://root.cern,https://root.cern/root/html530/RooGaussKronrodIntegrator1D.html,18,['config'],"['config', 'configuration']"
Modifiability,"individually, the TTreeCache will read all the branches thus trading off the latencies inherent to multiple small reads for the potential of requesting more data than needed by read from the disk or server the baskets for too many branches.; The default behavior can be changed by either updating one of the rootrc files or by setting environment variables. The rootrc files, both the global and the local ones, now support the following the resource variable TTreeCache.Size which set the default size factor for auto sizing TTreeCache for TTrees. The estimated cluster size for the TTree and this factor is used to give the cache size. If option is set to zero auto cache creation is disabled and the default cache size is the historical one (equivalent to factor 1.0). If set to non zero auto cache creation is enabled and both auto created and default sized caches will use the configured factor: 0.0 no automatic cache and greater than 0.0 to enable cache. This value can be overridden by the environment variable ROOT_TTREECACHE_SIZE.; The resource variable TTreeCache.Prefill sets the default TTreeCache prefilling type. The prefill type may be: 0 for no prefilling and 1 to prefill all the branches. It can be overridden by the environment variable ROOT_TTREECACHE_PREFILL; In particular the default can be set back to the same as in version 5 by setting TTreeCache.Size (or ROOT_TTREECACHE_SIZE) and TTreeCache.Prefill (or ROOT_TTREECACHE_PREFILL) both to zero.; TTree methods which are expected to modify a cache, like AddBranchToCache, will attempt to setup a cache of default size if one does not exist, irrespective of whether the auto cache creation is enabled. Additionally several methods giving control of the cache have changed return type from void to Int_t, to be able to return a code to indicate if there was an error.; Usually TTree::SetCacheSize will no longer reset the list of branches to be cached (either set or previously learnt) nor restart the learning phase. The learni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:13069,variab,variable,13069,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['variab'],['variable']
Modifiability,indow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockButton.html:20923,inherit,inherited,20923,doc/master/classTGDockButton.html,https://root.cern,https://root.cern/doc/master/classTGDockButton.html,2,['inherit'],['inherited']
Modifiability,"indow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Attributes; Int_t fColormap [64][3];  ; Pixel_t fPixel [64];  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPick.html:27239,inherit,inherited,27239,doc/master/classTGColorPick.html,https://root.cern,https://root.cern/doc/master/classTGColorPick.html,1,['inherit'],['inherited']
Modifiability,"indow used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGButtonGroup.h>. Inheritance diagram for TGHButtonGroup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGHButtonGroup(). TGHButtonGroup::TGHButtonGroup ; (; const TGWindow * ; parent, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHButtonGroup.html:35356,inherit,inherited,35356,doc/master/classTGHButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGHButtonGroup.html,6,['inherit'],['inherited']
Modifiability,"indow used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGButtonGroup.h>. Inheritance diagram for TGVButtonGroup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGVButtonGroup(). TGVButtonGroup::TGVButtonGroup ; (; const TGWindow * ; parent, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVButtonGroup.html:35356,inherit,inherited,35356,doc/master/classTGVButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGVButtonGroup.html,6,['inherit'],['inherited']
Modifiability,"indow. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiMainFrame;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiMenuBar.html:28385,inherit,inherited,28385,doc/master/classTGMdiMenuBar.html,https://root.cern,https://root.cern/doc/master/classTGMdiMenuBar.html,1,['inherit'],['inherited']
Modifiability,"indow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); voidHandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitPlugins(Option_t* opt = """"); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tIsCloseTabShown() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootBrowser.html:10775,Inherit,InheritsFrom,10775,root/html532/TRootBrowser.html,https://root.cern,https://root.cern/root/html532/TRootBrowser.html,4,['Inherit'],['InheritsFrom']
Modifiability,"indow; Int_tTGedFrame::fPrioritylocation in GedEditor; TGCheckButton*fRnrLines; TGCheckButton*fRnrMarkers; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveStraightLineSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Initialize widget pointers to 0; Constructor. void SetModel(TObject* obj); Set model object. void DoRnrMarkers(); Slot for RnrMarkers. void DoRnrLines(); Slot for RnrLines. TEveStraightLineSetEditor(const TEveStraightLineSetEditor& ). TEveStraightLineSetEditor& operator=(const TEveStraightLineSetEditor& ). virtual ~TEveStraightLineSetEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveStraightLineSetEditor.html:20797,Inherit,Inheritance,20797,root/html604/TEveStraightLineSetEditor.html,https://root.cern,https://root.cern/root/html604/TEveStraightLineSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"indow; Int_tTGedFrame::fPrioritylocation in GedEditor; TGCheckButton*fRnrLines; TGCheckButton*fRnrMarkers; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveStraightLineSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Initialize widget pointers to 0; Constructor. void SetModel(TObject* obj); Set model object. void DoRnrMarkers(); Slot for RnrMarkers. void DoRnrLines(); Slot for RnrLines. TEveStraightLineSetEditor(const TEveStraightLineSetEditor& ). TEveStraightLineSetEditor& operator=(const TEveStraightLineSetEditor& ). virtual ~TEveStraightLineSetEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveStraightLineSetEditor.html:20797,Inherit,Inheritance,20797,root/html602/TEveStraightLineSetEditor.html,https://root.cern,https://root.cern/root/html602/TEveStraightLineSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"indowPosition(Int_t x, Int_t y); virtual voidSetWindowSize(UInt_t w, UInt_t h); virtual voidSetWindowTitle(const char* newTitle); virtual voidShow(); virtual voidShowEditor(Bool_t show = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidShowMenuBar(Bool_t show = kTRUE); virtual voidShowStatusBar(Bool_t show = kTRUE); virtual voidShowToolBar(Bool_t show = kTRUE); virtual voidShowToolTips(Bool_t show = kTRUE); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TCanvasImp(TCanvas* c = 0); TCanvasImp(TCanvas* c, const char* name, UInt_t width, UInt_t height); TCanvasImp(TCanvas* c, const char* name, Int_t x, Int_t y, UInt_t width, UInt_t height). protected:. virtual Bool_tIsLocked(); virtual voidLock(); TCanvasImp&operator=(const TCanvasImp& ci); TCanvasImp(const TCanvasImp& ci); virtual voidUnlock(). Data Members; protected:. TCanvas*fCanvasTCanvas associated with this implementation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline TCanvasImp(TCanvas* c, const char* name, UInt_t width, UInt_t height); { }. inline TCanvasImp(TCanvas* c, const char* name, Int_t x, Int_t y, UInt_t width, UInt_t height); { }. UInt_t GetWindowGeometry(Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); { x = y = 0; w = h = 0; return 0;}. void SetStatusText(const char* text = 0, Int_t partidx = 0); { }. void SetWindowPosition(Int_t x, Int_t y); { }. void SetWindowSize(UInt_t w, UInt_t h); { }. void SetWindowTitle(const char* newTitle); { }. void SetCanvasSize(UInt_t w, UInt_t h); { }. void ShowMenuBar(Bool_t show = kTRUE); { }. void ShowStatusBar(Bool_t show = kTRUE); { }. void RaiseWindow(); { }. void ReallyDelete(); { }. void ShowEditor(Bool_t show = kTRUE); { }. void ShowToolBar(Bool_t show = kTRUE); { }. void ShowToolTips(Bool_t show = kTRUE); { }. TCanvasImp(const TCanvasImp& ci); { }. TCanvasImp& operator=(const TCanvasImp& ci); {if(this!=&ci) fCanvas=ci.fCanvas; return *this;}. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCanvasImp.html:2006,Inherit,Inheritance,2006,root/html602/TCanvasImp.html,https://root.cern,https://root.cern/root/html602/TCanvasImp.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"indow_t id);  ; virtual void DoRedraw ();  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  . Static Protected Attributes; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  . Friends; class TGClient;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGWindow.h>. Inheritance diagram for TGWindow:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EEditMode. enum TGWindow::EEditMode. EnumeratorkEditEnable allow edit of this window . kEditDisable disable edit of this window . kEditDisableEvents window events cannot be edited . kEditDisableGrab window grab cannot be edited . kEditDisableLayout window layout cannot be edited . kEditDisableResize window size cannot be edited . kEditDisableHeight window height cannot be edited . kEditDisableWidth window width cannot be edited . kEditDisableBtnEnable window can handle mouse button events . kEditDisableKeyEnable window can handle keyboard events . Definition at line 55 of file TGWindow.h. ◆ EStatusBits. enum TGWindow::EStatusBits. EnumeratorkIsHtmlView . Definition at line 68 of file TGWindow.h. Constructor & Destructor Documentation. ◆ TGW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWindow.html:14044,inherit,inherited,14044,doc/master/classTGWindow.html,https://root.cern,https://root.cern/doc/master/classTGWindow.html,1,['inherit'],['inherited']
Modifiability,"indow_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. void MakeVariablesTab(); Make the ""variable"" tab. ~TParallelCoordEditor(); Destructor. void CleanUpSelections(); Clean up the selection combo box. void CleanUpVariables(); Clean up the variables combo box. void ConnectSignals2Slots(); Connect signals to slots. void DoActivateSelection(Bool_t ); Slot to activate or not a selection. void DoAddSelection(); Slot to add a selection. void DoAddVariable(); Slot to add a variable. void DoApplySelect(); Slot to apply a selection to the tree. void DoDelayDrawing(Bool_t ); Slot to delay the drawing. void DoDeleteSelection(); Slot to delete a selection. void DoDeleteVar(); Slot to delete a variable(). void DoDotsSpacing(); Slot to set the line dotspacing. void DoDotsSpacingField(); Slot to set the line dotspacing from the entry field. void DoAlphaField(); Slot to set the alpha value from the entry field. void DoAlpha(); Slot to set the alpha value. void DoEntriesToDraw(); Slot to select the entries to be drawn. void DoFirstEntry(); Slot to set the first entry. void DoGlobalLineColor(Pixel_t ); Slot to set the global line color. void DoGlobalLineWidth(Int_t ); Slot to set the global line width. void DoHideAllRanges(Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParallelCoordEditor.html:23306,variab,variables,23306,root/html534/TParallelCoordEditor.html,https://root.cern,https://root.cern/root/html534/TParallelCoordEditor.html,2,['variab'],['variables']
Modifiability,"indow_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. void MakeVariablesTab(); Make the ""variable"" tab. ~TParallelCoordEditor(); Destructor. void CleanUpSelections(); Clean up the selection combo box. void CleanUpVariables(); Clean up the variables combo box. void ConnectSignals2Slots(); Connect signals to slots. void DoActivateSelection(Bool_t ); Slot to activate or not a selection. void DoAddSelection(); Slot to add a selection. void DoAddVariable(); Slot to add a variable. void DoApplySelect(); Slot to apply a selection to the tree. void DoDelayDrawing(Bool_t ); Slot to delay the drawing. void DoDeleteSelection(); Slot to delete a selection. void DoDeleteVar(); Slot to delete a variable(). void DoDotsSpacing(); Slot to set the line dotspacing. void DoDotsSpacingField(); Slot to set the line dotspacing from the entry field. void DoEntriesToDraw(); Slot to select the entries to be drawn. void DoFirstEntry(); Slot to set the first entry. void DoGlobalLineColor(Pixel_t ); Slot to set the global line color. void DoGlobalLineWidth(Int_t ); Slot to set the global line width. void DoHideAllRanges(Bool_t ); Slot to hide all the ranges. void DoHistBinning(); Slot to set the axes histogram binning. void DoHistColorSele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordEditor.html:23152,variab,variables,23152,root/html530/TParallelCoordEditor.html,https://root.cern,https://root.cern/root/html530/TParallelCoordEditor.html,3,['variab'],['variables']
Modifiability,"indow_t GetSource () const;  ; Window_t GetTarget () const;  ; Atom_t * GetTypeList () const;  ; Bool_t HandleClientMessage (Event_t *event);  Handle DND related client messages. ;  ; Bool_t HandleSelection (Event_t *event);  Handle selection event. ;  ; Bool_t HandleSelectionRequest (Event_t *event);  Handle selection request event. ;  ; Bool_t HandleTimer (TTimer *t) override;  Handle Drop timeout. ;  ; TClass * IsA () const override;  ; Bool_t IsDragging () const;  ; Bool_t RemoveRootProxy ();  Remove root window proxy. ;  ; void SetDragPixmap (Pixmap_t pic, Pixmap_t mask, Int_t hot_x, Int_t hot_y);  Set drag window pixmaps and hotpoint. ;  ; void SetMainFrame (TGFrame *main);  ; Bool_t SetRootProxy ();  Set root window proxy. ;  ; Bool_t StartDrag (TGFrame *src, Int_t x_root, Int_t y_root, Window_t grabWin=kNone);  Start dragging. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDNDManager.html:1809,inherit,inherited,1809,doc/master/classTGDNDManager.html,https://root.cern,https://root.cern/doc/master/classTGDNDManager.html,1,['inherit'],['inherited']
Modifiability,"indricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=(const ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::LocalCoordinateSys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html:10953,Inherit,Inheritance,10953,root/html532/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ine **logTauCurvature=nullptr);  scan the L curve, determine tau and unfold at the final value of tau ;  ; virtual Int_t ScanSURE (Int_t nPoint, Double_t tauMin, Double_t tauMax, TGraph **logTauSURE=nullptr, TGraph **df_chi2A=nullptr, TGraph **lCurve=nullptr);  minimize Stein's unbiased risk estimator ""SURE"" using successive calls to DoUnfold at various tau. ;  ; void SetBias (const TH1 *bias);  set bias vector ;  ; void SetConstraint (EConstraint constraint);  set type of area constraint ;  ; void SetEpsMatrix (Double_t eps);  set numerical accuracy for Eigenvalue analysis when inverting matrices with rank problems ;  ; virtual Int_t SetInput (const TH1 *hist_y, Double_t scaleBias=0.0, Double_t oneOverZeroError=0.0, const TH2 *hist_vyy=nullptr, const TH2 *hist_vyy_inv=nullptr);  Define input data for subsequent calls to DoUnfold(tau) ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfold.html:8948,inherit,inherited,8948,doc/master/classTUnfold.html,https://root.cern,https://root.cern/doc/master/classTUnfold.html,1,['inherit'],['inherited']
Modifiability,"ine . Definition at line 104 of file TSpider.h. ◆ GotoEntry(). void TSpider::GotoEntry ; (; Long64_t ; e). Go to a specified entry. ; Definition at line 744 of file TSpider.cxx. ◆ GotoFollowing(). void TSpider::GotoFollowing ; (; ). Go to the next entry. ; Definition at line 774 of file TSpider.cxx. ◆ GotoNext(). void TSpider::GotoNext ; (; ). Go to the next entries. ; Definition at line 754 of file TSpider.cxx. ◆ GotoPreceding(). void TSpider::GotoPreceding ; (; ). Go to the last entry. ; Definition at line 784 of file TSpider.cxx. ◆ GotoPrevious(). void TSpider::GotoPrevious ; (; ). Go to the previous entries. ; Definition at line 764 of file TSpider.cxx. ◆ InitArrays(). void TSpider::InitArrays ; (; Int_t ; newsize). private . Check if the arrays size is enough and reallocate them if not. ; Definition at line 794 of file TSpider.cxx. ◆ InitVariables(). void TSpider::InitVariables ; (; Long64_t ; firstentry, . Long64_t ; nentries . ). private . Browse the tree to set the min, max and average value of each variable of fVar. ; Definition at line 832 of file TSpider.cxx. ◆ IsA(). TClass * TSpider::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 131 of file TSpider.h. ◆ Paint(). void TSpider::Paint ; (; Option_t * ; options). overridevirtual . Paint the spider. ; Reimplemented from TObject.; Definition at line 918 of file TSpider.cxx. ◆ SetAverageFillColor(). void TSpider::SetAverageFillColor ; (; Color_t ; col). Set the Fill Color of the average. ; Definition at line 1001 of file TSpider.cxx. ◆ SetAverageFillStyle(). void TSpider::SetAverageFillStyle ; (; Style_t ; sty). Set the FillStyle of the average. ; Definition at line 1013 of file TSpider.cxx. ◆ SetAverageLineColor(). void TSpider::SetAverageLineColor ; (; Color_t ; col). Set the LineColor of the average. ; Definition at line 977 of file TSpider.cxx. ◆ SetAverageLineStyle(). void TSpider::SetAverageLineStyle ; (; Style_t ; sty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:26521,variab,variable,26521,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variable']
Modifiability,"ine . Definition at line 33 of file RooHistFunc.h. ◆ RooHistFunc() [2/6]. RooHistFunc::RooHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgSet & ; vars, . const RooDataHist & ; dhist, . Int_t ; intOrder = 0 . ). Constructor from a RooDataHist. ; The variable listed in 'vars' control the dimensionality of the function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions can be either real or discrete. See RooDataHist::RooDataHist for details on the binning. RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists for the entire life span of this function. ; Definition at line 52 of file RooHistFunc.cxx. ◆ RooHistFunc() [3/6]. RooHistFunc::RooHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgList & ; funcObs, . const RooArgList & ; histObs, . const RooDataHist & ; dhist, . Int_t ; intOrder = 0 . ). Constructor from a RooDataHist. ; The variable listed in 'vars' control the dimensionality of the function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions can be either real or discrete. See RooDataHist::RooDataHist for details on the binning. RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists for the entire life span of this function. ; Definition at line 91 of file RooHistFunc.cxx. ◆ RooHistFunc() [4/6]. RooHistFunc::RooHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgSet & ; vars, . std::unique_ptr< RooDataHist > ; dhist, . int ; intOrder = 0 . ). Definition at line 121 of file RooHistFunc.cxx. ◆ RooHistFunc() [5/6]. RooHistFunc::RooHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgList & ; pdfObs, . const RooArgList & ; histObs, . std::unique_ptr< RooDataHist > ; dhist, . int ; intOrder = 0 . ). Definition at line 128 of file RooHistFunc.cxx. ◆ RooHistFunc() [6/6]. RooHistFunc::RooHistFunc ; (; const RooHistFunc & ; o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:63670,variab,variable,63670,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,1,['variab'],['variable']
Modifiability,ine 188 of file TLinearFitter.h. ◆ fNdim. Int_t TLinearFitter::fNdim. private . Definition at line 183 of file TLinearFitter.h. ◆ fNfixed. Int_t TLinearFitter::fNfixed. private . Definition at line 184 of file TLinearFitter.h. ◆ fNfunctions. Int_t TLinearFitter::fNfunctions. private . Definition at line 181 of file TLinearFitter.h. ◆ fNpoints. Int_t TLinearFitter::fNpoints. private . temporary ; Definition at line 180 of file TLinearFitter.h. ◆ fParams. TVectorD TLinearFitter::fParams. private . Definition at line 156 of file TLinearFitter.h. ◆ fParCovar. TMatrixDSym TLinearFitter::fParCovar. private . Definition at line 157 of file TLinearFitter.h. ◆ fParSign. TVectorD TLinearFitter::fParSign. private . Definition at line 159 of file TLinearFitter.h. ◆ fRobust. Bool_t TLinearFitter::fRobust. private . Definition at line 193 of file TLinearFitter.h. ◆ fSpecial. Int_t TLinearFitter::fSpecial. private . Definition at line 185 of file TLinearFitter.h. ◆ fStoreData. Bool_t TLinearFitter::fStoreData. private . Definition at line 189 of file TLinearFitter.h. ◆ fTValues. TVectorD TLinearFitter::fTValues. private . Definition at line 158 of file TLinearFitter.h. ◆ fVal. Double_t TLinearFitter::fVal[1000]. private . Definition at line 178 of file TLinearFitter.h. ◆ fX. TMatrixD TLinearFitter::fX. private . temporary variable used for num.stability ; Definition at line 175 of file TLinearFitter.h. ◆ fY. TVectorD TLinearFitter::fY. private . Definition at line 172 of file TLinearFitter.h. ◆ fY2. Double_t TLinearFitter::fY2. private . Definition at line 173 of file TLinearFitter.h. ◆ fY2Temp. Double_t TLinearFitter::fY2Temp. private . Definition at line 174 of file TLinearFitter.h. Libraries for TLinearFitter:. [legend]; The documentation for this class was generated from the following files:; math/minuit/inc/TLinearFitter.h; math/minuit/src/TLinearFitter.cxx. TLinearFitter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:55 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearFitter.html:53307,variab,variable,53307,doc/master/classTLinearFitter.html,https://root.cern,https://root.cern/doc/master/classTLinearFitter.html,1,['variab'],['variable']
Modifiability,"ine 2282 of file TProofLite.cxx. ◆ CopyMacroToCache(). Int_t TProofLite::CopyMacroToCache ; (; const char * ; macro, . Int_t ; headerRequired = 0, . TSelector ** ; selector = 0, . Int_t ; opt = 0, . TList * ; wrks = 0 . ). protected . Copy a macro, and its possible associated .h[h] file, to the cache directory, from where the workers can get the file. ; If headerRequired is 1, return -1 in case the header is not found. If headerRequired is 0, try to copy header too. If headerRequired is -1, don't look for header, only copy macro. If the selector pionter is not 0, consider the macro to be a selector and try to load the selector and set it to the pointer. The mask 'opt' is an or of ESendFileOpt: kCpBin (0x8) Retrieve from the cache the binaries associated with the file kCp (0x10) Retrieve the files from the cache Return -1 in case of error, 0 otherwise. ; Definition at line 1593 of file TProofLite.cxx. ◆ CreateSandbox(). Int_t TProofLite::CreateSandbox ; (; ). private . Create the sandbox for this session. ; Definition at line 880 of file TProofLite.cxx. ◆ DeclFileName(). static const char * TProofLite::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 170 of file TProofLite.h. ◆ DrawSelect(). Long64_t TProofLite::DrawSelect ; (; TDSet * ; dset, . const char * ; varexp, . const char * ; selection = """", . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). overridevirtual . Execute the specified drawing action on a data set (TDSet). ; Event- or Entry-lists should be set in the data set object using TDSet::SetEntryList. Returns -1 in case of error or number of selected events otherwise. ; Reimplemented from TProof.; Definition at line 1053 of file TProofLite.cxx. ◆ ExistsDataSet(). Bool_t TProofLite::ExistsDataSet ; (; const char * ; uri). overridevirtual . Returns kTRUE if 'dataset' described by 'uri' exists, kFALSE otherwise. ; Reimplemented from TProof.; Definition at line 20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:50220,sandbox,sandbox,50220,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['sandbox'],['sandbox']
Modifiability,"ine 33 of file TVirtualMagField.h. Public Member Functions;  TGeoUniformMagField ();  Default constructor;. ;  ;  TGeoUniformMagField (Double_t Bx, Double_t By, Double_t Bz);  Default constructor;. ;  ;  ~TGeoUniformMagField () override;  ; void Field (const Double_t *, Double_t *B) override;  ; const Double_t * GetFieldValue () const;  ; TClass * IsA () const override;  ; void SetFieldValue (Double_t Bx, Double_t By, Double_t Bz);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualMagField;  TVirtualMagField ();  ;  TVirtualMagField (const char *name);  ;  ~TVirtualMagField () override;  Destructor. Unregisters the field. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoUniformMagField.html:1402,inherit,inherited,1402,doc/master/classTGeoUniformMagField.html,https://root.cern,https://root.cern/doc/master/classTGeoUniformMagField.html,1,['inherit'],['inherited']
Modifiability,ine 473 of file RuleFitAPI.cxx. Member Data Documentation. ◆ fLogger. MsgLogger TMVA::RuleFitAPI::fLogger. mutableprivate . ! message logger ; Definition at line 193 of file RuleFitAPI.h. ◆ fMethodRuleFit. const MethodRuleFit* TMVA::RuleFitAPI::fMethodRuleFit. private . parent method - set in constructor ; Definition at line 180 of file RuleFitAPI.h. ◆ fModelType. TString TMVA::RuleFitAPI::fModelType. private . model type string ; Definition at line 191 of file RuleFitAPI.h. ◆ fRFIntParms. IntParms TMVA::RuleFitAPI::fRFIntParms. private . integer parameters ; Definition at line 187 of file RuleFitAPI.h. ◆ fRFLx. std::vector<int> TMVA::RuleFitAPI::fRFLx. private . variable selector ; Definition at line 189 of file RuleFitAPI.h. ◆ fRFProgram. ERFProgram TMVA::RuleFitAPI::fRFProgram. private . what to run ; Definition at line 190 of file RuleFitAPI.h. ◆ fRFRealParms. RealParms TMVA::RuleFitAPI::fRFRealParms. private . real parameters ; Definition at line 188 of file RuleFitAPI.h. ◆ fRFVarImp. std::vector<Float_t> TMVA::RuleFitAPI::fRFVarImp. private . variable importances ; Definition at line 184 of file RuleFitAPI.h. ◆ fRFVarImpInd. std::vector<Int_t> TMVA::RuleFitAPI::fRFVarImpInd. private . variable index ; Definition at line 185 of file RuleFitAPI.h. ◆ fRFWorkDir. TString TMVA::RuleFitAPI::fRFWorkDir. private . working directory ; Definition at line 186 of file RuleFitAPI.h. ◆ fRFYhat. std::vector<Float_t> TMVA::RuleFitAPI::fRFYhat. private . score results from test sample ; Definition at line 183 of file RuleFitAPI.h. ◆ fRuleFit. RuleFit* TMVA::RuleFitAPI::fRuleFit. private . non const ptr to RuleFit class in MethodRuleFit ; Definition at line 181 of file RuleFitAPI.h. Libraries for TMVA::RuleFitAPI:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/RuleFitAPI.h; tmva/tmva/src/RuleFitAPI.cxx. TMVARuleFitAPI. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:42 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html:15168,variab,variable,15168,doc/master/classTMVA_1_1RuleFitAPI.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html,2,['variab'],['variable']
Modifiability,"ine 481 of file TUri.cxx. ◆ SetPort(). Bool_t TUri::SetPort ; (; const TString & ; port). Set port component of URI: ; port = *DIGIT. Definition at line 460 of file TUri.cxx. ◆ SetQuery(). Bool_t TUri::SetQuery ; (; const TString & ; query). Set query component of URI: ; query = *( pchar / ""/"" / ""?"" ). Definition at line 298 of file TUri.cxx. ◆ SetRelativePart(). Bool_t TUri::SetRelativePart ; (; const TString & ; relative). Returns kTRUE is string qualifies as relative-part: ; relative-part = ""//"" authority path-abempty; / path-absolute; / path-noscheme; / path-empty. Definition at line 777 of file TUri.cxx. ◆ SetScheme(). Bool_t TUri::SetScheme ; (; const TString & ; scheme). Set scheme component of URI: ; scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). Definition at line 248 of file TUri.cxx. ◆ SetUri(). Bool_t TUri::SetUri ; (; const TString & ; uri). Parse URI and set the member variables accordingly, returns kTRUE if URI validates, and kFALSE otherwise: ; URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ]; hier-part = ""//"" authority path-abempty; / path-absolute; / path-rootless; / path-empty. Definition at line 601 of file TUri.cxx. ◆ SetUserInfo(). Bool_t TUri::SetUserInfo ; (; const TString & ; userinfo). Set userinfo component of URI: ; userinfo = *( unreserved / pct-encoded / sub-delims / "":"" ). Definition at line 405 of file TUri.cxx. ◆ Streamer(). void TUri::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TUri::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 157 of file TUri.h. ◆ Transform(). TUri TUri::Transform ; (; const TUri & ; reference, . const TUri & ; base . ). static . Transform a URI reference into its target URI using given a base URI. ; This is an implementation of the pseudocode in chapter 5.2.2. ; Definition at line 1122 of file TUri.cxx. Friends And Related Symbol Documentation. ◆ operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUri.html:31731,variab,variables,31731,doc/master/classTUri.html,https://root.cern,https://root.cern/doc/master/classTUri.html,1,['variab'],['variables']
Modifiability,ine 60 of file TSpider.h. ◆ fMax. Double_t* TSpider::fMax. private . [fNcols] Maximum value of the variables. ; Definition at line 51 of file TSpider.h. ◆ fMin. Double_t* TSpider::fMin. private . [fNcols] Minimum value of the variables. ; Definition at line 52 of file TSpider.h. ◆ fNcols. UInt_t TSpider::fNcols. private . Number of variables. ; Definition at line 44 of file TSpider.h. ◆ fNentries. Long64_t TSpider::fNentries. private . Number of entries. ; Definition at line 47 of file TSpider.h. ◆ fNx. UInt_t TSpider::fNx. private . Number of horizontal spider plots. ; Definition at line 42 of file TSpider.h. ◆ fNy. UInt_t TSpider::fNy. private . Number of vertical spider plots. ; Definition at line 43 of file TSpider.h. ◆ fPolargram. TGraphPolargram* TSpider::fPolargram. private . Polar graph. ; Definition at line 61 of file TSpider.h. ◆ fPolyList. TList* TSpider::fPolyList. private . Polygons representing the variables. ; Definition at line 62 of file TSpider.h. ◆ fSegmentDisplay. bool TSpider::fSegmentDisplay. private . True if displaying a segment plot. ; Definition at line 68 of file TSpider.h. ◆ fSelect. TTreeFormula* TSpider::fSelect. private . Selection condition. ; Definition at line 63 of file TSpider.h. ◆ fSelector. TSelectorDraw* TSpider::fSelector. private . ! Selector. ; Definition at line 64 of file TSpider.h. ◆ fShowRange. bool TSpider::fShowRange. private . Show range of variables or not. ; Definition at line 69 of file TSpider.h. ◆ fSuperposed. TList* TSpider::fSuperposed. private . Superposed spider plots. ; Definition at line 53 of file TSpider.h. ◆ fTree. TTree* TSpider::fTree. private . Pointer to the TTree to represent. ; Definition at line 54 of file TSpider.h. Libraries for TSpider:. [legend]; The documentation for this class was generated from the following files:; tree/treeviewer/inc/TSpider.h; tree/treeviewer/src/TSpider.cxx. TSpider. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:30 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:33930,variab,variables,33930,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variables']
Modifiability,"ine 608 of file TPluginManager.cxx. ◆ IsA(). TClass * TPluginManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 286 of file TPluginManager.h. ◆ LoadHandlerMacros(). void TPluginManager::LoadHandlerMacros ; (; const char * ; path). private . Load all plugin macros from the specified path/base directory. ; Definition at line 431 of file TPluginManager.cxx. ◆ LoadHandlersFromEnv(). void TPluginManager::LoadHandlersFromEnv ; (; TEnv * ; env). Load plugin handlers specified in config file, like: ; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""TMySQLServer(...)""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""TPgSQLServer(...)""; The + allows the extension of an already defined resource (see TEnv). ; Definition at line 391 of file TPluginManager.cxx. ◆ LoadHandlersFromPluginDirs(). void TPluginManager::LoadHandlersFromPluginDirs ; (; const char * ; base = nullptr). Load plugin handlers specified via macros in a list of plugin directories. ; The $ROOTSYS/etc/plugins is the default top plugin directory specified in $ROOTSYS/etc/system.rootrc. The macros must have names like <BaseClass>/PX0_<PluginClass>.C, e.g. //TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping. If the BaseClass is in a namespace the directory must have the name NameSpace@BaseClass as : is a reserved pathname character on some operating systems. Macros not beginning with 'P' and ending with "".C"" are ignored. If base is specified only plugin macros for that base class are loaded. The macros typically should look like: void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; }; In general these macros should not cause side effects, by changing global ROOT state via, e.g. gSystem calls, etc. However, in specific cases this might be useful, e.g. adding a library search path, adding a specific dependency, check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:18152,plugin,plugin,18152,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,2,['plugin'],['plugin']
Modifiability,"ine 961 of file TProfile3D.cxx. ◆ PutStats(). void TProfile3D::PutStats ; (; Double_t * ; stats). overridevirtual . Replace current statistics with the values in array stats. ; Reimplemented from TH3.; Definition at line 1175 of file TProfile3D.cxx. ◆ Reset(). void TProfile3D::Reset ; (; Option_t * ; option = """"). overridevirtual . Reset contents of a Profile3D histogram. ; Reimplemented from TH3D.; Definition at line 1185 of file TProfile3D.cxx. ◆ RetrieveBinContent(). Double_t TProfile3D::RetrieveBinContent ; (; Int_t ; bin); const. inlineoverrideprotectedvirtual . Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ; Reimplemented from TH3D.; Definition at line 65 of file TProfile3D.h. ◆ SavePrimitive(). void TProfile3D::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitive as a C++ statement(s) on output stream out. ; Note the following restrictions in the code generated:; variable bin size not implemented; SetErrorOption not implemented . Reimplemented from TH1.; Definition at line 1223 of file TProfile3D.cxx. ◆ Scale(). void TProfile3D::Scale ; (; Double_t ; c1 = 1, . Option_t * ; option = """" . ). overridevirtual . Multiply this profile2D by a constant c1. ; this = c1*this; This function uses the services of TProfile3D::Add ; Reimplemented from TH1.; Definition at line 1280 of file TProfile3D.cxx. ◆ SetBinEntries(). void TProfile3D::SetBinEntries ; (; Int_t ; bin, . Double_t ; w . ). virtual . Set the number of entries in bin. ; Definition at line 1288 of file TProfile3D.cxx. ◆ SetBins() [1/7]. void TProfile3D::SetBins ; (; const Int_t * ; nbins, . const Double_t * ; range . ). inlineprotected . Definition at line 50 of file TProfile3D.h. ◆ SetBins() [2/7]. void TProfile3D::SetBins ; (; Int_t ; nbinsx, . Double_t ; xmin, . Double_t ; xmax, . Int_t ; nbinsy, . Double_t ; ymin, . Double_t ; ymax, . Int_t ; nbinsz, . Double_t ; zmin, . Double_t ; zmax . ). ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:98939,variab,variable,98939,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['variab'],['variable']
Modifiability,"ine binding the two needles of the range. ;  ; TPoint * GetSliderPoints (Double_t value);  Return the points to paint the needles at ""value"". ;  ; TPoint * GetSliderPoints (Int_t pos);  Return the points to paint the needle at ""pos"". ;  ; void PaintSlider (Double_t value, bool fill=false);  Paint a slider. ;  . Private Attributes; Double_t fMax;  Max value for the range. ;  ; Double_t fMin;  Min value for the range. ;  ; TParallelCoordSelect * fSelect;  Selection owning the range. ;  ; const Double_t fSize;  Size of the painted range. ;  ; TParallelCoordVar * fVar;  Variable owning the range. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TParallelCoordRange.h>. Inheritance diagram for TParallelCoordRange:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoordRange::EStatusBits. EnumeratorkShowOnPad ; kLiveUpdate . Definition at line 27 of file TParallelCoordRange.h. Constructor & Destructor Documentation. ◆ TParallelCoordRange() [1/2]. TParallelCoordRange::TParallelCoordRange ; (; ). Default constructor. ; Definition at line 36 of file TParallelCoordRange.cxx. ◆ TParallelCoordRange() [2/2]. TParallelCoordRange::TParallelCoordRange ; (; TParallelCoordVar * ; var, . Double_t ; min = 0, . Double_t ; max = 0, . TParallelCoordSelect * ; sel = nullptr . ). Normal constructor. ; Definition at line 57 of file TParallelCoordRange.cxx. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordRange.html:14195,inherit,inherited,14195,doc/master/classTParallelCoordRange.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html,2,['inherit'],['inherited']
Modifiability,"ine c(i)Definition RSha256.hxx:101; RooConstVar.h; RooDataSet.h; RooEffProd.h; RooExponential.h; RooFormulaVar.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooEffProdThe class RooEffProd implements the product of a PDF with an efficiency function.Definition RooEffProd.h:19; RooExponentialExponential PDF.Definition RooExponential.h:22; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf703_effpdfprodDefinition rf703_effpdfprod.py:1; ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(modelEff_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelEff_over_modelEff_Int[t]) fixing normalization",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf703__effpdfprod_8C.html:3809,variab,variable,3809,doc/master/rf703__effpdfprod_8C.html,https://root.cern,https://root.cern/doc/master/rf703__effpdfprod_8C.html,1,['variab'],['variable']
Modifiability,"ine color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TPaveText::fLinesList of labels; Int_tTPaveText::fLongestLength of the longest line; Float_tTPaveText::fMarginText margin; TStringTPave::fNamePave name; Int_tfNpavesNumber of stacked paves; TStringTPave::fOptionPave style; Bool_tTBox::fResizing!True if box is being resized; Int_tTPave::fShadowColorColor of the pave's shadow; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; Double_tTBox::fX1X of 1st point; Double_tTPave::fX1NDCX1 point in NDC coordinates; Double_tTBox::fX2X of 2nd point; Double_tTPave::fX2NDCX2 point in NDC coordinates; Double_tTBox::fY1Y of 1st point; Double_tTPave::fY1NDCY1 point in NDC coordinates; Double_tTBox::fY2Y of 2nd point; Double_tTPave::fY2NDCY2 point in NDC coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPavesText(); Pavestext default constructor. TPavesText(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t npaves = 5, Option_t* option = ""br""); Pavestext normal constructor. The PavesText is by default defined bith bordersize=1 and option =""br"".; option = ""T"" Top frame; option = ""B"" Bottom frame; option = ""R"" Right frame; option = ""L"" Left frame; option = ""NDC"" x1,y1,x2,y2 are given in NDC; option = ""ARC"" corners are rounded. IMPORTANT NOTE:; Because TPave objects (and objects deriving from TPave) have their; master coordinate system in NDC, one cannot use the TBox functions; SetX1,SetY1,SetX2,SetY2 to change the corner coordinates. One should use; instead SetX1NDC, SetY1NDC, SetX2NDC, SetY2NDC. ~TPavesText(); Pavestext default destructor. TPavesText(const TPavesText& pavestext); Pavestext copy constructor. void Draw(Option_t* option = """"); Draw this pavestext with its current attributes. void Paint(Option_t* option = """"); Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPavesText.html:11892,Inherit,Inheritance,11892,root/html532/TPavesText.html,https://root.cern,https://root.cern/root/html532/TPavesText.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ine color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TPaveText::fLinesList of labels; Int_tTPaveText::fLongestLength of the longest line; Float_tTPaveText::fMarginText margin; TStringTPave::fNamePave name; Int_tfNpavesNumber of stacked paves; TStringTPave::fOptionPave style; Bool_tTBox::fResizing!True if box is being resized; Int_tTPave::fShadowColorColor of the pave's shadow; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; Double_tTBox::fX1X of 1st point; Double_tTPave::fX1NDCX1 point in NDC coordinates; Double_tTBox::fX2X of 2nd point; Double_tTPave::fX2NDCX2 point in NDC coordinates; Double_tTBox::fY1Y of 1st point; Double_tTPave::fY1NDCY1 point in NDC coordinates; Double_tTBox::fY2Y of 2nd point; Double_tTPave::fY2NDCY2 point in NDC coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPavesText(); Pavestext default constructor. TPavesText(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t npaves = 5, Option_t* option = ""br""); Pavestext normal constructor. The PavesText is by default defined bith bordersize=1 and option =""br"".; option = ""T"" Top frame; option = ""B"" Bottom frame; option = ""R"" Right frame; option = ""L"" Left frame; option = ""NDC"" x1,y1,x2,y2 are given in NDC; option = ""ARC"" corners are rounded. ~TPavesText(); Pavestext default destructor. TPavesText(const TPavesText& pavestext); Pavestext copy constructor. void Draw(Option_t* option = """"); Draw this pavestext with its current attributes. void Paint(Option_t* option = """"); Paint this pavestext with its current attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. Int_t GetNpaves(); {return fNpaves;}. void SetNpaves(Int_t npaves = 5); {fNpaves=npaves;}. » Author: Rene Brun 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPavesText.html:12531,Inherit,Inheritance,12531,root/html534/TPavesText.html,https://root.cern,https://root.cern/root/html534/TPavesText.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ine color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_tfHistoHeightHistogram Height.; Int_tfHistoLWLine width used to draw the histogram line.; TH1F*fHistogram! Histogram holding the variable distribution.; Int_tfIdId identifying the variable for the editor.; Double_tfMaxCurrentCurrent used maximum.; Double_tfMaxInitMemory of the maximum when first initialized.; Double_tfMeanAverage.; Double_tfMedMedian value (Q2).; Double_tfMinCurrentCurrent used minimum.; Double_tfMinInitMemory of the minimum when first initialized.; Int_tfNbinsNumber of bins in fHistogram.; Long64_tfNentriesNumber of stored entries values.; TParallelCoord*fParallelPointer to the TParallelCoord which owns the TParallelCoordVar.; Double_tfQua1First quantile (Q1).; Double_tfQua3Third quantile (Q3).; TList*fRangesList of the TParallelRange owned by TParallelCoordVar.; Double_t*fVal![fNentries] Entries values for the variable.; Double_tfX1x1 coordinate of the axis.; Double_tfX2x2 coordinate of the axis.; Double_tfY1y1 coordinate of the axis.; Double_tfY2y2 coordinate of the axis. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordVar(); Default constructor. ~TParallelCoordVar(); Destructor. TParallelCoordVar(Double_t* val, const char* title, Int_t id, TParallelCoord* gram); Normal constructor. By default, the title and the name are the expression given to TTree::Draw. The name; can be changed by the user (the label on the plot) but not the title. void AddRange(TParallelCoordRange* range); Add a range to the current selection on the axis. void DeleteVariable(); Delete variables. Int_t DistancetoPrimitive(Int_t px, Int_t py); Computes the distance from the axis. void Draw(Option_t* option = """"); Draw the axis. Bool_t Eval(Long64_t evtidx, TParallelCoordSelect* select); Check if the entry is within the range(s) of ""select"". Two",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordVar.html:9865,variab,variable,9865,root/html530/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html530/TParallelCoordVar.html,9,['variab'],['variable']
Modifiability,"ine selections interactively. A selection is a set of ranges combined together. Within a selection, ranges along the same axis are combined with logical OR, and ranges on different axes with logical AND. A selection is displayed on top of the complete data set using its own color. Only the events fulfilling the selection criteria (ranges) are displayed. Ranges are defined interactively using cursors, like on the first axis on the figure. Several selections can be defined at the same time, each selection having its own color. Selections are set of ranges which can be defined interactively. Several selections can been defined. Each cluster is now clearly visible and the zone with crossing clusters is now understandable whereas, without any selection or with only a single one, it was not easy to understand. Several selections can be defined each of them having its own color. Interactive selections on Parallel Coordinates are a powerful tool because they can be defined graphically on many variables (graphical cuts in ROOT can be defined on two variables only) which allow a very accurate events filtering. Selections allow making precise events choices: a single outlying event is clearly visible when the lines are displayed as “solid” therefore it is easy to make cuts in order to eliminate one single event from a selection. Such selection (to filter one single event) on a scatter plot would be much more difficult. Selections allow to easily filter one single event. Once a selection has been defined, it is possible to use it to generate a TEntryList which is applied on the tree and used at drawing time. In our example the selection we defined allows to select exactly the two correlated “random spheres”. Output of nt->Draw(“x:y:z”) and nt->Draw(“u:v:w”) after applying the selection. Another technique has been implemented in order to show clusters when the picture is cluttered. A weight is assigned to each event. The weight value is computed as: \[; weight = \sum_{i=1}^{n} b_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:615702,variab,variables,615702,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,4,['variab'],['variables']
Modifiability,"ine width used to draw the histogram line.; TH1F*fHistogram! Histogram holding the variable distribution.; Int_tfIdId identifying the variable for the editor.; Double_tfMaxCurrentCurrent used maximum.; Double_tfMaxInitMemory of the maximum when first initialized.; Double_tfMeanAverage.; Double_tfMedMedian value (Q2).; Double_tfMinCurrentCurrent used minimum.; Double_tfMinInitMemory of the minimum when first initialized.; Int_tfNbinsNumber of bins in fHistogram.; Long64_tfNentriesNumber of stored entries values.; TParallelCoord*fParallelPointer to the TParallelCoord which owns the TParallelCoordVar.; Double_tfQua1First quantile (Q1).; Double_tfQua3Third quantile (Q3).; TList*fRangesList of the TParallelRange owned by TParallelCoordVar.; Double_t*fVal![fNentries] Entries values for the variable.; Double_tfX1x1 coordinate of the axis.; Double_tfX2x2 coordinate of the axis.; Double_tfY1y1 coordinate of the axis.; Double_tfY2y2 coordinate of the axis. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordVar(); Default constructor. ~TParallelCoordVar(); Destructor. TParallelCoordVar(Double_t* val, const char* title, Int_t id, TParallelCoord* gram); Normal constructor. By default, the title and the name are the expression given to TTree::Draw. The name; can be changed by the user (the label on the plot) but not the title. void AddRange(TParallelCoordRange* range); Add a range to the current selection on the axis. void DeleteVariable(); Delete variables. Int_t DistancetoPrimitive(Int_t px, Int_t py); Computes the distance from the axis. void Draw(Option_t* option = """"); Draw the axis. Bool_t Eval(Long64_t evtidx, TParallelCoordSelect* select); Check if the entry is within the range(s) of ""select"". Two ranges on a single; axis are conjugated as a ""or"": to be selected, the entry must be in one of; the ranges. void ExecuteEvent(Int_t entry, Int_t px, Int_t py); Execute the corresponding entry. void GetEntryXY(Long64_t n, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParallelCoordVar.html:10045,Inherit,Inheritance,10045,root/html532/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html532/TParallelCoordVar.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ine(""y"", []() { return 1; });; 1413 ; 1414auto count = df2.Count();; 1415 ; 1416// Prints the graph to the rd1.dot file in the current directory; 1417ROOT::RDF::SaveGraph(df, ""./mydot.dot"");; 1418// Prints the graph to standard output; 1419ROOT::RDF::SaveGraph(df);; 1420~~~; 1421 ; 1422The generated graph can be rendered using one of the graphviz filters, e.g. `dot`. For instance, the image below can be generated with the following command:; 1423~~~{.sh}; 1424$ dot -Tpng computation_graph.dot -ocomputation_graph.png; 1425~~~; 1426 ; 1427\image html RDF_Graph2.png; 1428 ; 1429\anchor rdf-logging; 1430### Activating RDataFrame execution logs; 1431 ; 1432RDataFrame has experimental support for verbose logging of the event loop runtimes and other interesting related information. It is activated as follows:; 1433~~~{.cpp}; 1434#include <ROOT/RLogger.hxx>; 1435 ; 1436// this increases RDF's verbosity level as long as the `verbosity` variable is in scope; 1437auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);; 1438~~~; 1439 ; 1440or in Python:; 1441~~~{.python}; 1442import ROOT; 1443 ; 1444verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kInfo); 1445~~~; 1446 ; 1447More information (e.g. start and end of each multi-thread task) is printed using `ELogLevel.kDebug` and even more; 1448(e.g. a full dump of the generated code that RDataFrame just-in-time-compiles) using `ELogLevel.kDebug+10`.; 1449 ; 1450\anchor rdf-from-spec; 1451### Creating an RDataFrame from a dataset specification file; 1452 ; 1453RDataFrame can be created using a dataset specification JSON file: ; 1454 ; 1455~~~{.python}; 1456import ROOT; 1457 ; 1458df = ROOT.RDF.Experimental.FromSpec(""spec.json""); 1459~~~; 1460 ; 1461The input dataset specification JSON file needs to be provided by the user and it describes all necessary samples and; 1462their associated metadata i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:82763,variab,variable,82763,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ine(""y"", []() { return 1; });; 1453 ; 1454auto count = df2.Count();; 1455 ; 1456// Prints the graph to the rd1.dot file in the current directory; 1457ROOT::RDF::SaveGraph(df, ""./mydot.dot"");; 1458// Prints the graph to standard output; 1459ROOT::RDF::SaveGraph(df);; 1460~~~; 1461 ; 1462The generated graph can be rendered using one of the graphviz filters, e.g. `dot`. For instance, the image below can be generated with the following command:; 1463~~~{.sh}; 1464$ dot -Tpng computation_graph.dot -ocomputation_graph.png; 1465~~~; 1466 ; 1467\image html RDF_Graph2.png; 1468 ; 1469\anchor rdf-logging; 1470### Activating RDataFrame execution logs; 1471 ; 1472RDataFrame has experimental support for verbose logging of the event loop runtimes and other interesting related information. It is activated as follows:; 1473~~~{.cpp}; 1474#include <ROOT/RLogger.hxx>; 1475 ; 1476// this increases RDF's verbosity level as long as the `verbosity` variable is in scope; 1477auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);; 1478~~~; 1479 ; 1480or in Python:; 1481~~~{.python}; 1482import ROOT; 1483 ; 1484verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kInfo); 1485~~~; 1486 ; 1487More information (e.g. start and end of each multi-thread task) is printed using `ELogLevel.kDebug` and even more; 1488(e.g. a full dump of the generated code that RDataFrame just-in-time-compiles) using `ELogLevel.kDebug+10`.; 1489 ; 1490\anchor rdf-from-spec; 1491### Creating an RDataFrame from a dataset specification file; 1492 ; 1493RDataFrame can be created using a dataset specification JSON file: ; 1494 ; 1495~~~{.python}; 1496import ROOT; 1497 ; 1498df = ROOT.RDF.Experimental.FromSpec(""spec.json""); 1499~~~; 1500 ; 1501The input dataset specification JSON file needs to be provided by the user and it describes all necessary samples and; 1502their associated metadata i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:84443,variab,variable,84443,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,ine5 Class to create quintic natural splines; TSplinePoly Spline polynomial terms; TSplinePoly3 Third spline polynomial terms; TSplinePoly5 Quintic spline polynomial terms; TStatus Status class; TStdExceptionHandler C++ exception handler; TStopwatch A stopwatch which times real and cpu time; TStorage Storage manager class; TStreamerArtificial StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; TStreamerBase Streamer element of type base class; TStreamerBasicPointer Streamer element for a pointer to a basic type; TStreamerBasicType Streamer element for a basic type; TStreamerElement Base class for one element (data member) to be Streamed; TStreamerInfo Streamer information for one class version; TStreamerInfoActions ; TStreamerInfoActions::TActionSequence ; TStreamerInfoActions::TConfiguration ; TStreamerInfoActions::TConfiguredAction A configured action; TStreamerLoop Streamer element for a pointer to an array of objects; TStreamerObject Streamer element of type object; TStreamerObjectAny Streamer element of type object other than TObject; TStreamerObjectAnyPointer Streamer element of type pointer to a non TObject; TStreamerObjectPointer Streamer element of type pointer to a TObject; TStreamerSTL Streamer element of type STL container; TStreamerSTLstring Streamer element of type C++ string; TStreamerString Streamer element of type TString; TString Basic string class; TStringLong Long string class (more than 255 chars); TStringRef ; TStringToken String tokenizer using PCRE for finding next tokens.; TStyle A collection of all graphics attributes; TStyleDialog Dialog box used by the TStyleManager class; TStyleManager Graphical User Interface for managing styles; TStylePreview Preview window used by the TStyleManager class; TSubString ; TSynapse simple weighted bidirectionnal connection between 2 neurons; TSysEvtHandler ABC for handling system events; TSystem ABC defining a generic interface to the OS; TSystemDirectory A system ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:123711,config,configured,123711,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,1,['config'],['configured']
Modifiability,"ine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfFunctions(); virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGraphAsymmErrors*GetPaintedGraph() const; TH2*GetPaintedHistogram() const; const TH1*GetPassedHistogram() const; TEfficiency::EStatOptionGetStatisticOption() const; virtual const char*TNamed::GetTitle() const; const TH1*GetTotalHistogram() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWeight() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual voidTAttLine::Modify(); static Double_tNormal(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEfficiency.html:25522,Inherit,InheritsFrom,25522,root/html532/TEfficiency.html,https://root.cern,https://root.cern/root/html532/TEfficiency.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfFunctions(); virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGraphAsymmErrors*GetPaintedGraph() const; TH2*GetPaintedHistogram() const; const TH1*GetPassedHistogram() const; TEfficiency::EStatOptionGetStatisticOption() const; virtual const char*TNamed::GetTitle() const; const TH1*GetTotalHistogram() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWeight() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual voidTAttLine::Modify(); static Double_tNormal(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEfficiency.html:25516,Inherit,InheritsFrom,25516,root/html602/TEfficiency.html,https://root.cern,https://root.cern/root/html602/TEfficiency.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph::fMaxSize!Current dimension of arrays fX and fY; Double_tTGraph::fMaximumMaximum value for plotting along y; Double_tTGraph::fMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCurve(); Default constructor. RooCurve(const RooAbsReal& func, RooAbsRealLValue& x, Double_t xlo, Double_t xhi, Int_t xbins, Double_t scaleFactor = 1, const RooArgSet* normVars = 0, Double_t prec = 1e-3, Double_t resolution = 1e-3, Bool_t shiftToZero = kFALSE, RooCurve::WingMode wmode = Extended, Int_t nEvalError = -1, Int_t doEEVal = kFALSE, Double_t eeVal = 0, Bool_t showProgress = kFALSE); Create a 1-dim curve of the value of the specified real-valued expression; as a function of x. Use the optional precision parameter to control; how precisely the smooth curve is rasterized. Use the optional argument set; to specify how the expression should be normalized. Use the optional scale; factor to rescale the expression after normalization.; If shiftToZero is set, the entire curve is shift down to make the lowest; point in of the curve go through zero. RooCurve(const char* name, const char* title, const RooAbsFunc& func, Double_t xlo, Double_t xhi, UInt_t minPoints, Double_t prec = 1e-3, Double_t resolution = 1e-3, Bool_t shiftToZero = kFALSE, RooCurve::WingMode wmode = Extended, Int_t nEvalError = -1, Int_t doEEVal = kFALSE, Double_t eeVal = 0); Create a 1-dim curve of the value of the specified real-valued; expression as a function of x. Use ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCurve.html:18036,Extend,Extended,18036,root/html532/RooCurve.html,https://root.cern,https://root.cern/root/html532/RooCurve.html,2,['Extend'],['Extended']
Modifiability,"ine::fLineWidthline width; Double_tfMarginExtra space (in %) around interpolated area for fHistogram; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tfMaxIterMaximum number of iterations to find Delaunay t>; Double_tfMaximumMaximum value for plotting along z; Double_tfMinimumMinimum value for plotting along z; TStringTNamed::fNameobject identifier; Int_tfNpointsNumber of points in the data set; Int_tfNpxNumber of bins along X in fHistogram; Int_tfNpyNumber of bins along Y in fHistogram; TVirtualHistPainter*fPainter!pointer to histogram painter; Int_tfSize!Real size of fX, fY and fZ; TStringTNamed::fTitleobject title; Double_t*fX[fNpoints]; Double_t*fY[fNpoints] Data set to be plotted; Double_t*fZ[fNpoints]; Double_tfZoutfHistogram bin height for points lying outside the interpolated area. private:. Bool_tfUserHistoTrue when SetHistogram has been called. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph2D(); Graph2D default constructor. TGraph2D(Int_t n, Int_t* x, Int_t* y, Int_t* z); Graph2D constructor with three vectors of ints as input. TGraph2D(Int_t n, Float_t* x, Float_t* y, Float_t* z); Graph2D constructor with three vectors of floats as input. TGraph2D(Int_t n, Double_t* x, Double_t* y, Double_t* z); Graph2D constructor with three vectors of doubles as input. TGraph2D(TH2* h2); Graph2D constructor with a TH2 (h2) as input.; Only the h2's bins within the X and Y axis ranges are used.; Empty bins, recognized when both content and errors are zero, are excluded. TGraph2D(const char* name, const char* title, Int_t n, Double_t* x, Double_t* y, Double_t* z); Graph2D constructor with name, title and three vectors of doubles as input.; name : name of 2D graph (avoid blanks); title : 2D graph title; if title is of the form ""stringt;stringx;stringy;stringz""; the 2D graph title is set to stringt, the x axis title to stringx,; the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraph2D.html:17393,Inherit,Inheritance,17393,root/html532/TGraph2D.html,https://root.cern,https://root.cern/root/html532/TGraph2D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ine; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; TDirectory*RooDirItem::_dir! Associated directory; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; map<std::string,RooAbsData*>RooAbsData::_ownedComponentsOwned external components; static char*_poolBegin! Start of memory pool; static char*_poolCur! Next free slot in memory pool; static char*_poolEnd! End of memory pool ; RooArgSetRooAbsData::_varsDimensions of this data set; RooArgSet_varsNoWgtVars without weight variable ; RooRealVar*_wgtVarPointer to weight variable (if set) ; static RooAbsData::StorageTypeRooAbsData::defaultStorageType; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Clear memoery pool on exit to avoid reported memory leaks. void* operator new(size_t bytes); Overloaded new operator guarantees that all RooDataSets allocated with new; have a unique address, a property that is exploited in several places; in roofit to quickly index contents on normalization set pointers.; The memory pool only allocates space for the class itself. The elements; stored in the set are stored outside the pool. void operator delete(void* ptr); Memory is owned by pool, we need to do nothing to release it. RooDataSet(); Default constructor for persistence. RooDataSet(const char* name, const char* title, const RooArgSet& vars, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg()); Const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataSet.html:17956,Inherit,Inheritance,17956,root/html534/RooDataSet.html,https://root.cern,https://root.cern/root/html534/RooDataSet.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ine; kStandard; kVerbose; kTreeStructure; };. public:. static RooAbsData::StorageTypeRooAbsData::defaultStorageType. protected:. Int_t_arrSizeSize of the weight array; Bool_t*_binValid! Valid bins with current range definition; Double_t*_binv[_arrSize] Bin volume array ; TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; Int_t_curIndexCurrent index; Double_t_curSumW2Current sum of weights^2; Double_t_curVolumeVolume of bin enclosing current coordinate; Double_t_curWeightWeight associated with the current coordinate; Double_t_curWgtErrHiError on weight associated with the current coordinate; Double_t_curWgtErrLoError on weight associated with the current coordinate; TDirectory*RooDirItem::_dir! Associated directory; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; Double_t*_errHi[_arrSize] High-side error on weight array; Double_t*_errLo[_arrSize] Low-side error on weight array; vector<Int_t>_idxMultMultiplier jump table for index calculation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; list<const RooAbsBinning*>_lvbins! List of used binnings associated with lvalues; list<RooAbsLValue*>_lvvars! List of observables casted as RooAbsLValue; static Int_tRooPrintable::_nameLength; map<std::string,RooAbsData*>RooAbsData::_ownedComponentsOwned external components; vector<Double_t>*_pbinv! Partial bin volume array; RooCacheManager<std::vector<Double_t> >_pbinvCacheMgr! Cache manager for arrays of partial bin volumes; TIterator*_realIter! Iterator over realVars; RooArgSet_realVarsReal dimensions of the dataset ; Double_t*_sumw2[_arrSize] Sum of weights^2; RooArgSetRooAbsData::_varsDimensions of this data set; Double_t*_wgt[_arrSize] Weight array; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataHist(); Default constructor. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDataHist.html:17571,variab,variables,17571,root/html532/RooDataHist.html,https://root.cern,https://root.cern/root/html532/RooDataHist.html,6,['variab'],['variables']
Modifiability,"ine;  list of TSQLColumnInfo objects, describing each table column ;  ; TString fUpdateTime;  table creation time ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSQLTableInfo.h>. Inheritance diagram for TSQLTableInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSQLTableInfo() [1/2]. TSQLTableInfo::TSQLTableInfo ; (; ). table update time ; default constructor ; Definition at line 36 of file TSQLTableInfo.cxx. ◆ TSQLTableInfo() [2/2]. TSQLTableInfo::TSQLTableInfo ; (; const char * ; tablename, . TList * ; columns, . const char * ; comment = ""SQL table"", . const char * ; engine = nullptr, . const char * ; create_time = nullptr, . const char * ; update_time = nullptr . ). normal constructor ; Definition at line 48 of file TSQLTableInfo.cxx. ◆ ~TSQLTableInfo(). TSQLTableInfo::~TSQLTableInfo ; (; ). virtual . destructor ; Definition at line 65 of file TSQLTableInfo.cxx. Member Func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLTableInfo.html:11387,inherit,inherited,11387,doc/master/classTSQLTableInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLTableInfo.html,2,['inherit'],['inherited']
Modifiability,"inePoly3 * fPoly = nullptr;  [fNp] Array of polynomial terms ;  ; Double_t fValBeg = 0.;  Initial value of first or second derivative. ;  ; Double_t fValEnd = 0.;  End value of first or second derivative. ;  ;  Protected Attributes inherited from TSpline; Double_t fDelta = -1.;  Distance between equidistant knots. ;  ; TGraph * fGraph = nullptr;  Graph for drawing the knots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline3.html:19926,inherit,inherited,19926,doc/master/classTSpline3.html,https://root.cern,https://root.cern/doc/master/classTSpline3.html,1,['inherit'],['inherited']
Modifiability,"ineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngTausGSLRngTaus(); ROOT::Math::GSLRngTausGSLRngTaus(const ROOT::Math::GSLRngTaus&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngTaus&operator=(const ROOT::Math::GSLRngTaus&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const ROOT::Math::GSLRngTaus& ). Assignment operator : make a deep copy of the contained GSL generator. GSLRngTaus(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngTaus.html:3436,Inherit,Inheritance,3436,root/html534/ROOT__Math__GSLRngTaus.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngTaus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ineStyle (Style_t linestyle) override;  Sets the line style. ;  ; virtual void SetLineType (Int_t n, Int_t *dash);  Sets the line type. ;  ; void SetLineWidth (Width_t width) override;  Sets the line width. ;  ; void SetMarkerColor (Color_t cindex) override;  Sets color index ""cindex"" for markers. ;  ; void SetMarkerSize (Float_t markersize) override;  Sets marker size index. ;  ; void SetMarkerStyle (Style_t markerstyle) override;  Sets marker style. ;  ; void SetTextAlign (Short_t talign=11) override;  Sets the text alignment. ;  ; void SetTextColor (Color_t cindex) override;  Sets the color index ""cindex"" for text. ;  ; void SetTextFont (Font_t fontnumber) override;  Sets the current text font number. ;  ; void SetTextSize (Float_t textsize) override;  Sets the current text size to ""textsize"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGQuartz.html:33606,inherit,inherited,33606,doc/master/classTGQuartz.html,https://root.cern,https://root.cern/doc/master/classTGQuartz.html,1,['inherit'],['inherited']
Modifiability,"ineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjected; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetDepthLocal (Float_t d) override;  This is not needed for functionality as SetDepth(Float_t d) is overriden – but SetDepthLocal() is abstract. ;  ;  Protected Member Functions inherited from TEveTrackList; void FindMomentumLimits (TEveElement *el, Bool_t recurse=kTRUE);  Loop over track elements of argument el and find highest pT and p. ;  ; Double_t RoundMomentumLimit (Double_t x);  Round the momentum limit up to a nice value. ;  ; void SanitizeMinMaxCuts ();  Set Min/Max cuts so that they are within detected limits. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackListProjected.html:36714,inherit,inherited,36714,doc/master/classTEveTrackListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackListProjected.html,1,['inherit'],['inherited']
Modifiability,"ineWidthline width; Double_tfMarginExtra space (in %) around interpolated area for fHistogram; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tfMaxIterMaximum number of iterations to find Delaunay triangles; Double_tfMaximumMaximum value for plotting along z; Double_tfMinimumMinimum value for plotting along z; TStringTNamed::fNameobject identifier; Int_tfNpointsNumber of points in the data set; Int_tfNpxNumber of bins along X in fHistogram; Int_tfNpyNumber of bins along Y in fHistogram; TVirtualHistPainter*fPainter!Pointer to histogram painter; Int_tfSize!Real size of fX, fY and fZ; TStringTNamed::fTitleobject title; Double_t*fX[fNpoints]; Double_t*fY[fNpoints] Data set to be plotted; Double_t*fZ[fNpoints]; Double_tfZoutfHistogram bin height for points lying outside the interpolated area. private:. Bool_tfUserHistoTrue when SetHistogram has been called. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph2D(); Graph2D default constructor. TGraph2D(Int_t n, Int_t* x, Int_t* y, Int_t* z); Graph2D constructor with three vectors of ints as input. TGraph2D(Int_t n, Float_t* x, Float_t* y, Float_t* z); Graph2D constructor with three vectors of floats as input. TGraph2D(Int_t n, Double_t* x, Double_t* y, Double_t* z); Graph2D constructor with three vectors of doubles as input. TGraph2D(TH2* h2); Graph2D constructor with a TH2 (h2) as input.; Only the h2's bins within the X and Y axis ranges are used.; Empty bins, recognized when both content and errors are zero, are excluded. TGraph2D(const char* name, const char* title, Int_t n, Double_t* x, Double_t* y, Double_t* z); Graph2D constructor with name, title and three vectors of doubles as input.; name : name of 2D graph (avoid blanks); title : 2D graph title; if title is of the form ""stringt;stringx;stringy;stringz""; the 2D graph title is set to stringt, the x axis title to stringx,; the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph2D.html:17704,Inherit,Inheritance,17704,root/html534/TGraph2D.html,https://root.cern,https://root.cern/root/html534/TGraph2D.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumiliMinimizer.html:6223,config,configuration,6223,doc/master/classTFumiliMinimizer.html,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html,6,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"ined type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,3,4>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,3,4>MatRepStd<double,3,4>(); ROOT::Math::MatRepStd<double,3,4>MatRepStd<double,3,4>(const ROOT::Math::MatRepStd<double,3,4>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,3,4>&operator=(const ROOT::Math::MatRepStd<double,3,4>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[12]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,3,4>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_3_4_.html:1706,Inherit,Inheritance,1706,root/html534/ROOT__Math__MatRepStd_double_3_4_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_3_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ined type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,4,3>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,4,3>MatRepStd<double,4,3>(); ROOT::Math::MatRepStd<double,4,3>MatRepStd<double,4,3>(const ROOT::Math::MatRepStd<double,4,3>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,4,3>&operator=(const ROOT::Math::MatRepStd<double,4,3>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[12]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,4,3>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_4_3_.html:1706,Inherit,Inheritance,1706,root/html534/ROOT__Math__MatRepStd_double_4_3_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_4_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ined type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,4,4>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(); ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(const ROOT::Math::MatRepStd<double,4,4>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,4,4>&operator=(const ROOT::Math::MatRepStd<double,4,4>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[16]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,4,4>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_4_4_.html:1706,Inherit,Inheritance,1706,root/html534/ROOT__Math__MatRepStd_double_4_4_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_4_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ined type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,5,5>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(); ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(const ROOT::Math::MatRepStd<double,5,5>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,5,5>&operator=(const ROOT::Math::MatRepStd<double,5,5>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[25]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,5,5>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_5_5_.html:1706,Inherit,Inheritance,1706,root/html534/ROOT__Math__MatRepStd_double_5_5_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_5_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ined type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,6,6>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(); ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(const ROOT::Math::MatRepStd<double,6,6>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,6,6>&operator=(const ROOT::Math::MatRepStd<double,6,6>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[36]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,6,6>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_6_6_.html:1706,Inherit,Inheritance,1706,root/html534/ROOT__Math__MatRepStd_double_6_6_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_6_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ined type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,7,7>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,7,7>MatRepStd<double,7,7>(); ROOT::Math::MatRepStd<double,7,7>MatRepStd<double,7,7>(const ROOT::Math::MatRepStd<double,7,7>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,7,7>&operator=(const ROOT::Math::MatRepStd<double,7,7>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[49]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,7,7>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_7_7_.html:1706,Inherit,Inheritance,1706,root/html534/ROOT__Math__MatRepStd_double_7_7_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_7_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ined type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,9,7>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,9,7>MatRepStd<double,9,7>(); ROOT::Math::MatRepStd<double,9,7>MatRepStd<double,9,7>(const ROOT::Math::MatRepStd<double,9,7>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,9,7>&operator=(const ROOT::Math::MatRepStd<double,9,7>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[63]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,9,7>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_9_7_.html:1706,Inherit,Inheritance,1706,root/html534/ROOT__Math__MatRepStd_double_9_7_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_double_9_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ined; kHybrid; kFrequentist; };. private:. RooStats::HypoTestInverter::ECalculatorTypefCalcType; RooStats::HypoTestCalculatorGeneric*fCalculator0pointer to the calculator passed in the constructor; RooStats::HypoTestInverter::auto_ptr<HypoTestCalculatorGeneric>fHC; auto_ptr<TGraphErrors>fLimitPlot! plot of limits; intfMaxToysmaximum number of toys to run ; intfNBins; doublefNumErr; RooStats::HypoTestInverterResult*fResultspointer to the result ; RooRealVar*fScannedVariablepointer to the constrained variable; doublefSize; intfTotalToysRun; boolfUseCLs; intfVerbose; doublefXmax; doublefXmin; static doublefgAbsAccuracy; static stringfgAlgo; static doublefgCLAccuracy; static boolfgCloseProof; static unsigned intfgNToys; static doublefgRelAccuracy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetCloseProof(Bool_t flag); set flag to close proof for every new run. RooRealVar * GetVariableToScan(const RooStats::HypoTestCalculatorGeneric& hc); get the variable to scan; try first with null model if not go to alternate model. void CheckInputModels(const RooStats::HypoTestCalculatorGeneric& hc, const RooRealVar& scanVar); check the model given the given hypotestcalculator. HypoTestInverter(); default constructor (doesn't do anything). HypoTestInverter( HypoTestCalculatorGeneric& hc, RooRealVar* scannedVariable, double size ); Constructor from a HypoTestCalculatorGeneric; The HypoTest calculator must be a FrequentistCalculator or HybridCalculator type; Other type of calculators are not supported.; The calculator must be created before by using the S+B model for the null and; the B model for the alt; If no variable to scan are given they are assumed to be the first variable; from the parameter of interests of the null model. HypoTestInverter( HybridCalculator& hc, RooRealVar* scannedVariable, double size ); Constructor from a reference to a HybridCalculator; The calculator must be created before by using the S+B model for the null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HypoTestInverter.html:5315,variab,variable,5315,root/html530/RooStats__HypoTestInverter.html,https://root.cern,https://root.cern/root/html530/RooStats__HypoTestInverter.html,1,['variab'],['variable']
Modifiability,"ined;  ; ParametricEquation_t fEquation;  ; Bool_t fModified;  ; Painter_t fPainter;  ; Rgl::Range_t fURange;  ; Rgl::Range_t fVRange;  ; Ptr_t fXEquation;  ; Ptr_t fYEquation;  ; Ptr_t fZEquation;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGLParametric.h>. Inheritance diagram for TGLParametricEquation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Painter_t. typedef std::unique_ptr<TGLHistPainter> TGLParametricEquation::Painter_t. private . Definition at line 51 of file TGLParametric.h. ◆ Ptr_t. typedef std::unique_ptr<TF2> TGLParametricEquation::Ptr_t. private . Definition at line 37 of file TGLParametric.h. Constructor & Destructor Documentation. ◆ TGLParametricEquation() [1/3]. TGLParametricEquation::TGLParametricEquation ; (; const TString & ; name, . const TString & ; xFun, . const TString & ; yFun, . const TString & ; zFun, . Double_t ; uMin, . Double_t ; uMax, . Double_t ; vMin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLParametricEquation.html:13078,inherit,inherited,13078,doc/master/classTGLParametricEquation.html,https://root.cern,https://root.cern/doc/master/classTGLParametricEquation.html,2,['inherit'],['inherited']
Modifiability,"ineoverridevirtual . Implements RooAbsArg.; Definition at line 32 of file RooEfficiency.h. ◆ DeclFileName(). static const char * RooEfficiency::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 48 of file RooEfficiency.h. ◆ evaluate(). double RooEfficiency::evaluate ; (; ); const. overrideprotectedvirtual . Calculate the raw value of this p.d.f which is the effFunc value if cat==1 and it is (1-effFunc) if cat==0. ; Implements RooAbsReal.; Definition at line 74 of file RooEfficiency.cxx. ◆ getAnalyticalIntegral(). int RooEfficiency::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 80 of file RooEfficiency.cxx. ◆ IsA(). TClass * RooEfficiency::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 48 of file RooEfficiency.h. ◆ Streamer(). void RooEfficiency::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooEfficiency::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 48 of file RooEfficiency.h. ◆ translate(). void RooEfficiency::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEfficiency.html:77567,config,configuration,77567,doc/master/classRooEfficiency.html,https://root.cern,https://root.cern/doc/master/classRooEfficiency.html,1,['config'],['configuration']
Modifiability,"ineset.CDemonstrates usage of class TEveStraightLineSet ;  lineset.py;  MultiView.CMulti-view (3d, rphi, rhoz) service class using EVE Window Manager ;  overlay_palette.C;  pack.CDemonstrates usage of class TGPack ;  paramlist.CDemonstrates usage of simple configuration via TEveParamList class ;  pointset.CDemonstrates usage of class TEvePointSet ;  projection.CDemonstates usage of automatic 2D projections - class TEveProjectionManager ;  projection_prescale.CDemonstates usage pre-scaling for automatic 2D projections ;  pythia_display.CDemo showing H -> ZZ -> 4 mu generated by Pythia ;  quadset.CDemonstates usage of 2D digit class TEveQuadSet ;  quadset_callback.cxx;  selection_sigs.CTest signals from TEveSelection class ;  show_extract.CHelper script for showing of extracted / simplified geometries ;  SplitGLView.CHelper classes for the alice_esd_split.C demo ;  text.CDemonstrates usage of class TEveText - 2D & 3D text in GL ;  track.CDemonstrates usage of TEveTrackPRopagator with different magnetic field configurations ;  triangleset.CDemonstrates usage of class TEveTriangleSet ;  view3ds.CLoading and display of basic 3DS models ;  window_manager.CDemonstrates usage of EVE window-manager ;  ► fft;  FFT.C This tutorial illustrates the Fast Fourier Transforms interface in ROOT ;  ► fit;  combinedFit.C Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ConfidenceIntervals.C Illustrates TVirtualFitter::GetConfidenceIntervals This method computes confidence intervals for the fitted function ;  ErrorIntegral.C Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit ;  exampleFit3D.C example of fitting a 3D function Typical multidimensional parametric regression where the predictor depends on 3 variables ;  fit1.C Simple fitting example (1-d histogram with an interpreted function) ;  fit2.C Fitting a 2-D histogram This tutorial illustrates : ;  fit2a.C F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:103560,config,configurations,103560,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,4,['config'],['configurations']
Modifiability,"inestatic . Definition at line 631 of file Cpu.h. ◆ RotateWeights(). template<typename AReal = Float_t> . void TMVA::DNN::TCpu< AFloat >::RotateWeights ; (; Matrix_t & ; A, . const Matrix_t & ; B, . size_t ; filterDepth, . size_t ; filterHeight, . size_t ; filterWidth, . size_t ; numFilters . ). static . Rotates the matrix B, which is representing a weights, and stores them in the matrix A. ; Definition at line 273 of file Propagation.hxx. ◆ ScaleAdd() [1/2]. template<typename AReal > . void TMVA::DNN::TCpu< AReal >::ScaleAdd ; (; Matrix_t & ; A, . const Matrix_t & ; B, . Scalar_t ; beta = 1.0 . ). static . Adds a the elements in matrix B scaled by c to the elements in the matrix A. ; This is required for the weight update in the gradient descent step. ; Definition at line 248 of file Arithmetic.hxx. ◆ ScaleAdd() [2/2]. template<typename AReal > . void TMVA::DNN::TCpu< AReal >::ScaleAdd ; (; Tensor_t & ; A, . const Tensor_t & ; B, . Scalar_t ; beta = 1.0 . ). static . Above functions extended to vectors. ; Definition at line 279 of file Arithmetic.hxx. ◆ SetRandomSeed(). template<typename AFloat > . void TMVA::DNN::TCpu< AFloat >::SetRandomSeed ; (; size_t ; seed). static . Definition at line 29 of file Initialization.hxx. ◆ Sigmoid() [1/2]. template<typename AReal = Float_t> . static void TMVA::DNN::TCpu< AReal >::Sigmoid ; (; Matrix_t & ; YHat, . const Matrix_t & ;  . ). static . ◆ Sigmoid() [2/2]. template<typename AReal = Float_t> . static void TMVA::DNN::TCpu< AReal >::Sigmoid ; (; Tensor_t & ; B). static . ◆ SigmoidDerivative(). template<typename AReal = Float_t> . void TMVA::DNN::TCpu< AFloat >::SigmoidDerivative ; (; Tensor_t & ; B, . const Tensor_t & ; A . ). static . Definition at line 90 of file ActivationFunctions.hxx. ◆ Softmax(). template<typename AReal = Float_t> . void TMVA::DNN::TCpu< AFloat >::Softmax ; (; Matrix_t & ; YHat, . const Matrix_t & ;  . ). static . Definition at line 33 of file OutputFunctions.hxx. ◆ SoftmaxCrossEntropy(). template<typen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpu.html:64890,extend,extended,64890,doc/master/classTMVA_1_1DNN_1_1TCpu.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpu.html,1,['extend'],['extended']
Modifiability,"inestatic . ReturnsName of the file containing the class declaration ; Definition at line 199 of file RooFactoryWSTool.h. ◆ errorCount(). Int_t RooFactoryWSTool::errorCount ; (; ). inlineprotected . Definition at line 193 of file RooFactoryWSTool.h. ◆ hooks(). std::map< std::string, RooFactoryWSTool::IFace * > & RooFactoryWSTool::hooks ; (; ). staticprotected . Definition at line 1900 of file RooFactoryWSTool.cxx. ◆ IsA(). TClass * RooFactoryWSTool::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 199 of file RooFactoryWSTool.h. ◆ logError(). void RooFactoryWSTool::logError ; (; ). inline . Definition at line 153 of file RooFactoryWSTool.h. ◆ of(). RooFactoryWSTool * RooFactoryWSTool::of ; (; ). staticprotected . Definition at line 2195 of file RooFactoryWSTool.cxx. ◆ process(). RooAbsArg * RooFactoryWSTool::process ; (; const char * ; expr). Create a RooFit object from the given expression. . Creating variables . x[-10,10] Create variable x with given range and put it in workspace . x[3,-10,10] Create variable x with given range and initial value and put it in workspace . x[3] Create variable x with given constant value . <numeric literal> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>) wherever a RooAbsReal or RooAbsArg argument is expected . Creating categories . c[lep,kao,nt1,nt2] Create category c with given state names . tag[B0=1,B0bar=-1] Create category tag with given state names and index assignments . Creating functions and pdfs . MyPdf::g(x,m,s) Create pdf or function of type MyPdf with name g with argument x,m,s Interpretation and number of arguments are mapped to the constructor arguments of the class (after the name and title). . MyPdf(x,m,s) As above, but with an implicitly defined (unique) object name . Creating sets and lists (to be used as inputs above) . {a,b,c} Create RooArgSet or RooArgList (as determined by context) from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFactoryWSTool.html:32652,variab,variables,32652,doc/master/classRooFactoryWSTool.html,https://root.cern,https://root.cern/doc/master/classRooFactoryWSTool.html,1,['variab'],['variables']
Modifiability,"inewidth=1) override;  Set the lines width. ;  ; void SetMarkerColor (Color_t cindex=1) override;  Set color index for markers. ;  ; void SetTextColor (Color_t cindex=1) override;  Set color index for text. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Text (Double_t x, Double_t y, const char *string) override;  Draw text. ;  ; void Text (Double_t, Double_t, const wchar_t *) override;  ; void TextNDC (Double_t u, Double_t v, const char *string);  Write a string of characters in NDC. ;  ; void TextNDC (Double_t, Double_t, const wchar_t *);  ; Double_t UtoSVG (Double_t u);  Convert U from NDC coordinate to SVG. ;  ; Double_t VtoSVG (Double_t v);  Convert V from NDC coordinate to SVG. ;  ; Double_t XtoSVG (Double_t x);  Convert X from world coordinate to SVG. ;  ; Double_t YtoSVG (Double_t y);  Convert Y from world coordinate to SVG. ;  ;  Public Member Functions inherited from TVirtualPS;  TVirtualPS ();  VirtualPS default constructor. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; TClass * IsA () const override;  ; virtual void PrintFast (Int_t nch, const char *string="""");  Fast version of Print. ;  ; virtual void PrintRaw (Int_t len, const char *str);  Print a raw. ;  ; virtual void PrintStr (const char *string="""");  Output the string str in the output buffer. ;  ; virtual void SetStream (std::ofstream *os);  ; virtual void SetType (Int_t=-111);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void WriteInteger (Int_t i, Bool_t space=kTRUE);  Write one Integer to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Functions inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSVG.html:5702,inherit,inherited,5702,doc/master/classTSVG.html,https://root.cern,https://root.cern/doc/master/classTSVG.html,1,['inherit'],['inherited']
Modifiability,"information. More...;  ; class  TreeInfo;  ; class  TSpline1;  Linear interpolation of TGraph. More...;  ; class  TSpline2;  Quadratic interpolation of TGraph. More...;  ; class  TSynapse;  Synapse class used by TMVA artificial neural network methods. More...;  ; struct  TTrainingSettings;  All of the options that can be specified in the training string. More...;  ; class  Types;  Singleton class for Global types used by TMVA. More...;  ; class  VariableDecorrTransform;  Linear interpolation class. More...;  ; class  VariableGaussTransform;  Gaussian Transformation of input variables. More...;  ; class  VariableIdentityTransform;  Linear interpolation class. More...;  ; class  VariableImportance;  ; class  VariableImportanceResult;  ; class  VariableInfo;  Class for type info of MVA input variable. More...;  ; class  VariableNormalizeTransform;  Linear interpolation class. More...;  ; class  VariablePCATransform;  Linear interpolation class. More...;  ; class  VariableRearrangeTransform;  Rearrangement of input variables. More...;  ; class  VariableTransformBase;  Linear interpolation class. More...;  ; class  VarTransformHandler;  ; class  Volume;  Volume for BinarySearchTree. More...;  . Functions; void ActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; void annconvergencetest (TString dataset, TDirectory *lhdir);  ; void annconvergencetest (TString dataset, TString fin=""TMVA.root"", Bool_t useTMVAStyle=kTRUE);  ; void BDT (TString dataset, const TString &fin=""TMVA.root"");  ; void BDT (TString dataset, Int_t itree, TString wfile, TString methName=""BDT"", Bool_t useTMVAStyle=kTRUE);  ; void BDT_DeleteTBar (int i);  ; void BDT_Reg (TString dataset, const TString &fin=""TMVAReg.root"");  ; void BDT_Reg (TString dataset, Int_t itree, TString wfile="""", TString methName=""BDT"", Bool_t useTMVAStyle=kTRUE);  ; void bdtcontrolplots (TString dataset, TDirectory *);  ; void BD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMVA.html:14804,variab,variables,14804,doc/master/namespaceTMVA.html,https://root.cern,https://root.cern/doc/master/namespaceTMVA.html,2,['variab'],['variables']
Modifiability,"infos or file itself; keys for that objects should exist in tables but not indicated in list of keys,; therefore users can not get them with TDirectoryFile::Get() method. TObject* ReadSpecialObject(Long64_t keyid, TObject* obj = 0); Read data of special kind of objects. TList* GetStreamerInfoList(); Read back streamer infos from database; List of streamer infos is always stored with key:id 0,; which is not shown in normal keys list. void SaveToDatabase(); save data which is not yet in Database; Typically this is streamerinfos structures or. Int_t StreamKeysForDirectory(TDirectory* dir, Bool_t doupdate, Long64_t specialkeyid = -1, TKeySQL** specialkey = 0); read keys for specified directory (when update == kFALSE); or update value for modified keys when update == kTRUE; Returns number of successfully read keys or -1 if error. void InitSqlDatabase(Bool_t create); initialize sql database and correspondent structures; identical to TFile::Init() function. Bool_t ReadConfigurations(); read table configurations as special table. void CreateBasicTables(); Creates initial tables in database; This is table with configurations and table with keys; Function called once when first object is stored to the file. void IncrementModifyCounter(); Update value of modify counter in config table; Modify counter used to indicate that something was changed in database.; It will be used when multiple instances of TSQLFile for the same data base; will be connected. TString MakeSelectQuery(TClass* cl); Produce SELECT statement which can be used to get all data; of class cl in one SELECT statement; This statement also can be used to create VIEW by command like; mysql> CREATE VIEW TH1I_view AS $CLASSSELECT$; Where $CLASSSELECT$ argument should be produced by call; f->MakeSelectQuery(TH1I::Class());; VIEWs supported by latest MySQL 5 and Oracle. Bool_t ProduceClassSelectQuery(TVirtualStreamerInfo* info, TSQLClassInfo* sqlinfo, TString& columns, TString& tables, Int_t& tablecnt); used by MakeClass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLFile.html:40221,config,configurations,40221,root/html534/TSQLFile.html,https://root.cern,https://root.cern/root/html534/TSQLFile.html,6,['config'],['configurations']
Modifiability,"ing ();  no ranking ;  ; virtual const std::vector< Float_t > & GetMulticlassValues ();  returns the mva values of the multi-class right sub-classifier ;  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  returns the mva value of the right sub-classifier ;  ; virtual const std::vector< Float_t > & GetRegressionValues ();  returns the mva value of the right sub-classifier ;  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t);  check whether method category has analysis type the method type has to be the same for all sub-methods ;  ; virtual TClass * IsA () const;  ; virtual void MakeClass (const TString &=TString("""")) const;  create reader class for method (classification only at present) ;  ; void ReadWeightsFromXML (void *wghtnode);  read weights of sub-classifiers of MethodCategory from xml weight file ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Train (void);  train all sub-classifiers ;  ;  Public Member Functions inherited from TMVA::MethodCompositeBase;  MethodCompositeBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  ;  MethodCompositeBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  ; virtual ~MethodCompositeBase (void);  delete methods ;  ; void AddWeightsXMLTo (void *parent) const;  ; Double_t GetMvaValue (const TMVA::Event *const ev, Double_t *err=nullptr, Double_t *errUpper=nullptr);  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  return composite MVA response ;  ; virtual Double_t GetMvaValue (Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  text streamer ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  XML streamer.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html:2428,inherit,inherited,2428,doc/master/classTMVA_1_1MethodCategory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html,1,['inherit'],['inherited']
Modifiability,"ing ();  return setup values as string ;  ; EXMLLayout GetXmlLayout () const;  ; Bool_t IsStoreStreamerInfos () const;  ; Bool_t IsUseDtd () const;  ; Bool_t IsUseNamespaces () const;  ; TXMLSetup & operator= (const TXMLSetup &rhs);  assign operator ;  ; void PrintSetup ();  show setup values ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const char * XmlClassNameSpaceRef (const TClass *cl);  produce string which used as reference in class namespace definition ;  ; const char * XmlConvertClassName (const char *name);  convert class name to exclude any special symbols like ':', '<' '>' ',' and spaces ;  ; const char * XmlGetElementName (const TStreamerElement *el);  return converted name for TStreamerElement ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  counter of created keys, used for keys id ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:26841,inherit,inherited,26841,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['inherit'],['inherited']
Modifiability,"ing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and 'mode'. ;  ; TQueryResult * GetQueryResult (const char *ref=0);  Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ;  ; TList * GetQueryResults ();  Return pointer to the list of query results in the player. ;  ; Int_t GetRC (const char *RCenv, Double_t &env, const char *ord=""0"");  Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, Int_t &env, const char *ord=""0"");  Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, TString &env, const char *ord=""0"");  Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ;  ; Float_t GetRealTime () const;  ; Int_t GetRemoteProtocol () const;  ; ERunStatus GetRunStatus () const;  ; Int_t GetSeqNum () const;  ; Int_t GetSessionID () const;  ; const char * GetSessionTag () const;  ; virtual TFileCollection * GetStagingStatusDataSet (const char *dataset);  Obtains a TFileCollection showing the staging status of the specified dataset. ;  ; void GetStatistics (Bool_t verbose=kFALSE);  Get statistics about CPU time, real time and bytes read. ;  ; Int_t GetStatus () const;  ; virtual TTree * GetTreeHeader (TDSet *tdset);  Creates a tree header (a tree with nonexisting files) object for the DataSet. ;  ; const char * GetUrl ();  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; void GoAsynchronous ();  Send GOASYNC message to the master. ;  ; Bool_t IsDataReady (Long64_t &totalbytes, Long64_t &bytesready);  See if the data is ready to be analyzed. ;  ; Bool_t IsFol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofCondor.html:9787,variab,variable,9787,doc/master/classTProofCondor.html,https://root.cern,https://root.cern/doc/master/classTProofCondor.html,2,['variab'],['variable']
Modifiability,"ing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and 'mode'. ;  ; TQueryResult * GetQueryResult (const char *ref=0);  Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ;  ; TList * GetQueryResults ();  Return pointer to the list of query results in the player. ;  ; Int_t GetRC (const char *RCenv, Double_t &env, const char *ord=""0"");  Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, Int_t &env, const char *ord=""0"");  Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, TString &env, const char *ord=""0"");  Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ;  ; Float_t GetRealTime () const;  ; Int_t GetRemoteProtocol () const;  ; ERunStatus GetRunStatus () const;  ; Int_t GetSeqNum () const;  ; Int_t GetSessionID () const;  ; const char * GetSessionTag () const;  ; virtual TFileCollection * GetStagingStatusDataSet (const char *dataset);  Obtains a TFileCollection showing the staging status of the specified dataset. ;  ; void GetStatistics (Bool_t verbose=kFALSE);  Get statistics about CPU time, real time and bytes read. ;  ; Int_t GetStatus () const;  ; virtual TTree * GetTreeHeader (TDSet *tdset);  Creates a tree header (a tree with nonexisting files) object for the DataSet. ;  ; const char * GetUrl ();  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; void GoAsynchronous ();  Send GOASYNC message to the master. ;  ; TClass * IsA () const override;  ; Bool_t IsDataReady (Long64_t &totalbytes, Long64_t &bytesready);  See if the data is read",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:11300,variab,variable,11300,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['variab'],['variable']
Modifiability,"ing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Returns number of slaves active in parallel mode. ;  ; TObject * GetParameter (const char *par) const;  Get specified parameter. ;  ; Int_t GetPort () const;  ; EQueryMode GetQueryMode (Option_t *mode=0) const;  Find out the query mode based on the current setting and 'mode'. ;  ; TQueryResult * GetQueryResult (const char *ref=0);  Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ;  ; TList * GetQueryResults ();  Return pointer to the list of query results in the player. ;  ; Int_t GetRC (const char *RCenv, Double_t &env, const char *ord=""0"");  Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, Int_t &env, const char *ord=""0"");  Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ;  ; Int_t GetRC (const char *RCenv, TString &env, const char *ord=""0"");  Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ;  ; Float_t GetRealTime () const;  ; Int_t GetRemoteProtocol () const;  ; ERunStatus GetRunStatus () const;  ; Int_t GetSeqNum () const;  ; Int_t GetSessionID () const;  ; const char * GetSessionTag () const;  ; void GetStatistics (Bool_t verbose=kFALSE);  Get statistics about CPU time, real time and bytes read. ;  ; Int_t GetStatus () const;  ; const char * GetUrl ();  ; const char * GetUser () const;  ; const char * GetWorkDir () const;  ; void GoAsynchronous ();  Send GOASYNC message to the master. ;  ; Bool_t IsDataReady (Long64_t &totalbytes, Long64_t &bytesready);  See if the data is ready to be analyzed. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsIdle () const;  ; Bool_t IsLite () const;  ; Bool_t IsMaster () const;  ; Bool_t IsParallel () const;  ; Bool_t IsProofd () const;  ; Bool_t IsTty ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:13384,variab,variable,13384,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['variab'],['variable']
Modifiability,"ing = mg_get_header(conn, ""Accept-Encoding"")) != NULL) {; 7493 if (strstr(accept_encoding, ""gzip"") != NULL) {; 7494 conn->accept_gzip = 1;; 7495 }; 7496 }; 7497 ; 7498#if !defined(NO_FILES); 7499 /* Step 5: If there is no root directory, don't look for files. */; 7500 /* Note that root == NULL is a regular use case here. This occurs,; 7501 * if all requests are handled by callbacks, so the WEBSOCKET_ROOT; 7502 * config is not required. */; 7503 if (root == NULL) {; 7504 /* all file related outputs have already been set to 0, just return; 7505 */; 7506 return;; 7507 }; 7508 ; 7509 /* Step 6: Determine the local file path from the root path and the; 7510 * request uri. */; 7511 /* Using filename_buf_len - 1 because memmove() for PATH_INFO may shift; 7512 * part of the path one byte on the right. */; 7513 truncated = 0;; 7514 mg_snprintf(; 7515 conn, &truncated, filename, filename_buf_len - 1, ""%s%s"", root, uri);; 7516 ; 7517 if (truncated) {; 7518 goto interpret_cleanup;; 7519 }; 7520 ; 7521 /* Step 7: URI rewriting */; 7522 rewrite = conn->dom_ctx->config[URL_REWRITE_PATTERN];; 7523 while ((rewrite = next_option(rewrite, &a, &b)) != NULL) {; 7524 if ((match_len = match_prefix(a.ptr, a.len, uri)) > 0) {; 7525 mg_snprintf(conn,; 7526 &truncated,; 7527 filename,; 7528 filename_buf_len - 1,; 7529 ""%.*s%s"",; 7530 (int)b.len,; 7531 b.ptr,; 7532 uri + match_len);; 7533 break;; 7534 }; 7535 }; 7536 ; 7537 if (truncated) {; 7538 goto interpret_cleanup;; 7539 }; 7540 ; 7541 /* Step 8: Check if the file exists at the server */; 7542 /* Local file path and name, corresponding to requested URI; 7543 * is now stored in ""filename"" variable. */; 7544 if (mg_stat(conn, filename, filestat)) {; 7545 int uri_len = (int)strlen(uri);; 7546 int is_uri_end_slash = (uri_len > 0) && (uri[uri_len - 1] == '/');; 7547 ; 7548 /* 8.1: File exists. */; 7549 *is_found = 1;; 7550 ; 7551 /* 8.2: Check if it is a script type. */; 7552 if (extention_matches_script(conn, filename)) {; 7553 /* The request",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:216455,rewrite,rewrite,216455,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,4,"['config', 'rewrite']","['config', 'rewrite']"
Modifiability,"ing = mg_get_header(conn, ""Accept-Encoding"")) != NULL) {; 7494 if (strstr(accept_encoding, ""gzip"") != NULL) {; 7495 conn->accept_gzip = 1;; 7496 }; 7497 }; 7498 ; 7499#if !defined(NO_FILES); 7500 /* Step 5: If there is no root directory, don't look for files. */; 7501 /* Note that root == NULL is a regular use case here. This occurs,; 7502 * if all requests are handled by callbacks, so the WEBSOCKET_ROOT; 7503 * config is not required. */; 7504 if (root == NULL) {; 7505 /* all file related outputs have already been set to 0, just return; 7506 */; 7507 return;; 7508 }; 7509 ; 7510 /* Step 6: Determine the local file path from the root path and the; 7511 * request uri. */; 7512 /* Using filename_buf_len - 1 because memmove() for PATH_INFO may shift; 7513 * part of the path one byte on the right. */; 7514 truncated = 0;; 7515 mg_snprintf(; 7516 conn, &truncated, filename, filename_buf_len - 1, ""%s%s"", root, uri);; 7517 ; 7518 if (truncated) {; 7519 goto interpret_cleanup;; 7520 }; 7521 ; 7522 /* Step 7: URI rewriting */; 7523 rewrite = conn->dom_ctx->config[URL_REWRITE_PATTERN];; 7524 while ((rewrite = next_option(rewrite, &a, &b)) != NULL) {; 7525 if ((match_len = match_prefix(a.ptr, a.len, uri)) > 0) {; 7526 mg_snprintf(conn,; 7527 &truncated,; 7528 filename,; 7529 filename_buf_len - 1,; 7530 ""%.*s%s"",; 7531 (int)b.len,; 7532 b.ptr,; 7533 uri + match_len);; 7534 break;; 7535 }; 7536 }; 7537 ; 7538 if (truncated) {; 7539 goto interpret_cleanup;; 7540 }; 7541 ; 7542 /* Step 8: Check if the file exists at the server */; 7543 /* Local file path and name, corresponding to requested URI; 7544 * is now stored in ""filename"" variable. */; 7545 if (mg_stat(conn, filename, filestat)) {; 7546 int uri_len = (int)strlen(uri);; 7547 int is_uri_end_slash = (uri_len > 0) && (uri[uri_len - 1] == '/');; 7548 ; 7549 /* 8.1: File exists. */; 7550 *is_found = 1;; 7551 ; 7552 /* 8.2: Check if it is a script type. */; 7553 if (extention_matches_script(conn, filename)) {; 7554 /* The request",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:216487,rewrite,rewrite,216487,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,4,"['config', 'rewrite']","['config', 'rewrite']"
Modifiability,"ing > &, const TString titleVars, const TString titleValues, MsgLogger &logger, TString format=""%+1.3f"");  formatted output of simple table ;  ; void FormattedOutput (const TMatrixD &, const std::vector< TString > &, MsgLogger &logger);  formatted output of matrix (with labels) ;  ; void FormattedOutput (const TMatrixD &, const std::vector< TString > &vert, const std::vector< TString > &horiz, MsgLogger &logger);  formatted output of matrix (with labels) ;  ; void * GetChild (void *parent, const char *childname=nullptr);  get child node ;  ; const char * GetContent (void *node);  XML helpers. ;  ; const TMatrixD * GetCorrelationMatrix (const TMatrixD *covMat);  turns covariance into correlation matrix ;  ; Double_t GetCorrelationRatio (const TH2F &);  Compute Correlation Ratio of 2D histogram to estimate functional dependency between two variables Author: Moritz Backes, Geneva (2009) ;  ; TH1 * GetCumulativeDist (TH1 *h);  get the cumulative distribution of a histogram ;  ; Int_t GetIndexMaxElement (std::vector< Double_t > &);  find index of maximum entry in vector ;  ; Int_t GetIndexMinElement (std::vector< Double_t > &);  find index of minimum entry in vector ;  ; Double_t GetMutualInformation (const TH2F &);  Mutual Information method for non-linear correlations estimates in 2D histogram Author: Moritz Backes, Geneva (2009) ;  ; const char * GetName (void *node);  XML helpers. ;  ; void * GetNextChild (void *prevchild, const char *childname=nullptr);  XML helpers. ;  ; void * GetParent (void *child);  get parent node ;  ; Double_t GetSeparation (const PDF &pdfS, const PDF &pdfB) const;  compute ""separation"" defined as ;  ; Double_t GetSeparation (TH1 *S, TH1 *B) const;  compute ""separation"" defined as ;  ; TMatrixD * GetSQRootMatrix (TMatrixDSym *symMat);  square-root of symmetric matrix of course the resulting sqrtMat is also symmetric, but it's easier to treat it as a general matrix ;  ; TString GetXTitleWithUnit (const TString &title, const TString &unit);  his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Tools.html:3502,variab,variables,3502,doc/master/classTMVA_1_1Tools.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Tools.html,1,['variab'],['variables']
Modifiability,"ing > TMVA::TMVAGlob::GetClassNames ; (; TDirectory * ; dir). Definition at line 469 of file tmvaglob.cxx. ◆ GetCorrelationPlotsDir(). TDirectory * TMVA::TMVAGlob::GetCorrelationPlotsDir ; (; TMVAGlob::TypeOfPlot ; type, . TDirectory * ; dir = nullptr . ). Definition at line 725 of file tmvaglob.cxx. ◆ getFrameFill(). Int_t TMVA::TMVAGlob::getFrameFill ; (; ). inline . Definition at line 45 of file tmvaglob.h. ◆ GetInputVariableNames(). std::vector< TString > TMVA::TMVAGlob::GetInputVariableNames ; (; TDirectory * ; dir). Definition at line 436 of file tmvaglob.cxx. ◆ GetInputVariablesDir(). TDirectory * TMVA::TMVAGlob::GetInputVariablesDir ; (; TMVAGlob::TypeOfPlot ; type, . TDirectory * ; dir = nullptr . ). Definition at line 707 of file tmvaglob.cxx. ◆ GetListOfJobs(). UInt_t TMVA::TMVAGlob::GetListOfJobs ; (; TFile * ; file, . TList & ; jobdirs . ). Definition at line 615 of file tmvaglob.cxx. ◆ GetListOfKeys(). UInt_t TMVA::TMVAGlob::GetListOfKeys ; (; TList & ; keys, . TString ; inherits, . TDirectory * ; dir = nullptr . ). Definition at line 382 of file tmvaglob.cxx. ◆ GetListOfMethods(). UInt_t TMVA::TMVAGlob::GetListOfMethods ; (; TList & ; methods, . TDirectory * ; dir = nullptr . ). Definition at line 590 of file tmvaglob.cxx. ◆ GetListOfTitles() [1/2]. UInt_t TMVA::TMVAGlob::GetListOfTitles ; (; TDirectory * ; rfdir, . TList & ; titles . ). Definition at line 643 of file tmvaglob.cxx. ◆ GetListOfTitles() [2/2]. UInt_t TMVA::TMVAGlob::GetListOfTitles ; (; TString & ; methodName, . TList & ; titles, . TDirectory * ; dir = nullptr . ). Definition at line 670 of file tmvaglob.cxx. ◆ GetMethodName() [1/2]. void TMVA::TMVAGlob::GetMethodName ; (; TString & ; name, . TDirectory * ; mdir . ). Definition at line 353 of file tmvaglob.cxx. ◆ GetMethodName() [2/2]. void TMVA::TMVAGlob::GetMethodName ; (; TString & ; name, . TKey * ; mkey . ). Definition at line 342 of file tmvaglob.cxx. ◆ GetMethodTitle() [1/2]. void TMVA::TMVAGlob::GetMethodTitle ; (; TString & ; n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMVA_1_1TMVAGlob.html:4553,inherit,inherits,4553,doc/master/namespaceTMVA_1_1TMVAGlob.html,https://root.cern,https://root.cern/doc/master/namespaceTMVA_1_1TMVAGlob.html,1,['inherit'],['inherits']
Modifiability,"ing GSL numerical derivation. The class contains a pointer to the fit method function and an index specifying the i-th residual and wraps it in a multi-dim gradient function interface ROOT::Math::IGradientFunctionMultiDim. The class is used by ROOT::Math::GSLNLSMinimizer (GSL non linear least square fitter) ; Definition at line 135 of file GSLNLSMinimizer.cxx. Public Member Functions;  LSResidualFunc ();  ;  LSResidualFunc (const Func &func, unsigned int i);  ;  LSResidualFunc (const LSResidualFunc< Func > &rhs);  ; IMultiGenFunction * Clone () const override;  Clone a function. ;  ; void FdF (const double *x, double &f, double *g) const override;  ; void Gradient (const double *x, double *g) const override;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; LSResidualFunc< Func > & operator= (const LSResidualFunc< Func > &rhs);  ;  Public Member Functions inherited from ROOT::Math::IGradientFunctionMultiDimTempl< T >; T Derivative (const T *x, unsigned int icoord, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the derivative algorithm will use information from the previous step, these can be passed in with this overload. ;  ; T Derivative (const T *x, unsigned int icoord=0) const;  Return the partial derivative with respect to the passed coordinate. ;  ; virtual void FdF (const T *x, T &f, T *df) const;  Optimized method to evaluate at the same time the function value and derivative at a point x. ;  ; virtual void Gradient (const T *x, T *grad) const;  Evaluate all the vector of function derivatives (gradient) at a point x. ;  ; virtual void GradientWithPrevResult (const T *x, T *grad, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the gradient algorithm will use information from the previous step, these can be passed in with this overload. ;  ; bool HasGradient () const;  ; virtual bool returnsInMinuit2ParameterSpace () const;  ;  Public Member Functions inherited from ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1LSResidualFunc.html:1559,inherit,inherited,1559,doc/master/classROOT_1_1Math_1_1LSResidualFunc.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1LSResidualFunc.html,1,['inherit'],['inherited']
Modifiability,"ing GetMethodTypeFromFile(const TString &filename)read the method type from the fileDefinition Reader.cxx:337; TMVA::Reader::fDataSetManagerDataSetManager * fDataSetManagerDefinition Reader.h:128; TMVA::Reader::fDataSetInfoDataSetInfo fDataSetInfoDefinition Reader.h:136; TMVA::Reader::BookMVAIMethod * BookMVA(const TString &methodTag, const TString &weightfile)read method name from weight fileDefinition Reader.cxx:368; TMVA::Reader::ReaderReader(const TString &theOption="""", Bool_t verbose=0)constructorDefinition Reader.cxx:123; TMVA::Reader::EvaluateMulticlassconst std::vector< Float_t > & EvaluateMulticlass(const TString &methodTag, Double_t aux=0)evaluates MVA for given set of input variablesDefinition Reader.cxx:630; TMVA::Reader::fDataInputHandlerDataInputHandler fDataInputHandlerDefinition Reader.h:138; TMVA::Reader::DecodeVarNamesvoid DecodeVarNames(const std::string &varNames)decodes ""name1:name2:..."" formDefinition Reader.cxx:772; TMVA::Reader::DeclareOptionsvoid DeclareOptions()declaration of configuration optionsDefinition Reader.cxx:264; TMVA::Reader::AddSpectatorvoid AddSpectator(const TString &expression, Float_t *)Add a float spectator or expression to the reader.Definition Reader.cxx:321; TMVA::Reader::AddVariablevoid AddVariable(const TString &expression, Float_t *)Add a float variable or expression to the reader.Definition Reader.cxx:303; TMVA::Reader::~Readervirtual ~Reader(void)destructorDefinition Reader.cxx:277; TMVA::Reader::fLoggerMsgLogger * fLogger! message loggerDefinition Reader.h:161; TMVA::Reader::DataInfoconst DataSetInfo & DataInfo() constDefinition Reader.h:117; TMVA::Tools::xmlengineTXMLEngine & xmlengine()Definition Tools.h:262; TMVA::Tools::ReadAttrvoid ReadAttr(void *node, const char *, T &value)read attribute from xmlDefinition Tools.h:329; TMVA::Types::Instancestatic Types & Instance()The single instance of ""Types"" if existing already, or create it (Singleton)Definition Types.cxx:70; TMVA::Types::EMVAEMVADefinition Types.h:76; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:39937,config,configuration,39937,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ing HTTP as the transport protocol.; The 'options' argument can contain 'NOPROXY' if you want to bypass the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived object, the URL of the web proxy can be specified by setting an environmental variable 'http_proxy'. If this variable is set, we ask that proxy to route our requests HTTP(S) requests to the file server.; In addition, you can also use the 'options' argument to provide the access key and secret key to be used for authentication purposes for this file by using a string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to open several files hosted by different providers in the same program/macro, where the environemntal variables solution is not convenient (see below).; To use AWS temporary security credentials you need to specify the session token. This can be added to the options argument with a string of the form TOKEN=mySessionToken. The temporary access and secret keys must also be available, either via the AUTH option or by environmental variable.; If you need to specify more than one option separate them by ' ' (blank), for instance: ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; Examples: TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; TFile* f3 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""TOKEN=AQoDYXdzEM///////////wEa8AHEYmCinjD+TsGEjtgKSMAT6wnY"");; If there is no authentication information in the 'options' argument (i.e. not AUTH=""...."") the values of the environmental variables S3_ACCESS_KEY and S3_SECRET_KEY (if set) are expected to contain the access key id and the secret access key, respectively. You have been provided with these credentials by your S3 service provid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:50127,variab,variable,50127,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['variab'],['variable']
Modifiability,"ing a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList or a TEntryList. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has the form >>elist , a TEventList object named ""elist""; is created in the current directory. elist will contain the list; of entry numbers satisfying the current selection.; If option ""entrylist"" is used, a TEntryList object is created; Example:; tree.Draw("">>yplus"",""y>0""); will create a TEventList object named ""yplus"" in the current directory.; In an interactive session, one can type (after TTree::Draw); yplus.Print(""all""); to print the list of entry numbers in the list.; tree.Draw("">>yplus"", ""y>0"", ""entrylist""); will create a TEntryList object names ""yplus"" in the current directory. By default, the specified entry list is reset.; To contin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:79966,variab,variables,79966,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,1,['variab'],['variables']
Modifiability,"ing a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has the form >>elist , a TEventList object named ""elist""; is created in the current directory. elist will contain the list; of entry numbers satisfying the current selection.; If option ""entrylist"" is used, a TEntryList object is created; If the selection contains arrays, vectors or any container class and option; ""entrylistarray"" is used, a TEntryListArray object is created; containing also the subentries satisfying the selection, i.e. the indices of; the branches which hold containers classes.; Example:; tree.Draw("">>yplus"",""y>0""); will create a TEventList object named ""yplus"" in the current directory.; In an interactive s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:80450,variab,variables,80450,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,2,['variab'],['variables']
Modifiability,"ing a ROOT dataset; // The steps are:; // - Create a file; // - Create a tree associated to the file; // - Define the variables to write in the entries; // - Define the branches associated to those variables; // - Write the event loop to set the right value to the variables; // - Call TTree::Fill to save the value of the variables; // - Write the TTree; // - Close the file; void classicWay(); {; TFile f(""df009_FromScratchVSTTree_classic.root"", ""RECREATE"");; TTree t(""treeName"", ""treeName"");; double b1;; int b2;; t.Branch(""b1"", &b1);; t.Branch(""b2"", &b2);; for (int i = 0; i < 10; ++i) {; b1 = i;; b2 = i * i;; t.Fill();; }; t.Write();; f.Close();; }; ; // ##This is the RDF way of creating a ROOT dataset; // Few lines are needed to achieve the same result.; // Parallel creation of the TTree is not supported in the; // classic method.; // In this case the steps are:; // - Create an empty RDataFrame; // - If needed, define variables for the functions used to fill the branches; // - Create new columns expressing their content with lambdas, functors, functions or strings; // - Invoke the Snapshot action; //; // Parallelism is not the only advantage. Starting from an existing dataset,; // filtering it, enriching it with new columns, leaving aside some other columns, and; // writing a new dataset become very easy to do.; void RDFWay(); {; ROOT::RDataFrame df(10);; auto b = 0.;; df.Define(""b1"", [&b]() { return b++; }); .Define(""b2"", ""(int) b1 * b1"") // This can even be a string; .Snapshot(""treeName"", ""df009_FromScratchVSTTree_df.root"");; }; ; void df009_FromScratchVSTTree(); {; ; classicWay();; RDFWay();; }; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TTreeA TTree repre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df009__FromScratchVSTTree_8C.html:1427,variab,variables,1427,doc/master/df009__FromScratchVSTTree_8C.html,https://root.cern,https://root.cern/doc/master/df009__FromScratchVSTTree_8C.html,1,['variab'],['variables']
Modifiability,"ing a curve projected on observable obs. ;  ; void printMetaArgs (std::ostream &os) const override;  Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the integration operation. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print the state of this object to the specified output stream. ;  ; void setAllowComponentSelection (bool allow);  Set component selection to be allowed/forbidden. ;  ; void setCacheNumeric (bool flag);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:3722,inherit,inherited,3722,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['inherit'],['inherited']
Modifiability,"ing a whisker-range of 0.95 and w=1 will redefine the area of; 1419the lower whisker to the upper whisker in order to cover 95% of the distribution inside; 1420that candle. The static function will affect all candle-charts in the running program.; 1421Default is 1.; 1422 ; 1423If the distribution is large enough and gaussian shaped, the maximum length of; 1424the whisker will be located at \f$ \pm 2.698 \sigma \f$ (when using the; 14251.5*iqr-definition (w=2), where \f$ \sigma \f$ is the standard deviation; 1426(see picture above). In that case 99.3% of the total distribution will be covered; 1427by the box and the whiskers, whereas 0.7% are represented by the outliers.; 1428 ; 1429##### The Anchors; 1430The anchors have no special meaning in terms of statistical calculation. They mark; 1431the end of the whiskers and they have the width of the box. Both representation; 1432with and without anchors are common.; 1433 ; 1434##### The Points; 1435Depending on the configuration the points can have different meanings:; 1436 - If p=1 the points represent the outliers. If they are shown, it means; 1437 some parts of the underlying distribution are not covered by the whiskers.; 1438 This can only occur when the whiskers are set to option w=2. Here the whiskers; 1439 can have a maximum length of \f$ 1.5 \times iqr \f$. So any points outside the; 1440 whiskers will be drawn as outliers. The outliers will be represented by crosses.; 1441 - If p=2 all points in the distribution will be painted as crosses. This is; 1442 useful for small datasets only (up to 10 or 20 points per candle).; 1443 The outliers are shown along the candle. Because the underlying distribution; 1444 is binned, is frequently occurs that a bin contains more than one value.; 1445 Because of this the points will be randomly scattered within their bin along; 1446 the candle axis. If the bin content for a bin is exactly 1 (usually; 1447 this happens for the outliers) if will be drawn in the middle of the bin alo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:60777,config,configuration,60777,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ing and the number; 1781/// of bins equal to r. Let us denote the number of events in the ith bin; 1782/// in the first histogram as ni and as mi in the second one. The total; 1783/// number of events in the first histogram is equal to:; 1784/// \f[; 1785/// N = \sum_{i=1}^{r} n_{i}; 1786/// \f]; 1787/// and; 1788/// \f[; 1789/// M = \sum_{i=1}^{r} m_{i}; 1790/// \f]; 1791/// in the second histogram. The hypothesis of identity (homogeneity) [3]; 1792/// is that the two histograms represent random values with identical; 1793/// distributions. It is equivalent that there exist r constants p1,...,pr,; 1794/// such that; 1795/// \f[; 1796///\sum_{i=1}^{r} p_{i}=1; 1797/// \f]; 1798/// and the probability of belonging to the ith bin for some measured value; 1799/// in both experiments is equal to pi. The number of events in the ith; 1800/// bin is a random variable with a distribution approximated by a Poisson; 1801/// probability distribution; 1802/// \f[; 1803///\frac{e^{-Np_{i}}(Np_{i})^{n_{i}}}{n_{i}!}; 1804/// \f]; 1805///for the first histogram and with distribution; 1806/// \f[; 1807///\frac{e^{-Mp_{i}}(Mp_{i})^{m_{i}}}{m_{i}!}; 1808/// \f]; 1809/// for the second histogram. If the hypothesis of homogeneity is valid,; 1810/// then the maximum likelihood estimator of pi, i=1,...,r, is; 1811/// \f[; 1812///\hat{p}_{i}= \frac{n_{i}+m_{i}}{N+M}; 1813/// \f]; 1814/// and then; 1815/// \f[; 1816/// X^{2} = \sum_{i=1}^{r}\frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r}\frac{(m_{i}-M\hat{p}_{i})^{2}}{M\hat{p}_{i}} =\frac{1}{MN} \sum_{i=1}^{r}\frac{(Mn_{i}-Nm_{i})^{2}}{n_{i}+m_{i}}; 1817/// \f]; 1818/// has approximately a \f$ \chi^{2}_{(r-1)} \f$ distribution [3].; 1819/// The comparison procedure can include an analysis of the residuals which; 1820/// is often helpful in identifying the bins of histograms responsible for; 1821/// a significant overall \f$ \chi^{2} \f$ value. Most convenient for; 1822/// analysis are the adjusted (normalized) residuals [4]; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:70588,variab,variable,70588,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ing attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProfileLL(); Default constructor; Should only be used by proof. RooProfileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. Double_t evaluate() const; Evaluate profile likelihood by minimizing likelihood w.r.t. all; parameters that are not considered observables of this profile; likelihood object. void validateAbsMin() const; Check that parameters and likelihood value for 'best fit' are still valid. If not,; because the best fit has never been calculated, or because constant parameters have; changed value or parameters have changed const/float status, the minimum is recalculated. Bool_t redirectServersHook(const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooProfileLL.html:34329,variab,variables,34329,root/html528/RooProfileLL.html,https://root.cern,https://root.cern/root/html528/RooProfileLL.html,4,['variab'],['variables']
Modifiability,"ing attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProfileLL(); Default constructor; Should only be used by proof. RooProfileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. void initializeMinimizer() const. Double_t evaluate() const; Evaluate profile likelihood by minimizing likelihood w.r.t. all; parameters that are not considered observables of this profile; likelihood object. void validateAbsMin() const; Check that parameters and likelihood value for 'best fit' are still valid. If not,; because the best fit has never been calculated, or because constant parameters have; changed value or parameters have changed const/float status, the minimum is recalculated. Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooProfileLL.html:37276,variab,variables,37276,root/html534/RooProfileLL.html,https://root.cern,https://root.cern/root/html534/RooProfileLL.html,2,['variab'],['variables']
Modifiability,"ing because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooPoisson(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _mean, Bool_t noRounding = kFALSE); Constructor. RooPoisson(const RooPoisson& other, const char* name = 0); Copy constructor. Double_t evaluate() const; Implementation in terms of the TMath Poisson function. Double_t getLogVal(const RooArgSet* set = 0) const; calculate and return the negative log-likelihood of the Poisson. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Advertise internal generator in x. void generateEvent(Int_t code); Implement internal generator using TRandom::Poisson. RooPoisson(); { _noRounding = kFALSE ; }. TObject* clone(const char* newname) const; { return new RooPoisson(*this,newname); }. virtual ~RooPo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooPoisson.html:44738,Inherit,Inheritance,44738,root/html602/RooPoisson.html,https://root.cern,https://root.cern/root/html602/RooPoisson.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing const & ; name); const. protected . Definition at line 968 of file RooPlot.cxx. ◆ findObject(). TObject * RooPlot::findObject ; (; const char * ; name, . const TClass * ; tClass = nullptr . ); const. Find the named object in our list of items and return a pointer to it. ; Return zero and print a warning message if the named object cannot be found. If no name is supplied the last object added is returned.; Note that the returned pointer is to a TObject and so will generally need casting. Use the getAtt...() methods to change the drawing style attributes of a contained object directly. ; Definition at line 942 of file RooPlot.cxx. ◆ frame(). RooPlot * RooPlot::frame ; (; const RooAbsRealLValue & ; var, . double ; xmin, . double ; xmax, . Int_t ; nBins . ). static . Create a new frame for a given variable in x. ; This is just a wrapper for the RooPlot constructor with the same interface.; More details. Parameters. [in]varThe variable on the x-axis ; [in]xminLeft edge of the x-axis ; [in]xmaxRight edge of the x-axis ; [in]nBinsnumber of bins on the x-axis . Definition at line 225 of file RooPlot.cxx. ◆ frameWithLabels(). RooPlot * RooPlot::frameWithLabels ; (; const RooAbsRealLValue & ; var). static . Create a new frame for a given variable in x, adding bin labels. ; The binning will be extracted from the variable given. The bin labels will be set as ""%g-%g"" for the left and right edges of each bin of the given variable.; More details. Parameters. [in]varThe variable on the x-axis . Definition at line 237 of file RooPlot.cxx. ◆ getAttFill(). TAttFill * RooPlot::getAttFill ; (; const char * ; name = nullptr); const. Return a pointer to the fill attributes of the named object in this plot, or zero if the named object does not exist or does not have fill attributes. ; Definition at line 817 of file RooPlot.cxx. ◆ getAttLine(). TAttLine * RooPlot::getAttLine ; (; const char * ; name = nullptr); const. Return a pointer to the line attributes of the named object in this pl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:37636,variab,variable,37636,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variable']
Modifiability,"ing cycles; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fNeur_1; Int_tfNlayersnumber of layers (including input and output layers); Int_t*fNodesnumber of nodes per layer; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fParam_1; TMVA::MethodCFMlpANN_Utils::VARn2TMVA::MethodCFMlpANN_Utils::fVarn2_1; TMVA::MethodCFMlpANN_Utils::VARn2TMVA::MethodCFMlpANN_Utils::fVarn3_1; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fVarn_1; Double_t**fYNNweights; static TMVA::MethodCFMlpANN*fgThisthis carrier; static Int_tTMVA::MethodCFMlpANN_Utils::fg_0constant; static Int_tTMVA::MethodCFMlpANN_Utils::fg_100constant; static Int_tTMVA::MethodCFMlpANN_Utils::fg_999constant; static const char*TMVA::MethodCFMlpANN_Utils::fg_MethodNamemethod name for print; static Int_tTMVA::MethodCFMlpANN_Utils::fg_max_nNodes_maximum number of nodes per variable; static Int_tTMVA::MethodCFMlpANN_Utils::fg_max_nVar_static maximum number of input variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodCFMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); standard constructor; option string: ""n_training_cycles:n_hidden_layers""; default is: n_training_cycles = 5000, n_layers = 4. * note that the number of hidden layers in the NN is:; n_hidden_layers = n_layers - 2. * since there is one input and one output layer. The number of; nodes (neurons) is predefined to be:; n_nodes[i] = nvars + 1 - i (where i=1..n_layers). with nvars being the number of variables used in the NN. Hence, the default case is: n_neurons(layer 1 (input)) : nvars; n_neurons(layer 2 (hidden)): nvars-1; n_neurons(layer 3 (hidden)): nvars-1; n_neurons(layer 4 (out)) : 2. This artificial neural network usually needs a relatively large; number of cycles to converge (8000 and more). Overtraining can; be efficienctly tested by comparing the signal and backgrou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html:20935,Inherit,Inheritance,20935,root/html532/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing data elements :; TMatrixTRow_const TMatrixTRow; TMatrixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTSub_const<float>(); static TClass*Class(); Int_tGetColOff() const; const TMatrixTBase<float>*GetMatrix() const; Int_tGetNcols() const; Int_tGetNrows() const; Int_tGetRowOff() const; virtual TClass*IsA() const; const float&operator()(Int_t rown, Int_t coln) const; TMatrixTSub_const<float>&operator=(const TMatrixTSub_const<float>&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTSub_const<float>(); TMatrixTSub_const<float>(const TMatrixTSub_const<float>&); TMatrixTSub_const<float>(const TMatrixT<float>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); TMatrixTSub_const<float>(const TMatrixTSym<float>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb). Data Members; protected:. Int_tfColOff; TMatrixTBase<float>*fMatrixthe matrix I am a submatrix of; Int_tfNcolsSub; Int_tfNrowsSub; Int_tfRowOff. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTSub_const<float>& ); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. const Element & operator()(Int_t i). Int_t GetRowOff() const; { return fRowOff; }. Int_t GetColOff() const; { return fColOff; }. Int_t GetNrows() const; { return fNrowsSub; }. Int_t GetNcols() const; { return fNcolsSub; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-06-30 15:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTSub_const_float_.html:1807,Inherit,Inheritance,1807,root/html602/TMatrixTSub_const_float_.html,https://root.cern,https://root.cern/root/html602/TMatrixTSub_const_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing data elements :; TMatrixTRow_const TMatrixTRow; TMatrixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTSub_const<float>(); static TClass*Class(); Int_tGetColOff() const; const TMatrixTBase<float>*GetMatrix() const; Int_tGetNcols() const; Int_tGetNrows() const; Int_tGetRowOff() const; virtual TClass*IsA() const; const float&operator()(Int_t rown, Int_t coln) const; TMatrixTSub_const<float>&operator=(const TMatrixTSub_const<float>&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTSub_const<float>(); TMatrixTSub_const<float>(const TMatrixTSub_const<float>&); TMatrixTSub_const<float>(const TMatrixT<float>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); TMatrixTSub_const<float>(const TMatrixTSym<float>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb). Data Members; protected:. Int_tfColOff; TMatrixTBase<float>*fMatrixthe matrix I am a submatrix of; Int_tfNcolsSub; Int_tfNrowsSub; Int_tfRowOff. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTSub_const<float>& ); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. const Element & operator()(Int_t i). Int_t GetRowOff() const; { return fRowOff; }. Int_t GetColOff() const; { return fColOff; }. Int_t GetNrows() const; { return fNrowsSub; }. Int_t GetNcols() const; { return fNcolsSub; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMatrixTSub_const_float_.html:1807,Inherit,Inheritance,1807,root/html604/TMatrixTSub_const_float_.html,https://root.cern,https://root.cern/root/html604/TMatrixTSub_const_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Inheritance diagram for xRooProjectedPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ clone(). TObject * xRooProjectedPdf::clone ; (; const char * ; newname); const. inlineoverridevirtual . Reimplemented from RooProjectedPdf.; Definition at line 7152 of file xRooNode.cxx. ◆ evaluate(). double xRooProjectedPdf::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate projected p.d.f. ; Reimplemented from RooProjectedPdf.; Definition at line 7155 of file xRooNode.cxx. ◆ expectedEvents(). double xRooProjectedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooProjectedPdf.; Definition at line 7147 of file xRooNode.cxx. ◆ extendMode(). ExtendMode xRooProjectedPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooProjectedPdf.; Definition at line 7151 of file xRooNode.cxx. ◆ RooProjectedPdf() [1/3]. RooProjectedPdf::RooProjectedPdf ; (; ). Default constructor. ; Definition at line 24 of file RooProjectedPdf.cxx. ◆ RooProjectedPdf() [2/3]. RooProjectedPdf::RooProjectedPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _intpdf, . const RooArgSet & ; intObs . ). Construct projection of input pdf '_intpdf' over observab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:74814,extend,extended,74814,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['extend'],['extended']
Modifiability,"ing global inhibit of dirty state propagation; Bool_t_isConstant! Cached isConstant status; Bool_t_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperMode_operModeDirty state propagation mode; RooArgSet*_ownedComponents! Set of owned component; Bool_t_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArray_proxyListlist of proxies; RooRefCountList_serverListlist of server objects; Bool_t_shapeDirtyFlag set if value needs recalculating because input shapes modified; map<string,string>_stringAttribString attributes; Bool_t_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_t_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t inhibitDirty() const; { return _inhibitDirty && !_localNoInhibitDirty; }. RooAbsArg(); Default constructor. RooAbsArg(const char* name, const char* title); Create an object with the specified name and descriptive title.; The newly created object has no clients or servers and has its; dirty flags set. RooAbsArg(const RooAbsArg& other, const char* name = 0); Copy constructor transfers all boolean and string properties of the original; object. Transient properties and client-server links are not copied. ~RooAbsArg(); Destructor. void setDirtyInhibit(Bool_t flag); Control global dirty inhibit mode. When set to true no value or shape dirty; flags are propagated and cache is always considered to be dirty. void verboseDirty(Bool_t flag); Activate verbose messaging related to dirty flag propagation. Bool_t isCloneOf(const RooAbsArg& other) const; Check if this object was created as a clone of 'other'. void setAttribute(const Text_t* nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsArg.html:20278,Inherit,Inheritance,20278,root/html602/RooAbsArg.html,https://root.cern,https://root.cern/root/html602/RooAbsArg.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing list is assumed to have objects with the same; name in the same order. If this is not the case warnings will be printed. If a single; sibling list is specified, 3 columns will be output: the (common) name, the value of this; list and the value in the sibling list. Multiple sibling lists can be specified by; repeating the Sibling() command.; Format(const char* str) -- Classic format string, provided for backward compatibility; Format(...) -- Formatting arguments, details are given below; OutputFile(const char* fname) -- Send output to file with given name rather than standard output. The Format(const char* what,...) has the following structure. const char* what -- Controls what is shown. ""N"" adds name, ""E"" adds error,; ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; FixedPrecision(int n) -- Controls precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default); VerbatimName(Bool_t flag) -- Put variable name in a \verb+ + clause. Example use: list.printLatex(Columns(2), Format(""NEU"",AutoPrecision(1),VerbatimName()) ) ;. void printLatex(ostream& ofs, Int_t ncol, const char* option = ""NEYU"", Int_t sigDigit = 1, const RooLinkedList& siblingLists = RooLinkedList(), const RooCmdArg* formatCmd = 0) const; Internal implementation function of printLatex. Bool_t allInRange(const char* rangeSpec) const; Return true if all contained object report to have their; value inside the specified range. TObject* clone(const char* newname) const. TObject* create(const char* newname) const. TObject* Clone(const char* newname = 0) const. void setHashTableSize(Int_t i); Hash table control. Int_t getHashTableSize() const; Return size of internal hash table. Bool_t contains(const RooAbsArg& var) const; Returns true if object with same name as var is contained in this collection. Bool_t containsInstance(const RooAbsArg& var) const; Returns true if var",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCollection.html:18298,variab,variable,18298,root/html526/RooAbsCollection.html,https://root.cern,https://root.cern/root/html526/RooAbsCollection.html,3,['variab'],['variable']
Modifiability,"ing list is assumed to have objects with the same; name in the same order. If this is not the case warnings will be printed. If a single; sibling list is specified, 3 columns will be output: the (common) name, the value of this; list and the value in the sibling list. Multiple sibling lists can be specified by; repeating the Sibling() command.; Format(const char* str) -- Classic format string, provided for backward compatibility; Format(...) -- Formatting arguments, details are given below; OutputFile(const char* fname) -- Send output to file with given name rather than standard output. The Format(const char* what,...) has the following structure. const char* what -- Controls what is shown. ""N"" adds name, ""E"" adds error,; ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; FixedPrecision(int n) -- Controls precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default); VerbatimName(Bool_t flag) -- Put variable name in a \verb+ + clause. Example use: list.printLatex(Columns(2), Format(""NEU"",AutoPrecision(1),VerbatimName()) ) ;. void printLatex(ostream& ofs, Int_t ncol, const char* option = ""NEYU"", Int_t sigDigit = 1, const RooLinkedList& siblingLists = RooLinkedList(), const RooCmdArg* formatCmd = 0) const; Internal implementation function of printLatex. Bool_t allInRange(const char* rangeSpec) const; Return true if all contained object report to have their; value inside the specified range. void makeStructureTag(). void makeTypedStructureTag(). TObject* clone(const char* newname) const. TObject* create(const char* newname) const. TObject* Clone(const char* newname = 0) const. void setHashTableSize(Int_t i); Hash table control. Int_t getHashTableSize() const; Return size of internal hash table. Bool_t contains(const RooAbsArg& var) const; Returns true if object with same name as var is contained in this collection. Bool_t containsIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsCollection.html:19171,variab,variable,19171,root/html532/RooAbsCollection.html,https://root.cern,https://root.cern/root/html532/RooAbsCollection.html,7,['variab'],['variable']
Modifiability,"ing message). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TMVA::TActivation*fActivationactivation equation; Double_tfActivationValueactivation/output value; Double_tfDEDwsum of all deltas; Double_tfDeltaerror field of neuron; Double_tfErrorerror, only set for output neurons; Bool_tfForcedValueflag for forced input value; TMVA::TNeuronInput*fInputCalculatorinput calculator; TObjArray*fLinksInarray of input synapses; TObjArray*fLinksOutarray of output synapses; Double_tfValueinput value; static TMVA::MsgLogger*fgLogger! message logger, static to save resources. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNeuron(); standard constructor. ~TNeuron(); destructor. void InitNeuron(); initialize the neuron, most variables still need to be set via setters. void ForceValue(Double_t value); force the value, typically for input and bias neurons. void CalculateValue(); calculate neuron input. void CalculateActivationValue(); calculate neuron activation/output. void CalculateDelta(); calculate error field. void SetInputCalculator(TMVA::TNeuronInput* calculator); set input calculator. void SetActivationEqn(TMVA::TActivation* activation); set activation equation. void AddPreLink(TMVA::TSynapse* pre); add synapse as a pre-link to this neuron. void AddPostLink(TMVA::TSynapse* post); add synapse as a post-link to this neuron. void DeletePreLinks(); delete all pre-links. void DeleteLinksArray(TObjArray*& links); delete an array of TSynapses. void SetError(Double_t error); set error, this should only be done for an output neuron. void UpdateSynapsesBatch(); update and adjust the pre-synapses for each neuron (input neuron has no pre-synapse); this method should only be called in batch mode. void UpdateSyn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__TNeuron.html:6985,variab,variables,6985,root/html528/TMVA__TNeuron.html,https://root.cern,https://root.cern/root/html528/TMVA__TNeuron.html,6,['variab'],['variables']
Modifiability,"ing message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TOrdC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTOrdCollection.html:15318,inherit,inherited,15318,doc/master/classTOrdCollection.html,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html,1,['inherit'],['inherited']
Modifiability,"ing message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjArray.html:17421,inherit,inherited,17421,doc/master/classTObjArray.html,https://root.cern,https://root.cern/doc/master/classTObjArray.html,2,['inherit'],['inherited']
Modifiability,"ing message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBtree.html:22733,inherit,inherited,22733,doc/master/classTBtree.html,https://root.cern,https://root.cern/doc/master/classTBtree.html,1,['inherit'],['inherited']
Modifiability,"ing message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; using TObjLinkP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTList.html:18227,inherit,inherited,18227,doc/master/classTList.html,https://root.cern,https://root.cern/doc/master/classTList.html,1,['inherit'],['inherited']
Modifiability,ing method: ␛[1mBDTG␛[0m; : ; : the option NegWeightTreatment=InverseBoostNegWeights does not exist for BoostType=Grad; : --> change to new default NegWeightTreatment=Pray; : Rebuilding Dataset dataset; : Building event vectors for type 2 Signal; : Dataset[dataset] : create input formulas for tree sgn; : Using variable vars_time0[0] from array expression vars_time0 of size 30; : Using variable vars_time1[0] from array expression vars_time1 of size 30; : Using variable vars_time2[0] from array expression vars_time2 of size 30; : Using variable vars_time3[0] from array expression vars_time3 of size 30; : Using variable vars_time4[0] from array expression vars_time4 of size 30; : Using variable vars_time5[0] from array expression vars_time5 of size 30; : Using variable vars_time6[0] from array expression vars_time6 of size 30; : Using variable vars_time7[0] from array expression vars_time7 of size 30; : Using variable vars_time8[0] from array expression vars_time8 of size 30; : Using variable vars_time9[0] from array expression vars_time9 of size 30; : Building event vectors for type 2 Background; : Dataset[dataset] : create input formulas for tree bkg; : Using variable vars_time0[0] from array expression vars_time0 of size 30; : Using variable vars_time1[0] from array expression vars_time1 of size 30; : Using variable vars_time2[0] from array expression vars_time2 of size 30; : Using variable vars_time3[0] from array expression vars_time3 of size 30; : Using variable vars_time4[0] from array expression vars_time4 of size 30; : Using variable vars_time5[0] from array expression vars_time5 of size 30; : Using variable vars_time6[0] from array expression vars_time6 of size 30; : Using variable vars_time7[0] from array expression vars_time7 of size 30; : Using variable vars_time8[0] from array expression vars_time8 of size 30; : Using variable vars_time9[0] from array expression vars_time9 of size 30; DataSetFactory : [dataset] : Number of events in input trees; : ; : ; : ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:12995,variab,variable,12995,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,2,['variab'],['variable']
Modifiability,"ing methods of the ROOT::Fit::Fitter class and depending on the type of input data.; 5.7.5.1 Available fit methods. Least-square fit: Fitter::LeastSquare(const BinData & ) or Fitter::Fit(const Bindata &). It requires the user to pass a BinData object. It should be used when the data values follow a Gaussian distribution. This fit method is implemented using the class ROOT::Fit::Chi2FCN.; Binned Likelihood fit : Fitter::LikelihoodFit(const Bindata & ). The user needs to pass a BinData object. It should be used when the data values follow a Poisson or a multinomial distribution. The Poisson case (extended fit) is the default and in this case the function normalization is also fit to the data. The Multi-nominal case can be selected by passing the optional extended boolean flag as false. This method is implemented by the class ROOT::Fit:::PoissonLikelihoodFCN.; Un-Binned likelihood fit: Fitter::LikelihoodFit(const UnBindata &). The user needs to pass an UnBinData object. By default the fit is not extended (i.e. the normalization is not fitted to the data). As above the user can select an extended likelihood fit by passing the optional extended boolean flag as true. This method is implemented using the class LogLikelihoodFCN; Linear Fit: A linear fit can be selected (no iterative minimization is needed in this case, but using linear algebra algorithms from the Matrix library), if the model function is linear in the parameters. 5.7.5.2 Customised Fit methods; Above we described the pre-defined methods used for fitting. A user can also implement its own fitting methods, thus its version of the chi-square or likelihood function he wants to minimize. In this case, the user does not really need to build as input a ROOT::Fit data set and model function as we described before. He can implements its own version of the method function using on its own data set objects and functions.; In this case ROOT::Fit::Fitter::SetFCN is used to set the method function and ROOT::Fit::FitFCN is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:207667,extend,extended,207667,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['extend'],['extended']
Modifiability,"ing number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofCondor.html:30944,inherit,inherited,30944,doc/master/classTProofCondor.html,https://root.cern,https://root.cern/doc/master/classTProofCondor.html,6,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"ing of main transparency.; UChar_tTEveElement::fChangeBits!; Bool_tfChanged; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TGLScenePad*fGLScene; Bool_tfHierarchical; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEvePad*fPad; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tfSmartRefresh; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveScene.html:19136,variab,variable,19136,root/html528/TEveScene.html,https://root.cern,https://root.cern/root/html528/TEveScene.html,6,['variab'],['variable']
Modifiability,"ing of objects in the TObjectTable. ;  . Private Types; enum  EStatusBits { kIsRecursive = (1ULL << ( 14 )); };  . Private Attributes; CRITICAL_SECTION fCritSect;  . Friends; class TWin32Condition;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWin32Mutex.h>. Inheritance diagram for TWin32Mutex:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TWin32Mutex::EStatusBits. private . EnumeratorkIsRecursive . Definition at line 35 of file TWin32Mutex.h. Constructor & Destructor Documentation. ◆ TWin32Mutex(). TWin32Mutex::TWin32Mutex ; (; Bool_t ; recursive = kFALSE). Create a Win32 mutex lock. ; Definition at line 32 of file TWin32Mutex.cxx. ◆ ~TWin32Mutex(). TWin32Mutex::~TWin32Mutex ; (; ). virtual . TMutex dtor. ; Definition at line 40 of file TWin32Mutex.cxx. Member Function Documentation. ◆ Class(). static TClass * TWin32Mutex::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TWin32Mutex::Class_Name ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Mutex.html:10330,inherit,inherited,10330,doc/master/classTWin32Mutex.html,https://root.cern,https://root.cern/doc/master/classTWin32Mutex.html,2,['inherit'],['inherited']
Modifiability,"ing of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  Define relevant variables. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the histogram with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProfile2D * fProfile;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:12451,inherit,inherited,12451,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,1,['inherit'],['inherited']
Modifiability,"ing of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; std::vector< double > _count;  Array of counters for each state. ;  ; double _nOverflow;  Number of overflow entries. ;  ; double _total;  Total number of entries. ;  ; TObjArray _types;  Array of defined category states. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo1DTable.html:14422,inherit,inherited,14422,doc/master/classRoo1DTable.html,https://root.cern,https://root.cern/doc/master/classRoo1DTable.html,1,['inherit'],['inherited']
Modifiability,"ing on the context, using TSpectrum2Transform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 2D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353 (1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 16 of file TSpectrum2Transform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:1649,adapt,adaptive,1649,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['adapt'],['adaptive']
Modifiability,"ing on the option parameter. ;  ; virtual TH3D * ProjectionXYZ (const char *name=""_pxyz"", Option_t *option=""e"") const;  Project this profile3D into a 3-D histogram along X,Y,Z. ;  ; void PutStats (Double_t *stats) override;  Replace current statistics with the values in array stats. ;  ; void Reset (Option_t *option="""") override;  Reset contents of a Profile3D histogram. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Scale (Double_t c1=1, Option_t *option="""") override;  Multiply this profile2D by a constant c1. ;  ; virtual void SetBinEntries (Int_t bin, Double_t w);  Set the number of entries in bin. ;  ; void SetBins (Int_t nbinsx, Double_t xmin, Double_t xmax, Int_t nbinsy, Double_t ymin, Double_t ymax, Int_t nbinsz, Double_t zmin, Double_t zmax) override;  Redefine x, y and z axis parameters. ;  ; void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins) override;  Redefine x, y and z axis parameters with variable bin sizes. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow. ;  ; void SetBuffer (Int_t buffersize, Option_t *opt="""") override;  Set the buffer size in units of 8 bytes (double). ;  ; virtual void SetErrorOption (Option_t *option="""");  Set option to compute profile3D errors. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH3D. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Sumw2 (Bool_t flag=kTRUE) override;  Create/Delete structure to store sum of squares of weights per bin This is needed to compute the correct statistical quantities of a profile filled with weights. ;  ;  Public Member Functions inherited from TH3D;  TH3D ();  Constructor. ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:8105,variab,variable,8105,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['variab'],['variable']
Modifiability,"ing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsGenContext.html:14888,inherit,inherited,14888,doc/master/classRooAbsGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAbsGenContext.html,1,['inherit'],['inherited']
Modifiability,ing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia6 Interface to Pythia6.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ClassIndex.html:117798,config,config,117798,root/html530/ClassIndex.html,https://root.cern,https://root.cern/root/html530/ClassIndex.html,1,['config'],['config']
Modifiability,"ing the MonaLisa ApMon package (libapmoncpp.so/UDP; packets). The MonaLisa ApMon library for C++ can be downloaded at; http://monalisa.cacr.caltech.edu/monalisa__Download__ApMon.html,; current version:; http://monalisa.cacr.caltech.edu/download/apmon/ApMon_cpp-2.0.6.tar.gz. The ROOT implementation is primary optimized for process/job monitoring,; although all other generic MonaLisa ApMon functionality can be exploited; through the ApMon class directly (gMonitoringWriter->GetApMon()). Monitoring information in MonaLisa is structured in the following tree; structure:; <farmname>; |; ---> <nodename1>; |; ---> <key1> - <value1>; ---> <key2> - <value2>; ---> <nodename2>; |; ---> <key3> - <value3>; ---> <key4> - <value4>. The parameter monid is equivalent to the MonaLisa node name, for the; case of process monitoring it can be just an identifier to classify; the type of jobs e.g. ""PROOF_PROCESSING"".; If monid is not specified, TMonaLisaWriter tries to set it in this order; from environement variables:; - PROOF_JOB_ID; - GRID_JOB_ID; - LCG_JOB_ID; - ALIEN_MASTERJOB_ID; - ALIEN_PROC_ID. The parameter montag is equivalent to the MonaLisa farm name, for the; case of process monitoring it can be a process identifier e.g. a PROOF; session ID. The parameter monserver specifies the server to whom to send the; monitoring UDP packets. If not specified, the hostname (the port is; a default one) is specified in the environment variable APMON_CONFIG. To use TMonaLisaWriter, libMonaLisa.so has to be loaded. According to the fact, that the deepness of the MonaLisa naming scheme; is only 3 (<farm><node><value>), a special naming scheme is used for; process monitoring. There is a high-level method to send progress; information of Tree analysis (# of events, datasize).; To distinguish individual nodes running the processing, part of the; information is kept in the <value> parameter of ML.; <value> is named as:; <site-name>:<host-name>:<pid>:<valuetag>; <site-name> is taken from an environme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMonaLisaWriter.html:10525,variab,variables,10525,root/html530/TMonaLisaWriter.html,https://root.cern,https://root.cern/root/html530/TMonaLisaWriter.html,3,['variab'],['variables']
Modifiability,"ing the PDF onto the plot axis, it is usually integrated over the full range of the invisible variables. The ProjectionRange overrides this. This is useful if the PDF was fitted in a limited range in y, but it is now projected onto x. If ProjectionRange(""<name of fit range>"") is passed, the projection is normalised correctly. Type of argument Plotting control . LineStyle(Int_t style) Select line style by ROOT line style code, default is solid . LineColor(Int_t color) Select line color by ROOT color code, default is blue . LineWidth(Int_t width) Select line with in pixels, default is 3 . FillStyle(Int_t style) Select fill style, default is not filled. If a filled style is selected, also use VLines() to add vertical downward lines at end of curve to ensure proper closure . FillColor(Int_t color) Select fill color by ROOT color code . Range(const char* name) Only draw curve in range defined by given name. Multiple comma-separated ranges can be given. An empty string """" or nullptr means to use the default range of the variable. . Range(double lo, double hi) Only draw curve in specified range . VLines() Add vertical lines to y=0 at end points of curve . Precision(double eps) Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. A higher precision will result in more and more densely spaced curve points. A negative precision value will disable adaptive point spacing and restrict sampling to the grid point of points defined by the binning of the plotted observable (recommended for expensive functions such as profile likelihoods) . Invisible(bool flag) Add curve to frame, but do not display. Useful in combination AddTo() . VisualizeError(const RooFitResult& fitres, double Z=1, bool linearMethod=true) Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma. The linear method is fast but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made. Intervals from the samp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:96061,variab,variable,96061,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,2,['variab'],['variable']
Modifiability,"ing the special TProfile constructor below; 117/// where ymin and ymax are specified.; 118///; 119/// H(j) is printed as the channel contents. The errors displayed are s(j) if `option`='S'; 120/// (spread option), or e(j) if `CHOPT`='' (error on mean).; 121///; 122/// See TProfile::BuildOptions() for explanation of parameters; 123///; 124/// see also comments in the TH1 base class constructors; 125 ; 126TProfile::TProfile(const char *name,const char *title,Int_t nbins,Double_t xlow,Double_t xup,Option_t *option); 127: TH1D(name,title,nbins,xlow,xup); 128{; 129 BuildOptions(0,0,option);; 130}; 131 ; 132////////////////////////////////////////////////////////////////////////////////; 133/// Constructor for Profile histograms with variable bin size.; 134///; 135/// See TProfile::BuildOptions() for more explanations on errors; 136/// see also comments in the TH1 base class constructors; 137 ; 138TProfile::TProfile(const char *name,const char *title,Int_t nbins,const Float_t *xbins,Option_t *option); 139: TH1D(name,title,nbins,xbins); 140{; 141 BuildOptions(0,0,option);; 142}; 143 ; 144////////////////////////////////////////////////////////////////////////////////; 145/// Constructor for Profile histograms with variable bin size.; 146///; 147/// See TProfile::BuildOptions for more explanations on errors; 148/// see also comments in the TH1 base class constructors; 149 ; 150TProfile::TProfile(const char *name,const char *title,Int_t nbins,const Double_t *xbins,Option_t *option); 151: TH1D(name,title,nbins,xbins); 152{; 153 BuildOptions(0,0,option);; 154}; 155 ; 156////////////////////////////////////////////////////////////////////////////////; 157/// Constructor for Profile histograms with variable bin size.; 158/// See TProfile::BuildOptions for more explanations on errors; 159///; 160/// see also comments in the TH1 base class constructors; 161 ; 162TProfile::TProfile(const char *name,const char *title,Int_t nbins,const Double_t *xbins,Double_t ylow,Double_t yup,Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:6160,variab,variable,6160,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ing the training data directly from ROOT files. Using XGBoost, we illustrate; 6## how you can convert an externally trained model in a format serializable and readable; 7## with the fast tree inference engine offered by TMVA.; 8##; 9## \macro_code; 10## \macro_output; 11##; 12## \date August 2019; 13## \author Stefan Wunsch; 14 ; 15# XGBoost has to be imported before ROOT to avoid crashes because of clashing; 16# std::regexp symbols that are exported by cppyy.; 17# See also: https://github.com/wlav/cppyy/issues/227; 18from xgboost import XGBClassifier; 19 ; 20import ROOT; 21import numpy as np; 22 ; 23from tmva100_DataPreparation import variables; 24 ; 25 ; 26def load_data(signal_filename, background_filename):; 27 # Read data from ROOT files; 28 data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); 29 data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(); 30 ; 31 # Convert inputs to format readable by machine learning tools; 32 x_sig = np.vstack([data_sig[var] for var in variables]).T; 33 x_bkg = np.vstack([data_bkg[var] for var in variables]).T; 34 x = np.vstack([x_sig, x_bkg]); 35 ; 36 # Create labels; 37 num_sig = x_sig.shape[0]; 38 num_bkg = x_bkg.shape[0]; 39 y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]); 40 ; 41 # Compute weights balancing both classes; 42 num_all = num_sig + num_bkg; 43 w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]); 44 ; 45 return x, y, w; 46 ; 47if __name__ == ""__main__"":; 48 # Load data; 49 x, y, w = load_data(""train_signal.root"", ""train_background.root""); 50 ; 51 # Fit xgboost model; 52 bdt = XGBClassifier(max_depth=3, n_estimators=500); 53 bdt.fit(x, y, sample_weight=w); 54 ; 55 # Save model in TMVA format; 56 print(""Training done on "",x.shape[0],""events. Saving model in tmva101.root""); 57 ROOT.TMVA.Experimental.SaveXGBoost(bdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva101__Training_8py_source.html:1361,variab,variables,1361,doc/master/tmva101__Training_8py_source.html,https://root.cern,https://root.cern/doc/master/tmva101__Training_8py_source.html,1,['variab'],['variables']
Modifiability,"ing the tree properly (and const correctness); [ROOT-3635] - integration for PDF value in binned fit; [ROOT-3874] - problem with binned likelihood fit in RooFit; [ROOT-5334] - RooFit RooAbsPdf::getLogVal() returns log((double)0) (==inf !). [ROOT-5380] - 2D fit not converging when using RooProdPDF and RooFFTConvPdf; [ROOT-5464] - GetEntries reports warning when friend chain with index; [ROOT-6505] - ROOT fails to read a file with particular branch names interactively; [ROOT-6892] - Memory leak in TSocket::SendProcessIDs; [ROOT-7182] - gSystem->cd has negative effect on TFile with relative path; [ROOT-7199] - Clang error dumping Expr originated by a typo at the prompt; [ROOT-7506] - Problem with axis in TMVAMultiClassGui when showing “Classifier Output Distributions”; [ROOT-7507] - Setting number of signal or background events by hand does not update the numbers; [ROOT-7720] - Bug in the caching optimisation when fitting with a RooProdPdf; [ROOT-7894] - hadd bug for TProfile with alphanumeric bin labels; [ROOT-8095] - TGraph::GetHistogram needlessly removes identically named objects from directory; [ROOT-8133] - TROOT::ProcessLine: TString::Replace out of range; [ROOT-8173] - RooStreamParser not working for float number with negative exponent; [ROOT-8331] - Error in the member function Multiply(const Double_t *vin, Double_t* vout, Double_t w) in TEveTrans of Eve package; [ROOT-8489] - Toy generation using RooCBShape with conditional PDF; [ROOT-8497] - Wrong likelihood is computed for RooProdPdf containing a RooFFTConvPdf; [ROOT-8535] - Non unique UUID; [ROOT-8885] - Cannot create a branch of long, unsigned long, std::size_t types; [ROOT-9062] - $HOME is not automatically extended in TCling; [ROOT-9240] - Compiled program with libNew.so crash; [ROOT-9324] - [cling] segfault when calling cout both from jitted and compiled code; [ROOT-9483] - TMVAGui::mvaeffs crashes when compiled stand-alone; [ROOT-9497] - TCling::Calc() must not abort; [ROOT-9563] - [TreeProcMT] Trees ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:32364,extend,extended,32364,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['extend'],['extended']
Modifiability,"ing this socket; Int_tTSocket::fCompressCompression level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. list<Int_t>fClientIDs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXUnixSocket(const char* u, Int_t psid = -1, Char_t ver = -1, TXHandler* handler = 0, int fd = -1); Constructor. Int_t Reconnect(); Try reconnection after failure. virtual ~TXUnixSocket(); { fSessionID = -1; }. Int_t GetClientID() const; { return (fClientIDs.size() > 0) ? fClientIDs.front() : -1; }. Int_t GetClientIDSize() const; { return fClientIDs.size(); }. void RemoveClientID(); { if (fClientIDs.size() > 1) fClientIDs.pop_front(); }. void SetClientID(Int_t cid); { fClientIDs.push_front(cid); }. » Author: G. Ganis Oct 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id$ » Last generated: 2015-03-15 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXUnixSocket.html:11296,Inherit,Inheritance,11296,root/html534/TXUnixSocket.html,https://root.cern,https://root.cern/root/html534/TXUnixSocket.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing to print; RooAbsReal*RooAbsPdf::_norm! Normalization integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxyc; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooExponential.html:38189,config,configuration,38189,root/html526/RooExponential.html,https://root.cern,https://root.cern/root/html526/RooExponential.html,2,['config'],['configuration']
Modifiability,"ing to specify options; 720/// ""D"" Put out a line of ""Debug"" printout; 721/// ""M"" Return the Maximum Kolmogorov distance instead of prob; 722///; 723/// ### Output:; 724/// The returned value prob is a calculated confidence level which gives a; 725/// statistical test for compatibility of a and b.; 726/// Values of prob close to zero are taken as indicating a small probability; 727/// of compatibility. For two point sets drawn randomly from the same parent; 728/// distribution, the value of prob should be uniformly distributed between; 729/// zero and one.; 730/// in case of error the function return -1; 731/// If the 2 sets have a different number of points, the minimum of; 732/// the two sets is used.; 733///; 734/// ### Method:; 735/// The Kolmogorov test is used. The test statistic is the maximum deviation; 736/// between the two integrated distribution functions, multiplied by the; 737/// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; 738///; 739/// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); 740/// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; 741/// Statistical Methods in Experimental Physics, (North-Holland,; 742/// Amsterdam 1971) 269-271); 743///; 744/// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); 745///; 746/// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; 747/// over the two sorted arrays a and b representing empirical distribution; 748/// functions. The for-loop handles 3 cases: when the next points to be; 749/// evaluated satisfy a>b, a<b, or a=b:; 750///; 751/// ~~~ {.cpp}; 752/// for (Int_t i=0;i<na+nb;i++) {; 753/// if (a[ia-1] < b[ib-1]) {; 754/// rdiff -= sa;; 755/// ia++;; 756/// if (ia > na) {ok = kTRUE; break;}; 757/// } else if (a[ia-1] > b[ib-1]) {; 758/// rdiff += sb;; 759/// ib++;; 760/// if (ib > nb) {ok = kTRUE; break;}; 761/// } else {; 762/// rdiff += sb - sa;; 763/// ia++;; 764/// ib++;; 765/// if (ia > na) {ok = kTRUE; break;}; 766/// if (ib > n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:24265,adapt,adapted,24265,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['adapt'],['adapted']
Modifiability,"ing to the minorname in parent tree. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Long64_t * fIndex;  [fN] Index of sorted values ;  ; Long64_t * fIndexValues;  [fN] Sorted index values, higher 64bits ;  ; Long64_t * fIndexValuesMinor;  [fN] Sorted index values, lower 64bits ;  ; TTreeFormula * fMajorFormula;  ! Pointer to major TreeFormula ;  ; TTreeFormula * fMajorFormulaParent;  ! Pointer to major TreeFormula in Parent tree (if any) ;  ; TString fMajorName;  Index major name. ;  ; TTreeFormula * fMinorFormula;  ! Pointer to minor TreeFormula ;  ; TTreeFormula * fMinorFormulaParent;  ! Pointer to minor TreeFormula in Parent tree (if any) ;  ; TString fMinorName;  Index minor name. ;  ; Long64_t fN;  Number of entries. ;  ;  Protected Attributes inherited from TVirtualIndex; TTree * fTree;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TTreeIndex (const TTreeIndex &)=delete;  ; TTreeIndex & operator= (const TTreeIndex &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTreeIndex.h>. Inheritance dia",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeIndex.html:13745,inherit,inherited,13745,doc/master/classTTreeIndex.html,https://root.cern,https://root.cern/doc/master/classTTreeIndex.html,2,['inherit'],['inherited']
Modifiability,"ing to this TDirectory; TDatimefDatimeCDate and time when directory is created; TDatimefDatimeMDate and time of last modification; TFile*fFilepointer to current file in memory; TList*fKeysPointer to keys list in memory; TList*TDirectory::fListList of objects in memory; Bool_tfModifiedtrue if directory has been modified; TObject*TDirectory::fMotherpointer to mother of the directory; TStringTNamed::fNameobject identifier; Int_tfNbytesKeysNumber of bytes for the keys; Int_tfNbytesNameNumber of bytes in TNamed at creation time; TStringTDirectory::fPathBuffer!Buffer for GetPath() function; Long64_tfSeekDirLocation of directory on file; Long64_tfSeekKeysLocation of Keys record on file; Long64_tfSeekParentLocation of parent directory on file; TStringTNamed::fTitleobject title; TUUIDTDirectory::fUUIDUnique identifier; Bool_tfWritabletrue if directory is writable; static Bool_tTDirectory::fgAddDirectory!flag to add histograms, graphs,etc to the directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDirectoryFile(); Directory default constructor-; *-* =============================. TDirectoryFile(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); Create a new DirectoryFile *-*-; *-* ==========================; A new directory with name,title is created in the current directory; The directory header information is immediatly saved on the file; A new key is added in the parent directory. When this constructor is called from a class directly derived; from TDirectoryFile, the third argument classname MUST be specified.; In this case, classname must be the name of the derived class. Note that the directory name cannot contain slashes. void Init(TClass* cl = 0); Initialize the key associated with this directory (and the related; data members. TDirectoryFile(const TDirectoryFile& directory); Copy constructor. ~TDirectoryFile(); -- Destructor. void Append(TObject* obj, Bool_t replace = kFALSE); Append",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDirectoryFile.html:10971,Inherit,Inheritance,10971,root/html532/TDirectoryFile.html,https://root.cern,https://root.cern/root/html532/TDirectoryFile.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing validation sample. UInt_t CountLeafNodes(TMVA::Node* n = NULL); return the number of terminal nodes in the sub-tree below Node n. void DescendTree(TMVA::Node* n = NULL); descend a tree to find all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node); Decide how to split a node using one of the variables that gives; the best separation of signal/background. In order to do this, for each; variable a scan of the different cut values in a grid (grid = fNCuts) is; performed and the resulting separation gains are compared.; in addition to the individual variables, one can also ask for a fisher; discriminant being built out of (some) of the variables and used as a; possible multivariate split. std::vector<Double_t> GetFisherCoefficients(const TMVA::DecisionTree::EventList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boosting). Double_t CheckEvent(const TMVA::Event& , Bool_t UseYesNoLeaf = kFA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__DecisionTree.html:13134,variab,variables,13134,root/html530/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html530/TMVA__DecisionTree.html,3,['variab'],['variables']
Modifiability,"ing validation sample. UInt_t CountLeafNodes(TMVA::Node* n = NULL); return the number of terminal nodes in the sub-tree below Node n. void DescendTree(TMVA::Node* n = NULL); descend a tree to find all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node); Decide how to split a node using one of the variables that gives; the best separation of signal/background. In order to do this, for each; variable a scan of the different cut values in a grid (grid = fNCuts) is; performed and the resulting separation gains are compared.; in addition to the individual variables, one can also ask for a fisher; discriminant being built out of (some) of the variables and used as a; possible multivariate split. std::vector<Double_t> GetFisherCoefficients(const TMVA::DecisionTree::EventList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boostinge). Double_t CheckEvent(const TMVA::Event& , Bool_t UseYesNoLeaf = kF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTree.html:12991,variab,variables,12991,root/html528/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTree.html,1,['variab'],['variables']
Modifiability,"ing!True when TProfile::Scale is called; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tfTsumwyTotal Sum of weight*Y; Double_tfTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; Double_tfYmaxUpper limit in Y (if set); Double_tfYminLower limit in Y (if set); TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Bool_tfgApproximatebin error approximation option; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProfile(); Default constructor for Profile histograms*-*-*-; *-* ==========================================. ~TProfile(); Default destructor for Profile histograms*-*-*-; *-* =========================================. TProfile(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Option_t* option = """"); Normal Constructor for Profile histograms*-*-*-*-; *-* ==========================================. The first five parameters are similar to TH1D::TH1D.; All values of y are accepted at filling time.; To fill a profile histogram, one must use TProfile::Fill function. Note that when filling the profile histogram the function Fill; checks if the variable y is betyween fYmin and fYmax.; If a minimum or maximum value is set for the Y scale before filling,; then all values below ymin or above ymax will be discarded.; Setting the minimum or maximum value for the Y scale before filling; has the same effect as calling ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile.html:25405,Inherit,Inheritance,25405,root/html532/TProfile.html,https://root.cern,https://root.cern/root/html532/TProfile.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""PDEFoam"", TDirectory* theTargetDir = 0); virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); TMVA::PDEFoam*ReadClonedFoamFromFile(TFile*, const TString&); voidReadFoamsFromFile(); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDEFoam.html:9960,Config,Configurable,9960,root/html532/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDEFoam.html,1,['Config'],['Configurable']
Modifiability,"ing& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = NULL); virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidTMVA::MethodCompositeBase::ReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCategory.html:9660,Config,Configurable,9660,root/html532/TMVA__MethodCategory.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCategory.html,1,['Config'],['Configurable']
Modifiability,"ing& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = NULL); virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidTMVA::MethodCompositeBase::ReadWeightsFromStream(istream& istr); virtual voidTMVA::MethodCompositeBase::ReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBoost.html:9736,Config,Configurable,9736,root/html532/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBoost.html,1,['Config'],['Configurable']
Modifiability,"ing& name) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int ivar) const; virtual const double*X() const. protected:. static doubleEvaluateFCN(const double* x, double* g); static voidFcn(int&, double*, double& f, double*, int). private:. TFumiliMinimizer&operator=(const TFumiliMinimizer& rhs); TFumiliMinimizer(const TFumiliMinimizer&). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. vector<double>fCovar; unsigned intfDim; doublefEdm; vector<double>fErrors; TFumili*fFumili; doublefMinVal; unsigned intfNFree; vector<double>fParams; static TFumili*fgFumilistatic instance (used by fcn function); static ROOT::Math::FitMethodFunction*fgFunc; static ROOT::Math::FitMethodGradFunction*fgGradFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFumiliMinimizer(int dummy = 0); Constructor for TFumiliMinimier class. ~TFumiliMinimizer(); Destructor implementation. TFumiliMinimizer(const TFumiliMinimizer& ); Implementation of copy constructor (it is private). void SetFunction(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Fumili. void SetFunction(const ROOT::Math::IMultiGradFunction & func); Set the objective function to be minimized, by passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user via this interface and there not calculated by Fumili. void Fcn(int& , double* , double& f, double* , int ); implementation of FCN static function used internally by TFumili.; Adapt IMultiGenFunction interface to TFumili FCN static f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFumiliMinimizer.html:6035,Inherit,Inheritance,6035,root/html602/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html602/TFumiliMinimizer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing& name, const TString& value) const; xml writing. void AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType). void WriteStateToXML(void* parent) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void ReadStateFromStream(TFile& rf); write reference MVA distributions (and other information); to a ROOT type weight file. void WriteStateToFile() const; write options and weights to file; note that each one text file for the main configuration information; and one ROOT file for ROOT objects are created. void ReadStateFromFile(); Function to write options and weights to file. void ReadStateFromXMLString(const char* xmlstr); for reading from memory. void ReadStateFromXML(void* parent). void ReadStateFromStream(istream& tf); read the header from the weight files of the different MVA methods. void WriteVarsToStream(ostream& tf, const TString& prefix = """") const; write the list of variables (name, min, max) for a given data; transformation method to the stream. void ReadVarsFromStream(istream& istr); Read the variables (name, min, max) for a given data; transformation method from the stream. In the stream we only; expect the limits which will be set. void AddVarsXMLTo(void* parent) const; write variable info to XML. void AddSpectatorsXMLTo(void* parent) const; write spectator info to XML. void AddClassesXMLTo(void* parent) const; write class info to XML. void AddTargetsXMLTo(void* parent) const; write target info to XML. void ReadVariablesFromXML(void* varnode); read variable info from XML. void ReadSpectatorsFromXML(void* specnode); read spectator info from XML. void ReadClassesFromXML(void* clsnode); read number of classes from XML. void ReadTargetsFromXML(void* tarnode); read target info from XML. TDirectory* BaseDir() const; returns the ROOT directory where info/histograms etc of the; corresponding MVA method instance are stored. TDirectory* MethodBaseDi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:23744,variab,variables,23744,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,10,['variab'],['variables']
Modifiability,"ing&GetConfig() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TString&GetId() const; const TString&GetImage() const; const TString&GetMsd() const; virtual const char*GetName() const; const TString&GetNodeName() const; TProofNodeInfo::ENodeTypeGetNodeType() const; static TProofNodeInfo::ENodeTypeGetNodeType(const TString& type); Int_tGetNWrks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&GetOrdinal() const; Int_tGetPerfIndex() const; Int_tGetPort() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TString&GetWorkDir() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSubMaster() const; Bool_tIsWorker() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofNodeInfo.html:2841,Inherit,InheritsFrom,2841,root/html602/TProofNodeInfo.html,https://root.cern,https://root.cern/root/html602/TProofNodeInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ing() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVolumeContentForRoot(Double_t); TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; static Double_tIGetVolumeContentForRoot(Double_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; TMVA::MethodPDERSMethodPDERS(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); TMVA::MethodPDERSMethodPDERS(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* theTargetDir = 0); virtual Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDERS.html:8722,Inherit,InheritsFrom,8722,root/html532/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDERS.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ing(Form( ""var%i"", ivar+1 )).Data(), &xvar[ivar], TString(Form( ""var%i/F"", ivar+1 )).Data() );; }; ; TRandom R( 100 );; do {; for (Int_t ivar=0; ivar<nvar; ivar++) { xvar[ivar]=R.Rndm();}; Float_t xout = sin(2.*acos(-1.)*(xvar[0]*xvar[1]*xvar[2]*xvar[3]+xvar[0]*xvar[1]));; if (nsig<100) cout << ""xout = "" << xout<<endl;; Int_t i = (Int_t) ((1.+xout)*4.99);; if (i%2 == 0 && nsig < nmax) {; treeS->Fill();; nsig++;; }; if (i%2 != 0 && nbgd < nmax){; treeB->Fill();; nbgd++;; }; } while ( nsig < nmax || nbgd < nmax);; ; dataFile->Write();; dataFile->Close();; }; ; void create_multiclassdata(Int_t nmax = 20000); {; TFile* dataFile = TFile::Open( ""data.root"", ""RECREATE"" );; int ncls = 3;; int nvar = 4;; int ndat = 0;; Int_t cls;; Float_t thecls;; Float_t weight=1;; Float_t xcls[100];; Float_t xmean[3][4] = {; { 0. , 0.3, 0.5, 0.9 },; { -0.2 , -0.3, 0.5, 0.4 },; { 0.2 , 0.1, -0.1, 0.7 }} ;; ; Float_t xvar[100];; // create tree using class flag stored in int variable cls; TTree* treeR = new TTree( ""TreeR"", ""TreeR"", 1 );; for (Int_t ivar=0; ivar<nvar; ivar++) {; treeR->Branch( TString(Form( ""var%i"", ivar )).Data(), &xvar[ivar], TString(Form( ""var%i/F"", ivar)).Data() );; }; for (Int_t icls=0; icls<ncls; icls++) {; treeR->Branch(TString(Form( ""cls%i"", icls )).Data(), &xcls[icls], TString(Form( ""cls%i/F"", icls)).Data() );; }; ; treeR->Branch(""cls"", &thecls, ""cls/F"");; treeR->Branch(""weight"", &weight, ""weight/F"");; ; TRandom R( 100 );; do {; for (Int_t icls=0; icls<ncls; icls++) xcls[icls]=0.;; cls = R.Integer(ncls);; thecls = cls;; xcls[cls]=1.;; for (Int_t ivar=0; ivar<nvar; ivar++) {; xvar[ivar]=R.Gaus(xmean[cls][ivar],1.);; }; ; if (ndat<30) cout << ""cls="" << cls <<"" xvar = "" << xvar[0]<<"" "" <<xvar[1]<<"" "" << xvar[2]<<"" "" <<xvar[3]<<endl;; ; treeR->Fill();; ndat++;; } while ( ndat < nmax );; ; dataFile->Write();; dataFile->Close();; ; }; ; ; ; ; ; ; // create the data; void create_array_with_different_lengths(Int_t N = 100); {; const Int_t nvar = 4;; Int_t nvarCurrent = 4;; Flo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/createData_8C.html:50187,variab,variable,50187,doc/master/createData_8C.html,https://root.cern,https://root.cern/doc/master/createData_8C.html,1,['variab'],['variable']
Modifiability,"ing(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TStdExceptionHandler::EStatus { kSEProceed; kSEHandled; kSEAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Handle(exception& exc); Handle exceptions deriving from TEveException. TExceptionHandler(); { Add(); }. virtual ~TExceptionHandler(); { Remove(); }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveManager__TExceptionHandler.html:9333,Inherit,Inheritance,9333,root/html534/TEveManager__TExceptionHandler.html,https://root.cern,https://root.cern/root/html534/TEveManager__TExceptionHandler.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_t&TSplinePoly::X(); Double_t&TSplinePoly::Y(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCopyPoly(TSplinePoly3 const& other). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTSplinePoly::fXabscissa; Double_tTSplinePoly::fYconstant term. private:. Double_tfBfirst order expansion coefficient : fB*1! is the first derivative at x; Double_tfCsecond order expansion coefficient : fC*2! is the second derivative at x; Double_tfDthird order expansion coefficient : fD*3! is the third derivative at x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSplinePoly3 & operator=(TSplinePoly3 const& other); assignment operator. void CopyPoly(TSplinePoly3 const& other); utility called by the copy constructors and = operator. inline TSplinePoly3(TSplinePoly3 const& other). Double_t Eval(Double_t x) const. TSplinePoly3(); {}. TSplinePoly3(Double_t x, Double_t y, Double_t b, Double_t c, Double_t d); {}. Double_t & B(); {return fB;}. Double_t & C(); {return fC;}. Double_t Derivative(Double_t x) const. » Author: Federico Carminati 28/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TSpline.h 34074 2010-06-23 09:08:49Z brun $ » Last generated: 2011-11-03 20:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSplinePoly3.html:5874,Inherit,Inheritance,5874,root/html532/TSplinePoly3.html,https://root.cern,https://root.cern/root/html532/TSplinePoly3.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing(formula(endIdx, formula.Length())).Atoi();; 1330 ; 1331 if (endCnt <= startCnt); 1332 Error(""HandleParamRanges"", ""End parameter (%d) <= start parameter (%d) in parameter range"", endCnt, startCnt);; 1333 ; 1334 TString newString = ""["";; 1335 for (int cnt = startCnt; cnt < endCnt; cnt++); 1336 newString += TString::Format(""%d],["", cnt);; 1337 newString += TString::Format(""%d]"", endCnt);; 1338 ; 1339 // std::cout << ""newString generated by HandleParamRanges is "" << newString << std::endl;; 1340 formula.Replace(matchIdx, formula.Index(""]"", matchIdx) + 1 - matchIdx, newString);; 1341 ; 1342 matchIdx += newString.Length();; 1343 }; 1344 ; 1345 // std::cout << ""final formula is now "" << formula << std::endl;; 1346}; 1347 ; 1348////////////////////////////////////////////////////////////////////////////////; 1349/// Handling user functions (and parametrized functions); 1350/// to take variables and optionally parameters as arguments; 1351void TFormula::HandleFunctionArguments(TString &formula); 1352{; 1353 // std::cout << ""calling `HandleFunctionArguments` on "" << formula << std::endl;; 1354 ; 1355 // Define parametrized functions, in case we need to use them; 1356 std::map<std::pair<TString, Int_t>, std::pair<TString, TString>> parFunctions;; 1357 FillParametrizedFunctions(parFunctions);; 1358 ; 1359 // loop through characters; 1360 for (Int_t i = 0; i < formula.Length(); ++i) {; 1361 // List of things to ignore (copied from `TFormula::ExtractFunctors`); 1362 ; 1363 // ignore things that start with square brackets; 1364 if (formula[i] == '[') {; 1365 while (formula[i] != ']'); 1366 i++;; 1367 continue;; 1368 }; 1369 // ignore strings; 1370 if (formula[i] == '\""') {; 1371 do; 1372 i++;; 1373 while (formula[i] != '\""');; 1374 continue;; 1375 }; 1376 // ignore numbers (scientific notation); 1377 if (IsScientificNotation(formula, i)); 1378 continue;; 1379 // ignore x in hexadecimal number; 1380 if (IsHexadecimal(formula, i)) {; 1381 while (!IsOperator(formula[i]) && i < for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:51421,variab,variables,51421,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ing,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:45 2015 » Last generated: 2015-06-02 13:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html:39120,variab,variable,39120,root/html602/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,2,['variab'],['variable']
Modifiability,"ing,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:28:59 2015 » Last generated: 2015-06-02 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html:39120,variab,variable,39120,root/html604/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,2,['variab'],['variable']
Modifiability,"ing,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:47 2015 » Last generated: 2015-06-02 13:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html:39120,variab,variable,39120,root/html602/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,2,['variab'],['variable']
Modifiability,"ing,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:29:01 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html:39120,variab,variable,39120,root/html604/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,2,['variab'],['variable']
Modifiability,"ing-Algorithms.html"">GSL manual</A> for more information; 	@ingroup RootFinders. Function Members (Methods); public:. virtual~Newton(); ROOT::Math::GSLRootFinderDerivROOT::Math::GSLRootFinderDeriv::GSLRootFinderDeriv(); virtual intROOT::Math::GSLRootFinderDeriv::Iterate(); virtual intROOT::Math::GSLRootFinderDeriv::Iterations() const; virtual const char*ROOT::Math::GSLRootFinderDeriv::Name() const; ROOT::Math::Roots::NewtonNewton(); virtual doubleROOT::Math::GSLRootFinderDeriv::Root() const; virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGradFunction& f, double xstart); virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGenFunction&, double, double); boolROOT::Math::GSLRootFinderDeriv::SetFunction(ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer f, ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer df, ROOT::Math::GSLRootFinderDeriv::GSLFdFPointer fdf, void* p, double Root); virtual boolROOT::Math::GSLRootFinderDeriv::Solve(int maxIter = 100, double absTol = 1E-8, double relTol = 1E-10); virtual intROOT::Math::GSLRootFinderDeriv::Status() const. protected:. voidROOT::Math::GSLRootFinderDeriv::FreeSolver(); voidROOT::Math::GSLRootFinderDeriv::SetSolver(ROOT::Math::GSLRootFdFSolver* s). private:. ROOT::Math::Roots::NewtonNewton(const ROOT::Math::Roots::Newton&); ROOT::Math::Roots::Newton&operator=(const ROOT::Math::Roots::Newton&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Newton(). virtual ~Newton(). Newton(const ROOT::Math::Roots::Newton& ); usually copying is non trivial, so we make this unaccessible. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: RootFinderAlgorithms.h 21553 2007-12-21 10:55:46Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__Roots__Newton.html:1947,Inherit,Inheritance,1947,root/html532/ROOT__Math__Roots__Newton.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__Roots__Newton.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing-Algorithms.html"">GSL manual</A> for more information; 	@ingroup RootFinders. Function Members (Methods); public:. virtual~Secant(); ROOT::Math::GSLRootFinderDerivROOT::Math::GSLRootFinderDeriv::GSLRootFinderDeriv(); virtual intROOT::Math::GSLRootFinderDeriv::Iterate(); virtual intROOT::Math::GSLRootFinderDeriv::Iterations() const; virtual const char*ROOT::Math::GSLRootFinderDeriv::Name() const; virtual doubleROOT::Math::GSLRootFinderDeriv::Root() const; ROOT::Math::Roots::SecantSecant(); virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGradFunction& f, double xstart); virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGenFunction&, double, double); boolROOT::Math::GSLRootFinderDeriv::SetFunction(ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer f, ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer df, ROOT::Math::GSLRootFinderDeriv::GSLFdFPointer fdf, void* p, double Root); virtual boolROOT::Math::GSLRootFinderDeriv::Solve(int maxIter = 100, double absTol = 1E-8, double relTol = 1E-10); virtual intROOT::Math::GSLRootFinderDeriv::Status() const. protected:. voidROOT::Math::GSLRootFinderDeriv::FreeSolver(); voidROOT::Math::GSLRootFinderDeriv::SetSolver(ROOT::Math::GSLRootFdFSolver* s). private:. ROOT::Math::Roots::Secant&operator=(const ROOT::Math::Roots::Secant&); ROOT::Math::Roots::SecantSecant(const ROOT::Math::Roots::Secant&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Secant(). virtual ~Secant(). Secant(const ROOT::Math::Roots::Secant& ); usually copying is non trivial, so we make this unaccessible. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: RootFinderAlgorithms.h 21553 2007-12-21 10:55:46Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__Roots__Secant.html:1947,Inherit,Inheritance,1947,root/html532/ROOT__Math__Roots__Secant.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__Roots__Secant.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TEveCaloDataHist (const TEveCaloDataHist &);  ; TEveCaloDataHist & operator= (const TEveCaloDataHist &);  . Additional Inherited Members;  Public Types inherited from TEveCaloData; typedef std::vector< CellGeom_t >::const_iterator vCellGeom_ci;  ; typedef std::vector< CellGeom_t >::iterator vCellGeom_i;  ; typedef std::vector< CellGeom_t > vCellGeom_t;  ; typedef std::vector< CellId_t >::iterator vCellId_i;  ; typedef std::vector< CellId_t > vCellId_t;  ; typedef std::vector< SliceInfo_t >::iterator vSliceInfo_i;  ; typedef std::vector< SliceInfo_t > vSliceInfo_t;  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloDataHist.html:30598,inherit,inherited,30598,doc/master/classTEveCaloDataHist.html,https://root.cern,https://root.cern/doc/master/classTEveCaloDataHist.html,3,['inherit'],['inherited']
Modifiability,"ing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for now) ;  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:19618,config,configuration,19618,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,18,['config'],['configuration']
Modifiability,"ing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for now) ;  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:32444,config,configuration,32444,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,110,['config'],['configuration']
Modifiability,"ing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstVar.html:17330,config,configuration,17330,doc/master/classRooConstVar.html,https://root.cern,https://root.cern/doc/master/classRooConstVar.html,1,['config'],['configuration']
Modifiability,"ing. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooGenericPdf.h>. Inheritance diagram for RooGenericPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooGenericPdf() [1/4]. RooGenericPdf::RooGenericPdf ; (; ). Definition at line 56 of file RooGenericPdf.cxx. ◆ ~RooGenericPdf(). RooGenericPdf::~RooGenericPdf ; (; ). override . Definition at line 58 of file RooGenericPdf.cxx. ◆ RooGenericPdf() [2/4]. RooGenericPdf::RooGenericPdf ; (; const char * ; name, . const char * ; title, . const char * ; formula, . const RooArgList & ; dependents . ). Constructor with a name, title, formula expression and a list of variables. ; Definition at line 86 of file RooGenericPdf.cxx. ◆ RooGenericPdf() [3/4]. RooGenericPdf::RooGenericPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; dependents . ). Constructor with formula expression and list of input variables. ; Definition at line 67 of file RooGenericPdf.cxx. ◆ RooGenericPdf() [4/4]. RooGenericPdf::RooGenericPdf ; (; const RooGenericPdf & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 106 of file RooGenericPdf.cxx. Member Function Documentation. ◆ Class(). static TClass * RooGenericPdf::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooGenericPdf::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooGenericPdf::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 80 of file RooGenericPdf.h. ◆ clone(). TObject * RooGenericPdf::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 33 of file RooGenericPdf.h. ◆ DeclFileName(). static const char * RooGenericPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file contain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:76007,variab,variables,76007,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,1,['variab'],['variables']
Modifiability,"ing...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::TSpline2 Class ReferenceTMVA. ; Quadratic interpolation of TGraph. ; Definition at line 43 of file TSpline2.h. Public Member Functions;  TSpline2 (const TString &title, const TGraph *theGraph);  constructor from TGraph pointer (not owned by TSpline2) TSpline is a TNamed object ;  ; virtual ~TSpline2 (void);  destructor ;  ; virtual void BuildCoeff (void);  no coefficients to precompute ;  ; virtual Double_t Eval (Double_t x) const;  returns quadratically interpolated TGraph entry around x ;  ; virtual void GetKnot (Int_t i, Double_t &x, Double_t &y) const;  no knots ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TSpline. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSpline;  TSpline ();  ;  TSpline (const char *title, Double_t delta, Double_t xmin, Double_t xmax, Int_t np, Bool_t step);  ;  ~TSpline () override;  Destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a spline. ;  ; void Draw (Option_t *option="""") override;  Draw this function with its current attributes. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual Double_t GetDelta () const;  ; TH1F * GetHistogram () const;  ; virtual Int_t GetNp () const;  ; virtual Int_t GetNpx () const;  ; virtual Double_t GetXmax () const;  ; virtual Double_t GetXmin () const;  ; void Paint (Option_t *option="""") override;  Paint this function with its current attributes. ;  ; void SaveAs (const char *="""", Option_t *="""") const override;  Save this object in the file specified by filename. ;  ; void SetNpx (Int_t n);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TSpline2.html:1061,inherit,inherited,1061,doc/master/classTMVA_1_1TSpline2.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TSpline2.html,1,['inherit'],['inherited']
Modifiability,"ing...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TClassDocOutput Class Reference. . Definition at line 21 of file TClassDocOutput.h. Public Member Functions;  TClassDocOutput (THtml &html, TClass *cl, TList *typedefs);  Create an object given the invoking THtml object, and the TClass object that we will generate output for. ;  ;  ~TClassDocOutput () override;  Destructor, deletes fParser. ;  ; void Class2Html (Bool_t force=kFALSE);  Create HTML files for a single class. ;  ; Bool_t ClassDotCharts (std::ostream &out);  This function builds the class charts for one class in GraphViz/Dot format, i.e. ;  ; void CreateClassHierarchy (std::ostream &out, const char *docFileName);  Create the hierarchical class list part for the current class's base classes. ;  ; TClass * IsA () const override;  ; void MakeTree (Bool_t force=kFALSE);  Create an output file with a graphical representation of the class inheritance. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDocOutput;  TDocOutput (THtml &html);  ;  ~TDocOutput () override;  ; virtual void AdjustSourcePath (TString &line, const char *relpath=""../"");  adjust the path of links for source files, which are in src/, but need to point to relpath (usually ""../""). ;  ; void Convert (std::istream &in, const char *infilename, const char *outfilename, const char *title, const char *relpath=""../"", Int_t includeOutput=0, const char *context="""", TGClient *gclient=0);  Convert a text file into a html file. ;  ; Bool_t CopyHtmlFile (const char *sourceName, const char *destName="""");  Copy file to HTML directory. ;  ; virtual void CreateClassIndex ();  Create index of all classes. ;  ; virtual void CreateClassTypeDefs ();  Create a forwarding p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocOutput.html:1169,inherit,inheritance,1169,doc/master/classTClassDocOutput.html,https://root.cern,https://root.cern/doc/master/classTClassDocOutput.html,1,['inherit'],['inheritance']
Modifiability,"ing...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricGradFunctionOneDim Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; Interface (abstract class) for parametric one-dimensional gradient functions providing in addition to function evaluation with respect the coordinates also the gradient with respect to the parameters, via the method ParameterGradient. ; It is a derived class from ROOT::Math::IParametricFunctionOneDim.; The pure private virtual method DoParameterGradient must be implemented by the derived classes in addition to those inherited by the base abstract classes. ; Definition at line 327 of file IParamFunction.h. Public Types; typedef IParametricFunctionOneDim::BaseFunc BaseFunc;  ; typedef IGradientFunctionOneDim BaseGradFunc;  ; typedef IParametricFunctionOneDim BaseParamFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions;  ~IParametricGradFunctionOneDim () override;  Virtual Destructor (no operations) ;  ; double ParameterDerivative (const double *x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter Compatibility interface with multi-dimensional functions. ;  ; double ParameterDerivative (const double *x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values (multi-dim like interface) ;  ; double ParameterDerivative (double x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter. ;  ; double ParameterDerivative (double x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values. ;  ; void ParameterGradient (const double *x, const double *p, double *gra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html:1123,inherit,inherited,1123,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,2,['inherit'],['inherited']
Modifiability,"ing...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::IntegrandTransform Class Reference. ; Auxiliary inner class for mapping infinite and semi-infinite integrals. ; Definition at line 234 of file GaussIntegrator.h. Public Types; enum  ESemiInfinitySign { kMinus = -1; , kPlus = +1; };  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions;  IntegrandTransform (const double boundary, ESemiInfinitySign sign, const IGenFunction *integrand);  ;  IntegrandTransform (const IGenFunction *integrand);  ; IGenFunction * Clone () const override;  Clone a function. ;  ; double DoEval (double x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ; double operator() (double x) const;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x, double boundary, int sign) const;  . Private Attributes; double fBoundary;  ; bool fInfiniteInterval;  ; const IGenFunction * fIntegrand;  ; ESemiInfinitySign fSign;  . #include <Math/GaussIntegrator.h>. Inheritance diagram for ROOT::Math::IntegrandTransform:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESemiInfinitySign. enum ROOT::Math::IntegrandTransform::ESemiInfinitySign. EnumeratorkMinus ; kPlus . Definition at line 236 of file GaussIntegrator.h. Constructor & Destructor Documentation. ◆ IntegrandTransform() [1/2]. ROOT::Math::IntegrandTransform::IntegrandTransform ; (; const IGenFunction * ; integrand).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegrandTransform.html:1066,inherit,inherited,1066,doc/master/classROOT_1_1Math_1_1IntegrandTransform.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegrandTransform.html,1,['inherit'],['inherited']
Modifiability,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TNeuronInputAbs Class ReferenceTMVA. ; TNeuron input calculator – calculates the sum of the absolute values of the weighted inputs. ; Definition at line 46 of file TNeuronInputAbs.h. Public Member Functions;  TNeuronInputAbs ();  ; virtual ~TNeuronInputAbs ();  ; Double_t GetInput (const TNeuron *neuron) const;  ; TString GetName ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TNeuronInput;  TNeuronInput ();  ; virtual ~TNeuronInput ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TNeuronInput; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TNeuronInputAbs.h>. Inheritance diagram for TMVA::TNeuronInputAbs:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNeuronInputAbs(). TMVA::TNeuronInputAbs::TNeuronInputAbs ; (; ). inline . Definition at line 50 of file TNeuronInputAbs.h. ◆ ~TNeuronInputAbs(). virtual TMVA::TNeuronInputAbs::~TNeuronInputAbs ; (; ). inlinevirtual . Definition at line 51 of file TNeuronInputAbs.h. Member Function Documentation. ◆ Class(). static TClass * TMVA::TNeuronInputAbs::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::TNeuronInputAbs::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TNeuronInputAbs.html:1110,inherit,inherited,1110,doc/master/classTMVA_1_1TNeuronInputAbs.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TNeuronInputAbs.html,1,['inherit'],['inherited']
Modifiability,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFumiliMinimizer Class Reference. ; TFumiliMinimizer class: minimizer implementation based on TFumili. ; Definition at line 43 of file TFumiliMinimizer.h. Public Member Functions;  TFumiliMinimizer (int dummy=0);  Default constructor (an argument is needed by plug-in manager) ;  ;  ~TFumiliMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) overr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumiliMinimizer.html:577,plug-in,plug-in,577,doc/master/classTFumiliMinimizer.html,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html,3,"['plug-in', 'variab']","['plug-in', 'variable', 'variables']"
Modifiability,"ing; Float_tfInitTimetime before processing; TList*fInputInput list; Float_tfMBsReadLastMBs read at fProcTimeLast; Double_tfMaxPacketTimemaximum packet time; Double_tfMinPacketTimeminimum packet time; Float_tfProcTimetime since start of processing; Float_tfProcTimeLastTime of the last measurement; TTimer*fProgressprogress updates timer; TNtuple*fProgressPerf{Active workers, evt rate, MBs read} as a function of processing time; TProofProgressStatus*fProgressStatuspointer to status in the player.; Float_tfReportPeriodTime between reports if nothing changes (estimated proc time / 100); TMap*fSlaveStatsslave status, keyed by correspondig TSlave; TTimefStartTimetime offset; Bool_tfStopTermination of Process() requested?; Float_tfTimeUpdttime between updates; Long64_tfTotalEntriestotal number of entries to be distributed;; TVirtualPacketizer::EUseEstOptfUseEstOptControl usage of estimated values for the progress info; Bool_tfValidConstructed properly?. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualPacketizer(TList* input, TProofProgressStatus* st = 0); Constructor. ~TVirtualPacketizer(); Destructor. Long64_t GetEntries(Bool_t tree, TDSetElement* e); Get entries. TDSetElement * GetNextPacket(TSlave* sl, TMessage* r); Get next packet. void StopProcess(Bool_t abort, Bool_t stoptimer = kFALSE); Stop process. TDSetElement* CreateNewPacket(TDSetElement* base, Long64_t first, Long64_t num); Creates a new TDSetElement from from base packet starting from; the first entry with num entries.; The function returns a new created objects which have to be deleted. Bool_t HandleTimer(TTimer* timer); Send progress message to client. void SetInitTime(); Set the initialization time. Int_t AddWorkers(TList* workers); Adds new workers. Must be implemented by each real packetizer properly.; Returns the number of workers added, or -1 on failure. TVirtualPacketizer(TList* input, TProofProgressStatus* st = 0). void operator=(const TVirtualPacketi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualPacketizer.html:8732,Inherit,Inheritance,8732,root/html534/TVirtualPacketizer.html,https://root.cern,https://root.cern/root/html534/TVirtualPacketizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ing; TMVA::KDEKernel::EKernelTypefKDEtypeKernel type to use for KDE; TStringfKDEtypeStringstrings used to read definitions; TMVA::MsgLogger*fLogger! message logger; Int_tfMaxNsmoothMax number of smoothing iterations; Int_tfMinNsmoothMin number of smoothing iterations; TH1*fNSmoothHistnumber of smooth for each bin; Bool_tfNormalizenormalize histogram (false for cumulative distribution used in GaussTranform); Int_tfNsmoothMin number of smoothing iterations; TH1*fPDFHistthe high-binned histogram corresponding to the PDF; TStringfPDFNamefor output; UInt_tfReadingVersionthe TMVA version of the weight file; TSpline*fSpline! the used spline type; TStringfSuffix! the suffix for options; Bool_tfUseHistogramspline0 uses histogram as reference; static const Double_tfgEpsilonminimum PDF return; static const Bool_tfgManualIntegrationmanual integration (sum over bins) or DGAUSS; static const Int_tfgNbin_PdfHistnumber of bins in high-binned reference histogram. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDF(const TString& name, Bool_t norm = kTRUE); default constructor needed for ROOT I/O. PDF(const TString& name, const TH1* theHist, TMVA::PDF::EInterpolateMethod method = kSpline2, Int_t minnsmooth = 0, Int_t maxnsmooth = 0, Bool_t checkHist = kFALSE, Bool_t norm = kTRUE); constructor of spline based PDF:. PDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); constructor of kernel based PDF:. PDF(const TString& name, const TString& options, const TString& suffix = """", TMVA::PDF* defaultPDF = 0, Bool_t norm = kTRUE). ~PDF(); destructor. void BuildPDF(const TH1* theHist). Int_t GetHistNBins(Int_t evtNum = 0). void BuildSplinePDF(); build the PDF from the original histograms. void BuildKDEPDF(); creates high-binned reference histogram to be used instead of the; PDF for speed reasons. void Smooth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDF.html:10599,Inherit,Inheritance,10599,root/html602/TMVA__PDF.html,https://root.cern,https://root.cern/root/html602/TMVA__PDF.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypeak; RooRealProxytail; RooRealProxywidth; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNovosibirsk(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _peak, RooAbsReal& _width, RooAbsReal& _tail); The two addresses refer to our first dependent variable and; parameter, respectively, as declared in the rdl file. RooNovosibirsk(const RooNovosibirsk& other, const char* name = 0). Double_t evaluate() const; If tail=eta=0 the Belle distribution becomes gaussian. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooNovosibirsk(); Your constructor needs a name and title and then a list of the; dependent variables and parameters used by this PDF. Use an; underscore in the variable names to distinguish them from your; own local versions. {}. TObject* clone(const char* newname) const; { return new RooNovosibirsk(*this,newname);	}. virtual ~RooNovosibirsk(); An empty constructor is usually ok. { }. » Last changed: Tue Jun 30 14:34:31 2015 » Last generated: 2015-06-30 14:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNovosibirsk.html:45560,variab,variables,45560,root/html602/RooNovosibirsk.html,https://root.cern,https://root.cern/root/html602/RooNovosibirsk.html,4,['variab'],"['variable', 'variables']"
Modifiability,"ingDSetsTemporary datasets used for async running; TSelector*TProof::fSelectorSelector to be processed, if any; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TList*TProof::fTerminatedSlaveInfoslist of unique infos of terminated slaves; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads; static TProof::ESlavesTProof::kActive; static TProof::ESlavesTProof::kAll; static TProof::ESlavesTProof::kAllUnique; static TProof::ESlavesTProof::kUnique. private:. TCondor*fCondorproxy for our Condor pool; TTimer*fTimertimer for delayed Condor COD suspend. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofCondor(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Start proof using condor. ~TProofCondor(); Clean up Condor PROOF environment. Bool_t StartSlaves(Bool_t ); Setup Condor workers using dynamic information. void SetActive(Bool_t active); Suspend or resume PROOF via Condor. TString GetJobAd(); Get job Ad. TProofCondor(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0). void SetActive(); { TProof::SetActive(); }. » Author: Fons Rademakers 13/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-02 16:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofCondor.html:28135,Inherit,Inheritance,28135,root/html604/TProofCondor.html,https://root.cern,https://root.cern/root/html604/TProofCondor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingDSetsTemporary datasets used for async running; TSelector*TProof::fSelectorSelector to be processed, if any; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TList*TProof::fTerminatedSlaveInfoslist of unique infos of terminated slaves; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads; static TProof::ESlavesTProof::kActive; static TProof::ESlavesTProof::kAll; static TProof::ESlavesTProof::kAllUnique; static TProof::ESlavesTProof::kUnique. private:. TCondor*fCondorproxy for our Condor pool; TTimer*fTimertimer for delayed Condor COD suspend. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofCondor(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Start proof using condor. ~TProofCondor(); Clean up Condor PROOF environment. Bool_t StartSlaves(Bool_t ); Setup Condor workers using dynamic information. void SetActive(Bool_t active); Suspend or resume PROOF via Condor. TString GetJobAd(); Get job Ad. TProofCondor(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0). void SetActive(); { TProof::SetActive(); }. » Author: Fons Rademakers 13/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofCondor.html:27874,Inherit,Inheritance,27874,root/html602/TProofCondor.html,https://root.cern,https://root.cern/root/html602/TProofCondor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingMatchFileSysName(TString& filename, THtml::TFileSysEntry** fse = 0) const; voidNormalizePath(TString& path) const; voidSplitClassIntoDirFile(const TString& clname, TString& dir, TString& filename) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ExpandSearchPath(TString& path) const; Create all permutations of path and THtml's input path:; path being PP/ and THtml's input being .:include/:src/ gives; .:./PP/:include:include/PP/:src/:src/PP. void SplitClassIntoDirFile(const TString& clname, TString& dir, TString& filename) const; Given a class name with a scope, split the class name into directory part; and file name: A::B::C becomes module B, filename C. bool GetDeclFileName(const TClass* cl, TString& out_filename, TString& out_fsys, THtml::TFileSysEntry** fse = 0) const; Determine cl's declaration file name. Usually it's just; cl->GetDeclFileName(), but sometimes conversions need to be done; like include/ to abc/cde/inc/. If no declaration file name is; available, look for b/inc/C.h for class A::B::C. out_fsys will contain; the file system's (i.e. local machine's) full path name to the file.; The function returns false if the class's header file cannot be found. If your ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THtml__TFileDefinition.html:6670,Inherit,Inheritance,6670,root/html602/THtml__TFileDefinition.html,https://root.cern,https://root.cern/root/html602/THtml__TFileDefinition.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingModel. private . can be full (rules+linear), rules, linear ; Definition at line 337 of file RuleEnsemble.h. ◆ fLinCoefficients. std::vector< Double_t > TMVA::RuleEnsemble::fLinCoefficients. private . linear coefficients, one per variable ; Definition at line 345 of file RuleEnsemble.h. ◆ fLinDM. std::vector< Double_t > TMVA::RuleEnsemble::fLinDM. private . delta- ; Definition at line 344 of file RuleEnsemble.h. ◆ fLinDP. std::vector< Double_t > TMVA::RuleEnsemble::fLinDP. private . delta+ in eq 24, ref 2 ; Definition at line 343 of file RuleEnsemble.h. ◆ fLinImportance. std::vector< Double_t > TMVA::RuleEnsemble::fLinImportance. private . linear term importance ; Definition at line 349 of file RuleEnsemble.h. ◆ fLinNorm. std::vector< Double_t > TMVA::RuleEnsemble::fLinNorm. private . norm of ditto, see after eq 26 in ref 2 ; Definition at line 346 of file RuleEnsemble.h. ◆ fLinPDFB. std::vector< TH1F* > TMVA::RuleEnsemble::fLinPDFB. private . pdfs for each variable, background ; Definition at line 347 of file RuleEnsemble.h. ◆ fLinPDFS. std::vector< TH1F* > TMVA::RuleEnsemble::fLinPDFS. private . pdfs for each variable, signal ; Definition at line 348 of file RuleEnsemble.h. ◆ fLinQuantile. Double_t TMVA::RuleEnsemble::fLinQuantile. private . quantile cut to remove outliers ; Definition at line 339 of file RuleEnsemble.h. ◆ fLinTermOK. std::vector< Char_t > TMVA::RuleEnsemble::fLinTermOK. private . flags linear terms with sufficient strong importance <– stores boolean ; Definition at line 342 of file RuleEnsemble.h. ◆ fLogger. MsgLogger* TMVA::RuleEnsemble::fLogger. mutableprivate . ! message logger ; Definition at line 381 of file RuleEnsemble.h. ◆ fNRulesGenerated. UInt_t TMVA::RuleEnsemble::fNRulesGenerated. private . number of rules generated, before cleanup ; Definition at line 366 of file RuleEnsemble.h. ◆ fOffset. Double_t TMVA::RuleEnsemble::fOffset. private . offset in discriminator function ; Definition at line 340 of file RuleEnsemble.h. ◆ fRuleFit. co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html:34954,variab,variable,34954,doc/master/classTMVA_1_1RuleEnsemble.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html,1,['variab'],['variable']
Modifiability,"ingParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); call the Optimzier with the set of paremeters and ranges that; are meant to be tuned. void SetTuneParameters(map<TString,Double_t> tuneParameters); set the tuning parameters accoding to the argument; This is just a dummy .. have a look at the MethodBDT how you could; perhaps implment the same thing for the other Classifiers.. void TrainMethod(). void GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const. void AddRegressionOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddMulticlassOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void NoErrorCalc(Double_t *const err, Double_t *const errUpper). Double_t GetMvaValue(const TMVA::Event *const ev, Double_t* err = 0, Double_t* errUpper = 0). void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample. bias = average deviation; dev = average absolute deviation; rms = rms of deviation. void TestMulticlass(); test multiclass classification. void TestClassification(); initialization. void WriteStateToStream(ostream& tf) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void AddInfoItem(void* gi, const TString& name, const TString& value) const; xml writing. void AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType anal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:21917,variab,variable,21917,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,1,['variab'],['variable']
Modifiability,"ingRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNorm! Assume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHistFunc(); Default constructor. RooHistFunc(const char* name, const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHistFunc.html:33648,config,configuration,33648,root/html532/RooHistFunc.html,https://root.cern,https://root.cern/root/html532/RooHistFunc.html,2,['config'],['configuration']
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3C(); Constructor. ~TH3C(); Destructor. TH3C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3C(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3C(const TH3C& h3c); Copy constructor. void AddBinContent(In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3C.html:26260,Inherit,Inheritance,26260,root/html532/TH3C.html,https://root.cern,https://root.cern/root/html532/TH3C.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3C(); Constructor. ~TH3C(); Destructor. TH3C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3C(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3C(const TH3C& h3c); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3C.html:29694,Inherit,Inheritance,29694,root/html602/TH3C.html,https://root.cern,https://root.cern/root/html602/TH3C.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3D(); Constructor. ~TH3D(); Destructor. TH3D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3D(const TH3D& h3d); Copy constructor. void Copy(TObject& hn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3D.html:26285,Inherit,Inheritance,26285,root/html532/TH3D.html,https://root.cern,https://root.cern/root/html532/TH3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3D(); Constructor. ~TH3D(); Destructor. TH3D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3D(const TH3D& h3d); Copy constructor. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins includi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3D.html:29719,Inherit,Inheritance,29719,root/html602/TH3D.html,https://root.cern,https://root.cern/root/html602/TH3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3F(); Constructor. ~TH3F(); Destructor. TH3F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3F(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3F(const TH3F& h3f); Copy constructor. void Copy(TObject& hn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3F.html:26273,Inherit,Inheritance,26273,root/html532/TH3F.html,https://root.cern,https://root.cern/root/html532/TH3F.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3F(); Constructor. ~TH3F(); Destructor. TH3F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3F(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3F(const TH3F& h3f); Copy constructor. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins includi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3F.html:29707,Inherit,Inheritance,29707,root/html602/TH3F.html,https://root.cern,https://root.cern/root/html602/TH3F.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3I(); Constructor. ~TH3I(); Destructor. TH3I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3I(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3I(const TH3I& h3i); Copy constructor. void AddBinContent(In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3I.html:26274,Inherit,Inheritance,26274,root/html532/TH3I.html,https://root.cern,https://root.cern/root/html532/TH3I.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3I(); Constructor. ~TH3I(); Destructor. TH3I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3I(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3I(const TH3I& h3i); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3I.html:29708,Inherit,Inheritance,29708,root/html602/TH3I.html,https://root.cern,https://root.cern/root/html602/TH3I.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3S(); Constructor. ~TH3S(); Destructor. TH3S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3S(const TH3S& h3s); Copy Constructor. void AddBinContent(In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3S.html:26280,Inherit,Inheritance,26280,root/html532/TH3S.html,https://root.cern,https://root.cern/root/html532/TH3S.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3S(); Constructor. ~TH3S(); Destructor. TH3S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3S(const TH3S& h3s); Copy Constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3S.html:29714,Inherit,Inheritance,29714,root/html602/TH3S.html,https://root.cern,https://root.cern/root/html602/TH3S.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingTSystem::fMakeExeDirective used to build an executable; TStringTSystem::fMakeSharedLibDirective used to build a shared library; Int_tTSystem::fMaxrfdLargest fd in read mask; Int_tTSystem::fMaxwfdLargest fd in write mask; TStringTNamed::fNameobject identifier; Int_tTSystem::fNfdNumber of fd's in masks; TStringTSystem::fObjExtExtension of object files (.o, .obj, etc.); TSeqCollection*TSystem::fOnExitListList of items to be cleaned-up on exit; TFdSet*TSystem::fReadmask!Files that should be checked for read events; TFdSet*TSystem::fReadready!Files with reads waiting; Int_tTSystem::fSigcntNumber of pending signals; TSeqCollection*TSystem::fSignalHandlerList of signal handlers; TFdSet*TSystem::fSignals!Signals that were trapped; TStringTSystem::fSoExtExtension of shared library (.so, .sl, .a, .dll, etc.); TSeqCollection*TSystem::fStdExceptionHandlerList of std::exception handlers; TSeqCollection*TSystem::fTimersList of timers; TStringTNamed::fTitleobject title; TStringTSystem::fWdpathWorking directory; TFdSet*TSystem::fWritemask!Files that should be checked for write events; TFdSet*TSystem::fWriteready!Files with writes waiting. private:. void*fDirpdirectory handler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void * GetDirPtr() const; { return fDirp; }. TDCacheSystem(). virtual ~TDCacheSystem(); { }. Int_t MakeDirectory(const char* name). void * OpenDirectory(const char* name). void FreeDirectory(void* dirp). const char * GetDirEntry(void* dirp). Int_t GetPathInfo(const char* path, FileStat_t& buf). Bool_t AccessPathName(const char* path, EAccessMode mode). » Author: Grzegorz Mazur 20/01/2002 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/dcache:$Id: TDCacheFile.h 34444 2010-07-16 02:17:39Z pcanal $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDCacheSystem.html:18870,Inherit,Inheritance,18870,root/html532/TDCacheSystem.html,https://root.cern,https://root.cern/root/html532/TDCacheSystem.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingfGroupslave's group id; TStringfImageslave's image name; TFileHandler*fInputinput handler related to this slave; TStringfMsdmass storage domain of slave; TStringfNameslave's hostname; TStringfOrdinalslave's ordinal number; Int_tfParallelnumber of active slaves; Int_tfPerfIdxrelative CPU performance index; Int_tfPortslave's port number; TProof*fProofproof cluster to which slave belongs; TStringfProofWorkDirbase proofserv working directory (info obtained from slave); Int_tfProtocolslave's protocol level; TStringfROOTVersROOT version run by worker; Float_tfRealTimereal time spent executing commands (info obtained from slave); TStringfSessionTagunique tag for ths worker process; TSlave::ESlaveTypefSlaveTypetype of slave (either kMaster or kSlave); TSocket*fSocketsocket to slave; Int_tfStatusremote return status; TStringfUserslave's user id; TStringfWorkDirslave's working directory (info obtained from slave). private:. static TSlave_tfgTXSlaveHook. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSlave(const char* host, const char* ord, Int_t perf, const char* image, TProof* proof, Int_t stype, const char* workdir, const char* msd); Create a PROOF slave object. Called via the TProof ctor. TSlave(); Default constructor used by derived classes. void Init(const char* host, Int_t port, Int_t stype); Init a PROOF slave object. Called via the TSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. Int_t SetupServ(Int_t stype, const char* conffile); Init a PROOF slave object. Called via the TSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. void Init(TSocket* s, Int_t stype); Init a PROOF slave object using the connection opened via s. Used to; avoid double opening when an attempt via TXSlave found a remote proofd. ~TSlave(); Destroy slave. void Close(Option_t* opt = """"); Close slave socket. Int_t Compare(const TObject* obj) const; Used to sort slaves by p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSlave.html:8354,Inherit,Inheritance,8354,root/html532/TSlave.html,https://root.cern,https://root.cern/root/html532/TSlave.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tfAlpha1angle w.r.t. the y axis; Float_tfAlpha2angle w.r.t. the y axis; Float_tfBl1half length in x at low z and y low edge; Float_tfBl2half length in x at high z and y low edge; Float_tTBRIK::fDxhalf length in x; Float_tTBRIK::fDyhalf length in y; Float_tTBRIK::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Float_tfH1half length in y at low z; Float_tfH2half length in y at high z; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTShape::fNumberShape number; TStringTNamed::fTitleobject title; Float_tfTl1half length in x at low z and y high edge; Float_tfTl2half length in x at high z and y high edge; Float_tfTwisttwisting parameter; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTRA(); GTRA shape default constructor. TGTRA(const char* name, const char* title, const char* material, Float_t dz, Float_t theta, Float_t phi, Float_t twist, Float_t h1, Float_t bl1, Float_t tl1, Float_t alpha1, Float_t h2, Float_t bl2, Float_t tl2, Float_t alpha2); GTRA shape normal constructor. ~TGTRA(); GTRA shape default destructor. void SetPoints(Double_t* points) const; Create GTRA points. TGTRA(). Float_t GetTwist() const; {return fTwist;}. Float_t GetH1() const; {return fH1;}. Float_t GetBl1() const; {return fBl1;}. Float_t GetTl1() const; {return fTl1;}. Float_t GetAlpha1() const; {return fAlpha1;}. Float_t GetH2() const; {return fH2;}. Float_t GetBl2() const; {return fBl2;}. Float_t GetTl2() const; {return fTl2;}. Float_t GetAlpha2() const; {return fAlpha2;}. » Author: Nenad Buncic 19/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-03-13 19:27; This pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGTRA.html:10478,Inherit,Inheritance,10478,root/html534/TGTRA.html,https://root.cern,https://root.cern/root/html534/TGTRA.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tfAlpha1angle w.r.t. the y axis; Float_tfAlpha2angle w.r.t. the y axis; Float_tfBl1half length in x at low z and y low edge; Float_tfBl2half length in x at high z and y low edge; Float_tTBRIK::fDxhalf length in x; Float_tTBRIK::fDyhalf length in y; Float_tTBRIK::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Float_tfH1half length in y at low z; Float_tfH2half length in y at high z; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTShape::fNumberShape number; TStringTNamed::fTitleobject title; Float_tfTl1half length in x at low z and y high edge; Float_tfTl2half length in x at high z and y high edge; Float_tfTwisttwisting parameter; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTRA(); GTRA shape default constructor. TGTRA(const char* name, const char* title, const char* material, Float_t dz, Float_t theta, Float_t phi, Float_t twist, Float_t h1, Float_t bl1, Float_t tl1, Float_t alpha1, Float_t h2, Float_t bl2, Float_t tl2, Float_t alpha2); GTRA shape normal constructor. ~TGTRA(); GTRA shape default destructor. void SetPoints(Double_t* points) const; Create GTRA points. TGTRA(). Float_t GetTwist() const; {return fTwist;}. Float_t GetH1() const; {return fH1;}. Float_t GetBl1() const; {return fBl1;}. Float_t GetTl1() const; {return fTl1;}. Float_t GetAlpha1() const; {return fAlpha1;}. Float_t GetH2() const; {return fH2;}. Float_t GetBl2() const; {return fBl2;}. Float_t GetTl2() const; {return fTl2;}. Float_t GetAlpha2() const; {return fAlpha2;}. » Author: Nenad Buncic 19/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id: TGTRA.h 20882 2007-11-19 11:31:26Z rdm $ » ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTRA.html:10313,Inherit,Inheritance,10313,root/html532/TGTRA.html,https://root.cern,https://root.cern/root/html532/TGTRA.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfDBcurrently selected DB; Int_tfErrorCodeerror code of last operation; TStringfErrorMsgerror message of last operation; Bool_tfErrorOutenable error output; TStringfHosthost to which we are connected; Int_tfPortport to which we are connected; TStringfTypetype of DBMS (MySQL, Oracle, SysBase, ...); static const char*fgFloatFmt! printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on. Class Charts. Inheritance Chart:. TObject. ←; TSQLServer. ←. TMySQLServer. Function documentation; TSQLServer * Connect(const char* db, const char* uid, const char* pw); The db should be of the form: <dbms>://<host>[:<port>][/<database>],; e.g.: mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main,; pgsql://... or sapdb://...; The uid is the username and pw the password that should be used for; the connection. Depending on the <dbms> the shared library (plugin); for the selected system will be loaded. When the connection could not; be opened 0 is returned. Bool_t Exec(const char* sql); Execute sql query.; Usefull for commands like DROP TABLE or INSERT, where result set; is not interested. Return kTRUE if no error. Int_t GetErrorCode() const; returns error code of last operation; if res==0, no error; Each specific implementation of TSQLServer provides its own error coding. const char* GetErrorMsg() const; returns error message of last operation; if no errors, return 0; Each specific implementation of TSQLServer provides its own error messages. void ClearError(); reset error fields. void SetError(Int_t code, const char* msg, const char* method = 0); set new values for error fields; if method is specified, displays error message. Bool_t StartTransaction(); submit ""START TRANSACTION"" query to database; return kTRUE, if successful. Bool_t Commit(); submit ""COMMIT"" query to database; return kTRUE, if successful. Bool_t Rollback(); submit ""ROL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLServer.html:9264,plugin,plugin,9264,root/html602/TSQLServer.html,https://root.cern,https://root.cern/root/html602/TSQLServer.html,4,['plugin'],['plugin']
Modifiability,"ingy, etc. ; [in]nbinsnumber of bins ; [in]xlowlow edge of first bin ; [in]xupupper edge of last bin (not included in last bin) . Definition at line 697 of file TH1.cxx. ◆ TH1() [4/5]. TH1::TH1 ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Float_t * ; xbins . ). protected . Constructor for variable bin size histograms using an input array of type float. ; Creates the main histogram structure.; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type float and size nbins+1 . Definition at line 719 of file TH1.cxx. ◆ TH1() [5/5]. TH1::TH1 ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins . ). protected . Constructor for variable bin size histograms using an input array of type double. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type double and size nbins+1 . Definition at line 741 of file TH1.cxx. ◆ ~TH1(). TH1::~TH1 ; (; ). override . Histogram default destructor. ; Definition at line 643 of file TH1.cxx. Member Function Documentation. ◆ Add() [1/3]. Bool_t TH1::Add ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1 . ). virtual . Replace contents of this histogram by the addition of h1 and h2. ; this = c1*h1 + c2*h2 if errors are defined (see TH1::Sumw2), errors are also recalculated; Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this if not already set.; Note also that adding histog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:73525,variab,variable,73525,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variable']
Modifiability,"ing GetClientVersion () const;  Returns current client version. ;  ; unsigned GetConnectionId (int num=0) const;  Returns connection id for specified connection sequence number Only active connections are returned - where clients confirms connection Total number of connections can be retrieved with NumConnections() method. ;  ; std::vector< unsigned > GetConnections (unsigned excludeid=0) const;  returns vector with all existing connections ids One also can exclude specified connection from return result, which can be useful to be able reply too all but this connections ;  ; unsigned GetConnLimit () const;  returns configured connections limit (0 - default) ;  ; unsigned GetDisplayConnection () const;  Returns first connection id where window is displayed It could be that connection(s) not yet fully established - but also not timed out Batch jobs will be ignored here Returns 0 if connection not exists. ;  ; unsigned GetHeight () const;  returns configured window height (0 - default) ;  ; unsigned GetId () const;  Returns ID for the window - unique inside window manager. ;  ; std::shared_ptr< RWebWindowsManager > GetManager () const;  Returns window manager. ;  ; unsigned GetMaxQueueLength () const;  Return maximal queue length of data which can be held by window. ;  ; float GetOperationTmout () const;  Returns timeout for synchronous WebWindow operations. ;  ; int GetSendQueueLength (unsigned connid) const;  Returns send queue length for specified connection. ;  ; THttpServer * GetServer ();  Return THttpServer instance serving requests to the window. ;  ; std::string GetUrl (bool remote=true);  Return URL string to connect web window URL typically includes extra parameters required for connection with the window like http://localhost:9635/win1/?key=<connection_key>#<session_key> When. ;  ; std::string GetUserArgs () const;  Returns configured user arguments for web window See SetUserArgs method for more details. ;  ; unsigned GetWidth () const;  returns configured w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindow.html:3397,config,configured,3397,doc/master/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindow.html,1,['config'],['configured']
Modifiability,"ing GetClientVersion () const;  Returns current client version. ;  ; unsigned GetConnectionId (int num=0) const;  Returns connection id for specified connection sequence number Only active connections are returned - where clients confirms connection Total number of connections can be retrieved with NumConnections() method. ;  ; std::vector< unsigned > GetConnections (unsigned excludeid=0) const;  returns vector with all existing connections ids One also can exclude specified connection from return result, which can be useful to be able reply too all but this connections ;  ; unsigned GetConnLimit () const;  returns configured connections limit (0 - default) ;  ; unsigned GetDisplayConnection () const;  Returns first connection id where window is displayed It could be that connection(s) not yet fully established - but also not timed out Batch jobs will be ignored here Returns 0 if connection not exists. ;  ; unsigned GetHeight () const;  returns configured window height (0 - default) ;  ; unsigned GetId () const;  Returns ID for the window - unique inside window manager. ;  ; std::shared_ptr< RWebWindowsManager > GetManager () const;  Returns window manager. ;  ; unsigned GetMaxQueueLength () const;  Return maximal queue length of data which can be held by window. ;  ; float GetOperationTmout () const;  Returns timeout for synchronous WebWindow operations. ;  ; std::string GetRelativeAddr (const RWebWindow &win) const;  Returns relative URL address for the specified window Address can be required if one needs to access data from one window into another window Used for instance when inserting panel into canvas. ;  ; std::string GetRelativeAddr (const std::shared_ptr< RWebWindow > &win) const;  Returns relative URL address for the specified window Address can be required if one needs to access data from one window into another window Used for instance when inserting panel into canvas. ;  ; int GetSendQueueLength (unsigned connid) const;  Returns send queue length for sp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:3396,config,configured,3396,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,1,['config'],['configured']
Modifiability,"inherited from ROOT::Detail::RDF::RFilterBase;  RFilterBase (RLoopManager *df, std::string_view name, const unsigned int nSlots, const RDFInternal::RColumnRegister &colRegister, const ColumnNames_t &columns, const std::vector< std::string > &prevVariations, const std::string &variation=""nominal"");  ;  ~RFilterBase () override;  ; std::string GetName () const;  ; bool HasName () const;  ; RFilterBase & operator= (const RFilterBase &)=delete;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RNodeBase;  RNodeBase (const std::vector< std::string > &variations={}, RLoopManager *lm=nullptr);  ; virtual ~RNodeBase ();  ; virtual RLoopManager * GetLoopManagerUnchecked ();  ; const std::vector< std::string > & GetVariations () const;  . Private Attributes; std::unique_ptr< RFilterBase > fConcreteFilter = nullptr;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Detail::RDF::RFilterBase; std::vector< ULong64_t > fAccepted = {0};  ; RDFInternal::RColumnRegister fColRegister;  ; const ROOT::RDF::ColumnNames_t fColumnNames;  ; ROOT::RVecB fIsDefine;  The nth flag signals whether the nth input column is a custom column or not. ;  ; std::vector< Long64_t > fLastCheckedEntry;  ; std::vector< int > fLastResult = {true};  ; const std::string fName;  ; std::vector< ULong64_t > fRejected = {0};  ; std::string fVariation;  This indicates for what variation this filter evaluates values. ;  ; std::unordered_map< std::string, std::shared_ptr< RFilterBase > > fVariedFilters;  ;  Protected Attributes inherited from ROOT::Detail::RDF::RNodeBase; RLoopManager * fLoopManager;  ; unsigned int fNChildren {0};  Number of nodes of the functional graph hanging from this object. ;  ; unsigned int fNStopsReceived {0};  Number of times that a children node signaled to stop processing entries. ;  ; std::vector< std::string > fVariations;  List of systematic variations that affect this node. ;  . #include <ROOT/RDF/RJittedFilter.hxx>. Inheritance diagram for ROOT::D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html:2719,inherit,inherited,2719,doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html,1,['inherit'],['inherited']
Modifiability,"inherited from ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >; static void destroy_range (T *S, T *E);  ; template<typename It1 , typename It2 > ; static void uninitialized_copy (It1 I, It1 E, It2 Dest);  Copy the range [I, E) onto the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ; template<typename It1 , typename It2 > ; static void uninitialized_move (It1 I, It1 E, It2 Dest);  Move the range [I, E) into the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ;  Static Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; static void report_at_maximum_capacity ();  Report that this vector is already at maximum capacity. ;  ; static void report_size_overflow (size_t MinSize);  Report that MinSize doesn't fit into this vector's size type. ;  ; static constexpr size_t SizeTypeMax ();  The maximum value of the Size_T used. ;  ;  Protected Attributes inherited from ROOT::Internal::VecOps::SmallVectorBase; void * fBeginX;  ; Size_T fCapacity;  Always >= -1. fCapacity == -1 indicates the RVec is in ""memory adoption"" mode. ;  ; Size_T fSize = 0;  Always >= 0. ;  . #include <ROOT/RVec.hxx>. Inheritance diagram for ROOT::Detail::VecOps::RVecImpl< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_iterator. template<typename T > . using ROOT::Detail::VecOps::RVecImpl< T >::const_iterator = typename SuperClass::const_iterator. Definition at line 566 of file RVec.hxx. ◆ iterator. template<typename T > . using ROOT::Detail::VecOps::RVecImpl< T >::iterator = typename SuperClass::iterator. Definition at line 565 of file RVec.hxx. ◆ reference. template<typename T > . using ROOT::Detail::VecOps::RVecImpl< T >::reference = typename SuperClass::reference. Definition at line 567 of file RVec.hxx. ◆ size_type. template<typename T > . using ROOT::Detail::VecOps::RVecImpl< T >::size_type = typename Sup",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html:7159,inherit,inherited,7159,doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,1,['inherit'],['inherited']
Modifiability,"inherited from ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >; static void destroy_range (T *S, T *E);  ; template<typename It1 , typename It2 > ; static void uninitialized_copy (It1 I, It1 E, It2 Dest);  Copy the range [I, E) onto the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ; template<typename It1 , typename It2 > ; static void uninitialized_move (It1 I, It1 E, It2 Dest);  Move the range [I, E) into the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ;  Static Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; static void report_at_maximum_capacity ();  Report that this vector is already at maximum capacity. ;  ; static void report_size_overflow (size_t MinSize);  Report that MinSize doesn't fit into this vector's size type. ;  ; static constexpr size_t SizeTypeMax ();  The maximum value of the Size_T used. ;  ;  Protected Attributes inherited from ROOT::Internal::VecOps::SmallVectorBase; void * fBeginX;  ; Size_T fCapacity;  Always >= -1. fCapacity == -1 indicates the RVec is in ""memory adoption"" mode. ;  ; Size_T fSize = 0;  Always >= 0. ;  . #include <ROOT/RVec.hxx>. Inheritance diagram for ROOT::VecOps::RVec< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_reference. template<typename T > . using ROOT::VecOps::RVec< T >::const_reference = typename SuperClass::const_reference. Definition at line 1536 of file RVec.hxx. ◆ reference. template<typename T > . using ROOT::VecOps::RVec< T >::reference = typename SuperClass::reference. Definition at line 1535 of file RVec.hxx. ◆ size_type. template<typename T > . using ROOT::VecOps::RVec< T >::size_type = typename SuperClass::size_type. Definition at line 1537 of file RVec.hxx. ◆ SuperClass. template<typename T > . using ROOT::VecOps::RVec< T >::SuperClass = RVecN<T, Internal::VecOps::RVecInlineStorageSize<T>::value>. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1VecOps_1_1RVec.html:19973,inherit,inherited,19973,doc/v632/classROOT_1_1VecOps_1_1RVec.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1VecOps_1_1RVec.html,2,['inherit'],['inherited']
Modifiability,"inherited from ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >; static void destroy_range (T *S, T *E);  ; template<typename It1 , typename It2 > ; static void uninitialized_copy (It1 I, It1 E, It2 Dest);  Copy the range [I, E) onto the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ; template<typename It1 , typename It2 > ; static void uninitialized_move (It1 I, It1 E, It2 Dest);  Move the range [I, E) into the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ;  Static Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; static void report_at_maximum_capacity ();  Report that this vector is already at maximum capacity. ;  ; static void report_size_overflow (size_t MinSize);  Report that MinSize doesn't fit into this vector's size type. ;  ; static constexpr size_t SizeTypeMax ();  The maximum value of the Size_T used. ;  ;  Protected Attributes inherited from ROOT::Internal::VecOps::SmallVectorBase; void * fBeginX;  ; Size_T fCapacity;  Always >= -1. fCapacity == -1 indicates the RVec is in ""memory adoption"" mode. ;  ; Size_T fSize = 0;  Always >= 0. ;  ;  Private Attributes inherited from ROOT::Internal::VecOps::SmallVectorStorage< T, N >; char InlineElts [N *sizeof(T)] {};  . #include <ROOT/RVec.hxx>. Inheritance diagram for ROOT::VecOps::RVecN< T, N >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_reference. template<typename T , unsigned int N> . using ROOT::VecOps::RVecN< T, N >::const_reference = typename Internal::VecOps::SmallVectorTemplateCommon<T>::const_reference. Definition at line 1235 of file RVec.hxx. ◆ reference. template<typename T , unsigned int N> . using ROOT::VecOps::RVecN< T, N >::reference = typename Internal::VecOps::SmallVectorTemplateCommon<T>::reference. Definition at line 1234 of file RVec.hxx. ◆ size_type. template<typename T , unsigned int N> . usi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVecN.html:8937,inherit,inherited,8937,doc/master/classROOT_1_1VecOps_1_1RVecN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVecN.html,1,['inherit'],['inherited']
Modifiability,"inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Types; typedef RooArgList * pRooArgList;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const override;  Return specialized context to efficiently generate toy events from RooAddModels. ;  ; void getCompIntList (const RooArgSet *nset, const RooArgSet *iset, pRooArgList &compIntList, Int_t &code, const char *isetRangeName) const;  Check if this configuration was created before. ;  ; AddCacheElem * getProjCache (const RooArgSet *nset, const RooArgSet *iset=nullptr) const;  Retrieve cache element with for calculation of p.d.f value with normalization set nset and integrated over iset in range 'rangeName'. ;  ; void selectNormalization (const RooArgSet *depSet=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ;  ; void selectNormalizationRange (const char *rangeName=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ;  ; void updateCoefficients (AddCacheElem &cache, const RooArgSet *nset) const;  Update the coefficient values in the given cache element: calculate new remainder fraction, normalize fractions obtained from extended ML terms to unity, and multiply ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:62594,config,configuration,62594,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['config'],['configuration']
Modifiability,"inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TTreeCloner;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBranch; using BulkObj = ROOT::Experimental::Internal::TBulkBranchRead;  ; using CacheInfo_t = ROOT::Internal::TBranchCacheInfo;  ; enum  EStatusBits { ;   kDoNotProcess = ::kDoNotProcess; , kIsClone = ::kIsClone; , kBranchObject = ::kBranchObject; , kBranchAny = ::kBranchAny; , ;   kAutoDelete = (1ULL << ( 15 )); , kDoNotUseBufferMap = (1ULL << ( 22 )). };  TBranch status bits. More...;  ; typedef void(TBranch::* FillLeaves_t) (TBuffer &b);  ; typedef void(TBranch::* ReadLeaves_t) (TBuffer &b);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TBranch; static Int_t fgCount = 0;  ! branch counter ;  . #include <TBranchClones.h>. Inheritance diagram for TBranchClones:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBranchClones() [1/3]. TBranchClones::TBranchClones ; (; ). Default and i/o constructor. ; Definition at line 40 of file TBranchClones.cxx. ◆ TBranchClones() [2/3]. TBranchClones::TBranchClones ; (; TTree * ; tree, . const char * ; name, . void * ; clonesaddr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchClones.html:26762,inherit,inherited,26762,doc/master/classTBranchClones.html,https://root.cern,https://root.cern/doc/master/classTBranchClones.html,1,['inherit'],['inherited']
Modifiability,"inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; TLegend & operator= (const TLegend &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fColumnSeparation;  Separation between columns, as a fraction of The space allowed to one column. ;  ; Float_t fEntrySeparation;  Separation between entries, as a fraction of The space allocated to one entry. ;  ; Float_t fMargin;  Fraction of total width used for symbol. ;  ; Int_t fNColumns;  Number of columns in the legend. ;  ; TList * fPrimitives {nullptr};  List of TLegendEntries. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegend.html:30927,inherit,inherited,30927,doc/master/classTLegend.html,https://root.cern,https://root.cern/doc/master/classTLegend.html,1,['inherit'],['inherited']
Modifiability,"inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGLAxis (const TGLAxis &)=delete;  ; TGLAxis & operator= (const TGLAxis &)=delete;  . Private Attributes; Double_t fAngle1;  ; Double_t fAngle2;  ; Double_t fAngle3;  ; Double_t fAxisLength;  ; Double_t fGridLength;  ; TString * fLabels;  ; Double_t fLabelsOffset;  ; Double_t fLabelsSize;  ; Int_t fNDiv;  ; Int_t fNDiv1;  ; Int_t fNDiv2;  ; Int_t fNDiv3;  ; Int_t fNTicks1;  ; Int_t fNTicks2;  ; TGLText * fText;  ; Double_t fTickMarksLength;  ; Int_t fTickMarksOrientation;  ; Double_t * fTicks1;  ; Double_t * fTicks2;  ; Double_t fWmax;  ; Double_t fWmin;  . Additional Inherited Members;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TGLAxis.h>. Inheritance diagram for TGLAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLAxis() [1/2]. TGLAxis::TGLAxis ; (; const TGLAxis & ; ). privatedelete . ◆ TGLAxis() [2/2]. TGLAxis::TGLAxis ; (; ). Constructor. ; Definition at line 35 of file TGLAxis.cxx. ◆ ~TGLAxis(). TGLAxis::~TGLAxis ; (; ). override . Destructor. ; Definition at line 66 of file TGLAxis.cxx. Member Function Documentation. ◆ Class(). static TClass * TGLAxis::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGLAxis::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGLAxis::Class_Version ; (; ). inlinestaticconst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLAxis.html:6472,inherit,inherited,6472,doc/master/classTGLAxis.html,https://root.cern,https://root.cern/doc/master/classTGLAxis.html,1,['inherit'],['inherited']
Modifiability,"inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; TEveGeoShapeExtract * DumpShapeTree (TEveGeoNode *geon, TEveGeoShapeExtract *parent=nullptr, Bool_t leafs_only=kFALSE);  Export the node hierarchy into tree of TEveGeoShapeExtract objects. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGeoNode * fNode;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoNode.html:26663,inherit,inherited,26663,doc/master/classTEveGeoNode.html,https://root.cern,https://root.cern/doc/master/classTEveGeoNode.html,1,['inherit'],['inherited']
Modifiability,"inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGMenuBar (const TGMenuBar &)=delete;  ; TGMenuBar & operator= (const TGMenuBar &)=delete;  . Friends; class TGPopupMenu;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMenuBar.html:31858,inherit,inherited,31858,doc/master/classTGMenuBar.html,https://root.cern,https://root.cern/doc/master/classTGMenuBar.html,1,['inherit'],['inherited']
Modifiability,"inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoElementRN (const TGeoElementRN &elem)=delete;  ; TGeoElementRN & operator= (const TGeoElementRN &elem)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoElement; enum  EGeoElement { kElemUsed = (1ULL << ( 17 )); , kElemDefined = (1ULL << ( 18 )); , kElementChecked = (1ULL << ( 19 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoElement.h>. Inheritance diagram for TGeoElementRN:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoElementRN() [1/3]. TGeoElementRN::TGeoElementRN ; (; const TGeoElementRN & ; elem). privatedelete . ◆ TGeoElementRN() [2/3]. TGeoElementRN::TGeoElementRN ; (; ). Default constructor. ; Definition at line 374 of file TGeoElement.cxx. ◆ TGeoElementRN() [3/3]. TGeoElementRN::TGeoElementRN ; (; Int_t ; A, . Int_t ; Z, . Int_t ; iso, . Double_t ; level, . Double_t ; deltaM, . Double_t ; halfLife, . const char * ; JP, . Double_t ; natAbun, . Double_t ; th_f, . Double_t ; tg_f, . Double_t ; th_s, . Double_t ; tg_s, . Int_t ; status . ). Constructor. ; Definition at line 395 of file TGeoElement.cxx. ◆ ~TGeoElementRN(). TGeoElementRN::~TGeoElementRN ; (; ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElementRN.html:15745,inherit,inherited,15745,doc/master/classTGeoElementRN.html,https://root.cern,https://root.cern/doc/master/classTGeoElementRN.html,2,['inherit'],['inherited']
Modifiability,"inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  . Static Protected Attributes; static TGeoManager * fgGeoMangeur = init_geo_mangeur();  Temporary holder (if passed shape is composite shape). ;  . Private Member Functions;  TEveGeoShape (const TEveGeoShape &);  ; TEveGeoShape & operator= (const TEveGeoShape &);  . Additional Inherited Members;  Public Types inherited from TEveShape; typedef std::vector< TEveVector2 >::iterator vVector2_i;  ; typedef std::vector< TEveVector2 > vVector2_t;  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoShape.html:36923,inherit,inherited,36923,doc/master/classTEveGeoShape.html,https://root.cern,https://root.cern/doc/master/classTEveGeoShape.html,3,['inherit'],['inherited']
Modifiability,"inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fMaximum;  Maximum value if leaf range is specified. ;  ; Double_t fMinimum;  Minimum value if leaf range is specified. ;  ; Double_t ** fPointer;  ! Address of pointer to data buffer ;  ; Double_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafD.html:14103,inherit,inherited,14103,doc/master/classTLeafD.html,https://root.cern,https://root.cern/doc/master/classTLeafD.html,1,['inherit'],['inherited']
Modifiability,"inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Long64_t fMaximum;  Maximum value if leaf range is specified. ;  ; Long64_t fMinimum;  Minimum value if leaf range is specified. ;  ; Long64_t ** fPointer;  ! Address of pointer to data buffer ;  ; Long64_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafL.html:14428,inherit,inherited,14428,doc/master/classTLeafL.html,https://root.cern,https://root.cern/doc/master/classTLeafL.html,1,['inherit'],['inherited']
Modifiability,"inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClassRef fClass;  ! pointer to class ;  ; void ** fObjAddress;  ! Address of Pointer to object ;  ; bool fVirtual;  Support for polymorphism, when set classname is written with object. ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TLeaf; using Counts_t = std::vector< Int_t >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Prote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafObject.html:15314,inherit,inherited,15314,doc/master/classTLeafObject.html,https://root.cern,https://root.cern/doc/master/classTLeafObject.html,1,['inherit'],['inherited']
Modifiability,"inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Execute (TMethod *method, TObjArray *params, int *error=nullptr) override=0;  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual Bool_t SetSuspendAutoParsing (Bool_t value)=0;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Friends; class SuspendAutoParsing;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TInterpreter.h>. Inheritance diagram for TInterpreter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ AutoLoadCallBack_t. typedef int(* TInterpreter::AutoLoadCallBack_t) (const char *). Definition at line 132 of file TInterpreter.h. ◆ DeclId_t. typedef TDictionary::DeclId_t TInterpreter::DeclId_t. Definition at line 288 of file TInterpreter.h. ◆ FwdDeclArgsToKeepCollection_t. typedef std::vector<std::pair<std::string, int> > TInterpreter::FwdDeclArgsToKeepCollection_t. Definition at line 133 of file TInterpreter.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInterpreter.html:34771,inherit,inherited,34771,doc/master/classTInterpreter.html,https://root.cern,https://root.cern/doc/master/classTInterpreter.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGClient.h>. Inheritance diagram for TGClient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGClient() [1/2]. TGClient::TGClient ; (; const TGClient & ; ). protecteddelete . ◆ TGClient() [2/2]. TGClient::TGClient ; (; const char * ; dpyName = nullptr). Create a connection with the display sever on host dpyName and setup the complete GUI system, i.e., graphics contexts, fonts, etc. ; for all widgets. ; Definition at line 128 of file TGClient.cxx. ◆ ~TGClient(). TGClient::~TGClient ; (; ). override . Closing down client: cleanup and close X connection. ; Definition at line 622 of file TGClient.cxx. Member Function Documentation. ◆ AddIdleHandler(). void TGClient::AddIdleHandler ; (; TGIdleHandler * ; h). Add handler for idle events. ; Definition at line 573 of file TGClient.cxx. ◆ AddUnknownWindowHandler(). void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGClient.html:21031,inherit,inherited,21031,doc/master/classTGClient.html,https://root.cern,https://root.cern/doc/master/classTGClient.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGLEventHandler.h>. Inheritance diagram for TGLEventHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLEventHandler(). TGLEventHandler::TGLEventHandler ; (; TGWindow * ; w, . TObject * ; obj . ). Constructor. ; Definition at line 58 of file TGLEventHandler.cxx. ◆ ~TGLEventHandler(). TGLEventHandler::~TGLEventHandler ; (; ). override . Destructor. ; Definition at line 90 of file TGLEventHandler.cxx. Member Function Documentation. ◆ ClassDefOverride(). TGLEventHandler::ClassDefOverride ; (; TGLEventHandler ; , . 0 ;  . ). ◆ ClearMouseOver(). void TGLEventHandler::ClearMouseOver ; (; ). virtual . Clear mouse-over state and emit mouse-over signals. ; Current overlay element is also told the mouse has left. ; Definition at line 1034 of file TGLEventHandler.cxx. ◆ ControlValue(). Int_t TGLEventHandler::ControlV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEventHandler.html:20308,inherit,inherited,20308,doc/master/classTGLEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGLEventHandler.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TMessageHandler.h>. Inheritance diagram for TMessageHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessageHandler() [1/2]. TMessageHandler::TMessageHandler ; (; const TClass * ; cl, . Bool_t ; derived = kTRUE . ). Create a new message handler for class cl and add it to the list of message handlers. ; Definition at line 41 of file TMessageHandler.cxx. ◆ TMessageHandler() [2/2]. TMessageHandler::TMessageHandler ; (; const char * ; cl, . Bool_t ; derived = kTRUE . ). Create a new message handler for class named cl and add it to the list of message handlers. ; Definition at line 63 of file TMessageHandler.cxx. ◆ ~TMessageHandler(). TMessageHandler::~TMessageHandler ; (; ). virtual . Clean up the message handler. ; Definition at line 82 of file TMessageHandler.cxx. Member Function Documentation. ◆ Add(). voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMessageHandler.html:17364,inherit,inherited,17364,doc/master/classTMessageHandler.html,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQCommand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQCommand() [1/3]. TQCommand::TQCommand ; (; const char * ; clname = nullptr, . void * ; obj = nullptr, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:31496,inherit,inherited,31496,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQUndoManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQUndoManager(). TQUndoManager::TQUndoManager ; (; ). Constructor. ; Definition at line 877 of file TQCommand.cxx. ◆ ~TQUndoManager(). TQUndoManager::~TQUndoManager ; (; ). virtual . Destructor. ; Definition at line 889 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQUndoManager::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TQCommand.; Definition at line 119 of file TQCommand.h. ◆ Add() [2/2]. void TQUndoManager::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the stack of commands. ; Command's redo action will be executed.; option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQUndoManager.html:28322,inherit,inherited,28322,doc/master/classTQUndoManager.html,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQConnection.h>. Inheritance diagram for TQConnection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQConnection() [1/4]. TQConnection::TQConnection ; (; ). inline . Definition at line 82 of file TQConnection.h. ◆ TQConnection() [2/4]. TQConnection::TQConnection ; (; TClass * ; cl, . void * ; receiver, . const char * ; method_name . ). TQConnection ctor. ; cl != 0 - connection to object == receiver of class == cl and method == method_name cl == 0 - connection to function with name == method_name ; Definition at line 454 of file TQConnection.cxx. ◆ TQConnection() [3/4]. TQConnection::TQConnection ; (; const char * ; class_name, . void * ; receiver, . const char * ; funcname . ). TQConnection ctor. ; Creates connection to method of class specified by name, it could be interpreted class and with method == funcname",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQConnection.html:27423,inherit,inherited,27423,doc/master/classTQConnection.html,https://root.cern,https://root.cern/doc/master/classTQConnection.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSysEvtHandler.h>. Inheritance diagram for TFileHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkRead ; kWrite . Definition at line 75 of file TSysEvtHandler.h. Constructor & Destructor Documentation. ◆ TFileHandler() [1/2]. TFileHandler::TFileHandler ; (; ). inlineprotected . Definition at line 72 of file TSysEvtHandler.h. ◆ TFileHandler() [2/2]. TFileHandler::TFileHandler ; (; int ; fd, . int ; mask . ). Create a file descriptor event handler. ; If mask=kRead then we want to monitor the file for read readiness, if mask=kWrite then we monitor the file for write readiness, if mask=kRead|kWrite then we monitor both read and write readiness. ; Definition at line 59 of file TSysEvtHandler.cxx. ◆ ~TFileHandler(). virtual TFileHandler::~TFileHandler ; (; ). inlinevirtual . D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileHandler.html:16093,inherit,inherited,16093,doc/master/classTFileHandler.html,https://root.cern,https://root.cern/doc/master/classTFileHandler.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSysEvtHandler.h>. Inheritance diagram for TSignalHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSignalHandler() [1/2]. TSignalHandler::TSignalHandler ; (; ). inlineprotected . Definition at line 134 of file TSysEvtHandler.h. ◆ TSignalHandler() [2/2]. TSignalHandler::TSignalHandler ; (; ESignals ; sig, . Bool_t ; sync = kTRUE . ). Create signal event handler. ; Definition at line 149 of file TSysEvtHandler.cxx. ◆ ~TSignalHandler(). virtual TSignalHandler::~TSignalHandler ; (; ). inlinevirtual . Definition at line 138 of file TSysEvtHandler.h. Member Function Documentation. ◆ Add(). void TSignalHandler::Add ; (; ). overridevirtual . Add signal handler to system signal handler list. ; Implements TSysEvtHandler.; Definition at line 168 of file TSysEvtHandler.cxx. ◆ Class(). static TClass * TSignalHandler::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSignalHandler.html:15445,inherit,inherited,15445,doc/master/classTSignalHandler.html,https://root.cern,https://root.cern/doc/master/classTSignalHandler.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TVirtualPad.h>. Inheritance diagram for TVirtualPad:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualPad() [1/2]. TVirtualPad::TVirtualPad ; (; ). VirtualPad default constructor. ; Definition at line 96 of file TVirtualPad.cxx. ◆ TVirtualPad() [2/2]. TVirtualPad::TVirtualPad ; (; const char * ; name, . const char * ; title, . Double_t ; xlow, . Double_t ; ylow, . Double_t ; xup, . Double_t ; yup, . Color_t ; color = 19, . Short_t ; bordersize = 4, . Short_t ; bordermode = 1 . ). VirtualPad constructor. ; Definition at line 104 of file TVirtualPad.cxx. ◆ ~TVirtualPad(). TVirtualPad::~TVirtualPad ; (; ). virtual . VirtualPad destructor. ; Definition at line 117 of file TVirtualPad.cxx. Member Function Documentation. ◆ AbsCoordinates(). virtual void TVirtualPad::AbsCoordinates ; (; Bool_t ; set). pure virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:32514,inherit,inherited,32514,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TXMLParser.h>. Inheritance diagram for TXMLParser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TXMLParser() [1/2]. TXMLParser::TXMLParser ; (; const TXMLParser & ; ). privatedelete . ◆ TXMLParser() [2/2]. TXMLParser::TXMLParser ; (; ). Initializes parser variables. ; Definition at line 59 of file TXMLParser.cxx. ◆ ~TXMLParser(). TXMLParser::~TXMLParser ; (; ). override . Cleanup. ; Definition at line 67 of file TXMLParser.cxx. Member Function Documentation. ◆ Class(). static TClass * TXMLParser::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TXMLParser::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TXMLParser::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLParser.html:16552,inherit,inherited,16552,doc/master/classTXMLParser.html,https://root.cern,https://root.cern/doc/master/classTXMLParser.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fArea;  Bin area. ;  ; Bool_t fChanged;  For the 3D Painter. ;  ; Double_t fContent;  Bin content. ;  ; Int_t fNumber;  Bin number of the bin in TH2Poly. ;  ; TObject * fPoly;  Object holding the polygon definition. ;  ; Double_t fXmax;  X maximum value. ;  ; Double_t fXmin;  X minimum value. ;  ; Double_t fYmax;  Y maximum value. ;  ; Double_t fYmin;  Y minimum value. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TH2Poly.h>. Inheritance diagram for TH2PolyBin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera inste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2PolyBin.html:10251,inherit,inherited,10251,doc/master/classTH2PolyBin.html,https://root.cern,https://root.cern/doc/master/classTH2PolyBin.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooCFunction1Ref< VO, VI > func;  ; RooRealProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1PdfBinding.html:67990,inherit,inherited,67990,doc/master/classRooCFunction1PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1PdfBinding.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static const TGGC & GetActiveGC ();  Return default graphics context in use. ;  ; static const TGGC & GetColorGC ();  Return graphics context for highlighted frame background. ;  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDrawGC ();  Return default graphics context in use. ;  ; static Pixel_t GetGrayPixel ();  Return gray draw color in use. ;  ; static const TGGC & GetHighlightGC ();  Return graphics context for highlighted frame background. ;  ; static const TGGC & GetLineGC ();  Return graphics context in use for line drawing. ;  ;  Static Protected Member Functions inherited from TGContainer; static const TGGC & GetLineGC ();  Get graphics context for line drawing. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListTree.html:41665,inherit,inherited,41665,doc/master/classTGListTree.html,https://root.cern,https://root.cern/doc/master/classTGListTree.html,1,['inherit'],['inherited']
Modifiability,"inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  . Private Member Functions;  TEveStraightLineSetProjected (const TEveStraightLineSetProjected &);  ; TEveStraightLineSetProjected & operator= (const TEveStraightLineSetProjected &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:39864,inherit,inherited,39864,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,1,['inherit'],['inherited']
Modifiability,"inheriting from a ROOT class, 6.22/02; [#6797] - TCling::UpdateListOfLoadedSharedLibraries() Linux thread safety; [#6483] - [GUI] Crashes when creating TGClient in a standalone application; [#6563] - Test failures on MacOS with Xcode 12; [#6624] - TRandom: signature mismatch between getter and setter; [#6815] - PowerShell version of thisroot.bat; [#6853] - [DF] SaveGraph can be confused by shared upstream Defines; [#6731] - Compilation error on CentOS 7 of root V6.22.02 c++17; [#6974] - pyROOT doesn’t work with ipyparallel; [#6964] - [TTree] GetLeaf ignores the branchname arg if friend trees are present; [#6944] - RDataFrame misidentifies vector<XYZTVector> type of a friend tree with identical branch name to another friend tree; [#6345] - 6.22.00 pyroot regression: Can’t derive from TProfile.; [#6903] - Builtin TBB is broken on MacOS M1; [#7016] - Memory leak during schema evolution of some classes; [#6993] - [TTreeReader] Segfault when reading branch of “automatically loaded” friend; [#6741] - [DF] When dataset is specified as treename/filename, the TTree is read without its friends; [#6470] - PyROOT: virtual C++ method overriden in python ignored with further inheritance chain. [#7058] - [DF] crash when asking for type of aliased columns; [#6848] - [DF] Warnings printed from Snapshot of a TChain when no entry passes upstream Filters; [#6518] - [TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; [#7143] - TTreeProcessorMT: Fails when iterating over different treenames within same ROOT file; [#7039] - TExecutor: handling of non-IMT/… case; [#6933] - ROOT 6.22 should reject TBB 2021.1.1 and above during configuration (fails to compile); [#6765] - PyROOT breaks if ROOT objects are unpickled in a multiprocess environment; [#6915] - roottest-python-regression-regression requires OpenGL but still run when it is disable; [#6472] - TThreadExecutor::Map should be able to accept const std::vector argu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:43157,inherit,inheritance,43157,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['inherit'],['inheritance']
Modifiability,"inhibit of dirty state propagation; Bool_t_isConstant! Cached isConstant status ; Bool_t_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperMode_operModeDirty state propagation mode; RooArgSet*_ownedComponents! Set of owned component; Bool_t_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArray_proxyListlist of proxies; RooRefCountList_serverListlist of server objects; Bool_t_shapeDirtyFlag set if value needs recalculating because input shapes modified; map<std::string,std::string>_stringAttribString attributes; Bool_t_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_t_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t inhibitDirty() const; { return _inhibitDirty && !_localNoInhibitDirty; }. ~RooAbsArg(); Destructor. void setDirtyInhibit(Bool_t flag); Control global dirty inhibit mode. When set to true no value or shape dirty; flags are propagated and cache is always considered to be dirty. void verboseDirty(Bool_t flag); Activate verbose messaging related to dirty flag propagation. Bool_t isCloneOf(const RooAbsArg& other) const; Check if this object was created as a clone of 'other'. void setAttribute(const Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes are unset. void setStringAttribute(const Text_t* key, const Text_t* value); Associate string 'value' to this object under key 'key'. const Text_t* getStringAttribute(const Text_t* key) const; Get string attribute mapped under key 'k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsArg.html:19009,Inherit,Inheritance,19009,root/html534/RooAbsArg.html,https://root.cern,https://root.cern/root/html534/RooAbsArg.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inimTransformFunction(const ROOT::Math::IMultiGradFunction* f, const vector<ROOT::Math::EMinimVariableType>& types, const vector<double>& values, const map<unsigned int,pair<double,double> >& bounds); virtual unsigned intNDim() const; unsigned intNTot() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; const ROOT::Math::IMultiGradFunction*OriginalFunction() const; const double*Transformation(const double* x) const; voidTransformation(const double* xint, double* xext) const. private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const; ROOT::Math::MinimTransformFunctionMinimTransformFunction(const ROOT::Math::MinimTransformFunction&); ROOT::Math::MinimTransformFunction&operator=(const ROOT::Math::MinimTransformFunction&). Data Members; private:. const ROOT::Math::IMultiGradFunction*fFuncuser function; vector<unsigned int>fIndexvector with external indices for internal variables; vector<ROOT::Math::MinimTransformVariable>fVariablesvector of variable settings and tranformation function; vector<double>fXinternal cached of external values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformFunction(const ROOT::Math::IMultiGradFunction* f, const vector<ROOT::Math::EMinimVariableType>& types, const vector<double>& values, const map<unsigned int,pair<double,double> >& bounds). Constructor from a IMultiGradFunction interface (which is managed by the class); vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ); variable values (used for the fixed ones) and a map with the bounds (for the bounded variables). unsigned int NDim() const; method inherited from IFunction interface. { return fIndex.size(); }. unsigned int NTot() const; { return fFunc->NDim(); }. IMultiGenFunction * Clone() const; clone: not supported (since auto_ptr used in the fVariables). const double * Transformation(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MinimTransformFunction.html:2804,variab,variables,2804,root/html602/ROOT__Math__MinimTransformFunction.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MinimTransformFunction.html,8,['variab'],"['variable', 'variables']"
Modifiability,"inimTransformFunction(const ROOT::Math::IMultiGradFunction* f, const vector<ROOT::Math::EMinimVariableType>& types, const vector<double>& values, const map<unsigned int,std::pair<double,double> >& bounds); virtual unsigned intNDim() const; unsigned intNTot() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; const ROOT::Math::IMultiGradFunction*OriginalFunction() const; const double*Transformation(const double* x) const; voidTransformation(const double* xint, double* xext) const. private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const; ROOT::Math::MinimTransformFunctionMinimTransformFunction(const ROOT::Math::MinimTransformFunction&); ROOT::Math::MinimTransformFunction&operator=(const ROOT::Math::MinimTransformFunction&). Data Members; private:. const ROOT::Math::IMultiGradFunction*fFuncuser function ; vector<unsigned int>fIndexvector with external indices for internal variables ; vector<MinimTransformVariable>fVariablesvector of variable settings and tranformation function; vector<double>fXinternal cached of external values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformFunction(const ROOT::Math::IMultiGradFunction* f, const vector<ROOT::Math::EMinimVariableType>& types, const vector<double>& values, const map<unsigned int,std::pair<double,double> >& bounds). Constructor from a IMultiGradFunction interface (which is managed by the class); vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ); variable values (used for the fixed ones) and a map with the bounds (for the bounded variables). unsigned int NDim() const; method inherited from IFunction interface. { return fIndex.size(); }. unsigned int NTot() const; { return fFunc->NDim(); }. IMultiGenFunction * Clone() const; clone: not supported (since auto_ptr used in the fVariables). const double * Transformation(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MinimTransformFunction.html:2132,variab,variables,2132,root/html534/ROOT__Math__MinimTransformFunction.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MinimTransformFunction.html,4,['variab'],"['variable', 'variables']"
Modifiability,"inimal required interface, all variable parameters are free and unbound.; The user, in their \(\mbox{FCN}\), must of course be able to “see” all types of defined parameters, and they therefore have access to what we call the external parameter list, that is, the parameters as he defined them. On the other hand, the internal M minimizing routines only want to “see” variable parameters without limits, and so they have access only to the internal parameter list which is created from the external list by the following transformation:. Squeeze out all parameters that are not variable.; Transform all variable parameters with limits, so that the transformed parameter can vary without limits. (See the next section for details concerning this transformation.) Because this transformation is non-linear, it is recommended to avoid putting limits on parameters where they are not needed. As an example, suppose that the user has defined the following parameters:. Parameter 0, constant.; Parameter 1, freely variable.; Parameter 2, variable with limits.; Parameter 3, constant.; Parameter 4, freely variable. Then the internal parameter list would be as follows:. Internal parameter 0 = external parameter 1.; Internal parameter 1 = external parameter 2, transformed appropriately.; Internal parameter 2 = external parameter 4. In the above example, M considers that the number of external parameters is 5, and the number of internal parameters is 3. This is the number which determines, for example, the size of the error matrix of the parameters, since only variable parameters have errors.; An important feature of M is that parameters are allowed to change types during the M minimization and analysis of a \(\mbox{FCN}\) function. Several applications in M have methods available to make variable parameters fixed and vice-versa; to impose, change, or remove limits from variable parameters; and even to define completely new parameters at any time during a run. In addition, some M applications (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:8146,variab,variable,8146,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,2,['variab'],['variable']
Modifiability,"inimization using Fumili technology; allows for user interaction: set/change parameters, do minimization, change parameters, re-do minimization etc ;  CMnFunctionCrossMnFunctionCross ;  CMnGlobalCorrelationCoeffClass for global correlation coefficient ;  CMnHesseAPI class for calculating the numerical covariance matrix (== 2x Inverse Hessian == 2x Inverse 2nd derivative); can be used by the user or Minuit itself ;  CMnLineSearchImplements a 1-dimensional minimization along a given direction (i.e ;  CMnMachinePrecisionDetermines the relative floating point arithmetic precision ;  CMnMigradAPI class for minimization using Variable Metric technology (""MIGRAD""); allows for user interaction: set/change parameters, do minimization, change parameters, re-do minimization etc ;  CMnMinimizeAPI class for minimization using Variable Metric technology (""MIGRAD""); allows for user interaction: set/change parameters, do minimization, change parameters, re-do minimization etc ;  CMnMinosAPI class for Minos Error analysis (asymmetric errors); minimization has to be done before and Minimum must be valid; possibility to ask only for one side of the Minos Error; ;  CMnParabolaThis class defines a parabola of the form a*x*x + b*x + c ;  CMnParabolaFactory;  CMnParabolaPointA point of a parabola ;  CMnParameterScanScans the values of FCN as a function of one Parameter and retains the best function and Parameter values found ;  CMnPlotMnPlot produces a text-screen graphical output of (x,y) points, e.g ;  CMnPosDefForce the covariance matrix to be positive defined by adding extra terms in the diagonal ;  CMnPrint;  CMnRefCountedPointer;  CMnReferenceCounter;  CMnScanAPI class for minimization using a scan method to find the minimum; allows for user interaction: set/change parameters, do minimization, change parameters, re-do minimization etc ;  CMnSeedGeneratorConcrete implementation of the MinimumSeedGenerator interface; used within ModularFunctionMinimizer; ;  CMnSimplexAPI class for mini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:55750,Variab,Variable,55750,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['Variab'],['Variable']
Modifiability,"inimizer1D&); static voidSetDefaultNpx(int npx); static voidSetDefaultNSearch(int n); voidSetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); voidSetLogScan(bool on); voidSetNpx(int npx); virtual intStatus() const; virtual doubleXLower() const; virtual doubleXMinimum() const; virtual doubleXUpper() const. private:. ROOT::Math::IMinimizer1DROOT::Math::IMinimizer1D::IMinimizer1D(); ROOT::Math::IMinimizer1DROOT::Math::IMinimizer1D::IMinimizer1D(const ROOT::Math::IMinimizer1D&). Data Members; private:. const ROOT::Math::IGenFunction*fFunctionPointer to the function.; boolfLogScanflag to control usage of a log scan; intfNIterNumber of iterations needed for the last estimation.; intfNpxNumber of points to bracket minimum with grid (def is 100); intfStatusStatus of code of the last estimate; doublefXMaxUpper bound of the search interval; doublefXMinLower bound of the search interval.; doublefXMinimumPosition of the stimated minimum. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BrentMinimizer1D(); Default Constructor. . virtual ~BrentMinimizer1D(); Default Destructor. . {}. double XMinimum() const; Return current estimate of the position of the minimum. . { return fXMinimum; }. double XLower() const; Return current lower bound of the minimization interval. . { return fXMin; }. double XUpper() const; Return current upper bound of the minimization interval. . { return fXMax; }. double FValMinimum() const; Return function value at current estimate of the minimum. . double FValLower() const; Return function value at current lower bound of the minimization interval. . double FValUpper() const; Return function value at current upper bound of the minimization interval. . bool Minimize(int maxIter, double absTol = 1.0E-8, double relTol = 1.0E-10); Find minimum position iterating until convergence specified by the absolute and relative tolerance or; the maximum number of iteration is reached.; Return true if iteration",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__BrentMinimizer1D.html:2997,Inherit,Inheritance,2997,root/html602/ROOT__Math__BrentMinimizer1D.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__BrentMinimizer1D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inimizer::SetVariableValue(unsigned int ivar, double value); virtual boolROOT::Math::Minimizer::SetVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; virtual intROOT::Math::Minimizer::VariableIndex(const string& name) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int ivar) const; virtual const double*X() const. protected:. voidGetGeneticOptions(ROOT::Math::MinimizerOptions& opt) const. Data Members; protected:. TMVA::IFitterTarget*fFitness; doublefMinValue; ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; ROOT::Math::GeneticMinimizerParametersfParameters; vector<TMVA::Interval*>fRanges; vector<double>fResult; intROOT::Math::Minimizer::fStatusstatus of minimizer ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticMinimizer(int i = 0); GeneticMinimizer (int = 0);. virtual ~GeneticMinimizer(). void Clear(). void SetFunction(const ROOT::Math::IMultiGenFunction& func). bool SetLimitedVariable(unsigned int , const string& , double , double , double , double ). bool SetVariable(unsigned int ivar, const string& name, double val, double step). bool SetFixedVariable(unsigned int ivar, const string& name, double val). bool Minimize(). double MinValue() const. double Edm() const. const double * X() const. const double * MinGradient() const. unsigned int NCalls() const. unsigned int NDim() const. unsigned int NFree() const. bool ProvidesError() const. const double * Errors() const. double CovMatrix(unsigned int i, unsigned int j) const. void SetParameters(const ROOT::Math::GeneticMinimizerParameters& params). void SetRandomSeed(int seed); { fParameters.fSeed = seed; }. void SetOptions(const ROOT::Math::MinimizerOptions& opt). void GetGeneticOptions(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GeneticMinimizer.html:5316,Inherit,Inheritance,5316,root/html534/ROOT__Math__GeneticMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GeneticMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inimizer::SetVariablevirtual bool SetVariable(unsigned int ivar, const std::string &name, double val, double step)=0set a new free variable; ROOT::Math::Minimizer::FixVariablevirtual bool FixVariable(unsigned int ivar)fix an existing variableDefinition Minimizer.cxx:87; ROOT::Math::Minimizer::SetFixedVariablevirtual bool SetFixedVariable(unsigned int ivar, const std::string &name, double val)set a new fixed variable (override if minimizer supports them )Definition Minimizer.cxx:44; ROOT::Math::Minimizer::GetMinosErrorvirtual bool GetMinosError(unsigned int ivar, double &errLow, double &errUp, int option=0)minos error for variable i, return false if Minos failed or not supported and the lower and upper err...Definition Minimizer.cxx:172; ROOT::Math::Minimizer::SetVariableLowerLimitvirtual bool SetVariableLowerLimit(unsigned int ivar, double lower)set the lower-limit of an already existing variableDefinition Minimizer.cxx:70; ROOT::Math::Minimizer::IsFixedVariablevirtual bool IsFixedVariable(unsigned int ivar) constquery if an existing variable is fixed (i.e.Definition Minimizer.cxx:102; ROOT::Math::Minimizer::ReleaseVariablevirtual bool ReleaseVariable(unsigned int ivar)release an existing variableDefinition Minimizer.cxx:94; ROOT::Math::Minimizer::Hessevirtual bool Hesse()perform a full calculation of the Hessian matrix for error calculationDefinition Minimizer.cxx:185; ROOT::Math::Minimizer::Contourvirtual bool Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj)find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The c...Definition Minimizer.cxx:211; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; MathNamespace for new Math classes and functions.; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. mathmathcoresrcMinimizer.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:13354,variab,variable,13354,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,1,['variab'],['variable']
Modifiability,"inimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; unsigned intfDim; doublefMinVal; vector<string>fNames; const ROOT::Math::IMultiGenFunction*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BasicMinimizer(). Default constructor. virtual ~BasicMinimizer(). Destructor. BasicMinimizer(const ROOT::Math::BasicMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool SetVariableStepSize(unsigned int ivar, double step); set ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__BasicMinimizer.html:6876,variab,variable,6876,root/html602/ROOT__Math__BasicMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__BasicMinimizer.html,4,['variab'],['variable']
Modifiability,"inimizers supporting Minos) ;  ; virtual double MinValue () const =0;  return minimum function value ;  ; virtual unsigned int NCalls () const;  number of function calls to reach the minimum ;  ; virtual unsigned int NDim () const =0;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; virtual unsigned int NFree () const;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total (re-implement if minimizer supports bounded parameters) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ProvidesError () const;  minimizer provides error and error matrix ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ; void SetExtraOptions (const IOptions &extraOptions);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:8693,config,configuration,8693,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,3,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"inimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumiliMinimizer.html:3829,variab,variable,3829,doc/master/classTFumiliMinimizer.html,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html,4,['variab'],['variable']
Modifiability,"inimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. bool ProvidesError() const; minimizer provides error and error matrix. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. bool GetCovMatrix(double* ) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. { return false; }. bool GetHessianMatrix(double* ) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. { return false; }. int CovMatrixStatus() const; return status of covariance matrix; using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; Minimizer who implements covariance matrix calculation will re-implement the method. { return 0; }. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int ) const. return global correlation coefficient for variable i; This is a number between zero and one which gives; the cor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Math__Minimizer.html:7178,variab,variable,7178,root/html530/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Math__Minimizer.html,3,['variab'],['variable']
Modifiability,"ining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:03:01 2015 » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html:44642,variab,variable,44642,root/html534/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,2,['variab'],['variable']
Modifiability,"ining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:03:02 2015 » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html:44642,variab,variable,44642,root/html534/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,2,['variab'],['variable']
Modifiability,"ining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:43 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html:46835,variab,variable,46835,root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,2,['variab'],['variable']
Modifiability,"ining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:45 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html:46835,variab,variable,46835,root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,2,['variab'],['variable']
Modifiability,"ining to print; RooAbsReal*RooAbsPdf::_norm! Normalization integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooListProxy_x; Double_t_z; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMultiVarGaussian.html:39234,config,configuration,39234,root/html526/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html526/RooMultiVarGaussian.html,2,['config'],['configuration']
Modifiability,"ining to print; RooAbsReal*RooAbsPdf::_norm! Normalization integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; TF1*func; RooListProxylist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooTFnPdfBinding.html:38202,config,configuration,38202,root/html526/RooTFnPdfBinding.html,https://root.cern,https://root.cern/root/html526/RooTFnPdfBinding.html,2,['config'],['configuration']
Modifiability,"iningROOTVersionString() const; UInt_tTMVA::MethodBase::GetTrainingTMVAVersionCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; Double_tGetTreeEveFrac() const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; TMVA::MethodRuleFitMethodRuleFit(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); TMVA::MethodRuleFitMethodRuleFit(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodRuleFit.html:8004,Inherit,InheritsFrom,8004,root/html532/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodRuleFit.html,2,['Inherit'],['InheritsFrom']
Modifiability,"initial data vector to be fitted, and the new candidate function to be included in the fit. ;  ; void SetMaxFunctions (Int_t n);  ; void SetMaxPowers (const Int_t *powers);  Set the maximum power to be considered in the fit for each variable. ;  ; void SetMaxStudy (Int_t n);  ; void SetMaxTerms (Int_t terms);  ; void SetMinAngle (Double_t angle=1);  Set the min angle (in degrees) between a new candidate function and the subspace spanned by the previously accepted functions. ;  ; void SetMinRelativeError (Double_t error);  Set the acceptable relative error for when sum of square residuals is considered minimized. ;  ; void SetPowerLimit (Double_t limit=1e-3);  Set the user parameter for the function selection. ;  ; virtual void SetPowers (const Int_t *powers, Int_t terms);  Define a user function. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:23890,inherit,inherited,23890,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['inherit'],['inherited']
Modifiability,"initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.691476; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.605916 0.542204 0.0761789 0.00657979 45977.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.477495 0.458718 0.0776312 0.00665553 45085.9 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.438338 0.418147 0.0780597 0.00669006 44837 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.333122 0.322325 0.0804981 0.00689735 43477.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.326577 0.317097 0.0800716 0.00688531 43724 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.320979 0.311994 0.080369 0.00694962 43585.2 0; : 15 Minimum Test err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:15395,config,configuration,15395,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['config'],['configuration']
Modifiability,"inition Rtypes.h:66; kMagenta@ kMagentaDefinition Rtypes.h:66; kCyan@ kCyanDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ComponentsRooCmdArg Components(Args_t &&... argsOrArgSet)Definition RooGlobalFunc.h:128; RooFit::DrawOptionRooCmdArg DrawOption(const char *opt)Definition RooGlobalFunc.cxx:130; RooFit::FillColorRooCmdArg FillColor(Color_t color)Definition RooGlobalFunc.cxx:252; RooFit::LineWidthRooCmdArg L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf610__visualerror_8C.html:7735,variab,variable,7735,doc/master/rf610__visualerror_8C.html,https://root.cern,https://root.cern/doc/master/rf610__visualerror_8C.html,1,['variab'],['variable']
Modifiability,"inition TBuffer.h:43; TBuffer::kInitialSize@ kInitialSizeDefinition TBuffer.h:78; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::IsSyntheticPairBool_t IsSyntheticPair() constDefinition TClass.h:521; TClass::GetCollectionTypeROOT::ESTLType GetCollectionType() constReturn the 'type' of the STL the TClass is representing.Definition TClass.cxx:2953; TClass::HasInterpreterInfoBool_t HasInterpreterInfo() constDefinition TClass.h:410; TClass::GetSchemaRulesconst ROOT::Detail::TSchemaRuleSet * GetSchemaRules() constReturn the set of the schema rules if any.Definition TClass.cxx:1999; TClass::IsLoadedBool_t IsLoaded() constReturn true if the shared library of this class is currently in the a process's memory.Definition TClass.cxx:5979; TClass::AddRulestatic Bool_t AddRule(const char *rule)Add a schema evolution customization rule.Definition TClass.cxx:1957; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TClass::GetCollectionProxyTVirtualCollectionProxy * GetCollectionProxy() constReturn the proxy describing the collection (if any).Definition TClass.cxx:2964; TClass::GetClassVersionVersion_t GetClassVersion() constDefinition TClass.h:420; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::lsvoid ls(Option_t *option="""") const overrideList (ls) all objects in this collection.Definition TCollection.cxx:382; TCollection::SetNamevoid SetName(const char *name)Definition TCollection.h:206; TCollection::GetEntriesvirtual Int_t GetEntries() constDefinition TCollection.h:17",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:202354,inherit,inherits,202354,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"inition TPgSQLServer.h:23; TSQLServer::TSQLServerTSQLServer()Definition TSQLServer.h:52; Where the + in front of Plugin.TSQLServer says that it extends the existing definition of TSQLServer, useful when there is more than one plugin that can extend the same base class. The ""<constructor>"" should be the constructor or a static method that generates an instance of the specified class. Global methods should start with ""::"" in their name, like ""::CreateFitter()"". Instead of being a shared library a plugin can also be a CINT script, so instead of libDialog.so one can have Dialog.C. The * is a placeholder in case there is no need for a URI to differentiate between different plugins for the same base class. For the default plugins see $ROOTSYS/etc/system.rootrc.; Plugin handlers can also be registered at run time, e.g.: gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServer(const char*,const char*,const char*)"");; A list of currently defined handlers can be printed using: gPluginMgr->Print(); // use option=""a"" to see ctors; TPluginManager::Printvoid Print(Option_t *opt="""") const overridePrint list of registered plugin handlers.Definition TPluginManager.cxx:637; The use of the plugin library manager removes all textual references to hard-coded class and library names and the resulting dependencies in the base classes. The plugin manager is used to extend a.o. TFile, TSQLServer, TGrid, etc. functionality. ; Definition at line 258 of file TPluginManager.h. Public Member Functions;  TPluginManager ();  Constructor. ;  ;  ~TPluginManager ();  Clean up the plugin manager. ;  ; void AddHandler (const char *base, const char *regexp, const char *className, const char *pluginName, const char *ctor=nullptr, const char *origin=nullptr);  Add plugin handler to the list of handlers. ;  ; TPluginHandler * FindHandler (const char *base, const char *uri=nullptr);  Returns the handler if there exists a handler for the specified URI. ;  ; TClass * IsA (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:3843,plugin,plugin,3843,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,1,['plugin'],['plugin']
Modifiability,"inition TStreamerElement.h:78; TStreamerElement::kCache@ kCacheDefinition TStreamerElement.h:77; TStreamerElement::HasCountervirtual Bool_t HasCounter() constDefinition TStreamerElement.h:129; TStreamerElement::GetSequenceTypevoid GetSequenceType(TString &type) constFill type with the string representation of sequence information including 'cached',...Definition TStreamerElement.cxx:356; TStreamerInfoActions::TActionSequenceDefinition TStreamerInfoActions.h:177; TStreamerInfoActions::TActionSequence::IsForVectorPtrLooperBool_t IsForVectorPtrLooper() constDefinition TStreamerInfoActions.h:206; TStreamerInfoActions::TActionSequence::CreateReadMemberWiseActionsstatic TActionSequence * CreateReadMemberWiseActions(TVirtualStreamerInfo *info, TVirtualCollectionProxy &proxy)Create the bundle of the actions necessary for the streaming memberwise of the content described by '...Definition TStreamerInfoActions.cxx:3886; TStreamerInfoActions::TActionSequence::fLoopConfigTLoopConfiguration * fLoopConfigIf this is a bundle of memberwise streaming action, this configures the looping.Definition TStreamerInfoActions.h:211; TStreamerInfoActions::TActionSequence::SetMissingvoid SetMissing()Definition TStreamerInfoActions.cxx:4175; TStreamerInfoActions::TActionSequence::EStatusBits::kVectorPtrLooper@ kVectorPtrLooper; TStreamerInfoActions::TActionSequence::Printvoid Print(Option_t *="""") const overrideThis method must be overridden when a class wants to print itself.Definition TStreamerInfoActions.cxx:4362; TStreamerInfoActions::TActionSequence::CreateWriteMemberWiseActionsstatic TActionSequence * CreateWriteMemberWiseActions(TVirtualStreamerInfo *info, TVirtualCollectionProxy &proxy)Create the bundle of the actions necessary for the streaming memberwise of the content described by '...Definition TStreamerInfoActions.cxx:3999; TStreamerInfoActions::TActionSequence::SequenceGetter_tSequencePtr(*)(TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass) Seque",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:222208,config,configures,222208,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configures']
Modifiability,"inition TStreamerInfoActions.cxx:1691; TStreamerInfoActions::ReadSTLMemberWiseSameClassvoid ReadSTLMemberWiseSameClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers)Definition TStreamerInfoActions.cxx:1122; TStreamerInfoActions::WriteTextTNamedInt_t WriteTextTNamed(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:259; TStreamerInfoActions::ReadTextObjectInt_t ReadTextObject(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:293; TStreamerInfoActions::UseCacheVectorLoopInt_t UseCacheVectorLoop(TBuffer &b, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1630; TStreamerInfoActions::ReadTextTNamedInt_t ReadTextTNamed(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:335; TStreamerInfoActions::WriteSTLpInt_t WriteSTLp(TBuffer &buf, void *addr, const TConfiguration *config)Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text st...Definition TStreamerInfoActions.cxx:345; TStreamerInfoActions::ReadSTLObjectWiseFastArrayvoid ReadSTLObjectWiseFastArray(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t, UInt_t)Definition TStreamerInfoActions.cxx:1360; TStreamerInfoActions::ReadTNamedInt_t ReadTNamed(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:950; TStreamerInfoActions::ReadBasicType_NoFactorInt_t ReadBasicType_NoFactor(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:919; TStreamerInfoActions::IsDefaultVectorbool IsDefaultVector(TVirtualCollectionProxy &proxy)Definition TStreamerInfoActions.cxx:47; TStreamerInfoActions::ReadLoopInvalidInt_t ReadLoopInvalid(TBuffer &, void *, const void *, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1685; TStreamerInfoActions::ReadTObjectInt_t ReadTObject(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:258556,config,config,258556,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"inition TStyle.cxx:1413; TStyle::SetLabelOffsetvoid SetLabelOffset(Float_t offset=0.005, Option_t *axis=""X"")Set offset between axis and axis labels.Definition TStyle.cxx:1429; TStyle::SetStatWvoid SetStatW(Float_t w=0.19)Definition TStyle.h:399; Note that when an object is created, its attributes are taken from the current style. For example, you may have created an histogram in a previous session, saved it in a file. Meanwhile, if you have changed the style, the histogram will be drawn with the old attributes. You can force the current style attributes to be set when you read an object from a file by calling:; gROOT->ForceStyle();; before reading the objects from the file.; Let's assume you have a canvas or pad with your histogram or any other object, you can force these objects to get the attributes of the current style via:; canvas->UseCurrentStyle();; The description of the style functions should be clear from the name of the TStyle Setters or Getters. Some functions have an extended description, in particular:. TStyle:SetLabelFont.; TStyle:SetLineStyleString, to set the format of dashed lines.; TStyle:SetOptStat.; TStyle:SetPalette to change the colors palette.; TStyle:SetTitleOffset. . Definition at line 29 of file TStyle.h. Public Types; enum  EPaperSize { kA4; , kUSLetter; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStyle ();  Default construct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:3698,extend,extended,3698,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,1,['extend'],['extended']
Modifiability,"inition at line 117 of file TSQLServer.h. ◆ ClearError(). void TSQLServer::ClearError ; (; ). protected . reset error fields ; Definition at line 119 of file TSQLServer.cxx. ◆ Close(). virtual void TSQLServer::Close ; (; Option_t * ; option = """"). pure virtual . Implemented in TMySQLServer, TODBCServer, TPgSQLServer, and TSQLiteServer. ◆ Commit(). Bool_t TSQLServer::Commit ; (; ). virtual . submit ""COMMIT"" query to database return kTRUE, if successful ; Reimplemented in TMySQLServer, TODBCServer, and TSQLiteServer.; Definition at line 160 of file TSQLServer.cxx. ◆ Connect(). TSQLServer * TSQLServer::Connect ; (; const char * ; db, . const char * ; uid, . const char * ; pw . ). static . The db should be of the form: <dbms>://<host>[:<port>][/<database>], e.g.: mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main, pgsql://... or sqlite://<database>... The uid is the username and pw the password that should be used for the connection. ; Depending on the <dbms> the shared library (plugin) for the selected system will be loaded. When the connection could not be opened 0 is returned. ; Definition at line 61 of file TSQLServer.cxx. ◆ CreateDataBase(). virtual Int_t TSQLServer::CreateDataBase ; (; const char * ; dbname). pure virtual . Implemented in TMySQLServer, TODBCServer, TPgSQLServer, and TSQLiteServer. ◆ DeclFileName(). static const char * TSQLServer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 117 of file TSQLServer.h. ◆ DropDataBase(). virtual Int_t TSQLServer::DropDataBase ; (; const char * ; dbname). pure virtual . Implemented in TMySQLServer, TODBCServer, TPgSQLServer, and TSQLiteServer. ◆ EnableErrorOutput(). virtual void TSQLServer::EnableErrorOutput ; (; Bool_t ; on = kTRUE). inlinevirtual . Definition at line 102 of file TSQLServer.h. ◆ Exec(). Bool_t TSQLServer::Exec ; (; const char * ; sql). virtual . Execute sql query. ; Useful for commands like DROP TABLE or INSERT, where resul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLServer.html:15791,plugin,plugin,15791,doc/master/classTSQLServer.html,https://root.cern,https://root.cern/doc/master/classTSQLServer.html,1,['plugin'],['plugin']
Modifiability,"inition at line 1582 of file TStreamerInfoActions.cxx. ◆ UseCacheGenericCollection(). Int_t TStreamerInfoActions::UseCacheGenericCollection ; (; TBuffer & ; b, . void * ; , . const void * ; , . const TLoopConfiguration * ; loopconfig, . const TConfiguration * ; conf . ). inline . Definition at line 1656 of file TStreamerInfoActions.cxx. ◆ UseCacheVectorLoop(). Int_t TStreamerInfoActions::UseCacheVectorLoop ; (; TBuffer & ; b, . void * ; start, . const void * ; end, . const TLoopConfiguration * ; loopconf, . const TConfiguration * ; conf . ). inline . Definition at line 1630 of file TStreamerInfoActions.cxx. ◆ UseCacheVectorPtrLoop(). Int_t TStreamerInfoActions::UseCacheVectorPtrLoop ; (; TBuffer & ; b, . void * ; start, . const void * ; end, . const TConfiguration * ; conf . ). inline . Definition at line 1604 of file TStreamerInfoActions.cxx. ◆ WriteBasicType(). template<typename T > . Int_t TStreamerInfoActions::WriteBasicType ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 251 of file TStreamerInfoActions.cxx. ◆ WriteLoopInvalid(). Int_t TStreamerInfoActions::WriteLoopInvalid ; (; TBuffer & ; , . void * ; , . const void * ; , . const TConfiguration * ; config . ). Definition at line 1691 of file TStreamerInfoActions.cxx. ◆ WriteSTLp(). template<bool kIsTextT> . Int_t TStreamerInfoActions::WriteSTLp ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ; Definition at line 345 of file TStreamerInfoActions.cxx. ◆ WriteStreamerLoop(). template<bool kIsTextT> . Int_t TStreamerInfoActions::WriteStreamerLoop ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ; Definition at line 505 of file TStreamerInfoActions.cxx. ◆ WriteTextB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:18210,config,config,18210,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"inition at line 159 of file TPluginManager.cxx. ◆ CheckExactMatch() [1/2]. template<typename T0 > . bool TPluginHandler::CheckExactMatch ; (; int ; iarg, . const T0 & ;  . ). inlineprivate . Definition at line 151 of file TPluginManager.h. ◆ CheckExactMatch() [2/2]. template<typename T0 , typename... T> . bool TPluginHandler::CheckExactMatch ; (; int ; iarg, . const T0 & ; , . const T &... ; params . ). inlineprivate . Definition at line 157 of file TPluginManager.h. ◆ CheckForExecPlugin(). Bool_t TPluginHandler::CheckForExecPlugin ; (; Int_t ; nargs). private . Check that we can properly run ExecPlugin. ; Definition at line 303 of file TPluginManager.cxx. ◆ CheckNameMatch(). Bool_t TPluginHandler::CheckNameMatch ; (; int ; iarg, . const std::type_info & ; ti . ). private . Return true if the name of the iarg-th argument's type match type_name ; Definition at line 181 of file TPluginManager.cxx. ◆ CheckPlugin(). Int_t TPluginHandler::CheckPlugin ; (; ); const. Check if the plugin library for this handler exits. ; Returns 0 when it exists and -1 in case the plugin does not exist. ; Definition at line 262 of file TPluginManager.cxx. ◆ Class(). static TClass * TPluginHandler::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPluginHandler::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPluginHandler::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 254 of file TPluginManager.h. ◆ DeclFileName(). static const char * TPluginHandler::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 254 of file TPluginManager.h. ◆ ExactArgMatch(). template<typename... T> . bool TPluginHandler::ExactArgMatch ; (; const T &... ; params). inlineprivate . Definition at line 166 of file TPluginManager.h. ◆ ExecPlugin() [1/2]. Longptr_t TPluginHandler::ExecPlugin ; (; int ; nargs). i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginHandler.html:14465,plugin,plugin,14465,doc/master/classTPluginHandler.html,https://root.cern,https://root.cern/doc/master/classTPluginHandler.html,1,['plugin'],['plugin']
Modifiability,"inition at line 198 of file RooNDKeysPdf.h. ◆ evaluate(). double RooNDKeysPdf::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 1079 of file RooNDKeysPdf.cxx. ◆ gauss(). double RooNDKeysPdf::gauss ; (; std::vector< double > & ; x, . std::vector< std::vector< double > > & ; weights . ); const. protected . loop over all closest point to x, as determined by loopRange() ; Definition at line 917 of file RooNDKeysPdf.cxx. ◆ getAnalyticalIntegral(). Int_t RooNDKeysPdf::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 1105 of file RooNDKeysPdf.cxx. ◆ getWeights(). TMatrixD RooNDKeysPdf::getWeights ; (; const int & ; k); const. Return evaluated weights. ; Definition at line 1291 of file RooNDKeysPdf.cxx. ◆ initialize(). void RooNDKeysPdf::initialize ; (; RooDataSet const & ; data). protected . initialization ; Definition at line 406 of file RooNDKeysPdf.cxx. ◆ IsA(). TClass * RooNDKeysPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 198 of file RooNDKeysPdf.h. ◆ loadDataSet(). void RooNDKeysPdf::loadDataSet ; (; bool ; firstCall, . RooDataSet const & ; data . ). protected . copy the dataset and calculate some useful variables ; Definition at line 476 of file RooNDKeysPdf.cxx. ◆ loadWeightSet(). void RooNDKeysPdf::lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:87330,config,configuration,87330,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,1,['config'],['configuration']
Modifiability,"inition at line 27 of file RooSimGenContext.h. Public Member Functions;  RooSimGenContext (const RooSimultaneous &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor of specialized generator context for RooSimultaneous p.d.f.s. ;  ;  ~RooSimGenContext () override;  ; void attach (const RooArgSet &params) override;  Attach the index category clone to the given event buffer. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Detailed printing interface. ;  ; void setProtoDataOrder (Int_t *lut) override;  Set the traversal order of the prototype data to that in the given lookup table. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsGenContext;  RooAbsGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default contents when printing. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  Define default print style. ;  ; virtual RooDataSet * generate (double nEvents=0, bool skipInit=false, bool extendedMode=false);  Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ;  ; bool isValid () const;  ; bool isVerbose () const;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print arguments of context, i.e. the observables being generated in this context. ;  ; void printClassName (std::ostream &os) const override;  Print class name of context. ;  ; void printName (st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimGenContext.html:1743,inherit,inherited,1743,doc/master/classRooSimGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimGenContext.html,1,['inherit'],['inherited']
Modifiability,"inition at line 287 of file VarTransformHandler.cxx. ◆ Log(). MsgLogger & TMVA::VarTransformHandler::Log ; (; ); const. inline . message logger ; Definition at line 49 of file VarTransformHandler.h. ◆ UpdateNorm(). void TMVA::VarTransformHandler::UpdateNorm ; (; Int_t ; ivar, . Double_t ; x . ). private . Updates maximum and minimum value of a variable or target. ; Definition at line 129 of file VarTransformHandler.cxx. ◆ VarianceThreshold(). TMVA::DataLoader * TMVA::VarTransformHandler::VarianceThreshold ; (; Double_t ; threshold). Computes variance of all the variables and returns a new DataLoader with the selected variables whose variance is above a specific threshold. ; Threshold can be provided by user otherwise default value is 0 i.e. remove the variables which have same value in all the events.; Parameters. [in]thresholdvalue (Double). Transformation Definition String Format: ""VT(optional float value)""; Usage examples:. String Description . ""VT"" Select variables whose variance is above threshold value = 0 (Default) . ""VT(1.5)"" Select variables whose variance is above threshold value = 1.5 . Definition at line 84 of file VarTransformHandler.cxx. Member Data Documentation. ◆ fDataLoader. DataLoader* TMVA::VarTransformHandler::fDataLoader. private . Definition at line 54 of file VarTransformHandler.h. ◆ fDataSetInfo. DataSetInfo& TMVA::VarTransformHandler::fDataSetInfo. private . Definition at line 53 of file VarTransformHandler.h. ◆ fEvents. const std::vector<Event*>& TMVA::VarTransformHandler::fEvents. private . Definition at line 55 of file VarTransformHandler.h. ◆ fLogger. MsgLogger* TMVA::VarTransformHandler::fLogger. mutable . Definition at line 48 of file VarTransformHandler.h. Libraries for TMVA::VarTransformHandler:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/VarTransformHandler.h; tmva/tmva/src/VarTransformHandler.cxx. TMVAVarTransformHandler. ROOT master - Reference Guide Generated on Tue Nov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VarTransformHandler.html:2980,variab,variables,2980,doc/master/classTMVA_1_1VarTransformHandler.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VarTransformHandler.html,1,['variab'],['variables']
Modifiability,"inition at line 315 of file TStreamerInfoActions.cxx. ◆ ReadTextTNamed(). Int_t TStreamerInfoActions::ReadTextTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 335 of file TStreamerInfoActions.cxx. ◆ ReadTextTObject(). Int_t TStreamerInfoActions::ReadTextTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 300 of file TStreamerInfoActions.cxx. ◆ ReadTextTObjectBase(). Int_t TStreamerInfoActions::ReadTextTObjectBase ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 327 of file TStreamerInfoActions.cxx. ◆ ReadTNamed(). Int_t TStreamerInfoActions::ReadTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 950 of file TStreamerInfoActions.cxx. ◆ ReadTObject(). Int_t TStreamerInfoActions::ReadTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 940 of file TStreamerInfoActions.cxx. ◆ ReadTString(). Int_t TStreamerInfoActions::ReadTString ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 930 of file TStreamerInfoActions.cxx. ◆ SelectLooper(). ESelectLooper TStreamerInfoActions::SelectLooper ; (; TVirtualCollectionProxy & ; proxy). Definition at line 1699 of file TStreamerInfoActions.cxx. ◆ UseCache(). Int_t TStreamerInfoActions::UseCache ; (; TBuffer & ; b, . void * ; addr, . const TConfiguration * ; conf . ). inline . Definition at line 1582 of file TStreamerInfoActions.cxx. ◆ UseCacheGenericCollection(). Int_t TStreamerInfoActions::UseCacheGenericCollection ; (; TBuffer & ; b, . void * ; , . const void * ; , . const TLoopConfiguration * ; loopconfig, . const TConfiguration * ; conf . ). inline . Definition at line 1656 of file TStreamerInfoActions.cxx. ◆ UseCacheVectorLoop(). Int_t TStreamerInfoActions::UseCacheVectorLoop",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:16619,config,config,16619,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,inition at line 411 of file TMinuitMinimizer.cxx. ◆ GlobalCC(). double TMinuitMinimizer::GlobalCC ; (; unsigned int ; i); const. overridevirtual . global correlation coefficient for variable i ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 734 of file TMinuitMinimizer.cxx. ◆ Hesse(). bool TMinuitMinimizer::Hesse ; (; ). overridevirtual . perform a full calculation of the Hessian matrix for error calculation ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1004 of file TMinuitMinimizer.cxx. ◆ InitTMinuit(). void TMinuitMinimizer::InitTMinuit ; (; int ; ndim). protected . initialize the TMinuit instance ; Definition at line 117 of file TMinuitMinimizer.cxx. ◆ IsA(). virtual TClass * TMinuitMinimizer::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 272 of file TMinuitMinimizer.h. ◆ IsFixedVariable(). bool TMinuitMinimizer::IsFixedVariable ; (; unsigned int ; ivar); const. overridevirtual . query if an existing variable is fixed (i.e. ; considered constant in the minimization) note that by default all variables are not fixed ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 404 of file TMinuitMinimizer.cxx. ◆ MinGradient(). const double * TMinuitMinimizer::MinGradient ; (; ); const. inlineoverridevirtual . return pointer to gradient values at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 123 of file TMinuitMinimizer.h. ◆ Minimize(). bool TMinuitMinimizer::Minimize ; (; ). overridevirtual . method to perform the minimization ; Implements ROOT::Math::Minimizer.; Definition at line 440 of file TMinuitMinimizer.cxx. ◆ MinosStatus(). int TMinuitMinimizer::MinosStatus ; (; ); const. inlineoverridevirtual . minos status code of last Minos run minos status = -1 : Minos is not run = 0 : last MINOS run was successful > 0 : some problems encountered when running MINOS ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 182 of file TMinuitMinimizer.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:18931,variab,variable,18931,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,"inition at line 426 of file TBufferFile.h. ◆ ReadObject(). TObject * TBufferFile::ReadObject ; (; const TClass * ; cl). overridevirtual . Read object from I/O buffer. ; clReq is NOT used.; The value returned is the address of the actual start in memory of the object. Note that if the actual class of the object does not inherit first from TObject, the type of the pointer is NOT 'TObject*'. [More accurately, the class needs to start with the TObject part, for the pointer to be a real TObject*]. We recommend using ReadObjectAny instead of ReadObject ; Implements TBuffer.; Definition at line 2488 of file TBufferFile.cxx. ◆ ReadObjectAny(). void * TBufferFile::ReadObjectAny ; (; const TClass * ; clCast). overridevirtual . Read object from I/O buffer. ; A typical use for this function is: MyClass *ptr = (MyClass*)b.ReadObjectAny(MyClass::Class());; I.e. clCast should point to a TClass object describing the class pointed to by your pointer. In case of multiple inheritance, the return value might not be the real beginning of the object in memory. You will need to use a dynamic_cast later if you need to retrieve it. ; Implements TBuffer.; Definition at line 2516 of file TBufferFile.cxx. ◆ ReadShort(). void TBufferFile::ReadShort ; (; Short_t & ; s). inlineoverridevirtual . Implements TBuffer.; Reimplemented in TBufferSQL.; Definition at line 387 of file TBufferFile.h. ◆ ReadStaticArray() [1/13]. Int_t TBufferFile::ReadStaticArray ; (; Bool_t * ; b). overridevirtual . Read array of bools from the I/O buffer. ; Returns the number of bools read. ; Implements TBuffer.; Definition at line 1005 of file TBufferFile.cxx. ◆ ReadStaticArray() [2/13]. Int_t TBufferFile::ReadStaticArray ; (; Char_t * ; c). overridevirtual . Read array of characters from the I/O buffer. ; Returns the number of characters read. ; Implements TBuffer.; Definition at line 1032 of file TBufferFile.cxx. ◆ ReadStaticArray() [3/13]. Int_t TBufferFile::ReadStaticArray ; (; Double_t * ; d). overridevirtual . Read a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferFile.html:62545,inherit,inheritance,62545,doc/master/classTBufferFile.html,https://root.cern,https://root.cern/doc/master/classTBufferFile.html,1,['inherit'],['inheritance']
Modifiability,"inition at line 4324 of file RooAbsReal.cxx. ◆ setPlotLabel(). void RooAbsReal::setPlotLabel ; (; const char * ; label). Set the label associated with this variable. ; Definition at line 416 of file RooAbsReal.cxx. ◆ setTreeBranchStatus(). void RooAbsReal::setTreeBranchStatus ; (; TTree & ; t, . bool ; active . ). overrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3116 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition at line 147 of file RooAbsReal.h. ◆ sigma() [1/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs). inline . Definition at line 361 of file RooAbsReal.h. ◆ sigma() [2/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs, . const RooArgSet & ; nset . ). inline . Definition at line 362 of file RooAbsReal.h. ◆ specialIntegratorConfig() [1/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; ); const. Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned. ; Definition at line 3282 of file RooAbsReal.cxx. ◆ specialIntegratorConfig() [2/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; bool ; createOnTheFly). Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned, unless createOnTheFly is true in which case a clone of the default integrator configuration is created, installed as specialized configuration, and returned ; Definition at line 3294 of file RooAbsReal.cxx. ◆ Streamer(). void RooAbsReal::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in RooStats::HistFactory::RooBarlowBeestonLL, RooArgusBG, RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBernstein, RooBifurGauss, RooBMixDecay, RooBreitWigner, RooBukinPdf, RooCBShape, RooCFunction1B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:147603,config,configuration,147603,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"inition at line 4400 of file RooAbsReal.cxx. ◆ setPlotLabel(). void RooAbsReal::setPlotLabel ; (; const char * ; label). Set the label associated with this variable. ; Definition at line 414 of file RooAbsReal.cxx. ◆ setTreeBranchStatus(). void RooAbsReal::setTreeBranchStatus ; (; TTree & ; t, . bool ; active . ). overrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3198 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition at line 147 of file RooAbsReal.h. ◆ sigma() [1/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs). inline . Definition at line 368 of file RooAbsReal.h. ◆ sigma() [2/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs, . const RooArgSet & ; nset . ). inline . Definition at line 369 of file RooAbsReal.h. ◆ specialIntegratorConfig() [1/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; ); const. Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned. ; Definition at line 3364 of file RooAbsReal.cxx. ◆ specialIntegratorConfig() [2/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; bool ; createOnTheFly). Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned, unless createOnTheFly is true in which case a clone of the default integrator configuration is created, installed as specialized configuration, and returned ; Definition at line 3376 of file RooAbsReal.cxx. ◆ Streamer(). void RooAbsReal::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in RooStats::HistFactory::RooBarlowBeestonLL, RooArgusBG, RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBernstein, RooBifurGauss, RooBMixDecay, RooBreitWigner, RooBukinPdf, RooCBShape, RooCFunction1B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:149440,config,configuration,149440,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"inition at line 558 of file RooRealMPFE.cxx. ◆ followAsSlave(). void RooRealMPFE::followAsSlave ; (; RooRealMPFE & ; master). inline . Definition at line 47 of file RooRealMPFE.h. ◆ getCarry(). double RooRealMPFE::getCarry ; (; ); const. protectedvirtual . Definition at line 185 of file RooRealMPFE.cxx. ◆ getValV(). double RooRealMPFE::getValV ; (; const RooArgSet * ; nset = nullptr); const. overridevirtual . If value needs recalculation and calculation has not been started with a call to calculate() start it now. ; This function blocks until remote process has finished calculation and returns remote value ; Reimplemented from RooAbsReal.; Definition at line 530 of file RooRealMPFE.cxx. ◆ initialize(). void RooRealMPFE::initialize ; (; ). protected . Initialize the remote process and message passing pipes between current process and remote process. ; Definition at line 200 of file RooRealMPFE.cxx. ◆ initVars(). void RooRealMPFE::initVars ; (; ). protected . Initialize list of variables of front-end argument 'arg'. ; Definition at line 164 of file RooRealMPFE.cxx. ◆ serverLoop(). void RooRealMPFE::serverLoop ; (; ). protected . Server loop of remote processes. ; This function will return only when an incoming TERMINATE message is received. ; Definition at line 246 of file RooRealMPFE.cxx. ◆ setVerbose(). void RooRealMPFE::setVerbose ; (; bool ; clientFlag = true, . bool ; serverFlag = true . ). Control verbose messaging related to inter process communication on both client and server side. ; Definition at line 707 of file RooRealMPFE.cxx. ◆ standby(). void RooRealMPFE::standby ; (; ). Terminate remote server process and return front-end class to standby mode. ; Calls to calculate() or evaluate() after this call will automatically recreated the server process. ; Definition at line 641 of file RooRealMPFE.cxx. Friends And Related Symbol Documentation. ◆ RooAbsTestStatistic. friend class RooAbsTestStatistic. friend . Definition at line 55 of file RooRealMPFE.h. Member D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:67443,variab,variables,67443,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['variab'],['variables']
Modifiability,"inition at line 66 of file TParallelCoordVar.h. ◆ GetBoxPlot(). bool TParallelCoordVar::GetBoxPlot ; (; ). inline . Definition at line 67 of file TParallelCoordVar.h. ◆ GetCurrentAverage(). Double_t TParallelCoordVar::GetCurrentAverage ; (; ); const. inline . Definition at line 74 of file TParallelCoordVar.h. ◆ GetCurrentMax(). Double_t TParallelCoordVar::GetCurrentMax ; (; ); const. inline . Definition at line 73 of file TParallelCoordVar.h. ◆ GetCurrentMin(). Double_t TParallelCoordVar::GetCurrentMin ; (; ); const. inline . Definition at line 72 of file TParallelCoordVar.h. ◆ GetEntryWeight(). Int_t TParallelCoordVar::GetEntryWeight ; (; Long64_t ; evtidx). Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ; Definition at line 346 of file TParallelCoordVar.cxx. ◆ GetEntryXY(). void TParallelCoordVar::GetEntryXY ; (; Long64_t ; n, . Double_t & ; x, . Double_t & ; y . ). Get the position of the variable on the graph for the n'th entry. ; Definition at line 317 of file TParallelCoordVar.cxx. ◆ GetHistBinning(). Int_t TParallelCoordVar::GetHistBinning ; (; ); const. inline . Definition at line 71 of file TParallelCoordVar.h. ◆ GetHistHeight(). Double_t TParallelCoordVar::GetHistHeight ; (; ). inline . Definition at line 77 of file TParallelCoordVar.h. ◆ GetHistLineWidth(). Int_t TParallelCoordVar::GetHistLineWidth ; (; ). inline . Definition at line 78 of file TParallelCoordVar.h. ◆ GetHistogram(). TH1F * TParallelCoordVar::GetHistogram ; (; ). Create or recreate the histogram. ; Definition at line 355 of file TParallelCoordVar.cxx. ◆ GetId(). Int_t TParallelCoordVar::GetId ; (; ). inline . Definition at line 69 of file TParallelCoordVar.h. ◆ GetLogScale(). bool TParallelCoordVar::GetLogScale ; (; ); const. inline . Definition at line 70 of file TParallelCoordVar.h. ◆ GetMinMaxMean(). void TParallelCoordVar::GetMinMaxMean ; (; ). Get mean, min and max of those variable. ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:23562,variab,variable,23562,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,1,['variab'],['variable']
Modifiability,"inition at line 71 of file TSSLSocket.h. ◆ Send() [4/4]. Int_t TSSLSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 72 of file TSSLSocket.h. ◆ SendRaw(). Int_t TSSLSocket::SendRaw ; (; const void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Reimplemented from TSocket.; Definition at line 263 of file TSSLSocket.cxx. ◆ SetUpSSL(). void TSSLSocket::SetUpSSL ; (; const char * ; cafile, . const char * ; capath, . const char * ; ucert, . const char * ; ukey . ). static . Set up the static configuration variables. ; Definition at line 174 of file TSSLSocket.cxx. ◆ Streamer(). void TSSLSocket::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TSocket. ◆ StreamerNVirtual(). void TSSLSocket::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 78 of file TSSLSocket.h. ◆ WrapWithSSL(). void TSSLSocket::WrapWithSSL ; (; void ; ). private . Wraps the socket with OpenSSL. ; Definition at line 35 of file TSSLSocket.cxx. Member Data Documentation. ◆ fgSSLCAFile. char TSSLSocket::fgSSLCAFile = """". staticprivate . Definition at line 34 of file TSSLSocket.h. ◆ fgSSLCAPath. char TSSLSocket::fgSSLCAPath = """". staticprivate . Definition at line 35 of file TSSLSocket.h. ◆ fgSSLUCert. char TSSLSocket::fgSSLUCert = """". staticprivate . Definition at line 36 of file TSSLSocket.h. ◆ fgSSLUKey. char TSSLSocket::fgSSLUKey = """". staticprivate . Definition at line 37 of file TSSLSocket.h. ◆ fSSL. SSL* TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSSLSocket.html:26066,config,configuration,26066,doc/master/classTSSLSocket.html,https://root.cern,https://root.cern/doc/master/classTSSLSocket.html,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"ink::GetObjectTObject * GetObject() constDefinition TList.h:145; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Clearvirtual void Clear(Option_t *="""")Definition TObject.h:119; TObject::GetNamevirtual const char * GetName() constReturns name of object.Definition TObject.cxx:444; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::GetDrawOptionvirtual Option_t * GetDrawOption() constGet option used by the graphics system to draw this object.Definition TObject.cxx:428; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::FindObjectvirtual TObject * FindObject(const char *name) constMust be redefined in derived classes.Definition TObject.cxx:408; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::GetTitlevirtual const char * GetTitle() constReturns title of object.Definition TObject.cxx:488; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TObject::Paintvirtual void Paint(Option_t *option="""")This method must be overridden if a class wants to paint itself.Definition TObject.cxx:612; TObject::kCannotPick@ kCannotPickif object in a pad cannot be pickedDefinition TObject.h:67; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TObject::kMustCleanup@ kMustCleanupif object destructor must call RecursiveRemove()Definition TObject.h:64; TPainter3dAlgorithms::DrawFaceMove3void DrawFaceMove3(Int_t *icodes, Double_t *xyz, Int_t np, Int_t *iface, Double_t *tt)Draw face - 3rd variant for ""MOVING SCREEN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:479813,inherit,inherits,479813,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"inkedList &cmdList) const;  Internal back-end function of plotOn() with named arguments. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormulaVar.html:19633,variab,variable,19633,doc/master/classRooFormulaVar.html,https://root.cern,https://root.cern/doc/master/classRooFormulaVar.html,1,['variab'],['variable']
Modifiability,"inkedList &cmdList);  See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&) ;  ; RooFit::OwningPtr< RooAbsArg > createFundamental (const char *newname=nullptr) const override;  Create a RooRealVar fundamental object with our properties. ;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) const;  Create and fill a ROOT histogram TH1, TH2 or TH3 with the values of this function. ;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, RooLinkedList &argList) const;  Internal method implementing createHistogram. ;  ; TH1 * createHistogram (RooStringView varNameList, Int_t xbins=0, Int_t ybins=0, Int_t zbins=0) const;  Create and fill a ROOT histogram TH1, TH2 or TH3 with the values of this function for the variables with given names. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const char *rangeName) const;  Create integral over observables in iset in range named rangeName. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet &nset, const char *rangeName=nullptr) const;  Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet &nset, const RooNumIntConfig &cfg, const char *rangeName=nullptr) const;  Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset while using specified configuration for any numeric integration. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooCmdArg &arg1, const Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:15793,variab,variables,15793,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,6,['variab'],['variables']
Modifiability,"inkedList &cmdList);  See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&) ;  ; RooFit::OwningPtr< RooAbsArg > createFundamental (const char *newname=nullptr) const override;  Create a RooRealVar fundamental object with our properties. ;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) const;  Create and fill a ROOT histogram TH1, TH2 or TH3 with the values of this function. ;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, RooLinkedList &argList) const;  Internal method implementing createHistogram. ;  ; TH1 * createHistogram (RooStringView varNameList, Int_t xbins=0, Int_t ybins=0, Int_t zbins=0) const;  Create and fill a ROOT histogram TH1, TH2 or TH3 with the values of this function for the variables with given names. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const char *rangeName) const;  Create integral over observables in iset in range named rangeName. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet &nset, const char *rangeName=nullptr) const;  Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet &nset, const RooNumIntConfig &cfg, const char *rangeName=nullptr) const;  Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset while using specified configuration for any numeric integration. ;  ; virtual RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet *nset=nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:22371,variab,variables,22371,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,138,['variab'],['variables']
Modifiability,"inline . Definition at line 1604 of file TStreamerInfoActions.cxx. ◆ WriteBasicType(). template<typename T > . Int_t TStreamerInfoActions::WriteBasicType ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 251 of file TStreamerInfoActions.cxx. ◆ WriteLoopInvalid(). Int_t TStreamerInfoActions::WriteLoopInvalid ; (; TBuffer & ; , . void * ; , . const void * ; , . const TConfiguration * ; config . ). Definition at line 1691 of file TStreamerInfoActions.cxx. ◆ WriteSTLp(). template<bool kIsTextT> . Int_t TStreamerInfoActions::WriteSTLp ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ; Definition at line 345 of file TStreamerInfoActions.cxx. ◆ WriteStreamerLoop(). template<bool kIsTextT> . Int_t TStreamerInfoActions::WriteStreamerLoop ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ; Definition at line 505 of file TStreamerInfoActions.cxx. ◆ WriteTextBaseClass(). Int_t TStreamerInfoActions::WriteTextBaseClass ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 275 of file TStreamerInfoActions.cxx. ◆ WriteTextStreamer(). Int_t TStreamerInfoActions::WriteTextStreamer ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 283 of file TStreamerInfoActions.cxx. ◆ WriteTextTNamed(). Int_t TStreamerInfoActions::WriteTextTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 259 of file TStreamerInfoActions.cxx. ◆ WriteTextTObject(). Int_t TStreamerInfoActions::WriteTextTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:18999,config,config,18999,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"inlineprivate . Definition at line 137 of file TPluginManager.h. ◆ IsA(). TClass * TPluginHandler::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 254 of file TPluginManager.h. ◆ LoadPlugin(). Int_t TPluginHandler::LoadPlugin ; (; ). Load the plugin library for this handler. ; Returns 0 on successful loading and -1 in case the library does not exist or in case of error. ; Definition at line 293 of file TPluginManager.cxx. ◆ LoadPluginImpl(). void TPluginHandler::LoadPluginImpl ; (; ). private . Load the plugin library for this handler. ; Sets status to 0 on successful loading and -1 in case the library does not exist or in case of error. ; Definition at line 274 of file TPluginManager.cxx. ◆ operator=(). TPluginHandler & TPluginHandler::operator= ; (; const TPluginHandler & ; ). privatedelete . ◆ Print(). void TPluginHandler::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print info about the plugin handler. ; If option is ""a"" print also the ctor's that will be used. ; Reimplemented from TObject.; Definition at line 341 of file TPluginManager.cxx. ◆ SetupCallEnv(). void TPluginHandler::SetupCallEnv ; (; ). private . Setup ctor or static method call environment. ; Definition at line 198 of file TPluginManager.cxx. ◆ Streamer(). void TPluginHandler::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TPluginHandler::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 254 of file TPluginManager.h. Friends And Related Symbol Documentation. ◆ TPluginManager. friend class TPluginManager. friend . Definition at line 105 of file TPluginManager.h. Member Data Documentation. ◆ fArgTupleTypeInfo. std::vector<std::string> TPluginHandler::fArgTupleTypeInfo. private . ctor method or global function ; Definition at line 118 of file TPluginManager.h. ◆ fBase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginHandler.html:17770,plugin,plugin,17770,doc/master/classTPluginHandler.html,https://root.cern,https://root.cern/doc/master/classTPluginHandler.html,1,['plugin'],['plugin']
Modifiability,"inlinevirtual . Reimplemented from TMVA::BinaryTree.; Definition at line 94 of file DecisionTree.h. ◆ GetSumWeights(). Double_t TMVA::DecisionTree::GetSumWeights ; (; const EventConstList * ; validationSample); const. calculate the normalization factor for a pruning validation sample ; Definition at line 1118 of file DecisionTree.cxx. ◆ GetTreeID(). Int_t TMVA::DecisionTree::GetTreeID ; (; ). inline . Definition at line 186 of file DecisionTree.h. ◆ GetVariableImportance() [1/2]. vector< Double_t > TMVA::DecisionTree::GetVariableImportance ; (; ). Return the relative variable importance, normalized to all variables together having the importance 1. ; The importance in evaluated as the total separation-gain that this variable had in the decision trees (weighted by the number of events) ; Definition at line 2745 of file DecisionTree.cxx. ◆ GetVariableImportance() [2/2]. Double_t TMVA::DecisionTree::GetVariableImportance ; (; UInt_t ; ivar). returns the relative importance of variable ivar ; Definition at line 2766 of file DecisionTree.cxx. ◆ IsA(). virtual TClass * TMVA::DecisionTree::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::BinaryTree.; Definition at line 243 of file DecisionTree.h. ◆ PruneNode(). void TMVA::DecisionTree::PruneNode ; (; TMVA::DecisionTreeNode * ; node). prune away the subtree below the node ; Definition at line 1194 of file DecisionTree.cxx. ◆ PruneNodeInPlace(). void TMVA::DecisionTree::PruneNodeInPlace ; (; TMVA::DecisionTreeNode * ; node). prune a node temporarily (without actually deleting its descendants which allows testing the pruned tree quality for many different pruning stages without ""touching"" the tree. ; Definition at line 1217 of file DecisionTree.cxx. ◆ PruneTree(). Double_t TMVA::DecisionTree::PruneTree ; (; const EventConstList * ; validationSample = nullptr). prune (get rid of internal nodes) the Decision tree to avoid overtraining several different pruning methods can be a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:22525,variab,variable,22525,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,"inning of the message buffer. ;  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMessage (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMessage.html:35456,inherit,inherited,35456,doc/master/classTMessage.html,https://root.cern,https://root.cern/doc/master/classTMessage.html,1,['inherit'],['inherited']
Modifiability,"inning(-1,1,20), YVar(y,Binning(-1,1,30)), ZVar(z,Binning(""zbinning""))). The caller takes ownership of the returned histogram. TH1* createHistogram(const char* name, const RooLinkedList& cmdList) const; Create empty 1,2 or 3D histogram; Arguments recognized. YVar() -- RooRealVar defining Y dimension with optional range/binning; ZVar() -- RooRealVar defining Z dimension with optional range/binning; AxisLabel() -- Vertical axis label; Binning() -- Range/Binning specification of X axis. TH1F * createHistogram(const char* name, const char* yAxisLabel) const; Create an empty 1D-histogram with appropriate scale and labels for this variable.; This method uses the default plot range which can be changed using the; setPlotMin(),setPlotMax() methods, and the default binning which can be; changed with setPlotBins(). The caller takes ownership of the returned; object and is responsible for deleting it. TH1F * createHistogram(const char* name, const char* yAxisLabel, Double_t xlo, Double_t xhi, Int_t nBins) const; Create an empty 1D-histogram with appropriate scale and labels for this variable.; This method uses the default plot range which can be changed using the; setPlotMin(),setPlotMax() methods, and the default binning which can be; changed with setPlotBins(). The caller takes ownership of the returned; object and is responsible for deleting it. TH1F * createHistogram(const char* name, const char* yAxisLabel, const RooAbsBinning& bins) const; Create an empty 1D-histogram with appropriate scale and labels for this variable. TH2F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const char* zAxisLabel = 0, Double_t* xlo = 0, Double_t* xhi = 0, Int_t* nBins = 0) const; Create an empty 2D-histogram with appropriate scale and labels for this variable (x); and the specified y variable. This method uses the default plot ranges for x and y which; can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which; can be changed with setPlotBins",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsRealLValue.html:43632,variab,variable,43632,root/html528/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html528/RooAbsRealLValue.html,9,['variab'],['variable']
Modifiability,"inning. ◆ lowBoundFunc(). virtual RooAbsReal * RooAbsBinning::lowBoundFunc ; (; ); const. inlinevirtual . Return pointer to RooAbsReal parameterized lower bound, if any. ; Reimplemented in RooParamBinning.; Definition at line 106 of file RooAbsBinning.h. ◆ numBins(). Int_t RooAbsBinning::numBins ; (; ); const. inline . Return number of bins. ; Definition at line 36 of file RooAbsBinning.h. ◆ numBoundaries(). virtual Int_t RooAbsBinning::numBoundaries ; (; ); const. pure virtual . Implemented in RooBinning, RooLinTransBinning, RooParamBinning, RooRangeBinning, and RooUniformBinning. ◆ Print(). void RooAbsBinning::Print ; (; Option_t * ; option = nullptr); const. inlineoverridevirtual . This method must be overridden when a class wants to print itself. ; Reimplemented from TObject.; Definition at line 89 of file RooAbsBinning.h. ◆ printArgs(). void RooAbsBinning::printArgs ; (; std::ostream & ; os); const. overridevirtual . Print binning arguments (the RooAbsReal objects represening the variable bin boundaries for parameterized binning implementations. ; Reimplemented from RooPrintable.; Definition at line 74 of file RooAbsBinning.cxx. ◆ printClassName(). void RooAbsBinning::printClassName ; (; std::ostream & ; os); const. overridevirtual . Print binning class name. ; Reimplemented from RooPrintable.; Definition at line 63 of file RooAbsBinning.cxx. ◆ printName(). void RooAbsBinning::printName ; (; std::ostream & ; os); const. overridevirtual . Print binning name. ; Reimplemented from RooPrintable.; Definition at line 43 of file RooAbsBinning.cxx. ◆ printTitle(). void RooAbsBinning::printTitle ; (; std::ostream & ; os); const. overridevirtual . Print binning title. ; Reimplemented from RooPrintable.; Definition at line 53 of file RooAbsBinning.cxx. ◆ printValue(). void RooAbsBinning::printValue ; (; std::ostream & ; os); const. overridevirtual . Print binning value, i.e the bin boundary positions. ; Reimplemented from RooPrintable.; Definition at line 94 of file RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsBinning.html:23139,variab,variable,23139,doc/master/classRooAbsBinning.html,https://root.cern,https://root.cern/doc/master/classRooAbsBinning.html,2,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,"inosErrors; ///< map contains the two Minos errors; 365 std::string fMinimType; ///< string indicating type of minimizer; 366 std::vector<std::string> fParNames; ///< parameter names (only with FCN only fits, when fFitFunc=0); 367 ; 368};; 369 ; 370 ; 371 } // end namespace Fit; 372 ; 373} // end namespace ROOT; 374 ; 375 ; 376 ; 377 ; 378 ; 379#endif /* ROOT_Fit_FitResult */; IFunctionfwd.h; IParamFunctionfwd.h; f#define f(i)Definition RSha256.hxx:104; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; namechar name[80]Definition TGX11.cxx:110; xminfloat xminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; ROOT::Fit::BinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y ...Definition BinData.h:52; ROOT::Fit::FitConfigClass describing the configuration of the fit, options and parameter settings using the ROOT::Fit::Pa...Definition FitConfig.h:47; ROOT::Fit::FitResultclass containing the result of the fit and all the related information (fitted parameter values,...Definition FitResult.h:47; ROOT::Fit::FitResult::fGlobalCCstd::vector< double > fGlobalCCglobal Correlation coefficientDefinition FitResult.h:363; ROOT::Fit::FitResult::IsValidbool IsValid() constTrue if fit successful, otherwise false.Definition FitResult.h:105; ROOT::Fit::FitResult::IsEmptybool IsEmpty() constTrue if a fit result does not exist (even invalid) with parameter values.Definition FitResult.h:108; ROOT::Fit::FitResult::fNFreeunsigned int fNFreenumber of fit free parameters (total parameters are in size of parameter vector)Definition FitResult.h:345; ROOT::Fit::FitResult::fBoundParamsstd::map< unsigned int, unsigned int > fBoundParamslist of limited parametersDefinition FitResult.h:358; ROOT::Fit::FitResult::FittedBinDataconst BinData * FittedBinData() constreturn B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:16183,config,configuration,16183,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,1,['config'],['configuration']
Modifiability,"inosStatusvirtual int MinosStatus() conststatus code of Minos (to be re-implemented by the minimizers supporting Minos)Definition Minimizer.h:313; ROOT::Math::Minimizer::SetVariableLimitsvirtual bool SetVariableLimits(unsigned int ivar, double lower, double upper)set the limits of an already existing variableDefinition Minimizer.h:199; ROOT::Math::Minimizer::SetTolerancevoid SetTolerance(double tol)set the toleranceDefinition Minimizer.h:337; ROOT::Math::Minimizer::MinimizerMinimizer(Minimizer const &)=delete; ROOT::Math::Minimizer::CovMatrixStatusvirtual int CovMatrixStatus() constreturn status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made po...Definition Minimizer.h:256; ROOT::Math::Minimizer::Minimizevirtual bool Minimize()=0method to perform the minimization; ROOT::Math::Minimizer::Statusint Status() conststatus code of minimizerDefinition Minimizer.h:310; ROOT::Math::Minimizer::SetVariableUpperLimitvirtual bool SetVariableUpperLimit(unsigned int ivar, double upper)set the upper-limit of an already existing variableDefinition Minimizer.cxx:78; ROOT::Math::Minimizer::SetCovariancevirtual bool SetCovariance(std::span< const double > cov, unsigned int nrow)set initial covariance matrixDefinition Minimizer.cxx:25; ROOT::Math::Minimizer::MinimizerMinimizer()Default constructor.Definition Minimizer.h:124; ROOT::Math::Minimizer::VariableNamevirtual std::string VariableName(unsigned int ivar) constget name of variables (override if minimizer support storing of variable names) return an empty strin...Definition Minimizer.cxx:224; ROOT::Math::Minimizer::SetPrintLevelvoid SetPrintLevel(int level)set print levelDefinition Minimizer.h:328; ROOT::Math::Minimizer::CovMatrixvirtual double CovMatrix(unsigned int ivar, unsigned int jvar) constreturn covariance matrices element for variables ivar,jvar if the variable is fixed the return value ...Definition Minimizer.cxx:120; ROOT::Math::Minimizer::GetHessianMatrixvirtual bool GetHessianMatrix",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:26104,variab,variableDefinition,26104,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variableDefinition']
Modifiability,"input argument and will own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the complete tree of objects is imported. If any of the variables of a composite object (parameters/observables) are already in the workspace the imported p.d.f. is connected to the already existing variables. If any of the function objects (p.d.f, formulas) to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled. Several optional arguments can be provided to modify the import procedure. Accepted arguments . RenameConflictNodes(const char* suffix) Add suffix to branch node name if name conflicts with existing node in workspace . RenameAllNodes(const char* suffix) Add suffix to all branch node names including top level node. . RenameAllVariables(const char* suffix) Add suffix to all variables of objects being imported. . RenameAllVariablesExcept(const char* suffix, const char* exceptionList) Add suffix to all variables names, except ones listed . RenameVariable(const char* inputName, const char* outputName) Rename a single variable as specified upon import. . RecycleConflictNodes() If any of the function objects to be imported already exist in the name space, connect the imported expression to the already existing nodes. AttentionUse with care! If function definitions do not match, this alters the definition of your function upon import. Silence() Do not issue any info message . The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with two comma separated lists. NoteFrom python, use Import(), since import is a reserved keyword. PyROOT; Support the C++ import() as Import() in python . PyROOT; The RooWorkspace constructor is pythonized with the command argument pythoniz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:39752,variab,variables,39752,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['variab'],['variables']
Modifiability,"input data for the training provided!"" << Endl;; 1150 }; 1151 ; 1152 if (fAnalysisType == Types::kRegression && mva->DataInfo().GetNTargets() < 1); 1153 Log() << kFATAL << ""You want to do regression training without specifying a target."" << Endl;; 1154 else if ((fAnalysisType == Types::kMulticlass || fAnalysisType == Types::kClassification) &&; 1155 mva->DataInfo().GetNClasses() < 2); 1156 Log() << kFATAL << ""You want to do classification training, but specified less than two classes."" << Endl;; 1157 ; 1158 // first print some information about the default dataset; 1159 if (!IsSilentFile()); 1160 WriteDataInformation(mva->fDataSetInfo);; 1161 ; 1162 if (mva->Data()->GetNTrainingEvents() < MinNoTrainingEvents) {; 1163 Log() << kWARNING << ""Method "" << mva->GetMethodName() << "" not trained (training tree has less entries [""; 1164 << mva->Data()->GetNTrainingEvents() << ""] than required ["" << MinNoTrainingEvents << ""]"" << Endl;; 1165 continue;; 1166 }; 1167 ; 1168 Log() << kHEADER << ""Train method: "" << mva->GetMethodName() << "" for ""; 1169 << (fAnalysisType == Types::kRegression; 1170 ? ""Regression""; 1171 : (fAnalysisType == Types::kMulticlass ? ""Multiclass classification"" : ""Classification"")); 1172 << Endl << Endl;; 1173 mva->TrainMethod();; 1174 Log() << kHEADER << ""Training finished"" << Endl << Endl;; 1175 }; 1176 ; 1177 if (fAnalysisType != Types::kRegression) {; 1178 ; 1179 // variable ranking; 1180 // Log() << Endl;; 1181 Log() << kINFO << ""Ranking input variables (method specific)..."" << Endl;; 1182 for (itrMethod = methods->begin(); itrMethod != methods->end(); ++itrMethod) {; 1183 MethodBase *mva = dynamic_cast<MethodBase *>(*itrMethod);; 1184 if (mva && mva->Data()->GetNTrainingEvents() >= MinNoTrainingEvents) {; 1185 ; 1186 // create and print ranking; 1187 const Ranking *ranking = (*itrMethod)->CreateRanking();; 1188 if (ranking != 0); 1189 ranking->Print();; 1190 else; 1191 Log() << kINFO << ""No variable ranking supplied by classifier: ""; 1192 << dynamic_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:48473,variab,variable,48473,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"input file for SubProcess(). ;  . Private Attributes; Bool_t fIsFilename;  ; TMacro * fMacro;  ; Bool_t fNeedGraphics;  ; Bool_t fShowSource;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDocDirective;  TDocDirective ();  ;  TDocDirective (const char *name);  ;  ~TDocDirective () override;  ; virtual void DeleteOutputFiles (const char *ext) const;  Delete all output generated by the directive beginning with Name() and ending with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * GetHtml () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void GetName (TString &name) const;  Get the full name, based on fName, fTitle, fDocParser's tag. ;  ; const char * GetOutputDir () const;  Get the directory for documentation output. ;  ; void SetCounter (Int_t count);  ; void SetParameters (const char *params);  Given a string containing parameters in params, we call AddParameter() for each of them. ;  ; void SetParser (TDocParser *parser);  Set the parser, and fDocOutput, fHtml from that. ;  ; void SetTag (const char *tag);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocMacroDirective.html:11769,inherit,inherited,11769,doc/master/classTDocMacroDirective.html,https://root.cern,https://root.cern/doc/master/classTDocMacroDirective.html,2,['inherit'],['inherited']
Modifiability,"input function provided in the constructor. ; Definition at line 20 of file RooCachedPdf.h. Public Member Functions;  RooCachedPdf ();  ;  RooCachedPdf (const char *name, const char *title, RooAbsPdf &_pdf);  Constructor taking name, title and function to be cached. ;  ;  RooCachedPdf (const char *name, const char *title, RooAbsPdf &_pdf, const RooArgSet &cacheObs);  Constructor taking name, title and function to be cached and fixed choice of variable to cache. ;  ;  RooCachedPdf (const RooCachedPdf &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const override;  Defer preferred scan order to cached pdf preference. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsCachedPdf;  RooAbsCachedPdf ();  ;  RooAbsCachedPdf (const char *name, const char *title, int ipOrder=0);  Constructor. ;  ;  RooAbsCachedPdf (const RooAbsCachedPdf &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Implements internal (analytical) integration capabilities. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; bool forceAnalyticalInt (const RooAbsArg &dep) const override;  Force RooRealIntegral to offer all our actual observable for internal integration. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Advertises internal (analytical) integration capabilities. ;  ; RooDataHist * getCacheHist (const RooArgSet &nset) const;  ; RooDataHist * getCacheHist (const RooArgSet *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:1381,inherit,inherited,1381,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,1,['inherit'],['inherited']
Modifiability,"input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyxDependent/convolution variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup hook for RooSentinel atexit handler. RooResolutionModel(const char* name, const char* title, RooRealVar& x); Constructor with convolution variable 'x'. RooResolutionModel(const RooResolutionModel& other, const char* name = 0); Copy constructor. ~RooResolutionModel(); Destructor. RooFormulaVar* identity(); Return identity formula pointer. RooResolutionModel* convolution(RooFormulaVar* basis, RooAbsArg* owner) const; Instantiate a clone of this resolution model representing a convolution with given; basis function. The owners object name is incorporated in the clones name; to avoid multiple convolution objects with the same name in complex PDF structures. Note: The 'inBasis' formula expression must be a RooFormulaVar that encodes the formula; in the title of the object and this expression must be an exact match against the; implemented basis function strings (see derived class implementation of method basisCode();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooResolutionModel.html:47336,Inherit,Inheritance,47336,root/html602/RooResolutionModel.html,https://root.cern,https://root.cern/root/html602/RooResolutionModel.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inputFileName)};; if (!inputFile) {; Error(""TMVA_CNN_Classification"", ""Error opening input file %s - exit"", inputFileName.Data());; return;; }; ; // --- Register the training and test trees; ; auto signalTree = inputFile->Get<TTree>(""sig_tree"");; auto backgroundTree = inputFile->Get<TTree>(""bkg_tree"");; ; if (!signalTree) {; Error(""TMVA_CNN_Classification"", ""Could not find signal tree in file '%s'"", inputFileName.Data());; return;; }; if (!backgroundTree) {; Error(""TMVA_CNN_Classification"", ""Could not find background tree in file '%s'"", inputFileName.Data());; return;; }; ; int nEventsSig = signalTree->GetEntries();; int nEventsBkg = backgroundTree->GetEntries();; ; // global event weights per tree (see below for setting event-wise weights); Double_t signalWeight = 1.0;; Double_t backgroundWeight = 1.0;; ; // You can add an arbitrary number of signal or background trees; loader.AddSignalTree(signalTree, signalWeight);; loader.AddBackgroundTree(backgroundTree, backgroundWeight);; ; /// add event variables (image); /// use new method (from ROOT 6.20 to add a variable array for all image data); loader.AddVariablesArray(""vars"", imgSize);; ; // Set individual event weights (the variables must exist in the original TTree); // for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; // for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; // loader.SetBackgroundWeightExpression( ""weight"" );; ; // Apply additional cuts on the signal and background samples (can be different); TCut mycuts = """"; // for example: TCut mycuts = ""abs(var1)<0.5 && abs(var2-0.5)<1"";; TCut mycutb = """"; // for example: TCut mycutb = ""abs(var1)<0.5"";; ; // Tell the factory how to use the training and testing events; //; // If no numbers of events are given, half of the events in the tree are used; // for training, and the other half for testing:; // loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; // It is possible also to specify the number of train",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:51857,variab,variables,51857,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['variab'],['variables']
Modifiability,"inputs, or uses the branch as input. ; In that case, the branch normalisation is also used. ; Definition at line 944 of file TNeuron.cxx. ◆ GetWeight(). Double_t TNeuron::GetWeight ; (; ); const. inline . Definition at line 48 of file TNeuron.h. ◆ IsA(). TClass * TNeuron::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 87 of file TNeuron.h. ◆ operator=(). TNeuron & TNeuron::operator= ; (; const TNeuron & ; ). private . ◆ SetDEDw(). void TNeuron::SetDEDw ; (; Double_t ; in). Sets the derivative of the total error wrt the neuron weight. ; Definition at line 1164 of file TNeuron.cxx. ◆ SetNewEvent(). void TNeuron::SetNewEvent ; (; ); const. Inform the neuron that inputs of the network have changed, so that the buffered values have to be recomputed. ; Definition at line 1153 of file TNeuron.cxx. ◆ SetNormalisation(). void TNeuron::SetNormalisation ; (; Double_t ; mean, . Double_t ; RMS . ). Sets the normalization variables. ; Any input neuron will return (branch-mean)/RMS. When UseBranch is called, mean and RMS are automatically set to the actual branch mean and RMS. ; Definition at line 1133 of file TNeuron.cxx. ◆ SetWeight(). void TNeuron::SetWeight ; (; Double_t ; w). Sets the neuron weight to w. ; The neuron weight corresponds to the bias in the linear combination of the inputs. ; Definition at line 1144 of file TNeuron.cxx. ◆ Sigmoid(). Double_t TNeuron::Sigmoid ; (; Double_t ; x); const. protected . The Sigmoid. ; Fast computation of the values of the sigmoid function. Uses values of the function up to the seventh order tabulated at 700 points. Values were computed in long double precision (16 bytes, precision to about 37 digits) on a hp computer. Some values were checked with Mathematica. Result should be correct to ~ 15 digits (about double precision); From the mlpfit package (J.Schwindling 20-Jul-1999) ; Definition at line 91 of file TNeuron.cxx. ◆ Streamer(). void TNeuron::Stre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNeuron.html:20637,variab,variables,20637,doc/master/classTNeuron.html,https://root.cern,https://root.cern/doc/master/classTNeuron.html,1,['variab'],['variables']
Modifiability,"ins in decreasing order until the desired level of confidence has been reached. Note that this means the actual confidence level is >= the confidence level prescribed by the client (unless the user calls SetHistStrict(false)). This method is the default but may not remain as such in future releases, so you may wish to explicitly configure to use this method by calling SetUseKeys(false); These are not the only ways for the confidence interval to be determined, and other possibilities are being considered being added, especially for the 1-dimensional case.; One can ask an MCMCInterval for the lower and upper limits on a specific parameter of interest in the interval. Note that this works better for some distributions (ones with exactly one local maximum) than others, and sometimes has little value. ; Definition at line 33 of file MCMCInterval.h. Public Types; enum  { DEFAULT_NUM_BINS = 50; };  ; enum  IntervalType { kShortest; , kTailFraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  MCMCInterval (const char *name, const RooArgSet &parameters, MarkovChain &chain);  constructor from parameter of interest and Markov chain object ;  ;  MCMCInterval (const char *name=nullptr);  default constructor ;  ;  ~MCMCInterval () override;  ; bool CheckParameters (const RooArgSet &point) const override;  check if parameters are correct. (dummy implementation to star",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html:2735,inherit,inherited,2735,doc/master/classRooStats_1_1MCMCInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html,1,['inherit'],['inherited']
Modifiability,"ins intersecting it.; 115When a coordinate is to be filled, the method finds which cell the coordinate; 116falls into. Since the cells are rectangular, this can be done very quickly.; 117It then only loops over the bins associated with that cell and calls `IsInside()`; 118only on that bins. This reduces considerably the number of bins on which `IsInside()`; 119is called and therefore speed up by a huge factor the filling compare to the brute force; 120approach where `IsInside()` is called for all bins.; 121 ; 122The addition of bins to the appropriate cells is done when the bin is added; 123to the histogram. To do this, `AddBin()` calls the; 124`AddBinToPartition()` method.; 125This method adds the input bin to the partitioning matrix.; 126 ; 127The number of partition cells per axis can be specified in the constructor.; 128If it is not specified, the default value of 25 along each axis will be; 129assigned. This value was chosen because it is small enough to avoid slowing; 130down AddBin(), while being large enough to enhance Fill() by a considerable; 131amount. Regardless of how it is initialized at construction time, it can be; 132changed later with the `ChangePartition()` method.; 133`ChangePartition()` deletes the; 134old partition matrix and generates a new one with the specified number of cells; 135on each axis.; 136 ; 137The optimum number of partition cells per axis changes with the number of; 138times `Fill()` will be called. Although partitioning greatly speeds up; 139filling, it also adds a constant time delay into the code. When `Fill()`; 140is to be called many times, it is more efficient to divide the histogram into; 141a large number cells. However, if the histogram is to be filled only a few; 142times, it is better to divide into a small number of cells.; 143*/; 144 ; 145////////////////////////////////////////////////////////////////////////////////; 146/// Default Constructor. No boundaries specified.; 147 ; 148TH2Poly::TH2Poly(); 149{; 150 Initia",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8cxx_source.html:5876,enhance,enhance,5876,doc/master/TH2Poly_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8cxx_source.html,1,['enhance'],['enhance']
Modifiability,"ins(),outAxis.GetXmin(),outAxis.GetXmax());; 1944 else; 1945 h1->SetBins(lastOutBin-firstOutBin+1,outAxis.GetBinLowEdge(firstOutBin),outAxis.GetBinUpEdge(lastOutBin));; 1946 } else {; 1947 // case variable bins; 1948 if (originalRange ); 1949 h1->SetBins(outAxis.GetNbins(),xbins->fArray);; 1950 else; 1951 h1->SetBins(lastOutBin-firstOutBin+1,&xbins->fArray[firstOutBin-1]);; 1952 }; 1953 }; 1954 ; 1955 Int_t ncuts = 0;; 1956 if (opt.Contains(""["")) {; 1957 ((TH2 *)this)->GetPainter();; 1958 if (fPainter) ncuts = fPainter->MakeCuts((char*)cut.Data());; 1959 }; 1960 ; 1961 if (!h1) {; 1962 const TArrayD *bins = outAxis.GetXbins();; 1963 if (bins->fN == 0) {; 1964 if ( originalRange ); 1965 h1 = new TProfile(pname,GetTitle(),outAxis.GetNbins(),outAxis.GetXmin(),outAxis.GetXmax(),opt);; 1966 else; 1967 h1 = new TProfile(pname,GetTitle(),lastOutBin-firstOutBin+1,; 1968 outAxis.GetBinLowEdge(firstOutBin),; 1969 outAxis.GetBinUpEdge(lastOutBin), opt);; 1970 } else {; 1971 // case variable bins; 1972 if (originalRange ); 1973 h1 = new TProfile(pname,GetTitle(),outAxis.GetNbins(),bins->fArray,opt);; 1974 else; 1975 h1 = new TProfile(pname,GetTitle(),lastOutBin-firstOutBin+1,&bins->fArray[firstOutBin-1],opt);; 1976 }; 1977 }; 1978 if (pname != name) delete [] pname;; 1979 ; 1980 // Copy attributes; 1981 h1->GetXaxis()->ImportAttributes( &outAxis);; 1982 THashList* labels=outAxis.GetLabels();; 1983 if (labels) {; 1984 TIter iL(labels);; 1985 TObjString* lb;; 1986 Int_t i = 1;; 1987 while ((lb=(TObjString*)iL())) {; 1988 h1->GetXaxis()->SetBinLabel(i,lb->String().Data());; 1989 i++;; 1990 }; 1991 }; 1992 ; 1993 h1->SetLineColor(this->GetLineColor());; 1994 h1->SetFillColor(this->GetFillColor());; 1995 h1->SetMarkerColor(this->GetMarkerColor());; 1996 h1->SetMarkerStyle(this->GetMarkerStyle());; 1997 ; 1998 // check if histogram is weighted; 1999 // in case need to store sum of weight square/bin for the profile; 2000 TArrayD & binSumw2 = *(h1->GetBinSumw2());; 2001 bool useWeights",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:79366,variab,variable,79366,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ins, const char *name=nullptr);  Create a uniform binning under name 'name' for this variable. ;  ; void setError (double value);  ; void setMax (const char *name, double value);  Set maximum of name range to given value. ;  ; void setMax (double value);  ; void setMin (const char *name, double value);  Set minimum of name range to given value. ;  ; void setMin (double value);  ; void setRange (const char *name, double min, double max);  Set a fit or plotting range. ;  ; void setRange (const char *name, RooAbsReal &min, RooAbsReal &max);  Set or modify a parameterised range, i.e., a range the varies in dependence of parameters. ;  ; void setRange (double min, double max);  Set the limits of the default range. ;  ; void setRange (RooAbsReal &min, RooAbsReal &max);  Set parameterised limits of the default range. See setRange(const char*, RooAbsReal&, RooAbsReal&). ;  ; void setVal (double value) override;  Set value of variable to 'value'. ;  ; void setVal (double value, const char *rangeName) override;  Set value of variable to value. ;  ; void Streamer (TBuffer &) override;  Stream an object of class RooRealVar. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ; std::size_t valueResetCounter () const;  Returns how many times the value of this RooRealVar was reset. ;  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to given stream. ;  ;  Public Member Functions inherited from RooAbsRealLValue;  RooAbsRealLValue ();  ;  RooAbsRealLValue (const char *name, const char *title, const char *unit="""");  Constructor. ;  ;  RooAbsRealLValue (const RooAbsRealLValue &other, const char *name=nullptr);  Copy constructor. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel) const;  Create an empty 1D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:5663,variab,variable,5663,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TTreeTableInterface(const TTreeTableInterface&); TTreeTableInterface(TTree* tree = 0, const char* varexp = 0, const char* selection = 0, Option_t* option = 0, Long64_t nentries = 0, Long64_t firstentry = 0). private:. voidInitEntries(); voidSetVariablesExpression(const char* varexp); voidSyncFormulas(). Data Members; private:. TEntryList*fEntriesCurrently active entries; Long64_tfEntryPresent entry number in fTree.; Long64_tfFirstEntryFirst entry.; Bool_tfForceDimForce dimension.; TList*fFormulasArray of TTreeFormulas to display values; TList*fInputUsed for fSelector.; TTreeFormulaManager*fManagerCoordinator for the formulas.; UInt_tfNColumnsAmount of columns in the data; Long64_tfNEntriesNumber of entries in the tree.; UInt_tfNRowsAmount of rows in the data; TTreeFormula*fSelectSelection condition; TSelectorDraw*fSelectorSelector; TTree*fTreeData in a TTree. Class Charts. Inheritance Chart:. TVirtualTableInterface. ←; TTreeTableInterface. Function documentation; TTreeTableInterface(TTree* tree = 0, const char* varexp = 0, const char* selection = 0, Option_t* option = 0, Long64_t nentries = 0, Long64_t firstentry = 0); TTreeTableInterface constructor. ~TTreeTableInterface(); TTreeTableInterface destructor. void SetVariablesExpression(const char* varexp); Compile the variables expression from the given varexp. void SetSelection(const char* selection); Set the selection expression. void SyncFormulas(); Sync the formulas using the TTreeFormulaManager. void InitEntries(); Initialise the TEntryList with the entries that match the; selection criterium. Double_t GetValue(UInt_t row, UInt_t column); Return the value of row,column. If the position does not exist; or does not contain a number, 0 is returned. const char * GetValueAsString(UInt_t row, UInt_t column); Return the content of row,column as string to use in a; TGTableCell label. const char * GetRowHeader(UInt_t r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeTableInterface.html:2953,Inherit,Inheritance,2953,root/html602/TTreeTableInterface.html,https://root.cern,https://root.cern/root/html602/TTreeTableInterface.html,2,['Inherit'],['Inheritance']
Modifiability,"insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TXMLSetup(); TXMLSetup(const char* opt); TXMLSetup(const TXMLSetup& src); const char*XmlClassNameSpaceRef(const TClass* cl); const char*XmlConvertClassName(const char* name); const char*XmlGetElementName(const TStreamerElement* el). protected:. Int_tAtoI(const char* sbuf, Int_t def = 0, const char* errinfo = 0); const char*GetElItemName(TStreamerElement* el); Bool_tIsValidXmlSetup(const char* setupstr); Bool_tReadSetupFromStr(const char* setupstr); TClass*XmlDefineClass(const char* xmlClassName). Data Members; public:. static TXMLSetup::EXMLLayoutkGeneralized; static TXMLSetup::EXMLLayoutkSpecialized. protected:. Int_tfRefCounter! counter , used to build id of xml references; Bool_tfStoreStreamerInfos; TStringfStrBuf! buffer, used in XmlDefineClass() function; Bool_tfUseDtd; Bool_tfUseNamespaces; TXMLSetup::EXMLLayoutfXmlLayout; static TStringfgNameSpaceBase. Class Charts. Inheritance Chart:. TXMLSetup. ←. TBufferXML. TXMLFile. Function documentation; TString DefaultXmlSetup(); return default value for XML setup. void SetNameSpaceBase(const char* namespacebase); set namespace base. TXMLSetup(); defaule constructor of TXMLSetup class. TXMLSetup(const char* opt); contsruct TXMLSetup object getting values from string. TXMLSetup(const TXMLSetup& src); copy sonstructor of TXMLSetup class. ~TXMLSetup(); TXMLSetup class destructor. TString GetSetupAsString(); return setup values as string. Bool_t IsValidXmlSetup(const char* setupstr); checks if string is valid setup. Bool_t ReadSetupFromStr(const char* setupstr); get values from string. void PrintSetup(); show setup values. const char* XmlConvertClassName(const char* name); convert class name to exclude any special symbols like ':', '<' '>' ',' and spaces. const char* XmlClassNameSpaceRef(const TClass* cl); produce string which used as reference in class namespace definition. const char* XmlGetElementName(const TStreame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLSetup.html:2578,Inherit,Inheritance,2578,root/html602/TXMLSetup.html,https://root.cern,https://root.cern/root/html602/TXMLSetup.html,2,['Inherit'],['Inheritance']
Modifiability,"instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; TVirtualPad*fPadselected pad, if exists; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TGTab*fTabtab of the ged-editor; TGeoTabManager*fTabMgrtab manager corresponding to ged-editor; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetActive(Bool_t active = kTRUE); Set active GUI attribute frames related to the selected object. void Update(); Override Update from TGedFrame as fGedEditor can be null. » Last changed: root/geombuilder:$Id$ » Last generated: 2015-03-14 16:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoGedFrame.html:19811,Inherit,Inheritance,19811,root/html534/TGeoGedFrame.html,https://root.cern,https://root.cern/root/html534/TGeoGedFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"instead.; [legend]; Member Function Documentation. ◆ clone(). TObject * xRooProjectedPdf::clone ; (; const char * ; newname); const. inlineoverridevirtual . Reimplemented from RooProjectedPdf.; Definition at line 7152 of file xRooNode.cxx. ◆ evaluate(). double xRooProjectedPdf::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate projected p.d.f. ; Reimplemented from RooProjectedPdf.; Definition at line 7155 of file xRooNode.cxx. ◆ expectedEvents(). double xRooProjectedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooProjectedPdf.; Definition at line 7147 of file xRooNode.cxx. ◆ extendMode(). ExtendMode xRooProjectedPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooProjectedPdf.; Definition at line 7151 of file xRooNode.cxx. ◆ RooProjectedPdf() [1/3]. RooProjectedPdf::RooProjectedPdf ; (; ). Default constructor. ; Definition at line 24 of file RooProjectedPdf.cxx. ◆ RooProjectedPdf() [2/3]. RooProjectedPdf::RooProjectedPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _intpdf, . const RooArgSet & ; intObs . ). Construct projection of input pdf '_intpdf' over observables 'intObs'. ; Definition at line 25 of file RooProjectedPdf.cxx. ◆ RooProjectedPdf() [3/3]. RooProjectedPdf::RooProjectedPdf ; (; const RooProjectedPdf & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 26 of file RooProjectedPdf.cxx. roofit/xroofit/src/xRooNode.cxx. xRooProjectedPdf. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:75187,extend,extended,75187,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['extend'],['extended']
Modifiability,"insy; j++){; �� ������������ ����source[i][j] = dest[i][j]; ; �� ������������ �}; �� }�� ; ��; t->SetRegion(128,255,0,255);; �� t->FilterZonal(source,dest);�������. ��; trans->Draw(""SURF"");���� ; }. void Enhance(const Float_t** fSource, Float_t** fDest). TWO-DIMENSIONAL ENHANCE ZONAL FUNCTION; This function transforms the source spectrum. The calling program; should fill in input parameters. Then it multiplies transformed; coefficients in the given region by the given; enhance_coeff and transforms it back. Function parameters:; fSource-pointer to the matrix of source spectrum, its size should; be fSizeX*fSizeY; fDest-pointer to the matrix of destination data, its size should be; fSizeX*fSizeY. . Example of enhancement;  ; Function:; void TSpectrumTransform2::Enhance(const; float; **fSource, float; **fDest);  ; This function transforms the; source spectrum (for details see Transform function). �Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter; functions. The Enhance function multiplies transformed coefficients in the given; region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; back. Enhanced data are written into dest spectrum.; Example � script Enhance2.c:. Fig. 1 Original two-dimensional noisy spectrum. Fig. 2 Enhanced spectrum of; the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63); were multiplied by 5) ;  ; Script:; // Example to illustrate; enhancement (class TSpectrumTransform2).; // To execute this example,; do; // root > .x Enhance2.C; �; void Enhance2() {; �� Int_t i, j;; �� Int_t nbinsx =; 256;; �� Int_t nbinsy =; 256;�� ; �� Int_t xmin� = 0;; �� Int_t xmax� =; nbinsx;; �� Int_t ymin� = 0;; �� Int_t ymax� =; nbinsy;; �� Float_t ** source = new float *[nbinsx];�� ; �� Float_t ** dest = new; float *[nbinsx];����� ; �� for (i=0;i<nbinsx;i++); ���������������������������������������",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrum2Transform.html:22102,Enhance,Enhance,22102,root/html532/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html532/TSpectrum2Transform.html,2,['Enhance'],['Enhance']
Modifiability,"int dim=1);  ; const double * Coords (unsigned int ipoint) const;  return a pointer to the coordinates data for the given fit point ;  ; const double * GetCoordComponent (unsigned int ipoint, unsigned int icoord) const;  returns a single coordinate component of a point. ;  ; const std::vector< const double * > & GetCoordDataPtrs () const;  direct access to coord data ptrs ;  ; unsigned int NDim () const;  return coordinate data dimension ;  ; unsigned int NPoints () const;  return number of fit points ;  ; FitData & operator= (const FitData &rhs);  ; DataOptions & Opt ();  ; const DataOptions & Opt () const;  access to options ;  ; const DataRange & Range () const;  access to range ;  ; unsigned int Size () const;  return number of fit points ;  . Private Attributes; std::unique_ptr< ProxyListBox > fList;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Fit::FitData; void InitCoordsVector ();  initializer routines to set the corresponding pointers right The vectors must NOT be resized after this initialization without setting the corresponding pointers in the same moment ( has to be an atomic operation in case of multithreading ). ;  ; template<class Iterator > ; void InitFromRange (Iterator dataItr);  ; void UnWrap ();  ;  Static Protected Member Functions inherited from ROOT::Fit::FitData; static constexpr unsigned VectorPadding (const unsigned);  If VecCore is not defined, there is no vectorization available and the SIMD vector size will always be one. ;  ;  Protected Attributes inherited from ROOT::Fit::FitData; unsigned int fDim;  ; unsigned int fMaxPoints;  ; unsigned int fNPoints;  ; bool fWrapped;  . #include <Fit/SparseData.h>. Inheritance diagram for ROOT::Fit::SparseData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SparseData() [1/3]. ROOT::Fit::SparseData::SparseData ; (; std::vector< double > & ; min, . std::vector< double > & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1SparseData.html:5819,inherit,inherited,5819,doc/master/classROOT_1_1Fit_1_1SparseData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1SparseData.html,1,['inherit'],['inherited']
Modifiability,"int extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static bool getFloorGlobal ();  ; static void setFloorGlobal (bool flag);  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static EvalErrorIter evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:46803,config,configuration,46803,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,1,['config'],['configuration']
Modifiability,"int extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static bool getFloorGlobal ();  ; static void setFloorGlobal (bool flag);  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumFunc.html:45609,config,configuration,45609,doc/master/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/master/classRooRealSumFunc.html,1,['config'],['configuration']
Modifiability,"int i. ;  ; virtual void SetPointY (Int_t i, Double_t y);  Set y value for point i. ;  ; virtual void SetStats (Bool_t stats=kTRUE);  Set statistics option on/off. ;  ; void SetTitle (const char *title="""") override;  Change (i.e. ;  ; virtual void Sort (Bool_t(*greater)(const TGraph *, Int_t, Int_t)=&TGraph::CompareX, Bool_t ascending=kTRUE, Int_t low=0, Int_t high=-1111);  Sorts the points of this TGraph using in-place quicksort (see e.g. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGraph. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UseCurrentStyle () override;  Set current style settings in this graph This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; void Zero (Int_t &k, Double_t AZ, Double_t BZ, Double_t E2, Double_t &X, Double_t &Y, Int_t maxiterations);  Find zero of a continuous function. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:18140,inherit,inherited,18140,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,4,['inherit'],['inherited']
Modifiability,"int icoord) const; virtual doubleDoEval(const double* x) const; ROOT::Math::MinimTransformFunctionMinimTransformFunction(const ROOT::Math::MinimTransformFunction&); ROOT::Math::MinimTransformFunction&operator=(const ROOT::Math::MinimTransformFunction&). Data Members; private:. const ROOT::Math::IMultiGradFunction*fFuncuser function ; vector<unsigned int>fIndexvector with external indices for internal variables ; vector<MinimTransformVariable>fVariablesvector of variable settings and tranformation function; vector<double>fXinternal cached of external values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformFunction(const ROOT::Math::IMultiGradFunction* f, const vector<ROOT::Math::EMinimVariableType>& types, const vector<double>& values, const map<unsigned int,std::pair<double,double> >& bounds). Constructor from a IMultiGradFunction interface (which is managed by the class); vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ); variable values (used for the fixed ones) and a map with the bounds (for the bounded variables). unsigned int NDim() const; method inherited from IFunction interface. { return fIndex.size(); }. unsigned int NTot() const; { return fFunc->NDim(); }. IMultiGenFunction * Clone() const; clone: not supported (since auto_ptr used in the fVariables). const double * Transformation(const double* x) const; transform from internal to external; result is cached also inside the class. Transformation(x, &fX[0]). void InvTransformation(const double* xext, double* xint) const; inverse transformation (external -> internal). void InvStepTransformation(const double* x, const double* sext, double* sint) const; inverse transformation for steps (external -> internal) at external point x. void GradientTransformation(const double* x, const double* gExt, double* gInt) const; transform gradient vector (external -> internal) at internal point x. void MatrixTransformation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MinimTransformFunction.html:2693,variab,variable,2693,root/html534/ROOT__Math__MinimTransformFunction.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MinimTransformFunction.html,6,['variab'],"['variable', 'variables']"
Modifiability,"int ivar, unsigned int jvar) constreturn covariance matrices element for variables ivar,jvar if the variable is fixed the return value ...Definition Minimizer.cxx:120; ROOT::Math::Minimizer::GetHessianMatrixvirtual bool GetHessianMatrix(double *hMat) constFill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second...Definition Minimizer.cxx:148; ROOT::Math::Minimizer::SetVariablevirtual bool SetVariable(unsigned int ivar, const std::string &name, double val, double step)=0set a new free variable; ROOT::Math::Minimizer::FixVariablevirtual bool FixVariable(unsigned int ivar)fix an existing variableDefinition Minimizer.cxx:87; ROOT::Math::Minimizer::SetFixedVariablevirtual bool SetFixedVariable(unsigned int ivar, const std::string &name, double val)set a new fixed variable (override if minimizer supports them )Definition Minimizer.cxx:44; ROOT::Math::Minimizer::GetMinosErrorvirtual bool GetMinosError(unsigned int ivar, double &errLow, double &errUp, int option=0)minos error for variable i, return false if Minos failed or not supported and the lower and upper err...Definition Minimizer.cxx:172; ROOT::Math::Minimizer::SetVariableLowerLimitvirtual bool SetVariableLowerLimit(unsigned int ivar, double lower)set the lower-limit of an already existing variableDefinition Minimizer.cxx:70; ROOT::Math::Minimizer::IsFixedVariablevirtual bool IsFixedVariable(unsigned int ivar) constquery if an existing variable is fixed (i.e.Definition Minimizer.cxx:102; ROOT::Math::Minimizer::ReleaseVariablevirtual bool ReleaseVariable(unsigned int ivar)release an existing variableDefinition Minimizer.cxx:94; ROOT::Math::Minimizer::Hessevirtual bool Hesse()perform a full calculation of the Hessian matrix for error calculationDefinition Minimizer.cxx:185; ROOT::Math::Minimizer::Contourvirtual bool Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj)find the contour points (xi, xj) of the function for parameter ivar a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:12933,variab,variable,12933,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,1,['variab'],['variable']
Modifiability,"int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _eff;  Efficiency function. ;  ; RooRealProxy _pdf;  Probability Density function. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffProd.html:68354,inherit,inherited,68354,doc/master/classRooEffProd.html,https://root.cern,https://root.cern/doc/master/classRooEffProd.html,1,['inherit'],['inherited']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TPolyMarker3D*fPolyMarker3D; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawPolyMarker3D.html:7046,variab,variability,7046,root/html534/TProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/root/html534/TProofDrawPolyMarker3D.html,2,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProfile*fProfile; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* ); See TProofDraw::Init(). void DefVar(); Define relevant variables. void Begin(TTree* t); See",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawProfile.html:7006,variab,variability,7006,root/html534/TProofDrawProfile.html,https://root.cern,https://root.cern/root/html534/TProofDrawProfile.html,2,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProfile2D*fProfile; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* ); See TProofDraw::Init(). void DefVar(); Define relevant variables. void Begin(TTree* t); S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawProfile2D.html:7016,variab,variability,7016,root/html534/TProofDrawProfile2D.html,https://root.cern,https://root.cern/root/html534/TProofDrawProfile2D.html,2,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawListOfGraphs.html:7053,variab,variability,7053,root/html534/TProofDrawListOfGraphs.html,https://root.cern,https://root.cern/root/html534/TProofDrawListOfGraphs.html,2,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawListOfPolyMarkers3D.html:7088,variab,variability,7088,root/html534/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html534/TProofDrawListOfPolyMarkers3D.html,2,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TPolyMarker3D*fPolyMarker3D; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawPolyMarker3D.html:6980,variab,variability,6980,root/html530/TProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/root/html530/TProofDrawPolyMarker3D.html,3,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProfile*fProfile; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* ); See TProofDraw::Init(). void DefVar(); Define relevant variables. void Begin(TTree* t); See T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawProfile.html:6940,variab,variability,6940,root/html530/TProofDrawProfile.html,https://root.cern,https://root.cern/root/html530/TProofDrawProfile.html,3,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProfile2D*fProfile; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* ); See TProofDraw::Init(). void DefVar(); Define relevant variables. void Begin(TTree* t); See",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawProfile2D.html:6950,variab,variability,6950,root/html530/TProofDrawProfile2D.html,https://root.cern,https://root.cern/root/html530/TProofDrawProfile2D.html,3,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawListOfGraphs.html:6987,variab,variability,6987,root/html530/TProofDrawListOfGraphs.html,https://root.cern,https://root.cern/root/html530/TProofDrawListOfGraphs.html,3,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawListOfPolyMarkers3D.html:7022,variab,variability,7022,root/html530/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html530/TProofDrawListOfPolyMarkers3D.html,3,['variab'],['variability']
Modifiability,"int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; UInt_tfSeedRandom number generator seed; TStringTNamed::fTitleobject title. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TRandom. ←. TRandom1. TRandom2. TRandom3. Function documentation; TRandom(UInt_t seed = 65539); Default constructor. For seed see SetSeed(). ~TRandom(); Default destructor. Can reset gRandom to 0 if gRandom points to this; generator. Int_t Binomial(Int_t ntot, Double_t prob); Generates a random integer N according to the binomial law.; Coded from Los Alamos report LA-5061-MS. N is binomially distributed between 0 and ntot inclusive; with mean prob*ntot and prob is between 0 and 1. Note: This function should not be used when ntot is large (say >100).; The normal approximation is then recommended instead; (with mean =*ntot+0.5 and standard deviation sqrt(ntot*prob*(1-prob)). Double_t BreitWigner(Double_t mean = 0, Double_t gamma = 1); Return a number distributed following a BreitWigner function with mean and gamma. void Circle(Double_t& x, Double_t& y, Double_t r); Generates random vectors, uniformly distributed over a circle of given radius.; Input : r ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRandom.html:11566,Inherit,Inheritance,11566,root/html602/TRandom.html,https://root.cern,https://root.cern/root/html602/TRandom.html,2,['Inherit'],['Inheritance']
Modifiability,"int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); ROOT::Fit::FitterFitter(); ROOT::Math::IMultiGenFunction*GetFCN() const; ROOT::Math::Minimizer*GetMinimizer() const; boolIsBinFit() const; boolLeastSquareFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::UnBinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, bool extended); boolLikelihoodFit(const ROOT::Fit::BinData& data, const ROOT::Math::IParametricFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, const ROOT::Math::IParametricFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::BinData& data, const ROOT::Math::IParametricGradFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, const ROOT::Math::IParametricGradFunctionMultiDim& func, bool extended); boolLinearFit(const ROOT::Fit::BinData& data); const ROOT::Fit::FitResult&Result() const; boolSetFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); voidSetFunction(const ROOT::Fit::Fitter::IModelFunction& func, bool useGradient = false); voidSetFunction(const ROOT::Fit::Fitter::IModel1DFunction& func, bool useGradient = false); voidSetFunction(const ROOT::Fit::Fitter::IGradModelFunction& func, bool useGradient = true); voidSetFunction(const ROOT::Fit::Fitter::IGradModel1DFunction& func, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__Fitter.html:3228,extend,extended,3228,root/html532/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__Fitter.html,4,['extend'],['extended']
Modifiability,"int options:; ""Default"" - between Verbose and Quiet.; ""Verbose"" - prints results after each iteration.; ""Quiet"" - no fit information is printed.; Fit button - performs a fit. Reset - resets all GUI elements and related fit settings to the default ones. Close - closes this window. ; Definition at line 54 of file TFitEditor.h. Classes; struct  FuncParamData_t;  . Public Types; typedef std::vector< FuncParamData_t > FuncParams_t;  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFitEditor (TVirtualPad *pad, TObject *obj);  Constructor of fit editor. ;  ;  ~TFitEditor () override;  Fit editor destructor. ;  ; void CloseWindow () override;  Close fit panel window. ;  ; virtual void ConnectSlots ();  Connect GUI signals to fit panel slots. ;  ; virtual void DisconnectSlots ();  Disconnect GUI signals from fit panel slots. ;  ; virtual void DoAddition (Bool_t on);  Slot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitEditor.html:5168,inherit,inherited,5168,doc/master/classTFitEditor.html,https://root.cern,https://root.cern/doc/master/classTFitEditor.html,1,['inherit'],['inherited']
Modifiability,"int window id. ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootCanvas.html:18338,inherit,inherited,18338,doc/master/classTRootCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootCanvas.html,1,['inherit'],['inherited']
Modifiability,int(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; Int_t _basisB;  ; Int_t _basisCos;  ; Int_t _basisCosh;  ; Int_t _basisSin;  ; Int_t _basisSinh;  ; RooRealProxy _dgamma;  ; RooRealProxy _dm;  ; RooRealProxy _f0;  ; RooRealProxy _f1;  ; RooRealProxy _f2;  ; RooRealProxy _f3;  ; RooRealProxy _t;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basisFunc) convolution objects. ;  ; RooRealProxy _convVar;  Convolution variable. ;  ; bool _isCopy;  ; RooRealProxy _model;  Original model. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBDecay.html:64338,inherit,inherited,64338,doc/master/classRooBDecay.html,https://root.cern,https://root.cern/doc/master/classRooBDecay.html,1,['inherit'],['inherited']
Modifiability,"int(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:5449,Variab,VariableTransformBase,5449,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"int(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html:5449,Variab,VariableTransformBase,5449,root/html534/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"int(ostream& os) const; voidPrintData(); voidSetAlpha(Float_t alpha); voidSetAlpha_p(Float_t alpha); voidSetErrorCache(Float_t err_cache); voidSetIdx(Int_t idx); voidSetIsShrinked(Int_t isshrinked); voidSetLine(Float_t* line); voidSetNs(UInt_t ns); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TMVA::SVEventSVEvent(); TMVA::SVEventSVEvent(const TMVA::SVEvent&); TMVA::SVEventSVEvent(const TMVA::Event*, Float_t, Bool_t isSignal = kFALSE); TMVA::SVEventSVEvent(const vector<Float_t>*, Float_t alpha, Int_t typeFlag, UInt_t ns); TMVA::SVEventSVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); voidUpdateErrorCache(Float_t upercache). Data Members; private:. Float_tfAlphalagrange multiplier; Float_tfAlpha_plagrange multiplier; const Float_tfCweightsvm cost weight; vector<Float_t>fDataVector; Float_tfErrorCacheoptimization parameter; Int_tfIdxindex flag; Int_tfIsShrinkedshrinking flag, see documentation; Float_t*fLinepointer to column of kerenl matrix ; UInt_tfNVarnumber of variables; UInt_tfNsdocumentation; const Float_tfTargetregression target; const Int_tfTypeFlagis sig or bkg - svm requieres 1 for sig and -1 for bkg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVEvent(). SVEvent(const TMVA::Event* , Float_t , Bool_t isSignal = kFALSE); constructor. SVEvent(const vector<Float_t>* , Float_t alpha, Int_t typeFlag, UInt_t ns); constructor. SVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); constructor. ~SVEvent(); destructor. void Print(ostream& os) const; printout. void PrintData(); printout. SVEvent(). void SetAlpha(Float_t alpha); { fAlpha = alpha; }. void SetAlpha_p(Float_t alpha); { fAlpha_p = alpha; }. void SetErrorCache(Float_t err_cache); { fErrorCache = err_cache; }. void SetIsShrinked(Int_t isshrinked); { fIsShrinked = isshrinked; }. void SetLine(Float_t* line); { fLine = line;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__SVEvent.html:1923,variab,variables,1923,root/html530/TMVA__SVEvent.html,https://root.cern,https://root.cern/root/html530/TMVA__SVEvent.html,3,['variab'],['variables']
Modifiability,"int) const override;  global correlation coefficient for variable i ;  ; bool Hesse () override;  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual TClass * IsA () const;  ; bool IsFixedVariable (unsigned int) const override;  query if an existing variable is fixed (i.e. ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; int MinosStatus () const override;  minos status code of last Minos run minos status = -1 : Minos is not run = 0 : last MINOS run was successful > 0 : some problems encountered when running MINOS ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; void PrintResults () override;  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool ReleaseVariable (unsigned int) override;  release an existing variable ;  ; bool Scan (unsigned int i, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0) override;  scan a parameter i around the minimum. ;  ; bool SetDebug (bool on=true);  set debug mode. Return true if setting was successful ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:3766,variab,variables,3766,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,2,['variab'],['variables']
Modifiability,"int64_t IncModified ();  ; RCanvas & operator= (const RCanvas &)=delete;  Disable assignment for now. ;  . Private Attributes; int fHeight {0};  Height of the canvas in pixels. ;  ; Version_t fModified {1};  Modify counter, incremented every time canvas is changed. ;  ; std::unique_ptr< Internal::RVirtualCanvasPainter > fPainter;  The painter of this canvas, bootstrapping the graphics connection. ;  ; bool fShown {false};  indicate if Show() method was called before ;  ; std::string fTitle;  to apply attributes changes ;  ; bool fUpdated {false};  indicate if Update() method was called before ;  ; int fWidth {0};  Width of the canvas in pixels. ;  . Friends; class RCanvasPainter;  use for ID generation ;  ; class RChangeAttrRequest;  used for primitives drawing ;  ; class RPadBase;  . Additional Inherited Members;  Public Types inherited from ROOT::Experimental::RPadBase; using Primitives_t = std::vector< std::shared_ptr< RDrawable > >;  ;  Public Types inherited from ROOT::Experimental::RDrawable; using Version_t = uint64_t;  ;  Protected Member Functions inherited from ROOT::Experimental::RPadBase;  RPadBase (const char *csstype);  Allow derived classes to default construct a RPadBase. ;  ; void CollectShared (Internal::RIOSharedVector_t &) override;  Collect all shared items to resolve shared_ptr after IO. ;  ; void DisplayPrimitives (RPadBaseDisplayItem &paditem, RDisplayContext &ctxt);  Create display items for all primitives in the pad Each display item gets its special id, which used later for client-server communication Second parameter is version id which already delivered to the client. ;  ; void SetDrawableVersion (Version_t vers) override;  Assign drawable version - for pad itself and all primitives. ;  ;  Protected Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const RDrawable &)=delete;  ; virtual std::unique_ptr< RDisplayItem > Display (const RDisplayContext &);  Creates display item for drawable By default item contains dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html:7333,inherit,inherited,7333,doc/master/classROOT_1_1Experimental_1_1RCanvas.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html,3,['inherit'],['inherited']
Modifiability,"int> range = fullData[""range""];; 1797 ; 1798 if (range.size() == 1); 1799 spec.WithGlobalRange({range[0]});; 1800 else if (range.size() == 2); 1801 spec.WithGlobalRange({range[0], range[1]});; 1802 }; 1803 return ROOT::RDataFrame(spec);; 1804}; 1805 ; 1806} // namespace Experimental; 1807} // namespace RDF; 1808 ; 1809} // namespace ROOT; 1810 ; 1811namespace cling {; 1812//////////////////////////////////////////////////////////////////////////; 1813/// Print an RDataFrame at the prompt; 1814std::string printValue(ROOT::RDataFrame *df); 1815{; 1816 // The loop manager is never null, except when its construction failed.; 1817 // This can happen e.g. if the constructor of RLoopManager that expects; 1818 // a file name is used and that file doesn't exist. This point is usually; 1819 // not even reached in that situation, since the exception thrown by the; 1820 // constructor will also stop execution of the program. But it can still; 1821 // be reached at the prompt, if the user tries to print the RDataFrame; 1822 // variable after an incomplete initialization.; 1823 auto *lm = df->GetLoopManager();; 1824 if (!lm) {; 1825 throw std::runtime_error(""Cannot print information about this RDataFrame, ""; 1826 ""it was not properly created. It must be discarded."");; 1827 }; 1828 auto *tree = lm->GetTree();; 1829 auto defCols = lm->GetDefaultColumnNames();; 1830 ; 1831 std::ostringstream ret;; 1832 if (tree) {; 1833 ret << ""A data frame built on top of the "" << tree->GetName() << "" dataset."";; 1834 if (!defCols.empty()) {; 1835 if (defCols.size() == 1); 1836 ret << ""\nDefault column: "" << defCols[0];; 1837 else {; 1838 ret << ""\nDefault columns:\n"";; 1839 for (auto &&col : defCols) {; 1840 ret << "" - "" << col << ""\n"";; 1841 }; 1842 }; 1843 }; 1844 } else if (auto ds = df->fDataSource) {; 1845 ret << ""A data frame associated to the data source \"""" << cling::printValue(ds) << ""\"""";; 1846 } else {; 1847 ret << ""An empty data frame that will create "" << lm->GetNEmptyEntries() << "" e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:99623,variab,variable,99623,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"int> range = fullData[""range""];; 1974 ; 1975 if (range.size() == 1); 1976 spec.WithGlobalRange({range[0]});; 1977 else if (range.size() == 2); 1978 spec.WithGlobalRange({range[0], range[1]});; 1979 }; 1980 return ROOT::RDataFrame(spec);; 1981}; 1982 ; 1983} // namespace Experimental; 1984} // namespace RDF; 1985 ; 1986} // namespace ROOT; 1987 ; 1988namespace cling {; 1989//////////////////////////////////////////////////////////////////////////; 1990/// Print an RDataFrame at the prompt; 1991std::string printValue(ROOT::RDataFrame *df); 1992{; 1993 // The loop manager is never null, except when its construction failed.; 1994 // This can happen e.g. if the constructor of RLoopManager that expects; 1995 // a file name is used and that file doesn't exist. This point is usually; 1996 // not even reached in that situation, since the exception thrown by the; 1997 // constructor will also stop execution of the program. But it can still; 1998 // be reached at the prompt, if the user tries to print the RDataFrame; 1999 // variable after an incomplete initialization.; 2000 auto *lm = df->GetLoopManager();; 2001 if (!lm) {; 2002 throw std::runtime_error(""Cannot print information about this RDataFrame, ""; 2003 ""it was not properly created. It must be discarded."");; 2004 }; 2005 auto *tree = lm->GetTree();; 2006 auto defCols = lm->GetDefaultColumnNames();; 2007 ; 2008 std::ostringstream ret;; 2009 if (tree) {; 2010 ret << ""A data frame built on top of the "" << tree->GetName() << "" dataset."";; 2011 if (!defCols.empty()) {; 2012 if (defCols.size() == 1); 2013 ret << ""\nDefault column: "" << defCols[0];; 2014 else {; 2015 ret << ""\nDefault columns:\n"";; 2016 for (auto &&col : defCols) {; 2017 ret << "" - "" << col << ""\n"";; 2018 }; 2019 }; 2020 }; 2021 } else if (auto ds = df->fDataSource) {; 2022 ret << ""A data frame associated to the data source \"""" << cling::printValue(ds) << ""\"""";; 2023 } else {; 2024 ret << ""An empty data frame that will create "" << lm->GetNEmptyEntries() << "" e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:107462,variab,variable,107462,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"intData(); voidSetAlpha(Float_t alpha); voidSetAlpha_p(Float_t alpha); voidSetErrorCache(Float_t err_cache); voidSetIdx(Int_t idx); voidSetIsShrinked(Int_t isshrinked); voidSetLine(Float_t* line); voidSetNs(UInt_t ns); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMVA::SVEventSVEvent(); TMVA::SVEventSVEvent(const TMVA::SVEvent&); TMVA::SVEventSVEvent(const TMVA::Event*, Float_t, Bool_t isSignal = kFALSE); TMVA::SVEventSVEvent(const vector<Float_t>*, Float_t alpha, Int_t typeFlag, UInt_t ns); TMVA::SVEventSVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); voidUpdateErrorCache(Float_t upercache). Data Members; private:. Float_tfAlphalagrange multiplier; Float_tfAlpha_plagrange multiplier; const Float_tfCweightsvm cost weight; vector<Float_t>fDataVector; Float_tfErrorCacheoptimization parameter; Int_tfIdxindex flag; Int_tfIsShrinkedshrinking flag, see documentation; Float_t*fLinepointer to column of kerenl matrix; UInt_tfNVarnumber of variables; UInt_tfNsdocumentation; const Float_tfTargetregression target; const Int_tfTypeFlagis sig or bkg - svm requieres 1 for sig and -1 for bkg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVEvent(). SVEvent(const TMVA::Event* , Float_t , Bool_t isSignal = kFALSE); constructor. SVEvent(const vector<Float_t>* , Float_t alpha, Int_t typeFlag, UInt_t ns); constructor. SVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); constructor. ~SVEvent(); destructor. void Print(ostream& os) const; printout. void PrintData(); printout. SVEvent(). void SetAlpha(Float_t alpha); { fAlpha = alpha; }. void SetAlpha_p(Float_t alpha); { fAlpha_p = alpha; }. void SetErrorCache(Float_t err_cache); { fErrorCache = err_cache; }. void SetIsShrinked(Int_t isshrinked); { fIsShrinked = isshrinked; }. void SetLine(Float_t* line); { fLine = line;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__SVEvent.html:1999,variab,variables,1999,root/html602/TMVA__SVEvent.html,https://root.cern,https://root.cern/root/html602/TMVA__SVEvent.html,4,['variab'],['variables']
Modifiability,"intable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Int_tRooPrintable::_nameLength. private:. Int_t_len; char*_nameList[_len]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void strdup(Int_t& dstlen, char*& dstbuf, const char* str); copy src to dst, keep dstlen up to date, make sure zero length strings; do not take memory. RooNameSet(); Default constructor. RooNameSet(const RooArgSet& argSet); Construct from RooArgSet. RooNameSet(const RooNameSet& other); Copy constructor. ~RooNameSet(); Destructor. RooNameSet& operator=(const RooNameSet& ); Assignment operator. Bool_t operator==(const RooNameSet& other) const; Comparison operator. Bool_t operator<(const RooNameSet& other) const. void extendBuffer(Int_t inc). void setNameList(const char* givenList). void refill(const RooArgSet& argSet); Refill internal contents from names in given argSet. RooArgSet* select(const RooArgSet& list) const; Construct a RooArgSet of objects in input 'list'; whose names match to those in the internal name; list of RooNameSet. void printName(ostream& os) const; Print name of nameset. void printTitle(ostream& os) const; Print title of nameset. void printClassName(ostream& os) const; Print class name of nameset. void printValue(ostream& os) const; Print value of nameset, i.e the list of names. TObject* Clone(const char* ) const; { return new RooNameSet(*this) ; }. void Print(Option_t* options = 0) const. const char* content() const; { return _nameList ? _nameList : """"; }. » Last changed: Tue Jun 2 15:32:30 2015 » Last generated: 2015-06-02 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooNameSet.html:8655,extend,extendBuffer,8655,root/html604/RooNameSet.html,https://root.cern,https://root.cern/root/html604/RooNameSet.html,2,['extend'],['extendBuffer']
Modifiability,"inted for each leaf or branch node; modification. The returned head node owns all cloned branch nodes; that were created in the cloning proces. RooAbsArg* build(const char* masterCatState, Bool_t verbose = kFALSE); Build a clone of the prototype executing all registered 'replace'; rules and 'split' rules for the masterCat state named; 'masterCatState'. If verbose is set a message is printed for; each leaf or branch node modification. The returned composite arg; is owned by the customizer. This function cannot be called on; customizer build with the sterile constructor. RooAbsArg* doBuild(const char* masterCatState, Bool_t verbose); Back-end implementation of the p.d.f building functionality. void printName(ostream& os) const; Print name of customizer. void printTitle(ostream& os) const; Print title of customizer. void printClassName(ostream& os) const; Print class name of customizer. void printArgs(ostream& os) const; Print arguments of customizer, i.e. input p.d.f and input master category (if any). void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print customizer configuration details. void setCloneBranchSet(RooArgSet& cloneBranchSet); Install the input RooArgSet as container in which all cloned branches; will be stored. RooCustomizer(const RooAbsArg& pdf, const RooAbsCategoryLValue& masterCat, RooArgSet& splitLeafListOwned, RooArgSet* splitLeafListAll = 0); Constructors, assignment etc. void setOwning(Bool_t flag); If flag is true, make customizer own all created components. const RooArgSet& cloneBranchList() const; Return list of cloned branch nodes. const RooArgSet& cloneLeafList() const; Return list of cloned leaf nodes. void Print(Option_t* options = 0) const; Printing interface. » Last changed: Sat Jun 20 17:30:09 2015 » Last generated: 2015-06-20 17:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCustomizer.html:15728,config,configuration,15728,root/html604/RooCustomizer.html,https://root.cern,https://root.cern/root/html604/RooCustomizer.html,2,['config'],['configuration']
Modifiability,"inted for each leaf or branch node; modification. The returned head node owns all cloned branch nodes; that were created in the cloning proces. RooAbsArg* build(const char* masterCatState, Bool_t verbose = kFALSE); Build a clone of the prototype executing all registered 'replace'; rules and 'split' rules for the masterCat state named; 'masterCatState'. If verbose is set a message is printed for; each leaf or branch node modification. The returned composite arg; is owned by the customizer. This function cannot be called on; customizer build with the sterile constructor. RooAbsArg* doBuild(const char* masterCatState, Bool_t verbose); Back-end implementation of the p.d.f building functionality. void printName(ostream& os) const; Print name of customizer. void printTitle(ostream& os) const; Print title of customizer. void printClassName(ostream& os) const; Print class name of customizer. void printArgs(ostream& os) const; Print arguments of customizer, i.e. input p.d.f and input master category (if any). void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print customizer configuration details. void setCloneBranchSet(RooArgSet& cloneBranchSet); Install the input RooArgSet as container in which all cloned branches; will be stored. RooCustomizer(const RooAbsArg& pdf, const RooAbsCategoryLValue& masterCat, RooArgSet& splitLeafListOwned, RooArgSet* splitLeafListAll = 0); Constructors, assignment etc. void setOwning(Bool_t flag); If flag is true, make customizer own all created components. const RooArgSet& cloneBranchList() const; Return list of cloned branch nodes. const RooArgSet& cloneLeafList() const; Return list of cloned leaf nodes. void Print(Option_t* options = 0) const; Printing interface. » Last changed: Tue Jun 30 14:32:23 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCustomizer.html:15728,config,configuration,15728,root/html602/RooCustomizer.html,https://root.cern,https://root.cern/root/html602/RooCustomizer.html,2,['config'],['configuration']
Modifiability,"inted for each leaf or branch node; modification. The returned head node owns all cloned branch nodes; that were created in the cloning proces. RooAbsArg* build(const char* masterCatState, Bool_t verbose = kFALSE); Build a clone of the prototype executing all registered 'replace'; rules and 'split' rules for the masterCat state named; 'masterCatState'. If verbose is set a message is printed for; each leaf or branch node modification. The returned composite arg; is owned by the customizer. This function cannot be called on; customizer build with the sterile constructor. RooAbsArg* doBuild(const char* masterCatState, Bool_t verbose); Back-end implementation of the p.d.f building functionality. void printName(ostream& os) const; Print name of customizer. void printTitle(ostream& os) const; Print title of customizer. void printClassName(ostream& os) const; Print class name of customizer. void printArgs(ostream& os) const; Print arguments of customizer, i.e. input p.d.f and input master category (if any). void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print customizer configuration details. void setCloneBranchSet(RooArgSet& cloneBranchSet); Install the input RooArgSet as container in which all cloned branches; will be stored. RooCustomizer(const RooAbsArg& pdf, const RooAbsCategoryLValue& masterCat, RooArgSet& splitLeafListOwned, RooArgSet* splitLeafListAll = 0); Constructors, assignment etc. void setOwning(Bool_t flag); If flag is true, make customizer own all created components. const RooArgSet& cloneBranchList() const; Return list of cloned branch nodes. const RooArgSet& cloneLeafList() const; Return list of cloned leaf nodes. void Print(Option_t* options = 0) const; Printing interface. » Last changed: Tue Mar 10 17:16:08 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCustomizer.html:14720,config,configuration,14720,root/html534/RooCustomizer.html,https://root.cern,https://root.cern/root/html534/RooCustomizer.html,2,['config'],['configuration']
Modifiability,"integer; L: a 64 bit signed integer; l: a 64 bit unsigned integer; G: a long signed integer, stored as 64 bit; g: a long unsigned integer, stored as 64 bit; F: a 32 bit floating point; D: a 64 bit floating point; O: [the letter ‘o’, not a zero] a boolean (Bool_t). The type is used for a byte count to decide how much space to allocate. The variable written is simply the block of bytes starting at the starting address given in the second parameter. It may or may not match the leaf list depending on whether or not the programmer is being careful when choosing the leaf address, name, and type.; By default, a variable will be copied with the number of bytes specified in the type descriptor symbol. However, if the type consists of two characters, the number specifies the number of bytes to be used when copying the variable to the output buffer. The line below describes ntrack to be written as a 16-bit integer (rather than a 32-bit integer).; ""ntrack/I2""; With this Branch method, you can also add a leaf that holds an entire array of variables. To add an array of floats use the f[n] notation when describing the leaf.; Float_t f[10];; tree->Branch(""fBranch"",f,""f[10]/F"");; You can also add an array of variable length:; {; TFile *f = new TFile(""peter.root"",""recreate"");; Int_t nPhot;; Float_t E[500];; TTree* nEmcPhotons = new TTree(""nEmcPhotons"",""EMC Photons"");; nEmcPhotons->Branch(""nPhot"",&nPhot,""nPhot/I"");; nEmcPhotons->Branch(""E"",E,""E[nPhot]/F"");; }; See “Example 2: A Tree with a C Structure” below ($ROOTSYS/tutorials/tree/tree2.C) and staff.C at the beginning of this chapter.; 12.10 Adding a TBranch to Hold an Object; To write a branch to hold an event object, we need to load the definition of the Event class, which is in $ROOTSYS/test/libEvent.so (if it doesn’t exist type make in $ROOTSYS/test). An object can be saved in a tree if a ROOT dictionary for its class has been generated and loaded.; root[] .L libEvent.so; First, we need to open a file and create a tree.; root[] ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:540588,variab,variables,540588,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"integral error; TStringfVarName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SamplingDistribution(const char* name, const char* title, vector<Double_t>& samplingDist, const char* varName = 0); SamplingDistribution constructor. SamplingDistribution(const char* name, const char* title, vector<Double_t>& samplingDist, vector<Double_t>& sampleWeights, const char* varName = 0); SamplingDistribution constructor. SamplingDistribution(const char* name, const char* title, const char* varName = 0); SamplingDistribution constructor (with name and title). SamplingDistribution(const char* name, const char* title, RooDataSet& dataSet, const char* columnName = 0, const char* varName = 0); Creates a SamplingDistribution from a RooDataSet for debugging; purposes; e.g. if you need a Gaussian type SamplingDistribution; you can generate it from a Gaussian pdf and use the resulting; RooDataSet with this constructor. The result is the projected distribution onto varName; marginalizing the other variables. If varName is not given, the first variable will be used.; This is useful mostly for RooDataSets with only one observable.; check there are any meaningful entries in the given dataset. SamplingDistribution(); SamplingDistribution default constructor. ~SamplingDistribution(); SamplingDistribution destructor. void Add(const RooStats::SamplingDistribution* other); Merge SamplingDistributions (does nothing if NULL is given).; If variable name was not set before, it is copied from the added; SamplingDistribution. Double_t Integral(Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off. void SortValues() const. Double_t IntegralAndError(Double_t& error, Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SamplingDistribution.html:9051,variab,variables,9051,root/html602/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html602/RooStats__SamplingDistribution.html,4,['variab'],['variables']
Modifiability,"integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction2PdfBinding_double_unsigned_int_double_.html:40146,config,configuration,40146,root/html532/RooCFunction2PdfBinding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html532/RooCFunction2PdfBinding_double_unsigned_int_double_.html,1,['config'],['configuration']
Modifiability,"integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; TIterator*_pdfItr!; RooListProxy_pdfList; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooMomentMorph::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMomentMorph.html:40077,config,configuration,40077,root/html530/RooMomentMorph.html,https://root.cern,https://root.cern/root/html530/RooMomentMorph.html,2,['config'],['configuration']
Modifiability,"integration cache manager; RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRealSumPdf.html:44949,config,configuration,44949,root/html602/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html602/RooRealSumPdf.html,8,['config'],['configuration']
Modifiability,"integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; Bool_t_haveDDo we have a denominator term?; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; RooListProxy_intListMaster integrals representing numerator and denominator; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooGenProdProj.html:33618,config,configuration,33618,root/html532/RooGenProdProj.html,https://root.cern,https://root.cern/root/html532/RooGenProdProj.html,2,['config'],['configuration']
Modifiability,"integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction4Binding_double_double_double_double_double_.html:32487,config,configuration,32487,root/html526/RooCFunction4Binding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction4Binding_double_double_double_double_double_.html,2,['config'],['configuration']
Modifiability,"integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionMultiDim*funcFunctor; RooListProxyvarsArgument reference; Double_t*xArgument value array.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFunctorBinding.html:33152,config,configuration,33152,root/html532/RooFunctorBinding.html,https://root.cern,https://root.cern/root/html532/RooFunctorBinding.html,2,['config'],['configuration']
Modifiability,"integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction4PdfBinding_double_double_double_double_double_.html:43674,Inherit,Inheritance,43674,root/html534/RooCFunction4PdfBinding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction4PdfBinding_double_double_double_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inter to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBreitWigner.html:70114,inherit,inherited,70114,doc/master/classRooBreitWigner.html,https://root.cern,https://root.cern/doc/master/classRooBreitWigner.html,132,['inherit'],['inherited']
Modifiability,"inter to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TRootCanvas * fCanvas;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCompositeFra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContainer.html:20722,inherit,inherited,20722,doc/master/classTRootContainer.html,https://root.cern,https://root.cern/doc/master/classTRootContainer.html,1,['inherit'],['inherited']
Modifiability,"inter to the TVirtualStreamerInfo object for version with an emulated; representation whether or not the class is loaded. If the object does not exist, it is created. Note: There are two special version numbers:. 0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. TVirtualStreamerInfo* FindStreamerInfoAbstractEmulated(UInt_t checksum) const; For the case where the requestor class is emulated and this class is abstract,; returns a pointer to the TVirtualStreamerInfo object for version with an emulated; representation whether or not the class is loaded. If the object does not exist, it is created. Warning: If we create a new streamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. void IgnoreTObjectStreamer(Bool_t ignore = kTRUE); When the class kIgnoreTObjectStreamer bit is set, the automatically; generated Streamer will not call TObject::Streamer.; This option saves the TObject space overhead on the file.; However, the information (fBits, fUniqueID) of TObject is lost. Note that to be effective for objects streamed object-wise this function; must be called for the class deriving directly from TObject, eg, assuming; that BigTrack derives from Track and Track derives from TObject, one must do:; Track::Class()->IgnoreTObjectStreamer();; and not:; BigTrack::Class()->IgnoreTObjectStreamer();; To be effective for object streamed member-wise or split in a TTree,; this function must be called for the most derived class (i.e. BigTrack). Bool_t InheritsFrom(const char* cl) const; Return kTRUE if this class inherits from a class with name ""classname"".; note that",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClass.html:35259,variab,variable,35259,root/html534/TClass.html,https://root.cern,https://root.cern/root/html534/TClass.html,12,['variab'],['variable']
Modifiability,"inter::ESurfaceTypekSurf1; static TGLSurfacePainter::ESurfaceTypekSurf2; static TGLSurfacePainter::ESurfaceTypekSurf3; static TGLSurfacePainter::ESurfaceTypekSurf4; static TGLSurfacePainter::ESurfaceTypekSurf5. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLSurfacePainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Coords for point on surface under cursor. Bool_t InitGeometry(); Set mesh, normals. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& stringOption); Additional options for surfaces. void ProcessEvent(Int_t event, Int_t px, Int_t py); Remove all profiles/sections. void InitGL() const; Initialize some OpenGL state variables. void DeInitGL() const; Initialize some OpenGL state variables. void SetNormals(); One normal per vertex;; this normal is average of; neighbouring triangles normals. void SetSurfaceColor() const; Set color for surface. void DrawPlot() const; Draw surf/surf1/surf2/surf4. Bool_t InitGeometryCartesian(); Find bin ranges for X and Y axes,; axes ranges for X, Y and Z.; Function returns false, if logarithmic scale for; some axis was requested, but we cannot; find correct range. Bool_t InitGeometryPolar(); Find bin ranges for X and Y axes,; axes ranges for X, Y and Z.; Function returns false, if logarithmic scale for; some axis was requested, but we cannot; find correct range. Bool_t InitGeometryCylindrical(); Find bin ranges for X and Y axes,; axes ranges for X, Y and Z.; Function returns false, if logarithmic scale for; some axis was requested, but we cannot; find correct range. Bool_t InitGeometrySpherical(); Find bin ranges for X and Y axes,; axes ranges for X, Y and Z.; Function returns false, if logarithmic scale for;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLSurfacePainter.html:5822,variab,variables,5822,root/html602/TGLSurfacePainter.html,https://root.cern,https://root.cern/root/html602/TGLSurfacePainter.html,4,['variab'],['variables']
Modifiability,"interest in the interval ;  ; virtual void SetPdf (RooAbsPdf &pdf);  Set the Pdf if not already there. ;  ; virtual void SetPriorPdf (RooAbsPdf &pdf);  Set the Prior Pdf if not already there. ;  ; virtual void SetProposalFunction (ProposalFunction &proposalFunction);  set the proposal function for suggesting new points for the MCMC ;  ; void SetTestSize (double size) override;  set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval) ;  ; virtual void SetUseKeys (bool useKeys);  set whether to use kernel estimation to determine the interval ;  ; virtual void SetUseSparseHist (bool useSparseHist);  set whether to use sparse histogram (if using histogram at all) ;  ; double Size () const override;  Get the size of the test (eg. rate of Type I error) ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooStats::IntervalCalculator; virtual ~IntervalCalculator ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:4971,inherit,inherited,4971,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,2,['inherit'],['inherited']
Modifiability,"interface for copying functions via the pure virtual method Clone(); and the interface for getting the function dimension via the NDim() method.; Derived classes must implement the pure private virtual method DoEval(const double *) for the; function evaluation in addition to NDim() and Clone(). @ingroup GenFunc. This class is also known as (typedefs to this class)ROOT::Math::IGradientFunctionMultiDim::BaseGrad. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IGradientMultiDim(); doubleDerivative(const double* x, unsigned int icoord = 0) const; virtual voidFdF(const double* x, double& f, double* df) const; virtual voidGradient(const double* x, double* grad) const; ROOT::Math::IGradientMultiDim&operator=(const ROOT::Math::IGradientMultiDim&). private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IGradientMultiDim(); virual destructor. {}. void Gradient(const double* x, double* grad) const. Evaluate all the vector of function derivatives (gradient) at a point x.; Derived classes must re-implement if it is more efficient than evaluting one at a time. double Derivative(const double* x, unsigned int icoord = 0) const. Return the partial derivative with respect to the passed coordinate. return DoDerivative(x, icoord). void FdF(const double* x, double& f, double* df) const. Optimized method to evaluate at the same time the function value and derivative at a point x.; Often both value and derivatives are needed and it is often more efficient to compute them at the same time.; Derived class should implement this method if performances play an important role and if it is faster to; evaluate value and derivative at the same time. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__IGradientMultiDim.html:1579,Inherit,Inheritance,1579,root/html534/ROOT__Math__IGradientMultiDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__IGradientMultiDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"interface for copying functions via the pure virtual method Clone(); and the interface for getting the function dimension via the NDim() method.; Derived classes must implement the pure private virtual method DoEval(const double *) for the; function evaluation in addition to NDim() and Clone(). @ingroup GenFunc. This class is also known as (typedefs to this class)ROOT::Math::IGradientFunctionMultiDim::BaseGrad. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IGradientMultiDim(); doubleDerivative(const double* x, unsigned int icoord = 0) const; virtual voidFdF(const double* x, double& f, double* df) const; virtual voidGradient(const double* x, double* grad) const; ROOT::Math::IGradientMultiDim&operator=(const ROOT::Math::IGradientMultiDim&). private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IGradientMultiDim(); virual destructor. {}. void Gradient(const double* x, double* grad) const. Evaluate all the vector of function derivatives (gradient) at a point x.; Derived classes must re-implement if it is more efficient than evaluting one at a time. double Derivative(const double* x, unsigned int icoord = 0) const. Return the partial derivative with respect to the passed coordinate. return DoDerivative(x, icoord). void FdF(const double* x, double& f, double* df) const. Optimized method to evaluate at the same time the function value and derivative at a point x.; Often both value and derivatives are needed and it is often more efficient to compute them at the same time.; Derived class should implement this method if performances play an important role and if it is faster to; evaluate value and derivative at the same time. » Last changed: root/mathcore:$Id: IFunction.h 24482 2008-06-23 15:33:08Z moneta $ » Last generated",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IGradientMultiDim.html:1579,Inherit,Inheritance,1579,root/html532/ROOT__Math__IGradientMultiDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IGradientMultiDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"interface) ;  ; double ParameterDerivative (double x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter. ;  ; double ParameterDerivative (double x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values. ;  ; void ParameterGradient (const double *x, const double *p, double *grad) const;  Compatibility interface with multi-dimensional functions. ;  ; void ParameterGradient (const double *x, double *grad) const;  Evaluate all derivatives using cached parameter values (multi-dim like interface) ;  ; virtual void ParameterGradient (double x, const double *p, double *grad) const;  Evaluate the derivatives of the function with respect to the parameters at a point x. ;  ; void ParameterGradient (double x, double *grad) const;  Evaluate all derivatives using cached parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionOneDim; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ;  Public Member Functions inherited from ROOT::Math::IGradientFunctionOneDim; double Derivative (const double *x) const;  Compatibility method with multi-dimensional interface for partial derivative. ;  ; double Derivative (double x) const;  Return the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Polynomial.html:4825,inherit,inherited,4825,doc/master/classROOT_1_1Math_1_1Polynomial.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Polynomial.html,1,['inherit'],['inherited']
Modifiability,"interface) ;  ; double ParameterDerivative (double x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter. ;  ; double ParameterDerivative (double x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values. ;  ; void ParameterGradient (const double *x, const double *p, double *grad) const;  Compatibility interface with multi-dimensional functions. ;  ; void ParameterGradient (const double *x, double *grad) const;  Evaluate all derivatives using cached parameter values (multi-dim like interface) ;  ; virtual void ParameterGradient (double x, const double *p, double *grad) const;  Evaluate the derivatives of the function with respect to the parameters at a point x. ;  ; void ParameterGradient (double x, double *grad) const;  Evaluate all derivatives using cached parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionOneDim; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual IBaseFunctionOneDim * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ; virtual const double * Parameters () const =0;  Access the par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html:2666,inherit,inherited,2666,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,1,['inherit'],['inherited']
Modifiability,"interface). Visual_t GetVisual() const; Returns handle to visual. Might be usefull in some cases where direct X11 manipulation outside; of TVirtualX is needed, e.g. GL interface. Int_t GetScreen() const; Returns screen number. Might be usefull in some cases where direct X11 manipulation outside; of TVirtualX is needed, e.g. GL interface. Int_t GetDepth() const; Returns depth of screen (number of bit planes).; Equivalent to GetPlanes(). Colormap_t GetColormap() const; Returns handle to colormap. Might be usefull in some cases where direct X11 manipulation outside; of TVirtualX is needed, e.g. GL interface. Window_t GetDefaultRootWindow() const; Returns handle to the default root window created when calling; XOpenDisplay(). Atom_t InternAtom(const char* atom_name, Bool_t only_if_exist); Returns the atom identifier associated with the specified ""atom_name""; string. If ""only_if_exists"" is False, the atom is created if it does; not exist. If the atom name is not in the Host Portable Character; Encoding, the result is implementation dependent. Uppercase and; lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all; designate different atoms. Window_t GetParent(Window_t id) const; Returns the parent of the window ""id"". FontStruct_t LoadQueryFont(const char* font_name); Provides the most common way for accessing a font: opens (loads) the; specified font and returns a pointer to the appropriate FontStruct_t; structure. If the font does not exist, it returns NULL. FontH_t GetFontHandle(FontStruct_t fs); Returns the font handle of the specified font structure ""fs"". void DeleteFont(FontStruct_t fs); Explicitely deletes the font structure ""fs"" obtained via LoadQueryFont(). GContext_t CreateGC(Drawable_t id, GCValues_t* gval); Creates a graphics context using the provided GCValues_t *gval structure.; The mask data member of gval specifies which components in the GC are; to be set using the information in the specified values structure.; It returns a graphics context handle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualX.html:40004,Portab,Portable,40004,root/html532/TVirtualX.html,https://root.cern,https://root.cern/root/html532/TVirtualX.html,4,['Portab'],['Portable']
Modifiability,"interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum2Transform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 2D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353 (1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 16 of file TSpectrum2Transform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:1456,adapt,adaptive,1456,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['adapt'],['adaptive']
Modifiability,"internal state (required for HTTP/2 proxy) */; 14040 conn->request_state = 0;; 14041 ; 14042 /* 1. get the request url */; 14043 /* 1.1. split into url and query string */; 14044 if ((conn->request_info.query_string = strchr(ri->request_uri, '?')); 14045 != NULL) {; 14046 *((char *)conn->request_info.query_string++) = '\0';; 14047 }; 14048 ; 14049 /* 1.2. do a https redirect, if required. Do not decode URIs yet. */; 14050 if (!conn->client.is_ssl && conn->client.ssl_redir) {; 14051 ssl_index = get_first_ssl_listener_index(conn->phys_ctx);; 14052 if (ssl_index >= 0) {; 14053 int port = (int)ntohs(USA_IN_PORT_UNSAFE(; 14054 &(conn->phys_ctx->listening_sockets[ssl_index].lsa)));; 14055 redirect_to_https_port(conn, port);; 14056 } else {; 14057 /* A http to https forward port has been specified,; 14058 * but no https port to forward to. */; 14059 mg_send_http_error(conn,; 14060 503,; 14061 ""%s"",; 14062 ""Error: SSL forward not configured properly"");; 14063 mg_cry_internal(conn,; 14064 ""%s"",; 14065 ""Can not redirect to SSL, no SSL port available"");; 14066 }; 14067 return;; 14068 }; 14069 uri_len = (int)strlen(ri->local_uri);; 14070 ; 14071 /* 1.3. decode url (if config says so) */; 14072 if (should_decode_url(conn)) {; 14073 mg_url_decode(; 14074 ri->local_uri, uri_len, (char *)ri->local_uri, uri_len + 1, 0);; 14075 }; 14076 ; 14077 /* URL decode the query-string only if explicity set in the configuration */; 14078 if (conn->request_info.query_string) {; 14079 if (should_decode_query_string(conn)) {; 14080 url_decode_in_place((char *)conn->request_info.query_string);; 14081 }; 14082 }; 14083 ; 14084 /* 1.4. clean URIs, so a path like allowed_dir/../forbidden_file is not; 14085 * possible. The fact that we cleaned the URI is stored in that the; 14086 * pointer to ri->local_ur and ri->local_uri_raw are now different.; 14087 * ri->local_uri_raw still points to memory allocated in; 14088 * worker_thread_run(). ri->local_uri is private to the request so we; 14089 * don't have t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:412114,config,configured,412114,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"internal state (required for HTTP/2 proxy) */; 14041 conn->request_state = 0;; 14042 ; 14043 /* 1. get the request url */; 14044 /* 1.1. split into url and query string */; 14045 if ((conn->request_info.query_string = strchr(ri->request_uri, '?')); 14046 != NULL) {; 14047 *((char *)conn->request_info.query_string++) = '\0';; 14048 }; 14049 ; 14050 /* 1.2. do a https redirect, if required. Do not decode URIs yet. */; 14051 if (!conn->client.is_ssl && conn->client.ssl_redir) {; 14052 ssl_index = get_first_ssl_listener_index(conn->phys_ctx);; 14053 if (ssl_index >= 0) {; 14054 int port = (int)ntohs(USA_IN_PORT_UNSAFE(; 14055 &(conn->phys_ctx->listening_sockets[ssl_index].lsa)));; 14056 redirect_to_https_port(conn, port);; 14057 } else {; 14058 /* A http to https forward port has been specified,; 14059 * but no https port to forward to. */; 14060 mg_send_http_error(conn,; 14061 503,; 14062 ""%s"",; 14063 ""Error: SSL forward not configured properly"");; 14064 mg_cry_internal(conn,; 14065 ""%s"",; 14066 ""Can not redirect to SSL, no SSL port available"");; 14067 }; 14068 return;; 14069 }; 14070 uri_len = (int)strlen(ri->local_uri);; 14071 ; 14072 /* 1.3. decode url (if config says so) */; 14073 if (should_decode_url(conn)) {; 14074 mg_url_decode(; 14075 ri->local_uri, uri_len, (char *)ri->local_uri, uri_len + 1, 0);; 14076 }; 14077 ; 14078 /* URL decode the query-string only if explicity set in the configuration */; 14079 if (conn->request_info.query_string) {; 14080 if (should_decode_query_string(conn)) {; 14081 url_decode_in_place((char *)conn->request_info.query_string);; 14082 }; 14083 }; 14084 ; 14085 /* 1.4. clean URIs, so a path like allowed_dir/../forbidden_file is not; 14086 * possible. The fact that we cleaned the URI is stored in that the; 14087 * pointer to ri->local_ur and ri->local_uri_raw are now different.; 14088 * ri->local_uri_raw still points to memory allocated in; 14089 * worker_thread_run(). ri->local_uri is private to the request so we; 14090 * don't have t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:412147,config,configured,412147,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"internally in two histograms (fTotalHistogram and; fPassedHistogram). Then the; efficiency as well as its upper and lower error an be calculated for each bin; individually.; As the efficiency can be regarded as a parameter of a binomial distribution, the; number of pass ed and total events must always be integer numbers. Therefore a; filling with weights is not possible however you can assign a global weight to each; TEfficiency object (SetWeight). It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram.; II. Creating a TEfficiency object; If you start a new analysis, it is highly recommended to use the TEfficiency class; from the beginning. You can then use one of the constructors for fixed or; variable bin size and your desired dimension. These constructors append the; created TEfficiency object to the current directory. So it will be written; automatically to a file during the next TFile::Write command.; ; Example:; create a twodimensional TEfficiency object with; - name = ""eff""; - title = ""my efficiency""; - axistitles: x, y and LaTeX formated epsilon as label for Z axis; - 10 bins with constant bin width (= 1) along X axis starting at 0 (lower edge; from first bin) upto 10 (upper edge of last bin); - 20 bins with constant bin width (= 0.5) along Y axis starting at -5 (lower; edge from first bin) upto 5 (upper edge of last bin); TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;y;#epsilon"",10,0,10,20,-5,5);. If you already have two histograms filled with the number of passed and total; events, you will use the constructor TEfficiency(const TH1& passed,const TH1& total); to construct the TEfficiency object. The histograms ""passed"" and ""total"" have; to fullfill ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEfficiency.html:2323,variab,variable,2323,root/html602/TEfficiency.html,https://root.cern,https://root.cern/root/html602/TEfficiency.html,4,['variab'],['variable']
Modifiability,"internally in two histograms (fTotalHistogram and; fPassedHistogram). Then the; efficiency as well as its upper and lower error an be calculated for each bin; individually.; As the efficiency can be regarded as a parameter of a binomial distribution, the; number of pass ed and total events must always be integer numbers. Therefore a; filling with weights is not possible however you can assign a global weight to each; TEfficiency object (SetWeight). It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram.; II. Creating a TEfficiency object; If you start a new analysis, it is highly recommended to use the TEfficiency class; from the beginning. You can then use one of the constructors for fixed or; variable bin size and your desired dimension. These constructors append the; created TEfficiency object to the current directory. So it will be written; automatically to a file during the next TFile::Write command.; ; Example:; create a twodimensional TEfficiency object with; - name = ""eff""; - title = ""my efficiency""; - axistitles: x, y and LaTeX formated epsilon as label for Z axis; - 10 bins with constant bin width (= 1) along X axis starting at 0 (lower edge; from first bin) upto 10 (upper edge of last bin); - 20 bins with constant bin width (= 0.5) along Y axis starting at -5 (lower; edge from first bin) upto 5 (upper edge of last bin); TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;y;#epsilon"",10,0,10,20,-5,5);; ; If you already have two histograms filled with the number of passed and total; events, you will use the constructor TEfficiency(const TH1& passed,const TH1& total); to construct the TEfficiency object. The histograms ""passed"" and ""total"" have; to fullfil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEfficiency.html:2323,variab,variable,2323,root/html534/TEfficiency.html,https://root.cern,https://root.cern/root/html534/TEfficiency.html,2,['variab'],['variable']
Modifiability,"interpreter command via TApplication::ProcessLine().; 2383/// On Win32 the line will be processed synchronously (i.e. it will; 2384/// only return when the CINT interpreter thread has finished executing; 2385/// the line). On non-Win32 platforms there is no difference between; 2386/// ProcessLine() and ProcessLineSync().; 2387/// The possible error codes are defined by TInterpreter::EErrorCode.; 2388/// Returns the result of the command, cast to a Longptr_t.; 2389 ; 2390Longptr_t TROOT::ProcessLineSync(const char *line, Int_t *error); 2391{; 2392 TString sline = line;; 2393 sline = sline.Strip(TString::kBoth);; 2394 ; 2395 if (!fApplication.load()); 2396 TApplication::CreateApplication();; 2397 ; 2398 return (*fApplication).ProcessLine(sline, kTRUE, error);; 2399}; 2400 ; 2401////////////////////////////////////////////////////////////////////////////////; 2402/// Process interpreter command directly via CINT interpreter.; 2403/// Only executable statements are allowed (no variable declarations),; 2404/// In all other cases use TROOT::ProcessLine().; 2405/// The possible error codes are defined by TInterpreter::EErrorCode.; 2406 ; 2407Longptr_t TROOT::ProcessLineFast(const char *line, Int_t *error); 2408{; 2409 TString sline = line;; 2410 sline = sline.Strip(TString::kBoth);; 2411 ; 2412 if (!fApplication.load()); 2413 TApplication::CreateApplication();; 2414 ; 2415 Longptr_t result = 0;; 2416 ; 2417 if (fInterpreter) {; 2418 TInterpreter::EErrorCode *code = (TInterpreter::EErrorCode*)error;; 2419 result = gInterpreter->Calc(sline, code);; 2420 }; 2421 ; 2422 return result;; 2423}; 2424 ; 2425////////////////////////////////////////////////////////////////////////////////; 2426/// Read Git commit information and branch name from the; 2427/// etc/gitinfo.txt file.; 2428 ; 2429void TROOT::ReadGitInfo(); 2430{; 2431 TString filename = ""gitinfo.txt"";; 2432 gSystem->PrependPathName(TROOT::GetEtcDir(), filename);; 2433 ; 2434 FILE *fp = fopen(filename, ""r"");; 2435 if (fp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:91611,variab,variable,91611,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"inter ; f, . void * ; p . ). evaluate the Integral of a function f over the infinite interval (-inf,+inf) passing a free function pointer ; Definition at line 362 of file GSLIntegrator.cxx. ◆ Integral() [8/9]. double ROOT::Math::GSLIntegrator::Integral ; (; GSLFuncPointer ; f, . void * ; p, . const std::vector< double > & ; pts . ). evaluate the Integral of a function f with knows singular points over the over a defined interval passing a free function pointer ; Definition at line 380 of file GSLIntegrator.cxx. ◆ Integral() [9/9]. double ROOT::Math::GSLIntegrator::Integral ; (; GSLFuncPointer ; f, . void * ; p, . double ; a, . double ; b . ). signature for function pointers used by GSL ; evaluate the Integral of of a function f over the defined interval (a,b) passing a free function pointer The integration function must be a free function and have a signature consistent with GSL functions:; double my_function ( double x, void * p ) { ...... } ; This method is the most efficient since no internal adapter to GSL function is created. Parameters. fpointer to the integration function ; ppointer to the Parameters of the function ; alower value of the integration interval ; bupper value of the integration interval . Definition at line 356 of file GSLIntegrator.cxx. ◆ IntegralCauchy() [1/2]. double ROOT::Math::GSLIntegrator::IntegralCauchy ; (; const IGenFunction & ; f, . double ; a, . double ; b, . double ; c . ). evaluate the Cauchy principal value of the integral of a function f over the defined interval (a,b) with a singularity at c ; Parameters. fintegration function. The function type must implement the mathlib::IGenFunction interface ; alower interval value ; blower interval value ; csingular value of f . Definition at line 241 of file GSLIntegrator.cxx. ◆ IntegralCauchy() [2/2]. double ROOT::Math::GSLIntegrator::IntegralCauchy ; (; double ; a, . double ; b, . double ; c . ). overridevirtual . evaluate the Cauchy principal value of the integral of a previously define",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrator.html:14743,adapt,adapter,14743,doc/master/classROOT_1_1Math_1_1GSLIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrator.html,1,['adapt'],['adapter']
Modifiability,"intf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2144 of file TString.cxx. ◆ MaxSize(). static Ssiz_t TString::MaxSize ; (; ). inlinestaticprivate . Definition at line 261 of file TString.h. ◆ MaxWaste(). Ssiz_t TString::MaxWaste ; (; Ssiz_t ; mw = 15). static . Set maximum space that may be wasted in a string before doing a resize. ; Default is 15. ; Definition at line 1612 of file TString.cxx. ◆ MaybeRegexp(). Bool_t TString::MaybeRegexp ; (; ); const. Returns true if string contains one of the regexp characters ""^$.[]*+?"". ; Definition at line 952 of file TString.cxx. ◆ MaybeWildcard(). Bool_t TString::MaybeWildcard ; (; ); const. Returns true if string contains one of the wildcard characters ""[]*?"". ; Definition at line 964 of file TString.cxx. ◆ MD5(). TString TString::MD5 ; (; ); const. Return the MD5 digest for this string, in a string representation. ; Definition at line 940 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTString.html:42392,enhance,enhanced,42392,doc/v632/classTString.html,https://root.cern,https://root.cern/doc/v632/classTString.html,4,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"inting to something inside the leaf; Returns:; -2 Error: some information is missing (message already printed); -1 Error: Syntax is incorrect (message already printed); 0; >0 the value returns is the action code. Int_t FindLeafForExpression(const char* expression, TLeaf*& leaf, TString& leftover, Bool_t& final, UInt_t& paran_level, TObjArray& castqueue, vector<string>& aliasUsed, Bool_t& useLeafCollectionObject, const char* fullExpression); Look for the leaf corresponding to the start of expression.; It returns the corresponding leaf if any.; It also modify the following arguments:; leftover: contain from expression that was not used to determine the leaf; final:; paran_level: number of un-matched open parenthesis; cast_queue: list of cast to be done; aliases: list of aliases used; Return <0 in case of failure; Return 0 if a leaf has been found; Return 2 if info about the TTree itself has been requested. Int_t DefinedVariable(TString& variable, Int_t& action); -*Check if name is in the list of Tree/Branch leaves; *-* ==================================================. This member function redefines the function in ROOT::v5::TFormula; If a leaf has a name corresponding to the argument name, then; returns a new code.; A TTreeFormula may contain more than one variable.; For each variable referenced, the pointers to the corresponding; branch and leaf is stored in the object arrays fBranches and fLeaves. name can be :; - Leaf_Name (simple variable or data member of a ClonesArray); - Branch_Name.Leaf_Name; - Branch_Name.Method_Name; - Leaf_Name[index]; - Branch_Name.Leaf_Name[index]; - Branch_Name.Leaf_Name[index1]; - Branch_Name.Leaf_Name[][index2]; - Branch_Name.Leaf_Name[index1][index2]; New additions:; - Branch_Name.Leaf_Name[OtherLeaf_Name]; - Branch_Name.Datamember_Name; - '.' can be replaced by '->'; and; - Branch_Name[index1].Leaf_Name[index2]; - Leaf_name[index].Action().OtherAction(param); - Leaf_name[index].Action()[val].OtherAction(param). The expected returns ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeFormula.html:29033,variab,variable,29033,root/html604/TTreeFormula.html,https://root.cern,https://root.cern/root/html604/TTreeFormula.html,2,['variab'],['variable']
Modifiability,"inting to something inside the leaf; Returns:; -2 Error: some information is missing (message already printed); -1 Error: Syntax is incorrect (message already printed); 0; >0 the value returns is the action code. Int_t FindLeafForExpression(const char* expression, TLeaf*& leaf, TString& leftover, Bool_t& final, UInt_t& paran_level, TObjArray& castqueue, vector<string>& aliasUsed, Bool_t& useLeafCollectionObject, const char* fullExpression); Look for the leaf corresponding to the start of expression.; It returns the corresponding leaf if any.; It also modify the following arguments:; leftover: contain from expression that was not used to determine the leaf; final:; paran_level: number of un-matched open parenthesis; cast_queue: list of cast to be done; aliases: list of aliases used; Return <0 in case of failure; Return 0 if a leaf has been found; Return 2 if info about the TTree itself has been requested. Int_t DefinedVariable(TString& variable, Int_t& action); -*Check if name is in the list of Tree/Branch leaves; *-* ==================================================. This member function redefines the function in TFormula; If a leaf has a name corresponding to the argument name, then; returns a new code.; A TTreeFormula may contain more than one variable.; For each variable referenced, the pointers to the corresponding; branch and leaf is stored in the object arrays fBranches and fLeaves. name can be :; - Leaf_Name (simple variable or data member of a ClonesArray); - Branch_Name.Leaf_Name; - Branch_Name.Method_Name; - Leaf_Name[index]; - Branch_Name.Leaf_Name[index]; - Branch_Name.Leaf_Name[index1]; - Branch_Name.Leaf_Name[][index2]; - Branch_Name.Leaf_Name[index1][index2]; New additions:; - Branch_Name.Leaf_Name[OtherLeaf_Name]; - Branch_Name.Datamember_Name; - '.' can be replaced by '->'; and; - Branch_Name[index1].Leaf_Name[index2]; - Leaf_name[index].Action().OtherAction(param); - Leaf_name[index].Action()[val].OtherAction(param). The expected returns values are",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:26063,variab,variable,26063,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,2,['variab'],['variable']
Modifiability,"into packets for slaves; TQueryResult*TProofPlayer::fPreviousQueryPrevious instance of TQueryResult processed; TProofProgressStatus*TProofPlayer::fProgressStatusthe progress status object;; TProof*TProofPlayerRemote::fProoflink to associated PROOF session; TQueryResult*TProofPlayer::fQueryInstance of TQueryResult currently processed; TList*TProofPlayer::fQueryResultsList of TQueryResult; TStatus*TProofPlayer::fSelStatus! status of query in progress; TSelector*TProofPlayer::fSelector! the latest selector; TClass*TProofPlayer::fSelectorClass! class of the latest selector; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*TProofPlayer::fStopTimerTimer associated with a stop request; TMutex*TProofPlayer::fStopTimerMtxTo protect the stop timer; Long64_tTProofPlayer::fTotalEventsnumber of events requested; Bool_tTProofPlayerRemote::fUseTH1MergeIf kTRUE forces use of TH1::Merge [kFALSE]; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*TProofPlayer::fgDrawInputParsList of input parameters to be kept on drawing actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t HandleTimer(TTimer* timer). Int_t MakeSelector(const char* selfile). void SetupFeedback(). TProofPlayerLite(TProof* proof = 0); { }. virtual ~TProofPlayerLite(); { }. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Long64_t Finalize(TQueryResult* qr); { return TProofPlayerRemote::Finalize(qr); }. void StoreFeedback(TObject* slave, TList* out). » Author: G. Ganis Mar 2008 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofPlayerLite.h 25918 2008-10-22 15:00:04Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofPlayerLite.html:16067,Inherit,Inheritance,16067,root/html532/TProofPlayerLite.html,https://root.cern,https://root.cern/root/html532/TProofPlayerLite.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"into.; 1508 pp[ndx] = (char*) cl->NewArray(vlen);; 1509 if (!pp[ndx]) {; 1510 Error(""ReadBuffer"", ""Memory allocation failed!\n"");; 1511 continue;; 1512 }; 1513 } else {; 1514 // -- We are a varying-length array of pointers to objects.; 1515 // Note: The object pointers are allowed to be polymorphic.; 1516 // Allocate a new array of pointers to objects to read into.; 1517 pp[ndx] = (char*) new char*[vlen];; 1518 if (!pp[ndx]) {; 1519 Error(""ReadBuffer"", ""Memory allocation failed!\n"");; 1520 continue;; 1521 }; 1522 // And set each pointer to null.; 1523 memset(pp[ndx], 0, vlen * sizeof(char*)); // This is the right size we really have a char**: pp[ndx] = (char*) new char*[vlen];; 1524 }; 1525 if (!isPtrPtr) {; 1526 // -- We are a varying-length array of objects.; 1527 b.ReadFastArray(pp[ndx], cl, vlen, 0);; 1528 }; 1529 else {; 1530 // -- We are a varying-length array of object pointers.; 1531 b.ReadFastArray((void**) pp[ndx], cl, vlen, kFALSE, 0);; 1532 } // isPtrPtr; 1533 } // ndx; 1534 } // k; 1535 }; 1536 else {; 1537 // -- Older versions do *not* allow polymorphic pointers.; 1538 // Loop over the entries in the clones array or the STL container.; 1539 for (Int_t k = 0; k < narr; ++k) {; 1540 // Get the counter for the varying length array.; 1541 Int_t vlen = *((Int_t*) (arr[k] /*entry pointer*/ + eoffset /*entry offset*/ + compinfo[i]->fMethod /*counter offset*/));; 1542 //Int_t realLen;; 1543 //b >> realLen;; 1544 //if (realLen != vlen) {; 1545 // fprintf(stderr, ""read vlen: %d realLen: %s\n"", vlen, realLen);; 1546 //}; 1547 // Get a pointer to the array of pointers.; 1548 char** pp = (char**) (arr[k] /*entry pointer*/ + ioffset /*object offset*/);; 1549 if (!pp) {; 1550 continue;; 1551 }; 1552 // Loop over each element of the array of pointers to varying-length arrays.; 1553 for (Int_t ndx = 0; ndx < compinfo[i]->fLength; ++ndx) {; 1554 //if (!pp[ndx]) {; 1555 // -- We do not have a pointer to a varying-length array.; 1556 //Error(""ReadBuffer"", ""The pointer to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html:64969,polymorphi,polymorphic,64969,doc/master/TStreamerInfoReadBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html,1,['polymorphi'],['polymorphic']
Modifiability,"ints to be deleted; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGToolBar(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kHorizontalFrame, Pixel_t back = GetDefaultFrameBackground()); Create toolbar widget. ~TGToolBar(); Delete toolbar and its buttons and layout hints. TGButton * AddButton(const TGWindow* w, ToolBarData_t* button, Int_t spacing = 0); Add button to toolbar. All buttons added via this method will be; deleted by the toolbar. On return the TGButton field of the; ToolBarData_t struct is filled in (if fPixmap was valid).; Window w is the window to which the button messages will be send. TGButton * AddButton(const TGWindow* w, TGPictureButton* button, Int_t spacing = 0); Add button to toolbar. All buttons added via this method will be deleted; by the toolbar, w is the window to which the button messages will be send. TGButton * GetButton(Int_t id) const; Finds and returns a pointer to the button with the specified; identifier id. Returns null if the button was not fou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGToolBar.html:19385,Inherit,Inheritance,19385,root/html532/TGToolBar.html,https://root.cern,https://root.cern/root/html532/TGToolBar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inue to append data to an existing histogram, use ""+"" in front; of the histogram name.; A '+' in front of the histogram name is ignored, when the name is followed by; binning information as described in the previous paragraph.; tree.Draw(""sqrt(x)>>+hsqrt"",""y>0""); will not reset hsqrt, but will continue filling.; This works for 1-D, 2-D and 3-D histograms. Accessing collection objects. TTree::Draw default's handling of collections is to assume that any; request on a collection pertain to it content. For example, if fTracks; is a collection of Track objects, the following:; tree->Draw(""event.fTracks.fPx"");; will plot the value of fPx for each Track objects inside the collection.; Also; tree->Draw(""event.fTracks.size()"");; would plot the result of the member function Track::size() for each; Track object inside the collection.; To access information about the collection itself, TTree::Draw support; the '@' notation. If a variable which points to a collection is prefixed; or postfixed with '@', the next part of the expression will pertain to; the collection object. For example:; tree->Draw(""event.@fTracks.size()"");; will plot the size of the collection refered to by fTracks (i.e the number; of Track objects). Drawing 'objects'. When a class has a member function named AsDouble or AsString, requesting; to directly draw the object will imply a call to one of the 2 functions.; If both AsDouble and AsString are present, AsDouble will be used.; AsString can return either a char*, a std::string or a TString.s; For example, the following; tree->Draw(""event.myTTimeStamp"");; will draw the same histogram as; tree->Draw(""event.myTTimeStamp.AsDouble()"");; In addition, when the object is a type TString or std::string, TTree::Draw; will call respectively TString::Data and std::string::c_str(). If the object is a TBits, the histogram will contain the index of the bit; that are turned on. Retrieving information about the tree itself. You can refer to the tree (or chain) containing the da",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:71012,variab,variable,71012,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,5,['variab'],['variable']
Modifiability,"inue to append data to an existing histogram, use ""+"" in front; of the histogram name.; A '+' in front of the histogram name is ignored, when the name is followed by; binning information as described in the previous paragraph.; tree.Draw(""sqrt(x)>>+hsqrt"",""y>0""); will not reset hsqrt, but will continue filling.; This works for 1-D, 2-D and 3-D histograms. Accessing collection objects. TTree::Draw default's handling of collections is to assume that any; request on a collection pertain to it content. For example, if fTracks; is a collection of Track objects, the following:; tree->Draw(""event.fTracks.fPx"");; will plot the value of fPx for each Track objects inside the collection.; Also; tree->Draw(""event.fTracks.size()"");; would plot the result of the member function Track::size() for each; Track object inside the collection.; To access information about the collection itself, TTree::Draw support; the '@' notation. If a variable which points to a collection is prefixed; or postfixed with '@', the next part of the expression will pertain to; the collection object. For example:; tree->Draw(""event.@fTracks.size()"");; will plot the size of the collection referred to by fTracks (i.e the number; of Track objects). Drawing 'objects'. When a class has a member function named AsDouble or AsString, requesting; to directly draw the object will imply a call to one of the 2 functions.; If both AsDouble and AsString are present, AsDouble will be used.; AsString can return either a char*, a std::string or a TString.s; For example, the following; tree->Draw(""event.myTTimeStamp"");; will draw the same histogram as; tree->Draw(""event.myTTimeStamp.AsDouble()"");; In addition, when the object is a type TString or std::string, TTree::Draw; will call respectively TString::Data and std::string::c_str(). If the object is a TBits, the histogram will contain the index of the bit; that are turned on. Retrieving information about the tree itself. You can refer to the tree (or chain) containing the d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:76641,variab,variable,76641,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,6,['variab'],['variable']
Modifiability,"inue to fill it.; tree.Draw(""sqrt(x)>>+hsqrt"",""y>0"");; This works for 1-D, 2-D and 3-D histograms.; 12.20.11.1 Projecting a Histogram; If you would like to fill a histogram, but not draw it you can use the TTree::Project() method.; root[] T->Project(""quietHisto"",""fNtrack""); 12.20.11.2 Making a Profile Histogram. In case of a two dimensional expression, you can generate a TProfile histogram instead of a two dimensional histogram by specifying the 'prof' or ’profs' option. The prof option is automatically selected when the output is redirected into a TProfile. For example y:x>>pf where pfis an existing TProfile histogram.; 12.20.11.3 Tree Information; Once we have drawn a tree, we can get information about the tree. These are the methods used to get information from a drawn tree TTree:. GetSelectedRows: Returns the number of entries accepted by the selection expression. In case where no selection was specified, it returns the number of entries processed.; GetV1: Returns a pointer to the float array of the first variable.; GetV2: Returns a pointer to the float array of second variable; GetV3: Returns a pointer to the float array of third variable.; GetW: Returns a pointer to the float array of Weights where the weight equals the result of the selection expression. To read the drawn values of fNtrack into an array, and loop through the entries follow the lines below. First, open the file and draw the fNtrack variable:; root[] TFile *f = new TFile(""Event.root""); root[] T->Draw(""fNtrack""); Then declare a pointer to a float and use the GetV1 method to retrieve the first dimension of the tree. In this example we only drew one dimension (fNtrack) if we had drawn two, we could use GetV2 to get the second one.; root[] Float_t *a; root[] a = T->GetV1(); Loop through the first 10 entries and print the values of fNtrack:; root[] for (int i = 0; i < 10; i++); root[] cout << a[i] << "" "" << endl // need an endl to see the values; 594 597 606 595 604 610 604 602 603 596; By default, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:631791,variab,variable,631791,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"inuit*fMinuit; vector<double>fParams; unsigned intfStrategy; ROOT::Minuit::EMinimizerTypefType; boolfUsed; static ROOT::Math::IBaseFunctionMultiDim*fgFunc; static TMinuit*fgMinuit; static boolfgUseStaticMinuitflag to control if using global TMInuit instance (gMinuit); static boolfgUsedflag to control if static instance has done minimization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMinuitMinimizer(ROOT::Minuit::EMinimizerType type = ROOT::Minuit::kMigrad, unsigned int ndim = 0); Constructor for TMinuitMinimier class via an enumeration specifying the minimization; algorithm type. Supported types are : kMigrad, kSimplex, kCombined (a combined; Migrad + Simplex minimization) and kMigradImproved (a Migrad mininimization folloed by an; improved search for global minima). The default type is Migrad (kMigrad). TMinuitMinimizer(const char* type, unsigned int ndim = 0); constructor from a char * for the algorithm type, used by the plug-in manager; The names supported (case unsensitive) are:; Migrad (default), Simplex, Minimize (for the combined Migrad+ Simplex) and Migrad_imp. ~TMinuitMinimizer(); Destructor implementation. TMinuitMinimizer(const TMinuitMinimizer& ); Implementation of copy constructor (it is private). bool UseStaticMinuit(bool on = true); static method to control usage of global TMinuit instance. void InitTMinuit(int ndim). void SetFunction(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Minuit; Here a TMinuit instance is created since only at this point we know the number of parameters. void SetFunction(const ROOT::Math::IMultiGradFunction & func); Set the objective function to be minimized, by passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuitMinimizer.html:6115,plug-in,plug-in,6115,root/html528/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html528/TMinuitMinimizer.html,4,['plug-in'],['plug-in']
Modifiability,"inuit*fMinuit; vector<double>fParamsvector of output values; ROOT::Minuit::EMinimizerTypefType; boolfUsed; static ROOT::Math::IBaseFunctionMultiDim*fgFunc; static TMinuit*fgMinuit; static boolfgUseStaticMinuitflag to control if using global TMInuit instance (gMinuit); static boolfgUsedflag to control if static instance has done minimization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMinuitMinimizer(ROOT::Minuit::EMinimizerType type = ROOT::Minuit::kMigrad, unsigned int ndim = 0); Constructor for TMinuitMinimier class via an enumeration specifying the minimization; algorithm type. Supported types are : kMigrad, kSimplex, kCombined (a combined; Migrad + Simplex minimization) and kMigradImproved (a Migrad mininimization folloed by an; improved search for global minima). The default type is Migrad (kMigrad). TMinuitMinimizer(const char* type, unsigned int ndim = 0); constructor from a char * for the algorithm type, used by the plug-in manager; The names supported (case unsensitive) are:; Migrad (default), Simplex, Minimize (for the combined Migrad+ Simplex) and Migrad_imp. ~TMinuitMinimizer(); Destructor implementation. TMinuitMinimizer(const TMinuitMinimizer& ); Implementation of copy constructor (it is private). bool UseStaticMinuit(bool on = true); static method to control usage of global TMinuit instance. void InitTMinuit(int ndim). void SetFunction(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Minuit; Here a TMinuit instance is created since only at this point we know the number of parameters. void SetFunction(const ROOT::Math::IMultiGradFunction & func); Set the objective function to be minimized, by passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:6643,plug-in,plug-in,6643,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,2,['plug-in'],['plug-in']
Modifiability,"inuit2::FCNBase: public ROOT::Minuit2::GenericFunction. Interface (abstract class) defining the function to be minimized, which has to be implemented by the user. @author Fred James and Matthias Winkler; modified by Andras Zsenei and Lorenzo Moneta. @ingroup Minuit. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~FCNBase(); virtual doubleErrorDef() const; ROOT::Minuit2::FCNBaseFCNBase(); ROOT::Minuit2::FCNBaseFCNBase(const ROOT::Minuit2::FCNBase&); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(const ROOT::Minuit2::GenericFunction&); virtual doubleoperator()(const vector<double>& x) const; ROOT::Minuit2::FCNBase&operator=(const ROOT::Minuit2::FCNBase&); virtual voidSetErrorDef(double); virtual doubleUp() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~FCNBase(); {}. double operator()(const vector<double>& x) const. The meaning of the vector of parameters is of course defined by the user,; who uses the values of those parameters to calculate their function Value.; The order and the position of these parameters is strictly the one specified; by the user when supplying the starting values for minimization. The starting; values must be specified by the user, either via an std::vector<double> or the; MnUserParameters supplied as input to the MINUIT minimizers such as; VariableMetricMinimizer or MnMigrad. Later values are determined by MINUIT; as it searches for the Minimum or performs whatever analysis is requested by; the user. @param par function parameters as defined by the user. @return the Value of the function. @see MnUserParameters; @see VariableMetricMinimizer; @see MnMigrad. double ErrorDef() const. Error definition of the function. MINUIT defines Parameter errors as th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__FCNBase.html:1248,Inherit,Inheritance,1248,root/html602/ROOT__Minuit2__FCNBase.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__FCNBase.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"inus at low z face; coslz: z dir cosinus at low z face; coshx: x dir cosinus at high z face; coshy: y dir cosinus at high z face; coshz: z dir cosinus at high z face . Definition at line 29 of file TCTUB.h. Public Member Functions;  TCTUB ();  CTUB shape default constructor. ;  ;  TCTUB (const char *name, const char *title, const char *material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2, Float_t *lowNormal, Float_t *highNormal);  CTUB shape normal constructor. ;  ;  TCTUB (const char *name, const char *title, const char *material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2, Float_t coslx, Float_t cosly, Float_t coslz, Float_t coshx, Float_t coshy, Float_t coshz);  CTUB shape normal constructor. ;  ;  ~TCTUB () override;  CTUB shape default destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TCTUB. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTUBS;  TTUBS ();  TUBS shape default constructor. ;  ;  TTUBS (const char *name, const char *title, const char *material, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2);  TUBS shape ""simplified"" constructor. ;  ;  TTUBS (const char *name, const char *title, const char *material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2);  TUBS shape normal constructor. ;  ;  ~TTUBS () override;  TUBS shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a TUBE. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3d. ;  ; virtual Float_t GetPhi1 () const;  ; virtual Float_t GetPhi2 () const;  ; TClass * IsA () const override;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void Streamer (TBuffer &) override;  Stream an object of class TTUBE. ;  ; void StreamerNVirtual (TBuffer &C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCTUB.html:1832,inherit,inherited,1832,doc/master/classTCTUB.html,https://root.cern,https://root.cern/doc/master/classTCTUB.html,1,['inherit'],['inherited']
Modifiability,"involves as many as seven objects. When selecting a method from the context menu and that method has options, the user will be asked for numerical values or strings to fill in the option. For example, TAxis::SetTitle will prompt you for a string to use for the axis title. Context menus of different objects in a canvas. 9.2.3.2 Structure of the Context Menus; The curious reader will have noticed that each entry in the context menu corresponds to a method of the class. Look for example to the menu named TAxis::xaxis. xaxis is the name of the object and TAxis the name of its class. If we look at the list of TAxis methods, for example in https://root.cern/doc/master/classTAxis.html, we see the methods SetTimeDisplay() andUnZoom(), which appear also in the context menu.; There are several divisions in the context menu, separated by lines. The top division is a list of the class methods; the second division is a list of the parent class methods. The subsequent divisions are the methods other parent classes in case of multiple inheritance. For example, see the TPaveText::title context menu. A TPaveText inherits from TAttLine, which has the method SetLineAttributes().; 9.2.3.3 Adding Context Menus for a Class; For a method to appear in the context menu of the object it has to be marked by // *MENU* in the header file. Below is the line from TAttLine.h that adds the SetLineAttribute method to the context menu.; virtual void SetLineAttributes(); // *MENU*; Nothing else is needed, since Cling knows the classes and their methods. It takes advantage of that to create the context menu on the fly when the object is clicking on. If you click on an axis, ROOT will ask the interpreter what are the methods of the TAxis and which ones are set for being displayed in a context menu.; Now, how does the interpreter know this? Remember, when you build a class that you want to use in the ROOT environment, you use rootcling that builds the so-called stub functions and the dictionary. These fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:295321,inherit,inheritance,295321,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inheritance']
Modifiability,"inx, Int_t biny, Double_t error); virtual voidTH1::SetBinError(Int_t binx, Int_t biny, Int_t binz, Double_t error); virtual voidTH1::SetBinErrorOption(TH1::EBinErrorOpt type); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); virtual voidSetBinsLength(Int_t n = -1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTH1::SetBuffer(Int_t buffersize, Option_t* option = """"); virtual UInt_tTH1::SetCanExtend(UInt_t extendBitMask); virtual voidTH1::SetCellContent(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetCellError(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetContent(const Double_t* content); virtual voidTH1::SetContour(Int_t nlevels, const Double_t* levels = 0); virtual voidTH1::SetContourLevel(Int_t level, Double_t value); static voidTH1::SetDefaultBufferSize(Int_t buffersize = 1000); static voidTH1::SetDefaultSumw2(Bool_t sumw2 = kTRUE); virtual voidTH1::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTH1::SetEntries(Double_t n); virtual voidTH1::SetError(const Double_t* error); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTH1::SetLabelColor(Color_t color = 1, Option_t* axis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1C.html:15787,extend,extendBitMask,15787,root/html602/TH1C.html,https://root.cern,https://root.cern/root/html602/TH1C.html,60,['extend'],['extendBitMask']
Modifiability,"in{cases}; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,tot} &\text{normal PDF}\\; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,expected} &\text{extended PDF}; \end{cases} \\; \Delta_\mathrm{bin} &=; \begin{cases}; \sqrt{N_\mathrm{PDF,bin}} &\text{if } \mathtt{DataError == RooAbsData::Expected}\\; \mathtt{data{\rightarrow}weightError()} &\text{otherwise} \\; \end{cases}; \end{align*}. If the dataset doesn't have user-defined errors, errors are assumed to be \( \sqrt{N} \). In extended PDF mode, N_tot (total number of data events) is substituted with N_expected, the expected number of events that the PDF predicts.; NoteIf the dataset has errors stored, empty bins will prevent the calculation of \( \chi^2 \), because those have zero error. This leads to messages like: [#0] ERROR:Eval -- RooChi2Var::RooChi2Var(chi2_GenPdf_data_hist) INFINITY ERROR: bin 2 has zero error; RooChi2Var::RooChi2VarRooChi2Var(const char *name, const char *title, RooAbsReal &func, RooDataHist &data, bool extended, RooDataHist::ErrorType etype, RooAbsTestStatistic::Configuration const &cfg=RooAbsTestStatistic::Configuration{})Definition RooChi2Var.cxx:67. In this case, one can use the expected errors of the PDF instead of the data errors: RooChi2Var chi2(..., ..., RooFit::DataError(RooAbsData::Expected), ...);; RooAbsData::Expected@ ExpectedDefinition RooAbsData.h:108; RooChi2VarSimple calculation from a binned dataset and a PDF.Definition RooChi2Var.h:19; RooFit::DataErrorRooCmdArg DataError(Int_t)Definition RooGlobalFunc.cxx:470. PyROOT; Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. . Definition at line 19 of file RooChi2Var.h. Public Types; enum  FuncMode { Function; , Pdf; , ExtendedPdf; };  ;  Public Types inherited from RooAbsTestStatistic; enum  GOFOpMode { SimMaster; , MPMaster; , Slave; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:1665,extend,extended,1665,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['extend'],['extended']
Modifiability,"ioTestStat(const RooStats::SimpleLikelihoodRatioTestStat&); RooStats::SimpleLikelihoodRatioTestStatSimpleLikelihoodRatioTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf); RooStats::SimpleLikelihoodRatioTestStatSimpleLikelihoodRatioTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet& nullParameters, const RooArgSet& altParameters); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(const RooStats::TestStatistic&). Data Members; private:. RooArgSet*fAltParameters; RooAbsPdf*fAltPdf; RooArgSetfConditionalObs; RooArgSet*fDetailedOutput!; boolfDetailedOutputEnabled; boolfFirstEval; RooAbsReal*fNllAlt! transient copy of the alt NLL; RooAbsReal*fNllNull! transient copy of the null NLL; RooArgSet*fNullParameters; RooAbsPdf*fNullPdf; Bool_tfReuseNll; static Bool_tfgAlwaysReuseNll. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetAlwaysReuseNLL(Bool_t flag); { fgAlwaysReuseNll = flag ; }. Double_t Evaluate(RooAbsData& data, RooArgSet& nullPOI). SimpleLikelihoodRatioTestStat(). SimpleLikelihoodRatioTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf). SimpleLikelihoodRatioTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet& nullParameters, const RooArgSet& altParameters). virtual ~SimpleLikelihoodRatioTestStat(). void SetReuseNLL(Bool_t flag); { fReuseNll = flag ; }. void SetNullParameters(const RooArgSet& nullParameters). void SetAltParameters(const RooArgSet& altParameters). bool ParamsAreEqual(). void SetConditionalObservables(const RooArgSet& set); set the conditional observables which will be used when creating the NLL; so the pdf's will not be normalized on the conditional observables when computing the NLL. {fConditionalObs.removeAll(); fConditionalObs.add(set);}. void EnableDetailedOutput(bool e = true); { fDetailedOutputEnabled = e; fDeta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SimpleLikelihoodRatioTestStat.html:2323,Inherit,Inheritance,2323,root/html602/RooStats__SimpleLikelihoodRatioTestStat.html,https://root.cern,https://root.cern/root/html602/RooStats__SimpleLikelihoodRatioTestStat.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TRotation (Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t);  Constructor. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fxx;  ; Double_t fxy;  ; Double_t fxz;  ; Double_t fyx;  ; Double_t fyy;  ; Double_t fyz;  ; Double_t fzx;  ; Double_t fzy;  ; Double_t fzz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRotation.h>. Inheritance diagram for TRotation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRotation() [1/4]. TRotation::TRotation ; (; ). Constructor. ; Definition at line 196 of file TRotation.cxx. ◆ TRotation() [2/4]. TRotation::TRotation ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRotation.html:18865,inherit,inherited,18865,doc/master/classTRotation.html,https://root.cern,https://root.cern/doc/master/classTRotation.html,1,['inherit'],['inherited']
Modifiability,"ion ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fName;  ; Int_t fSize;  . Private Member Functions;  TCollection (const TCollection &)=delete;  ; void operator= (const TCollection &)=delete;  . Static Private Attributes; static TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCollection.html:13354,inherit,inherited,13354,doc/v632/classTCollection.html,https://root.cern,https://root.cern/doc/v632/classTCollection.html,2,['inherit'],['inherited']
Modifiability,"ion ();  Default constructor. ;  ; virtual bool CheckParameters (RooArgSet &params);  Check the parameters for which the ProposalFunction will propose values to make sure they are all RooRealVars Return true if all objects are RooRealVars, false otherwise. ;  ; virtual double GetProposalDensity (RooArgSet &x1, RooArgSet &x2)=0;  Return the probability of proposing the point x1 given the starting point x2. ;  ; TClass * IsA () const override;  ; virtual bool IsSymmetric (RooArgSet &x1, RooArgSet &x2)=0;  Determine whether or not the proposal density is symmetric for points x1 and x2 - that is, whether the probability of reaching x2 from x1 is equal to the probability of reaching x1 from x2. ;  ; virtual void Propose (RooArgSet &xPrime, RooArgSet &x)=0;  Populate xPrime with the new proposed point, possibly based on the current point x. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ProposalFunction.html:1977,inherit,inherited,1977,doc/master/classRooStats_1_1ProposalFunction.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ProposalFunction.html,1,['inherit'],['inherited']
Modifiability,"ion (Option_t *option="" "");  ; void setPadFactor (double factor);  ; void SetStats (bool stats=true);  Like TH1::SetStats(), but statistics boxes are off by default in RooFit. ;  ; void SetTickLength (Float_t length=0.02, Option_t *axis=""X"");  ; void SetTitle (const char *name) override;  Set the title of the RooPlot to 'title'. ;  ; void SetTitleFont (Style_t font=62, Option_t *axis=""X"");  ; void SetTitleOffset (Float_t offset=1, Option_t *axis=""X"");  ; void SetTitleSize (Float_t size=0.02, Option_t *axis=""X"");  ; void SetXTitle (const char *title);  ; void SetYTitle (const char *title);  ; void SetZTitle (const char *title);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void updateNormVars (const RooArgSet &vars);  Install the given set of observables are reference normalization variables for this frame. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:13210,inherit,inherited,13210,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['inherit'],['inherited']
Modifiability,"ion (RooAbsReal) ; Definition at line 26 of file RooStepFunction.h. Public Member Functions;  RooStepFunction ();  ;  RooStepFunction (const char *name, const char *title, RooAbsReal &x, const RooArgList &coefList, const RooArgList &limits, bool interpolate=false);  Constructor. ;  ;  RooStepFunction (const RooStepFunction &other, const char *name=nullptr);  Copy constructor. ;  ; const RooArgList & boundaries ();  ; TObject * clone (const char *newname) const override;  ; const RooArgList & coefficients ();  ; TClass * IsA () const override;  ; std::list< double > * plotSamplingHint (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStepFunction.html:1704,inherit,inherited,1704,doc/master/classRooStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooStepFunction.html,1,['inherit'],['inherited']
Modifiability,"ion (TMVA::DataSetInfo &fDataSetInfo, TMVA::Types::EAnalysisType fAnalysisType);  method to save Train/Test information into the output file. ;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TMVA::Envelope; std::shared_ptr< DataLoader > fDataLoader;  ! data ;  ; std::shared_ptr< TFile > fFile;  ! file to save the results ;  ; UInt_t fJobs;  ! number of jobs to run some high level algorithm in parallel ;  ; std::vector< OptionMap > fMethods;  ! Booked method information ;  ; Bool_t fModelPersistence;  ! flag to save the trained model ;  ; Bool_t fSilentFile;  ! if true dont produce file output ;  ; TStopwatch fTimer;  ! timer to measure the time. ;  ; TString fTransformations;  ! List of transformations to test ;  ; Bool_t fVerbose;  ! flag for extra information ;  ; TProcPool fWorkers;  ! procpool object ;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TMVA/CrossValidation.h>. Inheritance diagram for TMVA::CrossValidation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ CrossValidation() [1/2]. TMVA::CrossValidation::CrossValidation ; (; TString ; jobName, . TMVA::DataLoader * ; dataloader, . TString ; options . ). explicit . Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CrossValidation.html:18598,inherit,inherited,18598,doc/master/classTMVA_1_1CrossValidation.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CrossValidation.html,1,['inherit'],['inherited']
Modifiability,"ion (TMVA::DataSetInfo &fDataSetInfo, TMVA::Types::EAnalysisType fAnalysisType);  method to save Train/Test information into the output file. ;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TMVA::Envelope; std::shared_ptr< DataLoader > fDataLoader;  ! data ;  ; std::shared_ptr< TFile > fFile;  ! file to save the results ;  ; UInt_t fJobs;  ! number of jobs to run some high level algorithm in parallel ;  ; std::vector< OptionMap > fMethods;  ! Booked method information ;  ; Bool_t fModelPersistence;  ! flag to save the trained model ;  ; Bool_t fSilentFile;  ! if true dont produce file output ;  ; TStopwatch fTimer;  ! timer to measure the time. ;  ; TString fTransformations;  ! List of transformations to test ;  ; Bool_t fVerbose;  ! flag for extra information ;  ; TProcPool fWorkers;  ! procpool object ;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TMVA/HyperParameterOptimisation.h>. Inheritance diagram for TMVA::HyperParameterOptimisation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ HyperParameterOptimisation(). TMVA::HyperParameterOptimisation::HyperParameterOptimisation ; (; TMVA::DataLoader * ; dataloader). Definition a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1HyperParameterOptimisation.html:16810,inherit,inherited,16810,doc/master/classTMVA_1_1HyperParameterOptimisation.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1HyperParameterOptimisation.html,1,['inherit'],['inherited']
Modifiability,"ion (re-implement for being more efficient); 213 double DoEval(const double * x) const override {; 214 ; 215// std::cout << this << fDim << "" x : "";; 216// std::ostream_iterator<double> oix(std::cout,"" , "");; 217// std::copy(x, x+fDim, oix);; 218// std::cout << std::endl;; 219// std::cout << ""npar "" << npar << std::endl;; 220// std::cout << fVarIndices.size() << std::endl;; 221// assert ( fVarIndices.size() == fDim); // otherwise something is wrong; 222 ; 223 for (unsigned int i = 0; i < fDim; ++i) {; 224 unsigned int j = fVarIndices[i];; 225 assert ( j < NPar() + fDim);; 226 fX[ j ] = x[i];; 227 }; 228// std::cout << ""X : ("";; 229// std::ostream_iterator<double> oi(std::cout,"" , "");; 230// std::copy(fX.begin(), fX.end(), oi);; 231// std::cout << std::endl;; 232 ; 233 return (*fFunc)( fX.empty() ? nullptr : &fX.front() );; 234 }; 235 ; 236 ; 237 /**; 238 implement the required IParamFunction interface; 239 */; 240 double DoEvalPar(const double * x, const double * p ) const override {; 241 SetParValues(NPar(), p);; 242 return DoEval(x);; 243 }; 244 ; 245 ; 246 void DoInit() {; 247 // calculate variable indices and set in X the parameter values; 248 fVarIndices.reserve(fDim);; 249 unsigned int npar = NPar();; 250 for (unsigned int i = 0; i < npar + fDim; ++i) {; 251 bool isVar = true;; 252 for (unsigned int j = 0; j < npar; ++j) {; 253 if (fParIndices[j] == i) {; 254 isVar = false;; 255 break;; 256 }; 257 }; 258 if (isVar) fVarIndices.push_back(i);; 259 }; 260 assert ( fVarIndices.size() == fDim); // otherwise something is wrong; 261 ; 262// std::cout << ""n variables "" << fVarIndices.size() << std::endl;; 263// std::ostream_iterator<int> oi(std::cout,"" "");; 264// std::copy(fVarIndices.begin(), fVarIndices.end(), oi);; 265// std::cout << std::endl;; 266// assert( fVarIndices.size() == fDim);; 267// std::cout << this << std::endl;; 268 ; 269 // set parameter values in fX; 270 SetParValues(npar, fParams.empty() ? nullptr : &fParams.front());; 271 for (unsigned int i = 0; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedParamFunction_8h_source.html:8519,variab,variable,8519,doc/master/WrappedParamFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedParamFunction_8h_source.html,1,['variab'],['variable']
Modifiability,"ion (see TFormula) or a; precompiled user function.; The function may have associated parameters.; TF1 graphics function is via the TH1/TGraph drawing functions. The following types of functions can be created:. A - Expression using variable x and no parameters; B - Expression using variable x with parameters; C - A general C function with parameters; D - A general C++ function object (functor) with parameters; E - A member function with parameters of a general C++ class. A - Expression using variable x and no parameters; Case 1: inline expression using standard C++ functions/operators. TF1 *fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; fa1->Draw();. Case 2: inline expression using TMath functions without parameters. TF1 *fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; fa2->Draw();. Case 3: inline expression using a CINT function by name. Double_t myFunc(x) {; return x+sin(x);; }; TF1 *fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; fa3->Draw();. B - Expression using variable x with parameters; Case 1: inline expression using standard C++ functions/operators. Example a:; >; TF1 *fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);. This creates a function of variable x with 2 parameters.; The parameters must be initialized via:. fa->SetParameter(0,value_first_parameter);; fa->SetParameter(1,value_second_parameter);. Parameters may be given a name:. fa->SetParName(0,""Constant"");. Example b:; >; TF1 *fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);. gaus(0) is a substitute for [0]*exp(-0.5*((x-[1])/[2])**2); and (0) means start numbering parameters at 0.; expo(3) is a substitute for exp([3]+[4]*x). Case 2: inline expression using TMath functions with parameters; >; TF1 *fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; fb2->SetParameters(0.2,1.3);; fb2->Draw();. C - A general C function with parameters; Consider the macro myfunc.C below:. // Macro myfunc.C; Double_t myfunction(Double_t *x, Double_t *par); {; Float_t xx =x[0];; Double_t f = TMath::Abs(par[0]*sin(par[1]*xx)/xx);; return f;; }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF1.html:1425,variab,variable,1425,root/html528/TF1.html,https://root.cern,https://root.cern/root/html528/TF1.html,12,['variab'],['variable']
Modifiability,"ion *conf);  ; Int_t PushDataCacheVectorPtr (TBuffer &b, void *, const void *, const TConfiguration *conf);  ; void ReadArraySTLMemberWiseChangedClass (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers);  ; void ReadArraySTLMemberWiseSameClass (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers);  ; template<typename T > ; Int_t ReadBasicType (TBuffer &buf, void *addr, const TConfiguration *config);  ; template<> ; Int_t ReadBasicType< BitsMarker > (TBuffer &buf, void *addr, const TConfiguration *config);  ; template<typename T > ; Int_t ReadBasicType_NoFactor (TBuffer &buf, void *addr, const TConfiguration *config);  ; template<typename T > ; Int_t ReadBasicType_WithFactor (TBuffer &buf, void *addr, const TConfiguration *config);  ; Int_t ReadLoopInvalid (TBuffer &, void *, const void *, const TConfiguration *config);  ; template<void(*)(TBuffer &, void *, const TConfiguration *, Version_t) memberwise, void(*)(TBuffer &, void *, const TConfiguration *, Version_t, UInt_t) objectwise> ; Int_t ReadSTL (TBuffer &buf, void *addr, const TConfiguration *conf);  ; void ReadSTLMemberWiseChangedClass (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers);  ; void ReadSTLMemberWiseSameClass (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers);  ; void ReadSTLObjectWiseFastArray (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t, UInt_t);  ; void ReadSTLObjectWiseFastArrayV2 (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers, UInt_t start);  ; void ReadSTLObjectWiseStreamer (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t, UInt_t);  ; void ReadSTLObjectWiseStreamerV2 (TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers, UInt_t start);  ; template<bool kIsTextT> ; Int_t ReadSTLp (TBuffer &buf, void *addr, const TConfiguration *config);  Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:4610,config,config,4610,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"ion *conn;; 10957 /* Data block */; 10958 char *buf; /* Environment buffer */; 10959 size_t buflen; /* Space available in buf */; 10960 size_t bufused; /* Space taken in buf */; 10961 /* Index block */; 10962 char **var; /* char **envp */; 10963 size_t varlen; /* Number of variables available in var */; 10964 size_t varused; /* Number of variables stored in var */; 10965};; 10966 ; 10967 ; 10968static void addenv(struct cgi_environment *env,; 10969 PRINTF_FORMAT_STRING(const char *fmt),; 10970 ...) PRINTF_ARGS(2, 3);; 10971 ; 10972/* Append VARIABLE=VALUE\0 string to the buffer, and add a respective; 10973 * pointer into the vars array. Assumes env != NULL and fmt != NULL. */; 10974static void; 10975addenv(struct cgi_environment *env, const char *fmt, ...); 10976{; 10977 size_t i, n, space;; 10978 int truncated = 0;; 10979 char *added;; 10980 va_list ap;; 10981 ; 10982 if ((env->varlen - env->varused) < 2) {; 10983 mg_cry_internal(env->conn,; 10984 ""%s: Cannot register CGI variable [%s]"",; 10985 __func__,; 10986 fmt);; 10987 return;; 10988 }; 10989 ; 10990 /* Calculate how much space is left in the buffer */; 10991 space = (env->buflen - env->bufused);; 10992 ; 10993 do {; 10994 /* Space for ""\0\0"" is always needed. */; 10995 if (space <= 2) {; 10996 /* Allocate new buffer */; 10997 n = env->buflen + CGI_ENVIRONMENT_SIZE;; 10998 added = (char *)mg_realloc_ctx(env->buf, n, env->conn->phys_ctx);; 10999 if (!added) {; 11000 /* Out of memory */; 11001 mg_cry_internal(; 11002 env->conn,; 11003 ""%s: Cannot allocate memory for CGI variable [%s]"",; 11004 __func__,; 11005 fmt);; 11006 return;; 11007 }; 11008 /* Retarget pointers */; 11009 env->buf = added;; 11010 env->buflen = n;; 11011 for (i = 0, n = 0; i < env->varused; i++) {; 11012 env->var[i] = added + n;; 11013 n += strlen(added + n) + 1;; 11014 }; 11015 space = (env->buflen - env->bufused);; 11016 }; 11017 ; 11018 /* Make a pointer to the free space int the buffer */; 11019 added = env->buf + env->bufused;; 11020 ; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:316331,variab,variable,316331,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['variab'],['variable']
Modifiability,"ion *conn;; 10958 /* Data block */; 10959 char *buf; /* Environment buffer */; 10960 size_t buflen; /* Space available in buf */; 10961 size_t bufused; /* Space taken in buf */; 10962 /* Index block */; 10963 char **var; /* char **envp */; 10964 size_t varlen; /* Number of variables available in var */; 10965 size_t varused; /* Number of variables stored in var */; 10966};; 10967 ; 10968 ; 10969static void addenv(struct cgi_environment *env,; 10970 PRINTF_FORMAT_STRING(const char *fmt),; 10971 ...) PRINTF_ARGS(2, 3);; 10972 ; 10973/* Append VARIABLE=VALUE\0 string to the buffer, and add a respective; 10974 * pointer into the vars array. Assumes env != NULL and fmt != NULL. */; 10975static void; 10976addenv(struct cgi_environment *env, const char *fmt, ...); 10977{; 10978 size_t i, n, space;; 10979 int truncated = 0;; 10980 char *added;; 10981 va_list ap;; 10982 ; 10983 if ((env->varlen - env->varused) < 2) {; 10984 mg_cry_internal(env->conn,; 10985 ""%s: Cannot register CGI variable [%s]"",; 10986 __func__,; 10987 fmt);; 10988 return;; 10989 }; 10990 ; 10991 /* Calculate how much space is left in the buffer */; 10992 space = (env->buflen - env->bufused);; 10993 ; 10994 do {; 10995 /* Space for ""\0\0"" is always needed. */; 10996 if (space <= 2) {; 10997 /* Allocate new buffer */; 10998 n = env->buflen + CGI_ENVIRONMENT_SIZE;; 10999 added = (char *)mg_realloc_ctx(env->buf, n, env->conn->phys_ctx);; 11000 if (!added) {; 11001 /* Out of memory */; 11002 mg_cry_internal(; 11003 env->conn,; 11004 ""%s: Cannot allocate memory for CGI variable [%s]"",; 11005 __func__,; 11006 fmt);; 11007 return;; 11008 }; 11009 /* Retarget pointers */; 11010 env->buf = added;; 11011 env->buflen = n;; 11012 for (i = 0, n = 0; i < env->varused; i++) {; 11013 env->var[i] = added + n;; 11014 n += strlen(added + n) + 1;; 11015 }; 11016 space = (env->buflen - env->bufused);; 11017 }; 11018 ; 11019 /* Make a pointer to the free space int the buffer */; 11020 added = env->buf + env->bufused;; 11021 ; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:316364,variab,variable,316364,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['variab'],['variable']
Modifiability,"ion ; (; const char * ; name, . const ROOT::Math::IBaseFunctionMultiDim & ; ftor, . const RooArgList & ; vars . ). Definition at line 155 of file RooFunctorBinding.cxx. ◆ bindFunction() [18/24]. RooAbsReal * RooFit::bindFunction ; (; const char * ; name, . const ROOT::Math::IBaseFunctionOneDim & ; ftor, . RooAbsReal & ; vars . ). Definition at line 121 of file RooFunctor1DBinding.cxx. ◆ bindFunction() [19/24]. RooAbsReal * RooFit::bindFunction ; (; TF1 * ; func, . RooAbsReal & ; x . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 93 of file RooTFnBinding.cxx. ◆ bindFunction() [20/24]. RooAbsReal * RooFit::bindFunction ; (; TF1 * ; func, . RooAbsReal & ; x, . const RooArgList & ; params . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 105 of file RooTFnBinding.cxx. ◆ bindFunction() [21/24]. RooAbsReal * RooFit::bindFunction ; (; TF2 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 97 of file RooTFnBinding.cxx. ◆ bindFunction() [22/24]. RooAbsReal * RooFit::bindFunction ; (; TF2 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y, . const RooArgList & ; params . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 109 of file RooTFnBinding.cxx. ◆ bindFunction() [23/24]. RooAbsReal * RooFit::bindFunction ; (; TF3 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y, . RooAbsReal & ; z . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 101 of file RooTFnBinding.cxx. ◆ bindFunction() [24/24]. RooAbsReal * RooFit::bindFunction ; (; TF3 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y, . RooAbsReal & ; z, . const RooArgList & ; params . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 113 of file RooTFnBinding.cxx. ◆ bindPdf() [1/21]. RooAbsPdf * RooFit::bindPdf ; (; const char * ; name, . CFUNCD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooFit.html:28651,variab,variables,28651,doc/master/namespaceRooFit.html,https://root.cern,https://root.cern/doc/master/namespaceRooFit.html,1,['variab'],['variables']
Modifiability,ion ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.333122 0.322325 0.0804981 0.00689735 43477.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.326577 0.317097 0.0800716 0.00688531 43724 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.320979 0.311994 0.080369 0.00694962 43585.2 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.316442 0.305918 0.0803736 0.00690045 43553.3 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.311672 0.301667 0.0807629 0.00695777 43357.4 0; : 17 Minimum Test error found - save the configuration ; : 17 | 0.306787 0.297289 0.0804752 0.00690149 43493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.29682 0.292587 0.0806285 0.00686869 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 3.117e-01; : 2 : var1 : 2.504e-01; : 3 : var2 : 2.430e-01;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:16861,config,configuration,16861,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23935,config,configuration,23935,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24049,config,configuration,24049,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24163,config,configuration,24163,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24277,config,configuration,24277,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test er,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24391,config,configuration,24391,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24729,config,configuration,24729,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24841,config,configuration,24841,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Test error found - save the configuration ; : 132 | 10388.3 9392.54 0.0200847 0.0018148 43788 0; : 133 Minimum Test error found - save the configuration ; : 133 | 10303 9307.9 0.0200258 0.00180758 43912.1 0; : 134 Minimum Test error found - save the configuration ; : 134 | 10217.2 9225.8 0.0200352 0.00180785 43890.1 0; : 135 Minimum Test error found - save the configuration ; : 135 | 10133.2 9143.83 0.0200313 0.00180712 43897.8 0; : 136 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:25293,config,configuration,25293,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 143 | 9485.56 8503.01 0.0205275 0.0018356 42799.2 0; : 144 Minimum Test error found - save the configuration ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28116,config,configuration,28116,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:29700,config,configuration,29700,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30039,config,configuration,30039,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30380,config,configuration,30380,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30494,config,configuration,30494,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test error found - save the configuration ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test error found - save the configuration ; : 184 | 6771.06 5807.61 0.0200991 0.00181199 43746.7 0; : 185 Minimum Test error found - save the configuration ; : 185 | 6714.64 5753.86 0.0200873 0.00180851 43766.7 0; : 186 Minimum Test error found - save the configuration ; : 186 | 6660.45 5699.55 0.0200713 0.00180648 43800 0; : 187 Minimum Test error found - save the configuration ; : 187 | 6606 5645.81 0.0200891 0.00180584 43755.9 0; : 188 Minimum Test error found - save the configuration ; : 188 | 6552.47 5592.04 0.0200898 0.00181079 43766 0; : 189 Minimum Test error found - save the configuration ; : 189 | 6500.15 5537.2 0.0201183 0.00181031 43696.6 0; : 190 Minimum Test error found - save the configuration ; : 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:31850,config,configuration,31850,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:36380,config,configuration,36380,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37060,config,configuration,37060,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37286,config,configuration,37286,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39557,config,configuration,39557,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41138,config,configuration,41138,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43976,config,configuration,43976,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:44090,config,configuration,44090,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:48514,config,configuration,48514,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:49871,config,configuration,49871,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:49985,config,configuration,49985,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52024,config,configuration,52024,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52138,config,configuration,52138,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52252,config,configuration,52252,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52366,config,configuration,52366,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53043,config,configuration,53043,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53157,config,configuration,53157,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53271,config,configuration,53271,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53497,config,configuration,53497,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test error found - save the configuration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test error found - save the configuration ; : 392 | 1125.56 638.711 0.0206275 0.00184646 42596.2 0; : 393 Minimum Test error found - save the configuration ; : 393 | 1115.4 631.055 0.0202254 0.00180782 43436.7 0; : 394 Minimum Test error found - save the configuration ; : 394 | 1104.59 624.317 0.02027 0.00182884 43381.3 0; : 395 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54630,config,configuration,54630,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test error found - save the configuration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test error found - save the configuration ; : 392 | 1125.56 638.711 0.0206275 0.00184646 42596.2 0; : 393 Minimum Test error found - save the configuration ; : 393 | 1115.4 631.055 0.0202254 0.00180782 43436.7 0; : 394 Minimum Test error found - save the configuration ; : 394 | 1104.59 624.317 0.02027 0.00182884 43381.3 0; : 395 Minimum Test error found - save the configuration ; : 395 | 1094.1 617.12 0.0203693 0.00181577 43118.4 0; : 396 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54744,config,configuration,54744,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 399 | 1052.39 590.107 0.0201237 0.00182381 43716.1 0; : 400 Minimum Test error found - save the configuration ; : 400 | 1042.76 583.068 0.0201639 0.00182862 43631.8 0; : 401 Minimum Test error found - save the configuration ; : 401 | 1032.4 576.548 0.0201234 0.00181928 43705.9 0; : 402 Minimum Test error found - save the configuration ; : 402 | 1022.23 570.272 0.0201306 0.00182147 43694 0; : 403 Minimum Test error found - save the configuration ; : 403 | 1012.74 563.823 0.0201066 0.00181196 43728.6 0; : 404 Minimum Test error found - save the configuration ; : 404 | 1002.66 558.031 0.0201068 0.0018122 43728.9 0; : 405 Minimum Test error found - save the configuration ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57112,config,configuration,57112,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 400 | 1042.76 583.068 0.0201639 0.00182862 43631.8 0; : 401 Minimum Test error found - save the configuration ; : 401 | 1032.4 576.548 0.0201234 0.00181928 43705.9 0; : 402 Minimum Test error found - save the configuration ; : 402 | 1022.23 570.272 0.0201306 0.00182147 43694 0; : 403 Minimum Test error found - save the configuration ; : 403 | 1012.74 563.823 0.0201066 0.00181196 43728.6 0; : 404 Minimum Test error found - save the configuration ; : 404 | 1002.66 558.031 0.0201068 0.0018122 43728.9 0; : 405 Minimum Test error found - save the configuration ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57226,config,configuration,57226,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 401 | 1032.4 576.548 0.0201234 0.00181928 43705.9 0; : 402 Minimum Test error found - save the configuration ; : 402 | 1022.23 570.272 0.0201306 0.00182147 43694 0; : 403 Minimum Test error found - save the configuration ; : 403 | 1012.74 563.823 0.0201066 0.00181196 43728.6 0; : 404 Minimum Test error found - save the configuration ; : 404 | 1002.66 558.031 0.0201068 0.0018122 43728.9 0; : 405 Minimum Test error found - save the configuration ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57340,config,configuration,57340,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:59384,config,configuration,59384,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:59498,config,configuration,59498,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:59612,config,configuration,59612,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Test error found - save the configuration ; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Test error found - save the configuration ; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Test error found - save the configuration ; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Test error found - save the configuration ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Test error found - save the configuration ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:64031,config,configuration,64031,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:67887,config,configuration,67887,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68000,config,configuration,68000,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:69816,config,configuration,69816,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71746,config,configuration,71746,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71860,config,configuration,71860,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72087,config,configuration,72087,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72201,config,configuration,72201,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72539,config,configuration,72539,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72653,config,configuration,72653,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72766,config,configuration,72766,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72880,config,configuration,72880,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:73107,config,configuration,73107,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:73673,config,configuration,73673,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:73786,config,configuration,73786,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:73900,config,configuration,73900,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 16,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75257,config,configuration,75257,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 15,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75371,config,configuration,75371,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:77242,config,configuration,77242,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum Test error found - save the configuration ; : 596 | 127.285 81.8772 0.0201421 0.00182102 43665.5 0; : 597 Minimum Test error found - save the configuration ; : 597 | 125.567 80.7585 0.0201182 0.00182506 43732.1 0; : 598 Minimum Test error found - save the configuration ; : 598 | 124.213 80.6209 0.0201133 0.0018121 43713 0; : 599 Minimum Test error found - save the configuration ; : 599 | 122.94 79.487 0.0201252 0.00180702 43672.5 0; : 600 Minimum Test error found - save the configuration ; : 600 | 121.268 78.716 0.0201262 0.0018137 43686.1 0; : 601 Minimum Test error found - save the configuration ; : 601 | 119.733 78.5666 0.0201064 0.00181556 43737.8 0; : 602 Minimum Test error found - save the configuration ; : 602 | 118.293 77.4143 0.0201212 0.00181376 43698 0; : 603 Minimum Test error found - save the configuration ; : 603 | 116.739 75.9525 0.0201101 0.00180951 43714.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:78487,config,configuration,78487,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 601 | 119.733 78.5666 0.0201064 0.00181556 43737.8 0; : 602 Minimum Test error found - save the configuration ; : 602 | 118.293 77.4143 0.0201212 0.00181376 43698 0; : 603 Minimum Test error found - save the configuration ; : 603 | 116.739 75.9525 0.0201101 0.00180951 43714.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:79956,config,configuration,79956,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.649,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81484,config,configuration,81484,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84312,config,configuration,84312,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86637,config,configuration,86637,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89127,config,configuration,89127,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ion ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97867,config,configuration,97867,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"ion ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGShutter (const TGShutter &)=delete;  ; TGShutter & operator= (const TGShutter &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGShutter.html:27674,inherit,inherited,27674,doc/master/classTGShutter.html,https://root.cern,https://root.cern/doc/master/classTGShutter.html,1,['inherit'],['inherited']
Modifiability,"ion ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGToolBar (const TGToolBar &)=delete;  ; TGToolBar & operator= (const TGToolBar &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGToolBar.html:27481,inherit,inherited,27481,doc/master/classTGToolBar.html,https://root.cern,https://root.cern/doc/master/classTGToolBar.html,1,['inherit'],['inherited']
Modifiability,"ion ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGedFrame (const TGedFrame &)=delete;  ; TGedFrame & operator= (const TGedFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCompositeFra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:25279,inherit,inherited,25279,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,1,['inherit'],['inherited']
Modifiability,"ion ;  CRMinimizerRMinimizer class ;  CRootFinderUser Class to find the Root of one dimensional functions ;  CRotation3DRotation class with the (3D) rotation represented by a 3x3 orthogonal matrix ;  CRotationXRotation class representing a 3D rotation about the X axis by the angle of rotation ;  CRotationYRotation class representing a 3D rotation about the Y axis by the angle of rotation ;  CRotationZRotation class representing a 3D rotation about the Z axis by the angle of rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the Y axis, followed by a third rotation of an angle psi (roll) about the X axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  CSkipFunction;  CSkipFunction< 0 >;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineClass to wrap engines fron the C++ standard random library in the ROOT Random interface ;  CStdEngineType;  CStdEngineType< std::knuth_b >;  CStdEngineType< std::minstd_rand >;  CStdEngineType< std::mt19937 >;  CStdEngineType< std::mt19937_64 >;  CStdEngineType< std::random_device >;  CStdEngineType< std::ranlux24 >;  CStdEngineType< std::ranlux48 >;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:56887,variab,variables,56887,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,3,['variab'],['variables']
Modifiability,"ion = """") const; THnBase*THnBase::RebinBase(Int_t group) const; THnBase*THnBase::RebinBase(const Int_t* group) const; virtual voidTHnBase::Reserve(Long64_t); voidTHnBase::ResetBase(Option_t* option = """"); virtual voidTHnBase::SetFilledBins(Long64_t); voidTHnBase::UpdateXStat(const Double_t* x, Double_t w = 1.). Data Members; public:. enum THnBase::[unnamed] { kNoInt; kValidInt; kInvalidInt; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TNDArrayT<long long>fArraybin content; TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Int_t*THn::fCoordBuf! Temporary buffer; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum THnBase::THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TNDArrayT<Double_t>THn::fSumw2bin error, lazy allocation happens in TNDArrayT; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GetArray(); Increment the bin content of ""bin"" by ""w"",; return the bin index. return GetArray(). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnT_Long64_t_.html:12573,Inherit,Inheritance,12573,root/html534/THnT_Long64_t_.html,https://root.cern,https://root.cern/root/html534/THnT_Long64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(UInt_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsAnaConvPdf.html:11956,extend,extendMode,11956,root/html528/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsAnaConvPdf.html,130,['extend'],['extendMode']
Modifiability,"ion = """"); voidRooAbsOptTestStatistic::seal(const char* notice = """"); const char*RooAbsOptTestStatistic::sealNotice() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsTestStatistic::setData(RooAbsData& data, Bool_t cloneData = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooChi2Var.html:25096,config,config,25096,root/html530/RooChi2Var.html,https://root.cern,https://root.cern/root/html530/RooChi2Var.html,4,['config'],['config']
Modifiability,"ion = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.868652; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.659892 0.620582 0.589558 0.0469541 20523.3 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.604286 0.594787 0.586926 0.0471912 20632.4 0; : 3 | 0.58117 0.603906 0.587335 0.047007 20609.7 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.57382 0.588714 0.592175 0.0469679 20425.3 0; : 5 | 0.569519 0.59535 0.590168 0.0468081 20494.7 1; : 6 | 0.567869 0.590023 0.589038 0.0469022 20541 2; : 7 Minimum Test error found - save the configuration ; : 7 | 0.561012 0.586993 0.590467 0.0471223 20495.3 0; : 8 | 0.559195 0.590522 0.590271 0.0471869 20505.1 1; : 9 | 0.558998 0.588766 0.598449 0.0469787 20193.3 2; : 10 | 0.555383 0.590075 0.591595 0.0470733 20451 3; : 11 Minimum Test error found - save the configuration ; : 11 | 0.555591 0.582449 0.595129 0.047292 20327.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.550993 0.581236 0.592181 0.0472746 20436.5 0; : 13 | 0.548186 0.58351 0.592876 0.0471057 20404.2 1; : 14 | 0.547427 0.581875 0.592374 0.0471592 20425 2; : 15 Minimum Test error found - save the configuration ; : 15 | 0.545473 0.580893 0.592763 0.0477516 20432.6 0; : 16 | 0.544618 0.582994 0.591861 0.0472249 20446.7 1; : 17 | 0.542847 0.586139 0.592563 0.047232 20420",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:24556,config,configuration,24556,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['config'],['configuration']
Modifiability,"ion Fitter.cxx:763; ROOT::Fit::Fitter::Fitbool Fit(const Data &data, const Function &func, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)fit a data set using any generic model function If data set is binned a least square fit is performed...Definition Fitter.h:144; ROOT::Fit::Fitter::Fitbool Fit(const UnBinData &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Fit an un-binned data set using the negative log-likelihood method.Definition Fitter.h:188; ROOT::Fit::Fitter::SetFunctionvoid SetFunction(const IModelFunction &func, bool useGradient=false)Set the fitted function (model function) from a parametric function interface.Definition Fitter.cxx:59; ROOT::Fit::Fitter::CalculateHessErrorsbool CalculateHessErrors()perform an error analysis on the result using the Hessian Errors are obtained from the inverse of the...Definition Fitter.cxx:530; ROOT::Fit::Fitter::fConfigFitConfig fConfigfitter configuration (options and parameter settings)Definition Fitter.h:562; ROOT::Fit::Fitter::FitterFitter()Default constructor.Definition Fitter.h:102; ROOT::Fit::Fitter::fFuncstd::shared_ptr< IModelFunction > fFunc! copy of the fitted function containing on output the fit resultDefinition Fitter.h:566; ROOT::Fit::Fitter::SetFCNbool SetFCN(const ROOT::Math::FitMethodGradFunction &fcn, const double *params=nullptr)Set the objective function (FCN) using a FitMethodGradFunction interface.; ROOT::Fit::Fitter::LeastSquareFitbool LeastSquareFit(const BinData &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Fit a binned data set using a least square fit copying the input data.Definition Fitter.h:172; ROOT::Fit::Fitter::FitFCNbool FitFCN(const ROOT::Math::FitMethodGradFunction &fcn, const double *params=nullptr)Fit using a FitMethodGradFunction interface.; ROOT::Fit::Fitter::Fitbool Fit(const std::shared_ptr< UnBinData > &data, bool extended=false, const ROOT:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:39542,config,configuration,39542,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['config'],['configuration']
Modifiability,"ion RSha256.hxx:106; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; TAttFill.h; TAttLine.h; TAttMarker.h; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; TGraph.h; TNamed.h; TAttFillFill Area Attributes class.Definition TAttFill.h:19; TAttLineLine Attributes class.Definition TAttLine.h:18; TAttMarkerMarker Attributes class.Definition TAttMarker.h:19; TAxisClass to manage histogram axis.Definition TAxis.h:31; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TScatterA TScatter is able to draw four variables scatter plot on a single plot.Definition TScatter.h:32; TScatter::GetXaxisTAxis * GetXaxis() constGet the scatter's x axis.Definition TScatter.cxx:191; TScatter::GetGraphTGraph * GetGraph() constGet the graph holding X and Y positions.Definition TScatter.h:58; TScatter::fMaxSizeInt_t fMaxSize!Current dimension of arrays fX and fYDefinition TScatter.h:35; TScatter::GetMaxMarkerSizeDouble_t GetMaxMarkerSize() constGet the largest marker size used to paint the markers.Definition TScatter.h:56; TScatter::GetYaxisTAxis * GetYaxis() constGet the scatter's y axis.Definition TScatter.cxx:201; TScatter::fMaxMarkerSizeDouble_t fMaxMarkerSizeLargest marker size used to paint the markers.Definition TScatter.h:41; TScatter::Printvoid Print(Option_t *chopt="""") const overridePrint graph and errors values.Definition TScatter.cxx:231; TScatter::Paintvoid Paint(Option_t *chopt="""") overridePaint this scatter plot with its current attributes.Definition TScatter.cxx:221; TScatter::ExecuteEvent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TScatter_8h_source.html:4549,variab,variables,4549,doc/master/TScatter_8h_source.html,https://root.cern,https://root.cern/doc/master/TScatter_8h_source.html,1,['variab'],['variables']
Modifiability,"ion TFile.cxx:4626; TFile::Closevoid Close(Option_t *option="""") overrideClose a file.Definition TFile.cxx:950; TMVA::CrossValidationClass to perform cross validation, splitting the dataloader into folds.Definition CrossValidation.h:124; TMVA::DataLoaderDefinition DataLoader.h:50; TMVA::DataLoader::AddRegressionTreevoid AddRegressionTree(TTree *tree, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)Definition DataLoader.h:103; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddTargetvoid AddTarget(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:512; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Types::kBDT@ kBDTDefinition Types.h:86; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TSystem::AccessPathNamevirtual Bool_t AccessPathName(const char *path, EAccessMode mode=kFileExists)Returns FALSE if one can access a file using the specified access mode.Definition TSystem.cxx:1296; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TMVA::TMVAGuivoid TMVAGui(const char *fName=""TMVA.root"", TString dataset=""""); Factory.h; AuthorKim Albertsson (adapted from code originally by Andreas Hoecker) ; Definition in file TMVACrossValidationRegression.C. tutorialstmvaTMVACrossValidationRegression.C. ROOT maste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:21941,variab,variable,21941,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['variab'],['variable']
Modifiability,"ion TGLayout.h:114; TGFrameElement::fFrameTGFrame * fFrameDefinition TGLayout.h:112; TIterDefinition TCollection.h:235. Definition at line 19 of file TGXYLayout.h. Public Types; enum  ERubberFlag { kLRubberX = (1ULL << ( 0 )); , kLRubberY = (1ULL << ( 1 )); , kLRubberW = (1ULL << ( 2 )); , kLRubberH = (1ULL << ( 3 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  . Public Member Functions;  TGXYLayoutHints (Double_t x, Double_t y, Double_t w, Double_t h, UInt_t rubberFlag=kLRubberX|kLRubberY);  Constructor. ;  ; UInt_t GetFlag () const;  ; Double_t GetH () const;  ; Double_t GetW () const;  ; Double_t GetX () const;  ; Double_t GetY () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save XY layout hints as a C++ statement(s) on output stream. ;  ; void SetFlag (UInt_t flag);  ; void SetH (Double_t h);  ; void SetW (Double_t w);  ; void SetX (Double_t x);  ; void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutHints;  TGLayoutHints (const TGLayoutHints &lh);  Constructor. ;  ;  TGLayoutHints (ULong_t hints=kLHintsNormal, Int_t padleft=0, Int_t padright=0, Int_t padtop=0, Int_t padbo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGXYLayoutHints.html:3652,inherit,inherited,3652,doc/master/classTGXYLayoutHints.html,https://root.cern,https://root.cern/doc/master/classTGXYLayoutHints.html,1,['inherit'],['inherited']
Modifiability,"ion TStopwatch.h:28; TStopwatch::Startvoid Start(Bool_t reset=kTRUE)Start the stopwatch.Definition TStopwatch.cxx:58; TStopwatch::Stopvoid Stop()Stop the stopwatch.Definition TStopwatch.cxx:77; TStringBasic string class.Definition TString.h:139; TString::ToLowervoid ToLower()Change string to lower-case.Definition TString.cxx:1182; TString::Dataconst char * Data() constDefinition TString.h:376; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TString::ContainsBool_t Contains(const char *pat, ECaseCompare cmp=kExact) constDefinition TString.h:632; TViewSee TView3D.Definition TView.h:25; TView::SetPerspectivevirtual void SetPerspective()=0; TView::GetPsivirtual Double_t GetPsi()=0; TView::GetWindowvirtual void GetWindow(Double_t &u0, Double_t &v0, Double_t &du, Double_t &dv) const =0; TView::GetLongitudevirtual Double_t GetLongitude()=0; TView::WCtoNDCvirtual void WCtoNDC(const Float_t *pw, Float_t *pn)=0; TView::GetDviewvirtual Double_t GetDview() const =0; TView::CreateViewstatic TView * CreateView(Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr)Create a concrete default 3-d view via the plug-in manager.Definition TView.cxx:27; TView::SetAutoRangevirtual void SetAutoRange(Bool_t autorange=kTRUE)=0; TView::GetDprojvirtual Double_t GetDproj() const =0; TView::IsPerspectivevirtual Bool_t IsPerspective() const =0; TView::SetViewChangedvirtual void SetViewChanged(Bool_t flag=kTRUE)=0; TView::GetRangevirtual void GetRange(Float_t *min, Float_t *max)=0; TView::GetLatitudevirtual Double_t GetLatitude()=0; TView::MoveFocusvirtual void MoveFocus(Double_t *center, Double_t dx, Double_t dy, Double_t dz, Int_t nsteps=10, Double_t dlong=0, Double_t dlat=0, Double_t dpsi=0)=0; TView::SetViewvirtual void SetView(Double_t longitude, Double_t latitude, Double_t psi, Int_t &irep)=0; TVirtualGeoPainterAbstract class for geometry ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8cxx_source.html:115919,plug-in,plug-in,115919,doc/master/TGeoPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8cxx_source.html,1,['plug-in'],['plug-in']
Modifiability,"ion Trees ... patience please; : Elapsed time for training with 4999 events: 1.31 sec ; : Dataset[datasetcvreg] : Create results for training; : Dataset[datasetcvreg] : Evaluation of BDTG_fold1 on training sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 4999 events: 0.21 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: datasetcvreg/weights/TMVACrossValidationRegression_BDTG_fold1.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDTG_fold1 for Regression performance; : ; : Dataset[datasetcvreg] : Create results for testing; : Dataset[datasetcvreg] : Evaluation of BDTG_fold1 on testing sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 5000 events: 0.214 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; <HEADER> Factory : Evaluate all methods; : Evaluate regression method: BDTG_fold1; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 5000 events: 0.213 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 4999 events: 0.21 sec ; : ; : Evaluation results ranked by smallest RMS on test sample:; : (""Bias"" quotes the mean deviation of the regression from true target.; : ""MutInf"" is the ""Mutual Information"" between regression and target.; : Indicated by ""_T"" are the corresponding ""truncated"" quantities ob-; : tained when removing events deviating more than 2sigma from average.); : --------------------------------------------------------------------------------------------------; : --------------------------------------------------------------------------------------------------; : datasetcvreg BDTG_fold1 : 0.133 0.0851 2.22 1.67 | 3.123 3.198; : --------------------------------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:4506,variab,variable,4506,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['variab'],['variable']
Modifiability,"ion about the Z axis by the angle of rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the new Y' axis, followed by a third rotation of an angle psi (roll) about the final X'' axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineWrapper class for std::random generator to be included in ROOT ;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) of two vectors giving a matrix ;  CTRandomEngine;  CTransform3DBasic 3D Transformation class describing a rotation and then a translation The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data ;  CTranslation3DClass describing a 3 dimensional translation ;  CTransposeOpClass for Transpose Operations ;  CTranspPolicyMatrix transpose policy ;  CTranspPolicy< T, D1, D2, MatRepSym< T, D1 > >;  CUnaryOpUnaryOperation class A class representing unary operators in the parse tree ;  CVavilovBase class describing a Vavilov distribution ;  CVavilovAccurateClass describing a Vavilov distribution ;  CVavilovAccurateCdfClass describing the Vavilov cdf ;  CVavilovAccuratePdfClass describing the Vavilov pdf ;  CVavilovAccu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:45077,variab,variables,45077,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['variab'],['variables']
Modifiability,"ion at line 107 of file DataSetFactory.cxx. ◆ DataSetFactory(). TMVA::DataSetFactory::DataSetFactory ; (; ). constructor ; Definition at line 93 of file DataSetFactory.cxx. Member Function Documentation. ◆ BuildDynamicDataSet(). TMVA::DataSet * TMVA::DataSetFactory::BuildDynamicDataSet ; (; TMVA::DataSetInfo & ; dsi). protected . Definition at line 149 of file DataSetFactory.cxx. ◆ BuildEventVector(). void TMVA::DataSetFactory::BuildEventVector ; (; TMVA::DataSetInfo & ; dsi, . TMVA::DataInputHandler & ; dataInput, . EventVectorOfClassesOfTreeType & ; eventsmap, . EvtStatsPerClass & ; eventCounts . ). protected . build empty event vectors distributes events between kTraining/kTesting/kMaxTreeType ; Definition at line 728 of file DataSetFactory.cxx. ◆ BuildInitialDataSet(). TMVA::DataSet * TMVA::DataSetFactory::BuildInitialDataSet ; (; DataSetInfo & ; dsi, . TMVA::DataInputHandler & ; dataInput . ). protected . if no entries, than create a DataSet with one Event which uses dynamic variables (pointers to variables) ; Definition at line 202 of file DataSetFactory.cxx. ◆ CalcCorrelationMatrix(). TMatrixD * TMVA::DataSetFactory::CalcCorrelationMatrix ; (; DataSet * ; ds, . const UInt_t ; classNumber . ). protected . computes correlation matrix for variables ""theVars"" in tree; ""theType"" defines the required event ""type"" (""type"" variable must be present in tree) ; Definition at line 548 of file DataSetFactory.cxx. ◆ CalcCovarianceMatrix(). TMatrixD * TMVA::DataSetFactory::CalcCovarianceMatrix ; (; DataSet * ; ds, . const UInt_t ; classNumber . ). protected . compute covariance matrix ; Definition at line 579 of file DataSetFactory.cxx. ◆ CalcMinMax(). void TMVA::DataSetFactory::CalcMinMax ; (; DataSet * ; ds, . TMVA::DataSetInfo & ; dsi . ). protected . compute covariance matrix ; Definition at line 479 of file DataSetFactory.cxx. ◆ ChangeToNewTree(). void TMVA::DataSetFactory::ChangeToNewTree ; (; TreeInfo & ; tinfo, . const DataSetInfo & ; dsi . ). protected . While the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html:16425,variab,variables,16425,doc/master/classTMVA_1_1DataSetFactory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html,2,['variab'],['variables']
Modifiability,ion at line 171 of file MethodLikelihood.cxx. ◆ ~MethodLikelihood(). TMVA::MethodLikelihood::~MethodLikelihood ; (; void ; ). virtual . destructor ; Definition at line 198 of file MethodLikelihood.cxx. Member Function Documentation. ◆ AddWeightsXMLTo(). void TMVA::MethodLikelihood::AddWeightsXMLTo ; (; void * ; parent); const. virtual . write weights to XML ; Implements TMVA::MethodBase.; Definition at line 583 of file MethodLikelihood.cxx. ◆ Class(). static TClass * TMVA::MethodLikelihood::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::MethodLikelihood::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::MethodLikelihood::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 154 of file MethodLikelihood.h. ◆ CreateRanking(). const TMVA::Ranking * TMVA::MethodLikelihood::CreateRanking ; (; ). virtual . computes ranking of input variables ; Implements TMVA::MethodBase.; Definition at line 607 of file MethodLikelihood.cxx. ◆ DeclareCompatibilityOptions(). void TMVA::MethodLikelihood::DeclareCompatibilityOptions ; (; ). protectedvirtual . options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .xml weight file at hand ; Reimplemented from TMVA::MethodBase.; Definition at line 274 of file MethodLikelihood.cxx. ◆ DeclareOptions(). void TMVA::MethodLikelihood::DeclareOptions ; (; ). privatevirtual . define the options (their key words) that can be set in the option string ; TransformOutput <bool> transform (often strongly peaked) likelihood output through sigmoid inversion ; Implements TMVA::MethodBase.; Definition at line 243 of file MethodLikelihood.cxx. ◆ DeclFileName(). static const char * TMVA::MethodLikelihood::DeclFileName ; (; ). inlinestatic . ReturnsName of the file cont,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:34164,variab,variables,34164,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,1,['variab'],['variables']
Modifiability,"ion at line 324 of file TEveLine.cxx. ◆ ~TEveLineProjected(). TEveLineProjected::~TEveLineProjected ; (; ). inlineoverride . Definition at line 95 of file TEveLine.h. Member Function Documentation. ◆ Class(). static TClass * TEveLineProjected::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveLineProjected::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveLineProjected::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 101 of file TEveLine.h. ◆ DeclFileName(). static const char * TEveLineProjected::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 101 of file TEveLine.h. ◆ GetProjectedAsElement(). TEveElement * TEveLineProjected::GetProjectedAsElement ; (; ). inlineoverridevirtual . Returns this projected dynamic-casted to TEveElement. ; This is needed as class TEveProjected is used as secondary inheritance. ; Reimplemented from TEveProjected.; Definition at line 99 of file TEveLine.h. ◆ IsA(). TClass * TEveLineProjected::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TEveLine.; Definition at line 101 of file TEveLine.h. ◆ operator=(). TEveLineProjected & TEveLineProjected::operator= ; (; const TEveLineProjected & ; ). private . ◆ SetDepthLocal(). void TEveLineProjected::SetDepthLocal ; (; Float_t ; d). overrideprotectedvirtual . Set depth (z-coordinate) of the projected points. ; Reimplemented from TEveProjected.; Definition at line 344 of file TEveLine.cxx. ◆ SetProjection(). void TEveLineProjected::SetProjection ; (; TEveProjectionManager * ; mng, . TEveProjectable * ; model . ). overridevirtual . Set projection manager and projection model. ; Virtual from TEveProjected. ; Reimplemented from TEveProjected.; Definition at line 334 of file TEveLine.cxx. ◆ Streamer(). void TEveLineProjected::Stre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:53375,inherit,inheritance,53375,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,1,['inherit'],['inheritance']
Modifiability,"ion at line 421 of file RuleFit.cxx. ◆ FillCorr(). void TMVA::RuleFit::FillCorr ; (; TH2F * ; h2, . const TMVA::Rule * ; rule, . Int_t ; v1, . Int_t ; v2 . ). fill rule correlation between vx and vy, weighted with either the importance or the coefficient ; Definition at line 597 of file RuleFit.cxx. ◆ FillCut(). void TMVA::RuleFit::FillCut ; (; TH2F * ; h2, . const TMVA::Rule * ; rule, . Int_t ; vind . ). Fill cut. ; Definition at line 522 of file RuleFit.cxx. ◆ FillLin(). void TMVA::RuleFit::FillLin ; (; TH2F * ; h2, . Int_t ; vind . ). fill lin ; Definition at line 573 of file RuleFit.cxx. ◆ FillVisHistCorr(). void TMVA::RuleFit::FillVisHistCorr ; (; const Rule * ; rule, . std::vector< TH2F * > & ; hlist . ). help routine to MakeVisHists() - fills for all correlation plots ; Definition at line 704 of file RuleFit.cxx. ◆ FillVisHistCut(). void TMVA::RuleFit::FillVisHistCut ; (; const Rule * ; rule, . std::vector< TH2F * > & ; hlist . ). help routine to MakeVisHists() - fills for all variables ; Definition at line 673 of file RuleFit.cxx. ◆ FitCoefficients(). void TMVA::RuleFit::FitCoefficients ; (; ). Fit the coefficients for the rule ensemble. ; Definition at line 398 of file RuleFit.cxx. ◆ ForestStatistics(). void TMVA::RuleFit::ForestStatistics ; (; ). summary of statistics of all trees . end-nodes: average and spread . Definition at line 375 of file RuleFit.cxx. ◆ GetCorrVars(). Bool_t TMVA::RuleFit::GetCorrVars ; (; TString & ; title, . TString & ; var1, . TString & ; var2 . ). get first and second variables from title ; Definition at line 743 of file RuleFit.cxx. ◆ GetForest(). const std::vector< const TMVA::DecisionTree * > & TMVA::RuleFit::GetForest ; (; ); const. inline . Definition at line 144 of file RuleFit.h. ◆ GetMethodBase(). const MethodBase * TMVA::RuleFit::GetMethodBase ; (; ); const. inline . Definition at line 150 of file RuleFit.h. ◆ GetMethodRuleFit(). const MethodRuleFit * TMVA::RuleFit::GetMethodRuleFit ; (; ); const. inline . Definition at l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFit.html:8915,variab,variables,8915,doc/master/classTMVA_1_1RuleFit.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFit.html,1,['variab'],['variables']
Modifiability,"ion by StoreData() method.; 1.2 The data can be added:; - simply point by point - AddPoint() method; - an array of points at once:; If the data is already stored in some arrays, this data; can be assigned to the linear fitter without physically; coping bytes, thanks to the Use() method of; TVector and TMatrix classes - AssignData() method. 2.Setting the formula; 2.1 The linear formula syntax:; -Additive parts are separated by 2 plus signes ""++""; --for example ""1 ++ x"" - for fitting a straight line; -All standard functions, undrestood by TFormula, can be used; as additive parts; --TMath functions can be used too; -Functions, used as additive parts, shouldn't have any parameters,; even if those parameters are set.; --for example, if normalizing a sum of a gaus(0, 1) and a; gaus(0, 2), don't use the built-in ""gaus"" of TFormula,; because it has parameters, take TMath::Gaus(x, 0, 1) instead.; -Polynomials can be used like ""pol3"", ..""polN""; -If fitting a more than 3-dimensional formula, variables should; be numbered as follows:; -- x[0], x[1], x[2]... For example, to fit ""1 ++ x[0] ++ x[1] ++ x[2] ++ x[3]*x[3]""; 2.2 Setting the formula:; 2.2.1 If fitting a 1-2-3-dimensional formula, one can create a; TF123 based on a linear expression and pass this function; to the fitter:; --Example:; TLinearFitter *lf = new TLinearFitter();; TF2 *f2 = new TF2(""f2"", ""x ++ y ++ x*x*y*y"", -2, 2, -2, 2);; lf->SetFormula(f2);; --The results of the fit are then stored in the function,; just like when the TH1::Fit or TGraph::Fit is used; --A linear function of this kind is by no means different; from any other function, it can be drawn, evaluated, etc. --For multidimensional fitting, TFormulas of the form:; x[0]++...++x[n] can be used; 2.2.2 There is no need to create the function if you don't want to,; the formula can be set by expression:; --Example:; // 2 is the number of dimensions; TLinearFitter *lf = new TLinearFitter(2);; lf->SetFormula(""x ++ y ++ x*x*y*y"");. 2.2.3 The fastest functions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLinearFitter.html:2607,variab,variables,2607,root/html528/TLinearFitter.html,https://root.cern,https://root.cern/root/html528/TLinearFitter.html,10,['variab'],['variables']
Modifiability,"ion by calling add() for each element in the source collection. ; Definition at line 151 of file RooAbsCollection.h. ◆ add() [5/5]. template<class RooCollection_t > . template<typename Iterator_t , typename value_type = typename std::remove_pointer<typename std::iterator_traits<Iterator_t>::value_type>, typename = std::enable_if<std::is_convertible<const value_type*, const RooAbsArg*>::value>> . bool RooAbsCollection::add ; (; Iterator_t ; beginIt, . Iterator_t ; endIt, . bool ; silent = false . ). inline . Definition at line 140 of file RooAbsCollection.h. ◆ addClone() [1/3]. template<class RooCollection_t > . RooAbsArg * RooAbsCollection::addClone ; (; const RooAbsArg & ; var, . bool ; silent = false . ). Add a clone of the specified argument to list. ; Returns a pointer to the clone if successful, or else zero if a variable of the same name is already in the list or the list does not own its variables (in this case, try add() instead.) Calling addClone() on an empty list forces it to take ownership of all its subsequent variables. ; Definition at line 131 of file RooAbsCollection.cxx. ◆ addClone() [2/3]. template<class RooCollection_t > . RooAbsArg * RooCollectionProxy< RooCollection_t >::addClone ; (; const RooAbsArg & ; var, . bool ; silent = false . ). override . Overloaded RooCollection_t::addClone() method insert clone of object into owning set and registers cloned object as server to owner with default value and shape dirty flag propagation. ; Definition at line 221 of file RooCollectionProxy.h. ◆ addClone() [3/3]. template<class RooCollection_t > . void RooAbsCollection::addClone ; (; const RooAbsCollection & ; list, . bool ; silent = false . ). Add a collection of arguments to this collection by calling addOwned() for each element in the source collection. ; Definition at line 182 of file RooAbsCollection.cxx. ◆ addOwned() [1/5]. template<class RooCollection_t > . bool RooAbsCollection::addOwned ; (; const RooAbsCollection & ; list, . bool ; silent = fals",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCollectionProxy.html:10794,variab,variables,10794,doc/master/classRooCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classRooCollectionProxy.html,1,['variab'],['variables']
Modifiability,"ion calls to reach the minimum. { return 0; }. unsigned int NIterations() const; number of iterations to reach the minimum. { return NCalls(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total; (re-implement if minimizer supports bounded parameters). { return NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return NULL; }. double CovMatrix(unsigned int ivar, unsigned int jvar) const; return covariance matrices element for variables ivar,jvar; if the variable is fixed the return value is zero; The ordering of the variables is the same as in the parameter and errors vectors. bool GetCovMatrix(double* covMat) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* hMat) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const; return status of covariance matrix; using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; Minimizer who implements covariance matrix calculation will re-implement the method. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:8947,variab,variable,8947,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,6,['variab'],['variable']
Modifiability,"ion classDefinition TF1.h:233; f1TF1 * f1Definition legend1.C:11; ROOT::v5::TFastFun::Pow2Double_t Pow2(Double_t x)Definition TFormulaPrimitive_v5.cxx:255. TFormulaPrimitive is used to get direct acces to the function pointers; GenFunc - pointers to the static function; TFunc - pointers to the data member functions. The following sufixes are currently used, to describe function arguments:. G - generic layout - pointer to double (arguments), pointer to double (parameters); 10 - double; 110 - double, double; 1110 - double, double, double . Definition at line 37 of file TFormulaPrimitive.h. Public Types; typedef Double_t(* GenFunc0) ();  ; typedef Double_t(* GenFunc10) (Double_t);  ; typedef Double_t(* GenFunc110) (Double_t, Double_t);  ; typedef Double_t(* GenFunc1110) (Double_t, Double_t, Double_t);  ; typedef Double_t(* GenFuncG) (const Double_t *, const Double_t *);  ; typedef Double_t(TObject::* TFunc0) () const;  ; typedef Double_t(TObject::* TFunc10) (Double_t) const;  ; typedef Double_t(TObject::* TFunc110) (Double_t, Double_t) const;  ; typedef Double_t(TObject::* TFunc1110) (Double_t, Double_t, Double_t) const;  ; typedef Double_t(TObject::* TFuncG) (const Double_t *, const Double_t *) const;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFormulaPrimitive ();  Default constructor. ;  ;  TFormulaPrimitive (const char *name, const char *formula, GenFun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormulaPrimitive.html:2421,inherit,inherited,2421,doc/master/classROOT_1_1v5_1_1TFormulaPrimitive.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormulaPrimitive.html,1,['inherit'],['inherited']
Modifiability,"ion derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void Begin1D (TTree *t);  Initialization for 1D Histogram. ;  ; virtual void Begin2D (TTree *t);  Initialization for 2D histogram. ;  ; virtual void Begin3D (TTree *t);  Initialization for 3D histogram. ;  ; void DefVar () override;  Define variables according to arguments. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the histgram with given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawHist.html:11841,variab,variables,11841,doc/master/classTProofDrawHist.html,https://root.cern,https://root.cern/doc/master/classTProofDrawHist.html,1,['variab'],['variables']
Modifiability,"ion documentation; ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; TODO --> adapt to variable,target,spectator selection; default transformation output; --> only indicate that transformation occurred. void UpdateNorm(Int_t ivar, Double_t x); TODO --> adapt to variable,target,spectator selection; update min and max of a given variable (target) and a given transformation method. void AttachXMLTo(void* parent); create XML description the transformation (write out info of selected variables). void ReadFromXML(void* trfnode); Read the input variables from the XML node. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); getinput and setoutput equivalent. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ). const Event* Transform(const TMVA::Event *const , Int_t cls) const. const Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. void SetEnabled(Bool_t e); accessors. { fEnabled = e; }. void SetNormalise(Bool_t n); { fNormalise = n; }. Bool_t IsEnabled() const; { return fEnable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableTransformBase.html:9920,adapt,adapt,9920,root/html534/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableTransformBase.html,4,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,"ion flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_t_startFromMinAlways start minimization for global minimum?; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProfileLL(); Default constructor; Should only be used by proof. RooProfileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. Double_t evaluate() const; Evaluate profile likelihood by minimizing likelihoo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProfileLL.html:34668,Inherit,Inheritance,34668,root/html532/RooProfileLL.html,https://root.cern,https://root.cern/root/html532/RooProfileLL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_t_startFromMinAlways start minimization for global minimum?; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProfileLL(); Default constructor; Should only be used by proof. RooProfileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. void initializeMinimizer() const. Double_t evaluate() const; Evaluate profile ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooProfileLL.html:36880,Inherit,Inheritance,36880,root/html534/RooProfileLL.html,https://root.cern,https://root.cern/root/html534/RooProfileLL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooRealProxy_slopeSlope of transformation; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; RooRealProxy_varInput observable; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLinearVar(const char* name, const char* title, RooAbsRealLValue& variable, const RooAbsReal& slope, const RooAbsReal& offset, const char* unit = """"); Constructor with RooAbsRealLValue variable and RooAbsReal slope and offset. RooLinearVar(const RooLinearVar& other, const char* name = 0); Copy constructor. ~RooLinearVar(); Destructor. Double_t evaluate() const; Calculate current value of this object. void setVal(Double_t value); Assign given value to linear transformation: sets input variable to (value-offset)/slope; If slope is zerom an error message is printed and no assignment is made. Bool_t isJacobianOK(const RooArgSet& depList) const; Returns true if Jacobian term associated with current; expression tree is indeed constant. Double_t jacobian() const; Return value of Jacobian associated with the transformation. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream. void wri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooLinearVar.html:42069,Inherit,Inheritance,42069,root/html602/RooLinearVar.html,https://root.cern,https://root.cern/root/html602/RooLinearVar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion for RooLinkedList; . Function Members (Methods); public:. RooLinkedListIter(); RooLinkedListIter(const RooLinkedListIter& other); RooLinkedListIter(const RooLinkedList* list, Bool_t forward); virtual~RooLinkedListIter(); static TClass*Class(); virtual const TCollection*GetCollection() const; virtual Option_t*TIterator::GetOption() const; virtual TClass*IsA() const; virtual TObject*Next(); TObject*NextNV(); virtual booloperator!=(const TIterator& aIter) const; booloperator!=(const RooLinkedListIter& aIter) const; TObject*TIterator::operator()(); virtual TObject*operator*() const; virtual TIterator&operator=(const TIterator& other); virtual voidReset(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. const RooLinkedListElem*_cptr! Current link element; Bool_t_forwardIterator direction; const RooLinkedList*_list! Collection iterated over; const RooLinkedListElem*_ptr! Next link element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLinkedListIter(); coverity[UNINIT_CTOR]. RooLinkedListIter(const RooLinkedList* list, Bool_t forward); Constructor from list with direction. RooLinkedListIter(const RooLinkedListIter& other); Copy constructor. virtual ~RooLinkedListIter(); { ; }. TIterator& operator=(const TIterator& other). const TCollection * GetCollection() const; Dummy. TObject * Next(); Return next element in collection. TObject * NextNV(); Return next element in collection. void Reset(); Return iterator to first element in collection. bool operator!=(const TIterator& aIter) const. bool operator!=(const RooLinkedListIter& aIter) const. TObject * operator*() const; Return element iterator points to. » Last changed: Thu Nov 3 20:08:32 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLinkedListIter.html:1378,Inherit,Inheritance,1378,root/html532/RooLinkedListIter.html,https://root.cern,https://root.cern/root/html532/RooLinkedListIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion for a TMultiGraph. ;  ; Int_t Partition (Int_t nmini, Int_t *indsubdat);  divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ;  ; void RDraw (Int_t *subdat, Int_t *indsubdat);  Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ;  . Private Attributes; TVectorD fAtb;  ; TVectorD fAtbTemp;  ; TVectorD fAtbTemp2;  temporary vector, used for num.stability ;  ; TVectorD fAtbTemp3;  ; Double_t fChisquare;  ; TMatrixDSym fDesign;  ; TMatrixDSym fDesignTemp;  ; TMatrixDSym fDesignTemp2;  temporary matrix, used for num.stability ;  ; TMatrixDSym fDesignTemp3;  ; TVectorD fE;  ; TBits fFitsample;  ; Bool_t * fFixedParams;  ; char * fFormula;  ; Int_t fFormulaSize;  ; TObjArray fFunctions;  map of basis functions and formula ;  ; Int_t fH;  ; TFormula * fInputFunction;  ; Bool_t fIsSet;  ; Int_t fNdim;  ; Int_t fNfixed;  ; Int_t fNfunctions;  ; Int_t fNpoints;  temporary ;  ; TVectorD fParams;  ; TMatrixDSym fParCovar;  ; TVectorD fParSign;  ; Bool_t fRobust;  ; Int_t fSpecial;  ; Bool_t fStoreData;  ; TVectorD fTValues;  ; Double_t fVal [1000];  ; TMatrixD fX;  temporary variable used for num.stability ;  ; TVectorD fY;  ; Double_t fY2;  ; Double_t fY2Temp;  . Static Private Attributes; static std::map< TString, TFormula * > fgFormulaMap;  . Additional Inherited Members;  Public Types inherited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearFitter.html:28802,variab,variable,28802,doc/master/classTLinearFitter.html,https://root.cern,https://root.cern/doc/master/classTLinearFitter.html,1,['variab'],['variable']
Modifiability,"ion for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CompactFloatString (char *buf, unsigned len);  method compress float string, excluding exp and/or move float point ;  ; static const char * ConvertDouble (Double_t v, char *buf, unsigned len, Bool_t not_optimize=kFALSE);  convert float to string with configured format ;  ; static const char * ConvertFloat (Float_t v, char *buf, unsigned len, Bool_t not_optimize=kFALSE);  convert float to string with configured format ;  ; static const char * DeclFileName ();  ; static const char * GetDoubleFormat ();  return current printf format for double members, default ""%.14e"" ;  ; static const char * GetFloatFormat ();  return current printf format for float members, default ""%e"" ;  ; static void SetDoubleFormat (const char *fmt=""%.14e"");  set printf format for double members, default ""%.14e"" use it after SetFloatFormat, which also overwrites format for doubles ;  ; static void SetFloatFormat (const char *fmt=""%e"");  set printf format for float/double members, default ""%e"" to change format only for doubles, use SetDoubleFormat ;  ;  Static Public Member Functions inherited from TBufferIO; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferText.html:26642,config,configured,26642,doc/master/classTBufferText.html,https://root.cern,https://root.cern/doc/master/classTBufferText.html,2,['config'],['configured']
Modifiability,"ion formula f1*(1-f2)*(1-f3) etc...; RooRefCountList RooLinkedList with reference counting; RooResolutionModel Abstract Resolution Model; RooScaledFunc Function binding applying scaling to another function binding; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:42837,config,configuration,42837,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,4,['config'],['configuration']
Modifiability,"ion formula f1*(1-f2)*(1-f3) etc...; RooRefCountList RooLinkedList with reference counting; RooResolutionModel Abstract Resolution Model; RooScaledFunc Function binding applying scaling to another function binding; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:41569,config,configuration,41569,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,2,['config'],['configuration']
Modifiability,"ion formula f1*(1-f2)*(1-f3) etc...; RooRefCountList RooLinkedList with reference counting; RooResolutionModel Abstract Resolution Model; RooScaledFunc Function binding applying scaling to another function binding; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::Deb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:41048,config,configuration,41048,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,2,['config'],['configuration']
Modifiability,"ion histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Int_tfAverageEvtPerBinaverage events per bin; used to calculate fNbins; Int_t*fAverageEvtPerBinVarBaverage events per bin; used to calculate fNbins; Int_t*fAverageEvtPerBinVarSaverage events per bin; used to calculate fNbins; TStringfBorderMethodStringthe method to take care about ""border"" effects (string); TMVA::PDF*fDefaultPDFLikpdf that contains default definitions; Int_tfDropVariablefor ranking test; Double_tfEpsilonminimum number of likelihood (to avoid zero); vector<TH1*>*fHistBgdbackground PDFs (histograms); vector<TH1*>*fHistBgd_smoothbackground PDFs (smoothed histograms); vector<TH1*>*fHistSigsignal PDFs (histograms); vector<TH1*>*fHistSig_smoothsignal PDFs (smoothed histograms); TString*fInterpolateStringwhich interpolation method used for reference histograms (individual for each variable); Float_tfKDEfineFactorfine tuning factor for Adaptive KDE; TStringfKDEiterStringNumber of iterations (string); TStringfKDEtypeStringKernel type to use for KDE (string); Int_tfNsmoothnumber of smooth passes; Int_t*fNsmoothVarBnumber of smooth passes; Int_t*fNsmoothVarSnumber of smooth passes; vector<PDF*>*fPDFBgdlist of PDFs (background); vector<PDF*>*fPDFSiglist of PDFs (signal) ; Bool_tfTransformLikelihoodOutputlikelihood output is sigmoid-transformed. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodLikelihood(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodLikelihood(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodLikelihood.html:19196,variab,variable,19196,root/html530/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodLikelihood.html,7,"['Adapt', 'variab']","['Adaptive', 'variable']"
Modifiability,"ion if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction2Binding_double_double_int_.html:33039,config,configuration,33039,root/html530/RooCFunction2Binding_double_double_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction2Binding_double_double_int_.html,1,['config'],['configuration']
Modifiability,"ion if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction2Binding_double_int_double_.html:33039,config,configuration,33039,root/html530/RooCFunction2Binding_double_int_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction2Binding_double_int_double_.html,1,['config'],['configuration']
Modifiability,"ion in all parents; cells up to the root cell. It takes time but saves memory. void CalcVolume(void); Calculates volume of the cell using size params which are calculated. UInt_t GetDepth(); Get depth of cell in binary tree, where the root cell has depth; 1. UInt_t GetTreeDepth(UInt_t depth = 0); Get depth of cell tree, starting at this cell. void Print(Option_t* option) const; Printout of the cell geometry parameters for the debug purpose. Double_t GetXdiv() const; Geometry. { return fXdiv;}. Int_t GetBest() const; { return fBest;}. void SetBest(Int_t Best); { fBest =Best;}. void SetXdiv(Double_t Xdiv); { fXdiv =Xdiv;}. Double_t GetVolume() const; { return fVolume;}. Double_t GetIntg() const; { return fIntegral;}. Double_t GetDriv() const; { return fDrive;}. void SetIntg(Double_t Intg); { fIntegral=Intg;}. void SetDriv(Double_t Driv); linked tree organization. { fDrive =Driv;}. Int_t GetStat() const; { return fStatus;}. void SetStat(Int_t Stat); { fStatus=Stat;}. PDEFoamCell* GetPare() const; { return (PDEFoamCell*) fParent.GetObject(); }. PDEFoamCell* GetDau0() const; { return (PDEFoamCell*) fDaught0.GetObject(); }. PDEFoamCell* GetDau1() const; { return (PDEFoamCell*) fDaught1.GetObject(); }. void SetDau0(TMVA::PDEFoamCell* Daug); { fDaught0 = Daug;}. void SetDau1(TMVA::PDEFoamCell* Daug); { fDaught1 = Daug;}. void SetPare(TMVA::PDEFoamCell* Pare); { fParent = Pare;}. void SetSerial(Int_t Serial); { fSerial=Serial;}. Int_t GetSerial() const; { return fSerial;}. void SetElement(TObject* fobj); getter and setter for user variable. { fElement = fobj; }. TObject* GetElement() const. { return fElement; }. » Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008: *; » Last changed: root/tmva $Id: PDEFoamCell.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDEFoamCell.html:8855,variab,variable,8855,root/html532/TMVA__PDEFoamCell.html,https://root.cern,https://root.cern/root/html532/TMVA__PDEFoamCell.html,2,['variab'],['variable']
Modifiability,"ion in the function binding. RooImproperIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor with function binding and configuration object. The integration range is taken; from the definition in the function binding. RooImproperIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Constructor with function binding, definition of integration range and configuration object. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Return clone of integrator with given function and configuration. Needed by RooNumIntFactory. void initialize(const RooAbsFunc* function = 0); Initialize the integrator, construct and initialize subintegrators. ~RooImproperIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check if the limits are valid. For this integrator all limit configurations; are valid, but if the limits change between two calculate() calls it; may be necessary to reconfigure (e.g. if an open ended range becomes; a closed range. Double_t integral(const Double_t* yvec = 0); Calculate the integral at the given parameter values of the function binding. Bool_t setUseIntegrandLimits(Bool_t flag); {_useIntegrandLimits = flag ; return kTRUE ; }. Bool_t canIntegrate1D() const; { return kTRUE ; }. Bool_t canIntegrate2D() const; { return kFALSE ; }. Bool_t canIntegrateND() const; { return kFALSE ; }. Bool_t canIntegrateOpenEnded() const; { return kTRUE ; }. LimitsCase limitsCase() const. » Last changed: Tue Mar 10 17:17:22 2015 » Last generated: 2015-03-10 17:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooImproperIntegrator1D.html:8917,config,configurations,8917,root/html534/RooImproperIntegrator1D.html,https://root.cern,https://root.cern/root/html534/RooImproperIntegrator1D.html,2,['config'],['configurations']
Modifiability,"ion interface (GL coord - origin bottom left). void Reset(). Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2). Bool_t Truck(Double_t xDelta, Double_t yDelta). void Apply(const TGLBoundingBox& sceneBox, const TGLRect* pickRect = 0) const. Bool_t GetExternalCenter(); { return fExternalCenter; }. Double_t* GetCenterVec(); { return fCenter->Arr(); }. void SetFixDefCenter(Bool_t x); { fFixDefCenter = x; }. void SetFixDefCenterVec(Double_t x, Double_t y, Double_t z); { fFDCenter.Set(x, y, z); }. Double_t* GetFixDefCenterVec(); { return fFDCenter.Arr(); }. Double_t GetNearClip() const; { return fNearClip; }. Double_t GetFarClip() const; { return fFarClip; }. const TGLMatrix& GetCamBase() const; { return fCamBase; }. const TGLMatrix& GetCamTrans() const; If you manipulate camera ... also call IncTimeStamp() before redraw. { return fCamTrans; }. TGLMatrix& RefCamBase(); { return fCamBase; }. TGLMatrix& RefCamTrans(); { return fCamTrans; }. TGLMatrix& RefLastNoPickProjM() const; { return fLastNoPickProjM; }. void WindowToViewport(Int_t& , Int_t& y) const; Window to GL viewport conversion - invert Y. { y = fViewport.Height() - y; }. void WindowToViewport(TPoint& point) const; { point.SetY(fViewport.Height() - point.GetY()); }. void WindowToViewport(TGLRect& rect) const; { rect.Y() = fViewport.Height() - rect.Y(); }. void WindowToViewport(TGLVertex3& vertex) const; { vertex.Y() = fViewport.Height() - vertex.Y(); }. Float_t GetVAxisMinAngle(); {return fVAxisMinAngle;}. void SetVAxisMinAngle(Float_t x); {fVAxisMinAngle = x;}. void Configure(Double_t zoom, Double_t dolly, Double_t[3] center, Double_t hRotate, Double_t vRotate); Cameras expanded-frustum interest box. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLCamera.html:25658,Config,Configure,25658,root/html604/TGLCamera.html,https://root.cern,https://root.cern/root/html604/TGLCamera.html,1,['Config'],['Configure']
Modifiability,"ion interface (GL coord - origin bottom left). void Reset(). Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2). Bool_t Truck(Double_t xDelta, Double_t yDelta). void Apply(const TGLBoundingBox& sceneBox, const TGLRect* pickRect = 0) const. Bool_t GetExternalCenter(); { return fExternalCenter; }. Double_t* GetCenterVec(); { return fCenter->Arr(); }. void SetFixDefCenter(Bool_t x); { fFixDefCenter = x; }. void SetFixDefCenterVec(Double_t x, Double_t y, Double_t z); { fFDCenter.Set(x, y, z); }. Double_t* GetFixDefCenterVec(); { return fFDCenter.Arr(); }. Double_t GetNearClip() const; { return fNearClip; }. Double_t GetFarClip() const; { return fFarClip; }. const TGLMatrix& GetCamBase() const; { return fCamBase; }. const TGLMatrix& GetCamTrans() const; If you manipulate camera ... also call IncTimeStamp() before redraw. { return fCamTrans; }. TGLMatrix& RefCamBase(); { return fCamBase; }. TGLMatrix& RefCamTrans(); { return fCamTrans; }. TGLMatrix& RefLastNoPickProjM() const; { return fLastNoPickProjM; }. void WindowToViewport(Int_t& , Int_t& y) const; Window to GL viewport conversion - invert Y. { y = fViewport.Height() - y; }. void WindowToViewport(TPoint& point) const; { point.SetY(fViewport.Height() - point.GetY()); }. void WindowToViewport(TGLRect& rect) const; { rect.Y() = fViewport.Height() - rect.Y(); }. void WindowToViewport(TGLVertex3& vertex) const; { vertex.Y() = fViewport.Height() - vertex.Y(); }. Float_t GetVAxisMinAngle(); {return fVAxisMinAngle;}. void SetVAxisMinAngle(Float_t x); {fVAxisMinAngle = x;}. void Configure(Double_t zoom, Double_t dolly, Double_t[3] center, Double_t hRotate, Double_t vRotate); Cameras expanded-frustum interest box. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:52; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLCamera.html:25658,Config,Configure,25658,root/html602/TGLCamera.html,https://root.cern,https://root.cern/root/html602/TGLCamera.html,1,['Config'],['Configure']
Modifiability,"ion is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void closeProof (Option_t *option=""s"");  ""Option_t *option"" takes the parameters forwarded to gProof->Close(option). ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  RooStudyManager (const RooStudyManager &);  ; void aggregateData (TList *olist);  ; void expandWildCardSpec (const char *spec, std::list< std::string > &result);  case with one single file ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooStudyPackage * _pkg;  ;  Protect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStudyManager.html:10110,inherit,inherited,10110,doc/master/classRooStudyManager.html,https://root.cern,https://root.cern/doc/master/classRooStudyManager.html,2,['inherit'],['inherited']
Modifiability,"ion is specified in the $HOME/.root....Definition TBrowser.cxx:399; TBrowser::AddCheckBoxvoid AddCheckBox(TObject *obj, Bool_t check=kFALSE)Add checkbox for this item.Definition TBrowser.cxx:336; TBrowser::Addvoid Add(TObject *obj, const char *name=nullptr, Int_t check=-1)Add object with name to browser.Definition TBrowser.cxx:303; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Browsevoid Browse(TBrowser *b) overrideThis method is called by a browser to get the class information.Definition TClass.cxx:2077; TClass::DynamicCastvoid * DynamicCast(const TClass *base, void *obj, Bool_t up=kTRUE)Cast obj of this class type up to baseclass cl if up is true.Definition TClass.cxx:4982; TClass::kRealNew@ kRealNewDefinition TClass.h:107; TClass::IsCallingNewstatic ENewType IsCallingNew()Static method returning the defConstructor flag passed to TClass::New().Definition TClass.cxx:5969; TClass::IsTObjectBool_t IsTObject() constReturn kTRUE is the class inherits from TObject.Definition TClass.cxx:6005; TClass::IsFolderBool_t IsFolder() const overrideReturns kTRUE in case object contains browsable objects (like containers or lists of other objects).Definition TClass.h:517; TContextMenuThis class provides an interface to context sensitive popup menus.Definition TContextMenu.h:44; TEnv::GetValuevirtual Int_t GetValue(const char *name, Int_t dflt) constReturns the integer value for a resource.Definition TEnv.cxx:491; TGuiFactory::CreateBrowserImpvirtual TBrowserImp * CreateBrowserImp(TBrowser *b, const char *title, UInt_t width, UInt_t height, Option_t *opt="""")Create a batch version of TBrowserImp.Definition TGuiFactory.cxx:92; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Warningvirtual void Warning(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBrowser_8cxx_source.html:21451,inherit,inherits,21451,doc/master/TBrowser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBrowser_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"ion is specified, the equivalent expression must be computed when calling GetEntryWithIndex(). To build an index with only majorname, specify minorname=""0"" (default).; Note that once the index is built, it can be saved with the TTree object with:; tree.Write(); //if the file has been open in ""update"" mode; The most convenient place to create the index is at the end of the filling process just before saving the tree header. If a previous index was computed, it is redefined by this new call.; Note that this function can also be applied to a TChain. The return value is the number of entries in the Index (< 0 indicates failure).; 12.8 Branches; The organization of branches allows the designer to optimize the data for the anticipated use. The class for a branch is called TBranch. If two variables are independent, and the designer knows the variables will not be used together, they should be placed on separate branches. If, however, the variables are related, such as the coordinates of a point, it is most efficient to create one branch with both coordinates on it. A variable on a TBranch is called a leaf (yes - TLeaf). Another point to keep in mind when designing trees is that branches of the same TTree can be written to separate files. To add a TBranch to a TTree we call the method TTree::Branch(). Note that we DO NOT use the TBranch constructor.; The TTree::Branch method has several signatures. The branch type differs by what is stored in it. A branch can hold an entire object, a list of simple variables, contents of a folder, contents of a TList, or an array of objects. Let’s see some examples. To follow along you will need the shared library libEvent.so. First, check if it is in $ROOTSYS/test. If it is, copy it to your own area. If it is not there, you have to build it by typing make in $ROOTSYS/test.; 12.9 Adding a Branch to Hold a List of Variables; As in the very first example (cernstaff.root.root) the data we want to save is a list of simple variables, such as inte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:536676,variab,variables,536676,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"ion limits (closed or open ended) and the preference of the caller as encoded in the configuration object. ; Definition at line 30 of file RooNumGenFactory.h. Public Member Functions;  ~RooNumGenFactory () override;  Destructor. ;  ; RooAbsNumGenerator * createSampler (RooAbsReal &func, const RooArgSet &genVars, const RooArgSet &condVars, const RooNumGenConfig &config, bool verbose=false, RooAbsReal *maxFuncVal=nullptr);  Construct a numeric integrator instance that operates on function 'func' and is configured with 'config'. ;  ; const RooAbsNumGenerator * getProtoSampler (const char *name);  Return prototype integrator with given (class) name. ;  ; bool storeProtoSampler (RooAbsNumGenerator *proto, const RooArgSet &defConfig);  Method accepting registration of a prototype numeric integrator along with a RooArgSet of its default configuration options and an optional list of names of other numeric integrators on which this integrator depends. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenFactory.html:1668,inherit,inherited,1668,doc/master/classRooNumGenFactory.html,https://root.cern,https://root.cern/doc/master/classRooNumGenFactory.html,1,['inherit'],['inherited']
Modifiability,"ion matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Int_tTEveElement::fNumChildren!; TObject*fObjectExternal object holding the visual data.; Bool_tfOwnObjectIs object owned / should be deleted on destruction.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementObjectPtr(TObject* obj, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(TObject* obj, Color_t& mainColor, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(const TEveElementObjectPtr& e); Copy constructor.; If object pointed to is owned it is cloned.; It is assumed that the main-color has its origin in the TObject pointed to so; it is fixed here accordingly. TEveElementObjectPtr* CloneElement() const; Clone the element via copy constructor.; Virtual from TEveElement. TObject* GetObject(const TEveException& eh = ""TEveElementObjectPtr::GetObject "") const; Return external object.; Virtual from TEveElement. void ExportToCINT(char* var_name); Export external object to CINT with variable name var_name.; Virtual from TEveElement. ~TEveElementObjectPtr(); Destructor. TEveElement& operator=(const TEveElementObjectPtr& ). Bool_t GetOwnObject() const; { return fOwnObject; }. void SetOwnObject(Bool_t o); { fOwnObject = o; }.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveElementObjectPtr.html:18236,Inherit,Inheritance,18236,root/html532/TEveElementObjectPtr.html,https://root.cern,https://root.cern/root/html532/TEveElementObjectPtr.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion members; data members; class charts. ROOT; » GRAF3D; » GL; » TGLOutput. class TGLOutput. TGLOutput. Wrapper class for GL capture & output routines. Function Members (Methods); public:. virtual~TGLOutput(); static voidCapture(TGLViewer& viewer); static Bool_tCapture(TGLViewer& viewer, TGLOutput::EFormat format, const char* filePath = 0); static TClass*Class(); static voidCloseEmbeddedPS(); virtual TClass*IsA() const; TGLOutput&operator=(const TGLOutput&); virtual voidShowMembers(TMemberInspector& insp) const; static voidStartEmbeddedPS(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGLOutput(); TGLOutput(const TGLOutput&). private:. static Bool_tCapturePostscript(TGLViewer& viewer, TGLOutput::EFormat format, const char* filePath). Data Members; public:. static TGLOutput::EFormatkEPS_BSP; static TGLOutput::EFormatkEPS_SIMPLE; static TGLOutput::EFormatkPDF_BSP; static TGLOutput::EFormatkPDF_SIMPLE. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t Capture(TGLViewer& viewer, TGLOutput::EFormat format, const char* filePath = 0); Capture viewer to file. Arguments are:; 'viewer' - viewer object to capture from; 'format' - output format - only postscript types presently.; One of kEPS_SIMPLE, kEPS_BSP, kPDF_SIMPLE or kPDF_BSP; See TGLOutput::CapturePostscript() for meanings; 'filePath' - file output name. If null defaults to './viewer.eps' or './viewer.pdf'; depending on format requested. Note : Output files can be large and take considerable time (up to mins); to generate. Bool_t CapturePostscript(TGLViewer& viewer, TGLOutput::EFormat format, const char* filePath); Capture viewer to postscript file. Arguments are:; 'viewer' - viewer object to capture from; 'format' - output format; kEPS_SIMPLE - lower quality EPS; kEPS_BSP - higher quality EPS; kPDF_SIMPLE - lower quality PDF; kPDF_BSP - higher quality PDF; 'filePath' - file output name. If null defaults to './viewer.eps' or '",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLOutput.html:1154,Inherit,Inheritance,1154,root/html602/TGLOutput.html,https://root.cern,https://root.cern/root/html602/TGLOutput.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion model support internal generation of the convolution observable on an infinite domain, deploy a specialized convolution generator context, which generates the physics distribution and the smearing separately, adding them a posteriori. If this is not possible return a (slower) generic generation context that uses accept/reject sampling ; Reimplemented from RooAbsPdf.; Definition at line 255 of file RooAbsAnaConvPdf.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooAbsAnaConvPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const RooArgSet * ; normSet2, . const char * ; rangeName = nullptr . ); const. overridevirtual . Advertise capability to perform (analytical) integrals internally. ; For a given integration request over allVars while normalized over normSet2 and in range 'rangeName', returns largest subset that can be performed internally in analVars Return code is unique integer code identifying integration scenario to be passed to analyticalIntegralWN() to calculate requeste integral; Class RooAbsAnaConv defers analytical integration request to resolution model and/or coefficient implementations and aggregates results into composite configuration with a unique code assigned by RooAICRegistry ; Reimplemented from RooAbsReal.; Definition at line 365 of file RooAbsAnaConvPdf.cxx. ◆ getCoefAnalyticalIntegral(). Int_t RooAbsAnaConvPdf::getCoefAnalyticalIntegral ; (; Int_t ; coef, . RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. virtual . Default implementation of function advertising integration capabilities. ; The interface is similar to that of getAnalyticalIntegral except that an integer code is added that designates the coefficient number for which the integration capabilities are requested; This default implementation advertises that no internal integrals are supported. ; Reimplemented in RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBMixDecay, and RooNonCPEigenDecay.; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsAnaConvPdf.html:86882,config,configuration,86882,doc/master/classRooAbsAnaConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsAnaConvPdf.html,1,['config'],['configuration']
Modifiability,"ion number; starting from top left pad.; Example if canvasname=c1 , nx=2, ny=3. . . .; . . .; . . .; . c1_1 . c1_2 .; . . .; . . .; . . . . . .; . . .; . . .; . c1_3 . c1_4 .; . . .; . . .; . . . . . .; . . .; . . .; . c1_5 . c1_6 .; . . .; . . . Once a pad is divided into subpads, one can set the current pad; to a subpad with a given division number as illustrated above; with TPad::cd(subpad_number).; For example, to set the current pad to c1_4, one can do:; c1->cd(4). Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad; to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad; points to the current pad. One can use gPad to set attributes; of the current pad.; Note3: in case xmargin <=0 and ymargin <= 0, there is no space; between pads. The current pad margins are recomputed to; optimize the layout. void Draw(Option_t* option = """"); Draw Pad in Current pad (re-parent pad if necessary). void DrawClassObject(const TObject* obj, Option_t* option = """"); Draw class inheritance tree of the class to which obj belongs.; If a class B inherits from a class A, description of B is drawn; on the right side of description of A.; Member functions overridden by B are shown in class A with a blue line; crossing-out the corresponding member function.; The following picture is the class inheritance tree of class TPaveLabel:. /*; ; */. void DrawCrosshair(); Function called to draw a crosshair in the canvas. Example:; Root > TFile f(""hsimple.root"");; Root > hpxpy.Draw();; Root > c1.SetCrosshair();; When moving the mouse in the canvas, a crosshair is drawn. if the canvas fCrosshair = 1 , the crosshair spans the full canvas; if the canvas fCrosshair > 1 , the crosshair spans only the pad. TH1F * DrawFrame(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char* title = """"); Draw a pad frame. Compute real pad range taking into account all margins; Use services of TH1F class. void DrawColorTable(); Static function to Display Color Table i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPad.html:37406,inherit,inheritance,37406,root/html528/TPad.html,https://root.cern,https://root.cern/root/html528/TPad.html,4,['inherit'],['inheritance']
Modifiability,"ion of the file we are writing to.; 539 TFile* file = (TFile*) buf.GetParent();; 540 if (file) {; 541 fileVersion = file->GetVersion();; 542 }; 543 }; 544 // Write the class version to the buffer.; 545 UInt_t pos = buf.WriteVersion(config->fInfo->IsA(), kTRUE);; 546 if (fileVersion > 51508) {; 547 // -- Newer versions allow polymorphic pointers to objects.; 548 // Loop over the entries in the clones array or the STL container.; 549 //for (int k = 0; k < narr; ++k) {; 550 // Get the counter for the varying length array.; 551 Int_t vlen = *((Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/));; 552 ; 553 //b << vlen;; 554 if (vlen) {; 555 // Get a pointer to the array of pointers.; 556 char** pp = (char**) ((char *) addr /*entry pointer*/ + ioffset /*object offset*/);; 557 // Loop over each element of the array of pointers to varying-length arrays.; 558 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx) {; 559 if (!pp[ndx]) {; 560 // -- We do not have a pointer to a varying-length array.; 561 // Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; 562 // ::ErrorHandler(kError, ""::WriteStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));; 563 printf(""WriteStreamerLoop - The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName());; 564 continue;; 565 }; 566 if (!isPtrPtr) {; 567 // -- We are a varying-length array of objects.; 568 // Write the entire array of objects to the buffer.; 569 // Note: Polymorphism is not allowed here.; 570 buf.WriteFastArray(pp[ndx], cl, vlen, nullptr);; 571 } else {; 572 // --",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:22109,config,config,22109,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"ion on the web server:; serv->CreateEngine(""fastcgi:9000?debug=1"");; By default 10 threads are used to process FastCGI requests. This number can be changed with “thrds” url parameter:; serv->CreateEngine(""fastcgi:9000?thrds=20"");; If thrds=0 parameter specified, the only thread will be use to received and process all requests.; All user access will be ruled by the main web server. Authorized account names could be used to configure access restriction in THttpServer.; 1.7.1 Configure fastcgi with Apache2; Since Apache version 2.4 FastCGI is directly supported - there is no need to compile and install external modules any more. One only need to enable mod_proxy and mod_proxy_fcgi modules and add following line to Apache2 configuration file:; ProxyPass ""/root.app/"" ""fcgi://localhost:9000/"" enablereuse=on; More information can be found in FastCGI proxy docu. After restarting apache server one should be able to open address: http://apache_host_name/root.app/. There are many ways to configure user authentication in Apache. Example of digest auth for FastCGI server:; <Location ""/root.app/"">; AuthType Digest; AuthName ""root""; AuthDigestDomain ""/root.app/"" ""root""; AuthDigestProvider file; AuthUserFile ""/srv/auth/auth.txt""; Require valid-user; </Location>; 1.7.2 Configure fastcgi with lighttpd; An example of configuration file for lighttpd server is:; server.modules += ( ""mod_fastcgi"" ); fastcgi.server = (; ""/root.app"" =>; (( ""host"" => ""192.168.1.11"",; ""port"" => 9000,; ""check-local"" => ""disable"",; ""docroot"" => ""/""; )); ); Be aware, that with lighttpd one should specify IP address of the host, where ROOT application is running. Address of the ROOT application will be following: http://lighttpd_host_name/root.app/. Example of authorization configuration for FastCGI connection:; auth.require = ( ""/root.app"" => (; ""method"" => ""digest"",; ""realm"" => ""root"",; ""require"" => ""valid-user""; ) ); 1.8 Integration with existing applications; In many practical cases no change of existing cod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html:10752,config,configure,10752,root/htmldoc/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html,2,['config'],['configure']
Modifiability,"ion printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate pull. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPullVar.html:48929,parameteriz,parameterized,48929,doc/master/classRooPullVar.html,https://root.cern,https://root.cern/doc/master/classRooPullVar.html,1,['parameteriz'],['parameterized']
Modifiability,"ion range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionMultiDim*funcFunctor; RooListProxyvarsArgument reference; Double_t*xArgument value array.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFunctorPdfBinding.html:44354,config,configuration,44354,root/html602/RooFunctorPdfBinding.html,https://root.cern,https://root.cern/root/html602/RooFunctorPdfBinding.html,8,['config'],['configuration']
Modifiability,"ion set; 345/// that should be applied to the integrand of which the integral is requested.; 346/// For certain operator p.d.f it is useful to overload this function rather; 347/// than analyticalIntegralWN() as the additional normalization information; 348/// may be useful in determining a more efficient decomposition of the; 349/// requested integral.; 350 ; 351Int_t RooAbsReal::getAnalyticalIntegralWN(RooArgSet& allDeps, RooArgSet& analDeps,; 352 const RooArgSet* /*normSet*/, const char* rangeName) const; 353{; 354 return _forceNumInt ? 0 : getAnalyticalIntegral(allDeps,analDeps,rangeName) ;; 355}; 356 ; 357 ; 358 ; 359////////////////////////////////////////////////////////////////////////////////; 360/// Interface function getAnalyticalIntergral advertises the; 361/// analytical integrals that are supported. 'integSet'; 362/// is the set of dependents for which integration is requested. The; 363/// function should copy the subset of dependents it can analytically; 364/// integrate to anaIntSet and return a unique identification code for; 365/// this integration configuration. If no integration can be; 366/// performed, zero should be returned.; 367 ; 368Int_t RooAbsReal::getAnalyticalIntegral(RooArgSet& /*integSet*/, RooArgSet& /*anaIntSet*/, const char* /*rangeName*/) const; 369{; 370 return 0 ;; 371}; 372 ; 373 ; 374 ; 375////////////////////////////////////////////////////////////////////////////////; 376/// Implements the actual analytical integral(s) advertised by; 377/// getAnalyticalIntegral. This functions will only be called with; 378/// codes returned by getAnalyticalIntegral, except code zero.; 379 ; 380double RooAbsReal::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName) const; 381{; 382// cout << ""RooAbsReal::analyticalIntegralWN("" << GetName() << "") code = "" << code << "" normSet = "" << (normSet?*normSet:RooArgSet()) << std::endl ;; 383 if (code==0) return getVal(normSet) ;; 384 return analyticalIntegral(code,rangeName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:12612,config,configuration,12612,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ion specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Sep 23 19:58:44 2010 » Last generated: 2010-09-23 19:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCFunction2Binding_double_unsigned_int_double_.html:34370,variab,variable,34370,root/html528/RooCFunction2Binding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html528/RooCFunction2Binding_double_unsigned_int_double_.html,1,['variab'],['variable']
Modifiability,"ion to be binned variably.; Set the thresholds at the desired bin boundaries, and construct the; data hist as function of the threshold category instead of the real variable. RooDataHist(const char* name, const char* title, const RooArgSet& vars, const RooAbsData& data, Double_t initWgt = 1.); Constructor of a data hist from an existing data collection (binned or unbinned); The RooArgSet 'vars' defines the dimensions of the histogram.; The range and number of bins in each dimensions are taken; from getMin()getMax(),getBins() of each RooAbsArg representing that; dimension. For real dimensions, the fit range and number of bins can be set independently; of the plot range and number of bins, but it is advisable to keep the; ratio of the plot bin width and the fit bin width an integer value.; For category dimensions, the fit ranges always comprises all defined states; and each state is always has its individual bin. To effective achive binning of real dimensions with variable bins sizes,; construct a RooThresholdCategory of the real dimension to be binned variably.; Set the thresholds at the desired bin boundaries, and construct the; data hist as function of the threshold category instead of the real variable. If the constructed data hist has less dimensions that in source data collection,; all missing dimensions will be projected. RooDataHist(const char* name, const char* title, const RooArgList& vars, RooCategory& indexCat, map<string,TH1*> histMap, Double_t initWgt = 1.); Constructor of a data hist from a map of TH1,TH2 or TH3 that are collated into a x+1 dimensional; RooDataHist where the added dimension is a category that labels the input source as defined; in the histMap argument. The state names used in histMap must correspond to predefined states; 'indexCat'. The RooArgList 'vars' defines the dimensions of the histogram.; The ranges and number of bins are taken from the input histogram and must be the same in all histograms. RooDataHist(const char* name, const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDataHist.html:22879,variab,variable,22879,root/html602/RooDataHist.html,https://root.cern,https://root.cern/root/html602/RooDataHist.html,8,['variab'],"['variable', 'variably']"
Modifiability,"ion to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGShutter (const TGShutter &)=delete;  ; TGShutter & operator= (const TGShutter &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGShutter.html:28181,inherit,inherited,28181,doc/master/classTGShutter.html,https://root.cern,https://root.cern/doc/master/classTGShutter.html,1,['inherit'],['inherited']
Modifiability,"ion to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGToolBar (const TGToolBar &)=delete;  ; TGToolBar & operator= (const TGToolBar &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGToolBar.html:27988,inherit,inherited,27988,doc/master/classTGToolBar.html,https://root.cern,https://root.cern/doc/master/classTGToolBar.html,1,['inherit'],['inherited']
Modifiability,"ion to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGedFrame (const TGedFrame &)=delete;  ; TGedFrame & operator= (const TGedFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:25786,inherit,inherited,25786,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,1,['inherit'],['inherited']
Modifiability,"ion v = r * v. Definition at line 20 of file TRotation.h. Classes; class  TRotationRow;  . Public Member Functions;  TRotation ();  Constructor. ;  ;  TRotation (const TQuaternion &);  Constructor for a rotation based on a Quaternion if magnitude of quaternion is null, creates identity rotation if quaternion is non-unit, creates rotation corresponding to the normalized (unit) quaternion. ;  ;  TRotation (const TRotation &);  Constructor. ;  ;  ~TRotation () override;  ; void AngleAxis (Double_t &, TVector3 &) const;  Rotation defined by an angle and a vector. ;  ; Double_t GetXPhi (void) const;  Return phi angle. ;  ; Double_t GetXPsi (void) const;  Get psi angle. ;  ; Double_t GetXTheta (void) const;  Return XTheta. ;  ; Double_t GetYPhi (void) const;  Return YPhi. ;  ; Double_t GetYPsi (void) const;  Return YPsi. ;  ; Double_t GetYTheta (void) const;  Return YTheta. ;  ; TRotation Inverse () const;  ; TRotation & Invert ();  ; TClass * IsA () const override;  ; Bool_t IsIdentity () const;  ; void MakeBasis (TVector3 &xAxis, TVector3 &yAxis, TVector3 &zAxis) const;  Make the Z axis into a unit variable. ;  ; Bool_t operator!= (const TRotation &) const;  ; Double_t operator() (int, int) const;  Dereferencing operator const. ;  ; TRotation operator* (const TRotation &) const;  Multiplication operator. ;  ; TVector3 operator* (const TVector3 &) const;  ; TRotation & operator*= (const TRotation &);  ; TRotation & operator= (const TRotation &);  ; Bool_t operator== (const TRotation &) const;  ; TRotationRow operator[] (int) const;  ; Double_t PhiX () const;  Return Phi. ;  ; Double_t PhiY () const;  Return Phi. ;  ; Double_t PhiZ () const;  Return Phi. ;  ; TRotation & Rotate (Double_t, const TVector3 &);  Rotate along an axis. ;  ; TRotation & Rotate (Double_t, const TVector3 *);  ; TRotation & RotateAxes (const TVector3 &newX, const TVector3 &newY, const TVector3 &newZ);  Rotate axes. ;  ; TRotation & RotateX (Double_t);  Rotate around x. ;  ; TRotation & RotateXEulerA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRotation.html:7244,variab,variable,7244,doc/master/classTRotation.html,https://root.cern,https://root.cern/doc/master/classTRotation.html,1,['variab'],['variable']
Modifiability,"ion value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total (re-implement if minimizer supports bounded parameters) ;  ; ROOT::Math::MinimizerOptions Options () const override;  retrieve the minimizer options (implement derived class if needed) ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int ivar, const std::string &name, double val) override;  set a new fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int, const std::string &, double, double, double, double) override;  set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited variable ;  ; virtual void SetOptions (const ROOT::Math::MinimizerOptions &opt);  ; void SetParameters (const GeneticMinimizerParameters &params);  ; void SetRandomSeed (int seed);  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set a new free variable ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:2239,variab,variable,2239,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,5,"['inherit', 'variab']","['inherited', 'variable']"
Modifiability,"ion value in context and in output dataset; RooRealVar*RooAbsNumGenerator::_funcValStoreRRVs storing function value in context and in output dataset; Bool_tRooAbsNumGenerator::_isValidVerbose and valid flag; Double_t_maxFuncValMaximum function value found, and sum of all samples made; UInt_t_minTrialsMinimum number of max.finding trials, total number of samples; UInt_t_minTrialsArray[4]Minimum number of trials samples for 1,2,3 dimensional problems; static Int_tRooPrintable::_nameLength; TIterator*_nextCatVarIterator of categories to be generated; TIterator*_nextRealVarIterator over variables to be generated; UInt_t_realSampleDimNumber of real and discrete dimensions to be samplesd; RooArgSetRooAbsNumGenerator::_realVarsSets of discrete and real valued observabeles; UInt_t_totalEventsTotal number of function samples; Bool_tRooAbsNumGenerator::_verboseVerbose and valid flag; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerSampler(RooNumGenFactory& fact); Register RooIntegrator1D, is parameters and capabilities with RooNumIntFactory. RooAcceptReject(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0); Initialize an accept-reject generator for the specified distribution function,; which must be non-negative but does not need to be normalized over the; variables to be generated, genVars. The function and its dependents are; cloned and so will not be disturbed during the generation process. ~RooAcceptReject(); Destructor. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio); Return a pointer to a generated event. The caller does not own the event and it; will be overwritten by a subsequent call. The input parameter 'remaining' should; contain your best guess at the total number of subsequent events you will request. const RooArgSet * ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAcceptReject.html:10534,Inherit,Inheritance,10534,root/html602/RooAcceptReject.html,https://root.cern,https://root.cern/root/html602/RooAcceptReject.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion with basic settings. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooArgList * fAxes;  which variables to put on each axis ;  ; RooArgSet fChainParams;  parameters to store in the chain (if not specified they are all of them ) ;  ; RooArgSet fConditionalObs;  conditional observables ;  ; RooAbsData * fData;  pointer to the data (owned by the workspace) ;  ; double fDelta = -1;  acceptable error for Keys cutoffs being equal topCutoff (a) considered == bottomCutoff (b) iff (std::abs(a - b) < std::abs(fDelta * (a + b)/2)); Theoretically, the Abs is not needed here, but floating-point arithmetic does not always work perfectly, and the Abs doesn't hurt ;  ; double fEpsilon = -1;  acceptable error for Keys interval determination ;  ; RooArgSet fGlobalObs;  global observables ;  ; enum MCMCInterval::IntervalType fIntervalType = MCMCInterval::kShortest;  ; double fLeftSideTF = -1;  left side tail-fraction for interval ;  ; RooArgSet fNuisParams;  nuisance parameters for interval (not really used) ;  ; Int_t fNumBins = 0;  set the number of bins to create for each axis when constructing the interval ;  ; Int_t fNumBurnInSteps = 0;  number of iterations to discard as burn-in, starting from the first ;  ; Int_t fNumIters = 0;  number of iterations to run metropolis algorithm ;  ; RooAbsPdf * fPdf;  pointer to common PDF (owned by the workspace) ;  ; RooArgSet fPOI;  parameters of interest for interval ;  ; RooAbsPdf * fPriorPdf;  pointer to prior PDF (owned by the workspace) ;  ; ProposalFunction * fPropFunc;  Proposal function for MCMC integration. ;  ; double fSize = -1;  size of the test (eg. specified rate of Type I error) ;  ; bool fUseKeys = false;  whether to use kernel estimation to determine interval ;  ; bool fUseSparseHist = false;  whether to use sparse histogram (if using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:15220,variab,variables,15220,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,1,['variab'],['variables']
Modifiability,"ion { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  . Public Member Functions;  RooPlot ();  Default constructor coverity[UNINIT_CTOR]. ;  ;  RooPlot (const char *name, const char *title, const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins) R__DEPRECATED(6;  Create an 1-dimensional with all properties taken from 'var', but with an explicit range [xmin,xmax] and a default binning of 'nbins'. ;  ;  RooPlot (const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins);  Create an 1-dimensional with all properties taken from 'var', but with an explicit range [xmin,xmax] and a default binning of 'nbins'. ;  ;  RooPlot (const RooAbsRealLValue &var1, const RooAbsRealLValue &var2);  Construct a two-dimensional RooPlot with ranges and properties taken from variables var1 and var2. ;  ;  RooPlot (const RooAbsRealLValue &var1, const RooAbsRealLValue &var2, double xmin, double xmax, double ymin, double ymax);  Construct a two-dimensional RooPlot with ranges and properties taken from variables var1 and var2 but with an overriding range definition of [xmin,xmax] x [ymin,ymax]. ;  ;  RooPlot (const RooPlot &other)=delete;  ; Use RooPlot (double xmin, double xmax);  ;  RooPlot (double xmin, double xmax, double ymin, double ymax) R__DEPRECATED(6;  Construct of a two-dimensional RooPlot with ranges [xmin,xmax] x [ymin,ymax]. ;  ;  RooPlot (double xmin, double xmax, int nBins=100);  Constructor of RooPlot with range [xmin,xmax]. ;  ;  ~RooPlot () override;  Destructor. ;  ; void addObject (TObject *obj, Option_t *drawOptions="""", bool invisible=false);  Add a generic object to this plot. ;  ; void addPlotable (RooPlotable *plotable, Option_t *drawOptions="""", bool invisible=false, bool refreshNorm=false);  Add the specified plotable object to our plot. ;  ; void addTH1 (TH1 *hist, Option_t *drawOptions="""", bool invisible=false);  Add a TH1 histogram object to this plot. ;  ; void Browse (TBrowser *b) override;  Plot Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:3985,variab,variables,3985,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variables']
Modifiability,"ion& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); ROOT::Fit::FitterFitter(); ROOT::Fit::FitterFitter(const shared_ptr<ROOT::Fit::FitResult>& result); ROOT::Math::IMultiGenFunction*GetFCN() const; ROOT::Math::Minimizer*GetMinimizer() const; boolIsBinFit() const; boolLeastSquareFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data, bool extended = true); boolLikelihoodFit(const shared_ptr<ROOT::Fit::BinData>& data, bool extended = true); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, bool extended = false); boolLikelihoodFit(const shared_ptr<ROOT::Fit::UnBinData>& data, bool extended = false); boolLinearFit(const ROOT::Fit::BinData& data); boolLinearFit(const shared_ptr<ROOT::Fit::BinData>& data); const ROOT::Fit::FitResult&Result() const; boolSetFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); voidSetFunction(const ROOT::Fit::Fitter::IModelFunction& func, bool useGradient = false); voidSetFunction(const ROOT::Fit::Fitter::IModel1DFunction& func, bool useGradient = false); voidSet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__Fitter.html:2466,extend,extended,2466,root/html604/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__Fitter.html,2,['extend'],['extended']
Modifiability,"ion'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooFormulaVar * identity ();  Return identity formula pointer. ;  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooResolutionModel.html:59021,inherit,inherited,59021,doc/master/classRooResolutionModel.html,https://root.cern,https://root.cern/doc/master/classRooResolutionModel.html,1,['inherit'],['inherited']
Modifiability,"ion() const; static Long_tTObject::GetDtorOnly(); THashTable&GetEntries(); const TList*THtml::TFileSysDir::GetFiles() const; virtual voidTHtml::TFileSysEntry::GetFullName(TString& fullname, Bool_t asIncluded) const; virtual const char*TObject::GetIconName() const; const TString&GetIgnore() const; Int_tTHtml::TFileSysEntry::GetLevel() const; TExMap&GetMapIno(); Int_tGetMaxLevel() const; virtual const char*THtml::TFileSysEntry::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml::TFileSysDir*THtml::TFileSysEntry::GetParent() const; const TList*THtml::TFileSysDir::GetSubDirs() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTHtml::TFileSysEntry::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THtml__TFileSysDB.html:2735,Inherit,InheritsFrom,2735,root/html532/THtml__TFileSysDB.html,https://root.cern,https://root.cern/root/html532/THtml__TFileSysDB.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ion() const; static Long_tTObject::GetDtorOnly(); THashTable&GetEntries(); const TList*THtml::TFileSysDir::GetFiles() const; virtual voidTHtml::TFileSysEntry::GetFullName(TString& fullname, Bool_t asIncluded) const; virtual const char*TObject::GetIconName() const; const TString&GetIgnore() const; Int_tTHtml::TFileSysEntry::GetLevel() const; TExMap&GetMapIno(); Int_tGetMaxLevel() const; virtual const char*THtml::TFileSysEntry::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml::TFileSysDir*THtml::TFileSysEntry::GetParent() const; const TList*THtml::TFileSysDir::GetSubDirs() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTHtml::TFileSysEntry::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THtml__TFileSysDB.html:2678,Inherit,InheritsFrom,2678,root/html602/THtml__TFileSysDB.html,https://root.cern,https://root.cern/root/html602/THtml__TFileSysDB.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ion(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Minuit; Here a TMinuit instance is created since only at this point we know the number of parameters. void SetFunction(const ROOT::Math::IMultiGradFunction & func); Set the objective function to be minimized, by passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user via this interface and there not calculated by Minuit. void Fcn(int& , double* , double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGenFunction interface to TMinuit FCN static function. void FcnGrad(int& , double* g, double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGradFunction interface to TMinuit FCN static function in the case of user; provided gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a free variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set a limited variable. bool CheckMinuitInstance() const; check instance of fMinuit. bool CheckVarIndex(unsigned int ivar) const; check index of Variable (assume fMinuit exists). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set a lower limited variable; since is not supported in TMinuit , just use a artificial large value. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a upper limited variable; since is not supported in TMinuit , just use a artificial large negative value. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:8023,Adapt,Adapt,8023,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,1,['Adapt'],['Adapt']
Modifiability,"ion(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Minuit; Here a TMinuit instance is created since only at this point we know the number of parameters. void SetFunction(const ROOT::Math::IMultiGradFunction & func); Set the objective function to be minimized, by passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user via this interface and there not calculated by Minuit. void Fcn(int& , double* , double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGenFunction interface to TMinuit FCN static function. void FcnGrad(int& , double* g, double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGradFunction interface to TMinuit FCN static function in the case of user; provided gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a free variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set a limited variable. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMinuitMinimizer.html:7635,Adapt,Adapt,7635,root/html532/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html532/TMinuitMinimizer.html,1,['Adapt'],['Adapt']
Modifiability,"ion(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Minuit; Here a TMinuit instance is created since only at this point we know the number of parameters. void SetFunction(const ROOT::Math::IMultiGradFunction & func); Set the objective function to be minimized, by passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user via this interface and there not calculated by Minuit. void Fcn(int& , double* , double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGenFunction interface to TMinuit FCN static function. void FcnGrad(int& , double* g, double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGradFunction interface to TMinuit FCN static function in the case of user; provided gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a free variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set a limited variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set a lower limited variable; since is not supported in TMinuit , just use a artificial large value. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a upper limited variable; since is not supported in TMinuit , just use a artificial large negative value. bool CheckMinuitInstance() const; check instance of fMinuit. bool CheckVarIndex(unsigned int ivar) const; check index of Variable (assume fMinuit exists). bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMinuitMinimizer.html:8086,Adapt,Adapt,8086,root/html602/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html602/TMinuitMinimizer.html,2,['Adapt'],['Adapt']
Modifiability,"ion(const TString &variable)Definition DataLoader.cxx:549; TMVA::DataLoader::MakeKFoldDataSetvoid MakeKFoldDataSet(CvSplit &s)Function required to split the training and testing datasets into a number of folds.Definition DataLoader.cxx:662; TMVA::DataLoader::SetWeightExpressionvoid SetWeightExpression(const TString &variable, const TString &className="""")Definition DataLoader.cxx:563; TMVA::DataLoader::AddBackgroundTrainingEventvoid AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:244; TMVA::DataLoader::RecombineKFoldDataSetvoid RecombineKFoldDataSet(CvSplit &s, Types::ETreeType tt=Types::kTraining)Recombines the dataset.Definition DataLoader.cxx:683; TMVA::DataLoader::VarTransformDataLoader * VarTransform(TString trafoDefinition)Transforms the variables and return a new DataLoader with the transformed variables.Definition DataLoader.cxx:146; TMVA::DataLoader::SetBackgroundWeightExpressionvoid SetBackgroundWeightExpression(const TString &variable)Definition DataLoader.cxx:556; TMVA::DataLoader::AddCutvoid AddCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:588; TMVA::DataLoader::AddEventvoid AddEvent(const TString &className, Types::ETreeType tt, const std::vector< Double_t > &event, Double_t weight)add event vector event : the order of values is: variables + targets + spectatorsDefinition DataLoader.cxx:277; TMVA::DataLoader::DataLoaderDataLoader(TString thedlName=""default"")Definition DataLoader.cxx:80; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:34987,variab,variable,34987,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ion(const TString &variable)Definition DataLoader.cxx:549; TMVA::DataLoader::MakeKFoldDataSetvoid MakeKFoldDataSet(CvSplit &s)Function required to split the training and testing datasets into a number of folds.Definition DataLoader.cxx:662; TMVA::DataLoader::SetWeightExpressionvoid SetWeightExpression(const TString &variable, const TString &className="""")Definition DataLoader.cxx:563; TMVA::DataLoader::AddBackgroundTrainingEventvoid AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:244; TMVA::DataLoader::RecombineKFoldDataSetvoid RecombineKFoldDataSet(CvSplit &s, Types::ETreeType tt=Types::kTraining)Recombines the dataset.Definition DataLoader.cxx:683; TMVA::DataLoader::VarTransformDataLoader * VarTransform(TString trafoDefinition)Transforms the variables and return a new DataLoader with the transformed variables.Definition DataLoader.cxx:146; TMVA::DataLoader::SetBackgroundWeightExpressionvoid SetBackgroundWeightExpression(const TString &variable)Definition DataLoader.cxx:556; TMVA::DataLoader::AddCutvoid AddCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:588; TMVA::DataLoader::AddEventvoid AddEvent(const TString &className, Types::ETreeType tt, const std::vector< Double_t > &event, Double_t weight)add event vector event : the order of values is: variables + targets + spectatorsDefinition DataLoader.cxx:277; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::DataInputDataInputHandler & DataInput()Definition DataLoader.h:172; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:15801,variab,variable,15801,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variable']
Modifiability,"ion(vector<Double_t>& parameters); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; Int_tGetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__FitterBase.html:2637,Config,Configurable,2637,root/html532/TMVA__FitterBase.html,https://root.cern,https://root.cern/root/html532/TMVA__FitterBase.html,2,['Config'],['Configurable']
Modifiability,"ion)MENU ; virtual voidSetImageQuality(TAttImage::EImageQuality lquality); virtual voidSetPalette(const TImagePalette* palette); virtual voidSetPaletteEnabled(Bool_t on = kTRUE); virtual voidShowMembers(TMemberInspector& insp); virtual voidStartPaletteEditor()MENU ; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; public:. enum EImageQuality { kImgDefault; kImgPoor; kImgFast; kImgGood; kImgBest; };. protected:. Bool_tfConstRatiokeep aspect ratio of image on the screen; UInt_tfImageCompressioncompression [0 .. 100] 0: no compression; TAttImage::EImageQualityfImageQuality*OPTION={GetMethod=""GetImageQuality"";SetMethod=""SetImageQuality"";Items=(kImgDefault=""Default"",kImgPoor=""Poor"",kImgFast=""Fast"",kImgGood=""Good"",kImgBest=""Best"")}*; TImagePalettefPalettecolor palette for value -> color conversion; TPaletteEditor*fPaletteEditor! GUI to edit the color palette; Bool_tfPaletteEnabled! kTRUE - palette is drawn on the image. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttImage(); TAttImage default constructor.; Calls ResetAttImage to set the attributes to a default state. TAttImage(TAttImage::EImageQuality lquality, UInt_t lcompression, Bool_t constRatio); TAttImage normal constructor.; Image attributes are taken from the argument list; qualtity : must be one of EImageQuality (kImgDefault is same as; kImgGood in the current implementation); lcompression : defines the compression rate of the color data in the; image. Speed and memory depends on this rate, but not; the image display itself; 0: no compression; 100: max compression; constRatio : keeps the aspect ratio of the image constant on the; screen (in pixel units). ~TAttImage(); TAttImage destructor. void Copy(TAttImage& attline) const; Copy this image attributes to a new attimage. void ResetAttImage(Option_t* option = """"); Reset this image attributes to default values.; Default values are:; quality: kImgPoor, (no smoothing while the image is zo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAttImage.html:4472,Inherit,Inheritance,4472,root/html532/TAttImage.html,https://root.cern,https://root.cern/root/html532/TAttImage.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. private:. Bool_tfInterruptflag interrupt state; Bool_tfIsValidflag validity; FILE*fLogFilelog file; Int_tfLogFileDeslog file descriptor; TStringfLogFilePathPath to log file; Int_tfProtocoluser protocol version number; Bool_tfRealTimeLogTRUE if log messages should be send back in real-time; TList*fSentCanvasesList of canvases already sent; TStringfSessIdIdentifier for this session; TSocket*fSocketsocket connection to user; TUrlfUrluser's url; TStringfWorkDirWorking dir; TRemoteObject*fWorkingDirWorking (remote) directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TApplicationServer(Int_t* argc, char** argv, FILE* flog, const char* logfile); Main constructor. Create an application environment. The TApplicationServer; environment provides an eventloop via inheritance of TApplication. Int_t Setup(); Print the Remote Server logo on standard output.; Return 0 on success, -1 on failure. ~TApplicationServer(); Cleanup. Not really necessary since after this dtor there is no; live anyway. void GetOptions(Int_t* argc, char** argv); Get and handle command line options. Fixed format:; ""protocol url"". void Run(Bool_t retrn = kFALSE); Main server eventloop. void HandleSocketInput(); Handle input coming from the client or from the master server. void HandleUrgentData(); Handle Out-Of-Band data sent by the master or client. void HandleSigPipe(); Called when the client is not alive anymore (i.e. when kKeepAlive; has failed). void Reset(const char* dir); Reset environment to be ready for execution of next comman",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TApplicationServer.html:13313,Inherit,Inheritance,13313,root/html532/TApplicationServer.html,https://root.cern,https://root.cern/root/html532/TApplicationServer.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, 1 - no spaces in the begin, 2 - no new lines, 3 - no spaces at all; Bool_tfExpectedChain! flag to resolve situation when several elements of same basic type stored as FastArray; unsigned intfJsonrCnt! counter for all objects and arrays; map<const void*,unsigned int>fJsonrMap! map of recorded objects, used in JsonR to restore references; Bool_tTBuffer::fModeRead or write mode; TStringfOutBuffer! main output buffer for json code; TString*fOutput! current output buffer for json code; TObject*TBuffer::fParentPointer to parent object owning this buffer; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; TStringfSemicolon! depending from compression level, "" : "" or "":""; TObjArrayfStack! stack of streamer infos; TStringfValue! buffer for current value; Int_tTBuffer::fVersionBuffer format version; static const char*fgFloatFmt! printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferJSON(); Creates buffer object to serialize data into json. ~TBufferJSON(); destroy buffer. TString ConvertToJSON(const TObject* obj, Int_t compact = 0); converts object, inherited from TObject class, to JSON string. void SetCompact(int level); Set level of space/newline compression; 0 - no any compression; 1 - exclude spaces in the begin; 2 - remove newlines; 3 - exclude spaces as much as possible. TString ConvertToJSON(const void* obj, const TClass* cl, Int_t compact = 0); converts any type of object to JSON string; following values of compact; 0 - no any compression; 1 - exclude spaces in the begin; 2 - remove newlines; 3 - exclude spaces as much as possible. TString ConvertToJSON(const void* obj, TDataMember* member, Int_t compact = 0); converts selected data member into json. TString JsonWriteMember(const void* ptr, TDataMember* member, TClass* memberClass); Convert single data member to JSON structures; Returns string with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferJSON.html:20569,Inherit,Inheritance,20569,root/html602/TBufferJSON.html,https://root.cern,https://root.cern/root/html602/TBufferJSON.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,2U,2U,ROOT::Math::MatRepStd<float,2,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,2U,2U,ROOT::Math::MatRepStd<float,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,2U,2U,ROOT::Math::MatRepStd<float,2,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_2_2_-p1MatRepStd_float_2_2_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_2_2_-p1MatRepStd_float_2_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_2_2_-p1MatRepStd_float_2_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,2U,2U,ROOT::Math::MatRepStd<float,2,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,2U,2U,ROOT::Math::MatRepStd<float,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,2U,2U,ROOT::Math::MatRepStd<float,2,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_2_2_-p1MatRepStd_float_2_2_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_2_2_-p1MatRepStd_float_2_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_2_2_-p1MatRepStd_float_2_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3U,3U,ROOT::Math::MatRepStd<float,3,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,3U,3U,ROOT::Math::MatRepStd<float,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,3U,3U,ROOT::Math::MatRepStd<float,3,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_3_3_-p1MatRepStd_float_3_3_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_3_3_-p1MatRepStd_float_3_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_3_3_-p1MatRepStd_float_3_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3U,3U,ROOT::Math::MatRepStd<float,3,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,3U,3U,ROOT::Math::MatRepStd<float,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,3U,3U,ROOT::Math::MatRepStd<float,3,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_3_3_-p1MatRepStd_float_3_3_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_3_3_-p1MatRepStd_float_3_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_3_3_-p1MatRepStd_float_3_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3U,4U,ROOT::Math::MatRepStd<float,3,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,3U,4U,ROOT::Math::MatRepStd<float,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,3U,4U,ROOT::Math::MatRepStd<float,3,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_3_4_-p1MatRepStd_float_3_4_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_3_4_-p1MatRepStd_float_3_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_3_4_-p1MatRepStd_float_3_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3U,4U,ROOT::Math::MatRepStd<float,3,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,3U,4U,ROOT::Math::MatRepStd<float,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,3U,4U,ROOT::Math::MatRepStd<float,3,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_3_4_-p1MatRepStd_float_3_4_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_3_4_-p1MatRepStd_float_3_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_3_4_-p1MatRepStd_float_3_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4U,3U,ROOT::Math::MatRepStd<float,4,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,4U,3U,ROOT::Math::MatRepStd<float,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,4U,3U,ROOT::Math::MatRepStd<float,4,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_4_3_-p1MatRepStd_float_4_3_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_4_3_-p1MatRepStd_float_4_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_4_3_-p1MatRepStd_float_4_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4U,3U,ROOT::Math::MatRepStd<float,4,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,4U,3U,ROOT::Math::MatRepStd<float,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,4U,3U,ROOT::Math::MatRepStd<float,4,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_4_3_-p1MatRepStd_float_4_3_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_4_3_-p1MatRepStd_float_4_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_4_3_-p1MatRepStd_float_4_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4U,4U,ROOT::Math::MatRepStd<float,4,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,4U,4U,ROOT::Math::MatRepStd<float,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,4U,4U,ROOT::Math::MatRepStd<float,4,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_4_4_-p1MatRepStd_float_4_4_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_4_4_-p1MatRepStd_float_4_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_4_4_-p1MatRepStd_float_4_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4U,4U,ROOT::Math::MatRepStd<float,4,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,4U,4U,ROOT::Math::MatRepStd<float,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,4U,4U,ROOT::Math::MatRepStd<float,4,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_4_4_-p1MatRepStd_float_4_4_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_4_4_-p1MatRepStd_float_4_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_4_4_-p1MatRepStd_float_4_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,5U,5U,ROOT::Math::MatRepStd<float,5,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,5U,5U,ROOT::Math::MatRepStd<float,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,5U,5U,ROOT::Math::MatRepStd<float,5,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_5_5_-p1MatRepStd_float_5_5_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_5_5_-p1MatRepStd_float_5_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_5_5_-p1MatRepStd_float_5_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,5U,5U,ROOT::Math::MatRepStd<float,5,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,5U,5U,ROOT::Math::MatRepStd<float,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,5U,5U,ROOT::Math::MatRepStd<float,5,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_5_5_-p1MatRepStd_float_5_5_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_5_5_-p1MatRepStd_float_5_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_5_5_-p1MatRepStd_float_5_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,6U,6U,ROOT::Math::MatRepStd<float,6,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,6U,6U,ROOT::Math::MatRepStd<float,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,6U,6U,ROOT::Math::MatRepStd<float,6,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_6_6_-p1MatRepStd_float_6_6_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_6_6_-p1MatRepStd_float_6_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_6_6_-p1MatRepStd_float_6_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,6U,6U,ROOT::Math::MatRepStd<float,6,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,6U,6U,ROOT::Math::MatRepStd<float,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,6U,6U,ROOT::Math::MatRepStd<float,6,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_6_6_-p1MatRepStd_float_6_6_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_6_6_-p1MatRepStd_float_6_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_6_6_-p1MatRepStd_float_6_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,7U,7U,ROOT::Math::MatRepStd<float,7,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,7U,7U,ROOT::Math::MatRepStd<float,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,7U,7U,ROOT::Math::MatRepStd<float,7,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_7_7_-p1MatRepStd_float_7_7_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_7_7_-p1MatRepStd_float_7_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_7_7_-p1MatRepStd_float_7_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,7U,7U,ROOT::Math::MatRepStd<float,7,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,7U,7U,ROOT::Math::MatRepStd<float,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,7U,7U,ROOT::Math::MatRepStd<float,7,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_7_7_-p1MatRepStd_float_7_7_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_7_7_-p1MatRepStd_float_7_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_7_7_-p1MatRepStd_float_7_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,9U,7U,ROOT::Math::MatRepStd<float,9,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,9U,7U,ROOT::Math::MatRepStd<float,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,9U,7U,ROOT::Math::MatRepStd<float,9,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_9_7_-p1MatRepStd_float_9_7_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html602/ROOT__Math__SMatrix_float_9_7_-p1MatRepStd_float_9_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_9_7_-p1MatRepStd_float_9_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&&); const float&operator[](int j) const; ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,9U,7U,ROOT::Math::MatRepStd<float,9,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,9U,7U,ROOT::Math::MatRepStd<float,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,9U,7U,ROOT::Math::MatRepStd<float,9,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_float_9_7_-p1MatRepStd_float_9_7_____SMatrixRow_const.html:2232,Inherit,Inheritance,2232,root/html604/ROOT__Math__SMatrix_float_9_7_-p1MatRepStd_float_9_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_float_9_7_-p1MatRepStd_float_9_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Loop on Tree and print entries passing selection. ;  ; bool ScanRedirected ();  ; void SetEstimate (Long64_t n) override;  Set number of entries to estimate variable limits. ;  ; void SetScanFileName (const char *name);  ; void SetScanRedirect (bool on=false);  ; void SetTree (TTree *t) override;  ; void StartViewer (Int_t ww, Int_t wh) override;  Start the TTreeViewer on this TTree. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t UnbinnedFit (const char *formula, const char *varexp, const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Unbinned fit of one or more variable(s) from a Tree. ;  ; void UpdateFormulaLeaves () override;  this function is called by TChain::LoadTree when a new Tree is loaded. ;  ;  Public Member Functions inherited from TVirtualTreePlayer;  TVirtualTreePlayer ();  ;  ~TVirtualTreePlayer () override;  Common destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:5619,inherit,inherited,5619,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['inherit'],['inherited']
Modifiability,"ion, TLeaf*& leaf, TString& leftover, Bool_t& final, UInt_t& paran_level, TObjArray& castqueue, vector<string>& aliasUsed, Bool_t& useLeafCollectionObject, const char* fullExpression); Look for the leaf corresponding to the start of expression.; It returns the corresponding leaf if any.; It also modify the following arguments:; leftover: contain from expression that was not used to determine the leaf; final:; paran_level: number of un-matched open parenthesis; cast_queue: list of cast to be done; aliases: list of aliases used; Return <0 in case of failure; Return 0 if a leaf has been found; Return 2 if info about the TTree itself has been requested. Int_t DefinedVariable(TString& variable, Int_t& action); -*Check if name is in the list of Tree/Branch leaves; *-* ==================================================. This member function redefines the function in ROOT::v5::TFormula; If a leaf has a name corresponding to the argument name, then; returns a new code.; A TTreeFormula may contain more than one variable.; For each variable referenced, the pointers to the corresponding; branch and leaf is stored in the object arrays fBranches and fLeaves. name can be :; - Leaf_Name (simple variable or data member of a ClonesArray); - Branch_Name.Leaf_Name; - Branch_Name.Method_Name; - Leaf_Name[index]; - Branch_Name.Leaf_Name[index]; - Branch_Name.Leaf_Name[index1]; - Branch_Name.Leaf_Name[][index2]; - Branch_Name.Leaf_Name[index1][index2]; New additions:; - Branch_Name.Leaf_Name[OtherLeaf_Name]; - Branch_Name.Datamember_Name; - '.' can be replaced by '->'; and; - Branch_Name[index1].Leaf_Name[index2]; - Leaf_name[index].Action().OtherAction(param); - Leaf_name[index].Action()[val].OtherAction(param). The expected returns values are; -2 : the name has been recognized but won't be usable; -1 : the name has not been recognized; >=0 : the name has been recognized, return the internal code for this name. TLeaf* GetLeafWithDatamember(const char* topchoice, const char* nextchice, Lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeFormula.html:29361,variab,variable,29361,root/html604/TTreeFormula.html,https://root.cern,https://root.cern/root/html604/TTreeFormula.html,2,['variab'],['variable']
Modifiability,"ion, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooStats::HypoTestInverterResult*fResults. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestInverterPlot(HypoTestInverterResult* results ); constructor from a HypoTestInverterResult class; name and title are taken from the result class. HypoTestInverterPlot(const char* name, const char* title, RooStats::HypoTestInverterResult* results); constructor with name and title from a HypoTestInverterResult class. TGraphErrors* MakePlot(Option_t* opt = """"); Make the plot of the result of the scan; using the observed data; By default plot CLs or CLsb depending if the flag UseCLs is set. If Option = ""CLb"" return CLb plot; = ""CLs+b"" return CLs+b plot independently of the flag; = ""CLs"" return CLs plot independently of the flag. TMultiGraph* MakeExpectedPlot(double sig1 = 1, double sig2 = 2); Make the expected plot and the bands; nsig1 and nsig2 indicates the n-sigma value for the bands; if nsig1 = 0 no band is drawn (only expected value); if nsig2 > nsig1 (default is nsig1=1 and nsig2=2) the second band is also drawn; The first ban",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestInverterPlot.html:6518,Inherit,Inheritance,6518,root/html602/RooStats__HypoTestInverterPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestInverterPlot.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. static TVirtualMCApplication*fgInstancesingleton instance. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TVirtualMCApplication. Function documentation; TVirtualMCApplication(const char* name, const char* title). Standard constructor. TVirtualMCApplication(). Default constructor. ~TVirtualMCApplication(). Destructor. TVirtualMCApplication* Instance(). Static access method. void Field(const Double_t* x, Double_t* b) const; No magnetic field. TVirtualMCApplication(const char* name, const char* title); Standard constructor. void ConstructGeometry(). methods. Construct user geometry. Bool_t MisalignGeometry(); Misalign user geometry (optional). {return kFALSE;}. void ConstructOpGeometry(); Define parameters for optical processes (optional). {}. void InitGeometry(); Initialize geometry; (Usually used to define sensitive volumes IDs). void AddParticles(); Add user defined particles (optional). {}. void AddIons(); Add user defined ions (optional). {}. void GeneratePrimaries(); Generate primary particles. void BeginEvent(); Define actions at the beginning of the e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCApplication.html:7132,Inherit,Inheritance,7132,root/html602/TVirtualMCApplication.html,https://root.cern,https://root.cern/root/html602/TVirtualMCApplication.html,2,['Inherit'],['Inheritance']
Modifiability,"ion, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGObject&operator=(const TGObject& tgo). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGClient*fClientConnection to display server; Handle_tfIdX11/Win32 Window identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SaveAs(const char* filename = """", Option_t* option = """") const; Write this TGObject to a file using TImage, if filename's extension signals; a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename().; Otherwise forward to TObject::SaveAs(). Bool_t IsEqual(const TObject* obj) const; Equal comparison (TGObjects are equal if they have the same; window identifier). If the TGObjects have not been created by; the Window manager (e.g. a TGLVEntry), then fall back to the; default TObject equal comparison. TGObject& operator=(const TGObject& tgo). TGObject(); { }. TGObject(const TGObject& tgo); { }. virtual ~TGObject(); { }. Handle_t GetId() const; { return fId; }. TGClient * GetClient() const; { return fClient; }. ULong_t Hash() const; { return (ULong_t) fId >> 0; }. » Author: Fons Rademakers 27/12/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 201",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGObject.html:5844,Inherit,Inheritance,5844,root/html604/TGObject.html,https://root.cern,https://root.cern/root/html604/TGObject.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGObject&operator=(const TGObject& tgo). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGClient*fClientConnection to display server; Handle_tfIdX11/Win32 Window identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SaveAs(const char* filename = """", Option_t* option = """") const; Write this TGObject to a file using TImage, if filename's extension signals; a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename().; Otherwise forward to TObject::SaveAs(). TGObject& operator=(const TGObject& tgo). TGObject(); { }. TGObject(const TGObject& tgo); { }. virtual ~TGObject(); { }. Handle_t GetId() const; { return fId; }. TGClient * GetClient() const; { return fClient; }. ULong_t Hash() const; { return (ULong_t) fId >> 0; }. Bool_t IsEqual(const TObject* obj) const; { return fId == ((const TGObject *) obj)->fId; }. » Author: Fons Rademakers 27/12/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 13:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGObject.html:5844,Inherit,Inheritance,5844,root/html602/TGObject.html,https://root.cern,https://root.cern/root/html602/TGObject.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion.; 1.7 Using FastCGI interface; FastCGI is a protocol for interfacing interactive programs with a web server like Apache, lighttpd, Microsoft ISS and many others.; When starting THttpServer, one could specify:; serv = new THttpServer(""fastcgi:9000"");; In fact, the FastCGI interface can run in parallel to http server. One can just call:; serv = new THttpServer(""http:8080"");; serv->CreateEngine(""fastcgi:9000"");; One could specify a debug parameter to be able to adjust the FastCGI configuration on the web server:; serv->CreateEngine(""fastcgi:9000?debug=1"");; By default 10 threads are used to process FastCGI requests. This number can be changed with “thrds” url parameter:; serv->CreateEngine(""fastcgi:9000?thrds=20"");; If thrds=0 parameter specified, the only thread will be use to received and process all requests.; All user access will be ruled by the main web server. Authorized account names could be used to configure access restriction in THttpServer.; 1.7.1 Configure fastcgi with Apache2; Since Apache version 2.4 FastCGI is directly supported - there is no need to compile and install external modules any more. One only need to enable mod_proxy and mod_proxy_fcgi modules and add following line to Apache2 configuration file:; ProxyPass ""/root.app/"" ""fcgi://localhost:9000/"" enablereuse=on; More information can be found in FastCGI proxy docu. After restarting apache server one should be able to open address: http://apache_host_name/root.app/. There are many ways to configure user authentication in Apache. Example of digest auth for FastCGI server:; <Location ""/root.app/"">; AuthType Digest; AuthName ""root""; AuthDigestDomain ""/root.app/"" ""root""; AuthDigestProvider file; AuthUserFile ""/srv/auth/auth.txt""; Require valid-user; </Location>; 1.7.2 Configure fastcgi with lighttpd; An example of configuration file for lighttpd server is:; server.modules += ( ""mod_fastcgi"" ); fastcgi.server = (; ""/root.app"" =>; (( ""host"" => ""192.168.1.11"",; ""port"" => 9000,; ""check-local"" => ""dis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html:10238,Config,Configure,10238,root/htmldoc/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html,1,['Config'],['Configure']
Modifiability,"ion.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Int_tfNTrings; Int_tfNVerts; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; UChar_t*fTringCols[3*fNTrings]; Float_t*fTringNorms[3*fNTrings]; Int_t*fTrings[3*fNTrings]; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_t*fVerts[3*fNVerts]; TEveElement*TEveElement::fVizModel! Eleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTriangleSet.html:19664,variab,variable,19664,root/html528/TEveTriangleSet.html,https://root.cern,https://root.cern/root/html528/TEveTriangleSet.html,1,['variab'],['variable']
Modifiability,"ion.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; vector<TString>fNewEventCommands; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveEventManager.html:18516,variab,variable,18516,root/html528/TEveEventManager.html,https://root.cern,https://root.cern/root/html528/TEveEventManager.html,1,['variab'],['variable']
Modifiability,"ion.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Int_tfNTrings; Int_tfNVerts; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; UChar_t*fTringCols[3*fNTrings]; Float_t*fTringNorms[3*fNTrings]; Int_t*fTrings[3*fNTrings]; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_t*fVerts[3*fNVerts]; TEveElement*TEveElement::fVizModel! Eleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTriangleSet.html:20030,variab,variable,20030,root/html530/TEveTriangleSet.html,https://root.cern,https://root.cern/root/html530/TEveTriangleSet.html,5,['variab'],['variable']
Modifiability,"ion.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tfShowTooltip; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Bool_tfUseLightColorSet; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveViewerList.html:19271,variab,variable,19271,root/html528/TEveViewerList.html,https://root.cern,https://root.cern/root/html528/TEveViewerList.html,6,['variab'],['variable']
Modifiability,"ion.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSceneList.html:18734,variab,variable,18734,root/html528/TEveSceneList.html,https://root.cern,https://root.cern/root/html528/TEveSceneList.html,6,['variab'],['variable']
Modifiability,"ion.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; vector<TString>fNewEventCommands; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveEventManager.html:18882,variab,variable,18882,root/html530/TEveEventManager.html,https://root.cern,https://root.cern/root/html530/TEveEventManager.html,5,['variab'],['variable']
Modifiability,"ion.h:235; TList::Addvoid Add(TObject *obj) overrideDefinition TList.h:83; TList::AtTObject * At(Int_t idx) const overrideReturns the object at position idx. Returns 0 if idx is out of range.Definition TList.cxx:355; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::GetUniqueIDvirtual UInt_t GetUniqueID() constReturn the unique object id.Definition TObject.cxx:462; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::SetUniqueIDvirtual void SetUniqueID(UInt_t uid)Set the unique object id.Definition TObject.cxx:797; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TProfile2DProfile2D histograms are used to display the mean value of Z and its error for each cell in X,...Definition TProfile2D.h:27; TProfile2D::MergeLong64_t Merge(TCollection *list) overrideMerge all histograms in the collection in this histogram.Definition TProfile2D.cxx:1227; TProfile2D::PutStatsvoid PutStats(Double_t *stats) overrideReplace current statistics with the values in array stats.Definition TProfile2D.cxx:1474; TProfile2D::BufferFillInt_t BufferFill(Double_t, Double_t) overrideaccumulate arguments in buffer.Definition TProfile2D.h:44; TProfile2D::fTsumwzDouble_t fTsumwzTotal Sum of weight*Z.Definition TProfile2D.h:39; TProfile2D::FillI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:86045,inherit,inherits,86045,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"ion::Arg::None,; 5901 ""--writeEmptyPCM\tWrite an empty ROOT pcm.\n""; 5902 },; 5903 ; 5904 {; 5905 CXXMODULE,; 5906 NOTYPE ,; 5907 """" , ""cxxmodule"",; 5908 ROOT::option::Arg::None,; 5909 ""--cxxmodule\tGenerates a PCM for C++ Modules.\n""; 5910 },; 5911 ; 5912 ; 5913 {; 5914 HELP,; 5915 NOTYPE,; 5916 ""h"" , ""help"",; 5917 ROOT::option::Arg::None,; 5918 ""--help\tPrint usage and exit.\n""; 5919 },; 5920 ; 5921 {; 5922 FAILONWARNINGS,; 5923 NOTYPE,; 5924 """", ""fail_on_warnings"",; 5925 ROOT::option::Arg::None,; 5926 ""--fail_on_warnings\tFail on warnings and errors.\n""; 5927 },; 5928 ; 5929 {; 5930 SELSYNTAXONLY,; 5931 NOTYPE,; 5932 """", ""selSyntaxOnly"",; 5933 ROOT::option::Arg::None,; 5934 ""--selSyntaxOnly\tValidate selection file w/o generating the dictionary.\n""; 5935 },; 5936 ; 5937 {; 5938 NOINCLUDEPATHS,; 5939 NOTYPE ,; 5940 """" , ""noIncludePaths"",; 5941 ROOT::option::Arg::None,; 5942 ""--noIncludePaths\tDo not store the headers' directories in the dictionary. Instead, rely on the environment variable $ROOT_INCLUDE_PATH at runtime.\n""; 5943 },; 5944 ; 5945 // Left intentionally empty not to be shown in the help, like in the first genreflex; 5946 {; 5947 INCLUDE,; 5948 STRING ,; 5949 ""I"" , """" ,; 5950 ROOT::option::FullArg::Required,; 5951 """"; 5952 },; 5953 ; 5954 {; 5955 PREPROCDEFINE,; 5956 STRING ,; 5957 ""D"" , """" ,; 5958 ROOT::option::FullArg::Required,; 5959 """"; 5960 },; 5961 ; 5962 {; 5963 PREPROCUNDEFINE,; 5964 STRING ,; 5965 ""U"" , """" ,; 5966 ROOT::option::FullArg::Required,; 5967 """"; 5968 },; 5969 ; 5970 {; 5971 WARNING,; 5972 STRING ,; 5973 ""W"" , """" ,; 5974 ROOT::option::FullArg::Required,; 5975 """"; 5976 },; 5977 ; 5978 {; 5979 NOMEMBERTYPEDEFS, // Option which is not meant for the user: deprecated; 5980 STRING ,; 5981 """" , ""no_membertypedefs"" ,; 5982 ROOT::option::FullArg::None,; 5983 """"; 5984 },; 5985 ; 5986 {; 5987 NOTEMPLATETYPEDEFS, // Option which is not meant for the user: deprecated; 5988 STRING ,; 5989 """" , ""no_templatetypedefs"" ,; 5990 ROOT::option::FullArg::No",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:235458,variab,variable,235458,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ion::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection::Merge(TCollection* list); virtual Bool_tTObject::Not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TOrdCollection.html:4009,Inherit,InheritsFrom,4009,root/html532/TOrdCollection.html,https://root.cern,https://root.cern/root/html532/TOrdCollection.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ion::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObject**TObjArray::GetObjectRef() const; virtual TObject**TObjArray::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const ROOT::TSchemaRule*GetRuleWithSource(const TString& name) const; const ROOT::TSchemaRule*GetRuleWithTarget(const TString& name) const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; Bool_tHasRuleWithSource(const TString& name, Bool_t needingAlloc) const; Bool_tHasRuleWithTarget(const TString& name, Bool_t willset) const; virtual Int_tTObjArray::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTObjArray::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TObjArray::Last() const; Int_tTSeqCollection::LastIndex() const; Int_tTObjArray::LowerBound() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TObjArray::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TSchemaMatch.html:4195,Inherit,InheritsFrom,4195,root/html532/ROOT__TSchemaMatch.html,https://root.cern,https://root.cern/root/html532/ROOT__TSchemaMatch.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ion:; 109/// Available transform types are:; 110/// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; 111/// see class description for details; 112/// 2. flag option: choosing how much time should be spent in planning the transform:; 113/// Possible options:; 114/// - ""ES"" (from ""estimate"") - no time in preparing the transform,; 115/// but probably sub-optimal performance; 116/// - ""M"" (from ""measure"") - some time spend in finding the optimal way; 117/// to do the transform; 118/// - ""P"" (from ""patient"") - more time spend in finding the optimal way; 119/// to do the transform; 120/// - ""EX"" (from ""exhaustive"") - the most optimal way is found; 121/// This option should be chosen depending on how many transforms of the; 122/// same size and type are going to be done.; 123/// Planning is only done once, for the first transform of this size and type.; 124/// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; 125/// """" - default, changes and returns the global fgFFT variable; 126/// ""K"" (from ""keep"")- without touching the global fgFFT,; 127/// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; 128///; 129/// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.; 130 ; 131TVirtualFFT* TVirtualFFT::FFT(Int_t ndim, Int_t *n, Option_t *option); 132{; 133 ; 134 Int_t inputtype=0, currenttype=0;; 135 TString opt = option;; 136 opt.ToUpper();; 137 //find the tranform flag; 138 Option_t *flag;; 139 flag = ""ES"";; 140 if (opt.Contains(""ES"")) flag = ""ES"";; 141 if (opt.Contains(""M"")) flag = ""M"";; 142 if (opt.Contains(""P"")) flag = ""P"";; 143 if (opt.Contains(""EX"")) flag = ""EX"";; 144 ; 145 Int_t ndiff = 0;; 146 ; 147 if (!opt.Contains(""K"")) {; 148 if (fgFFT){; 149 //if the global transform exists, check if it should be changed; 150 if (fgFFT->GetNdim()!=ndim); 151 ndiff++;; 152 else {; 153 Int_t *ncurrent = fgFFT->GetN();; 154 for (Int_t i=0; i<ndim; i++){; 155 if (n[i]!=ncurrent[i]); 156 ndiff++;; 157 }; 158",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html:5463,variab,variable,5463,doc/master/TVirtualFFT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ion; KEY: TH2F hpxpy;1 py vs px; KEY: TProfile hprof;2 Profile of pz versus px; KEY: TProfile hprof;1 Profile of pz versus px; KEY: TNtuple ntuple;1 Demo ntuple; KEY: TCanvas c1;1 c1; 11.2.7 Saving Collections to Disk; All collection classes inherit from TCollection and hence inherit the TCollection::Write() method. When you call TCollection::Write() each object in the container is written individually into its own key in the file. To write all objects into one key you can specify the name of the key and use the optionTObject::kSingleKey. For example:; root[] TList * list = new TList;; root[] TNamed * n1, * n2;; root[] n1 = new TNamed(""name1"",""title1"");; root[] n2 = new TNamed(""name2"",""title2"");; root[] list->Add(n1);; root[] list->Add(n2);; root[] gFile->WriteObject(list,""list"",TObject::kSingleKey);; 11.2.8 A TFile Object Going Out of Scope; There is another important point to remember about TFile::Close and TFile::Write. When a variable is declared on the stack in a function such as in the code below, it will be deleted when it goes out of scope.; void foo() {; TFile f(""AFile.root"",""RECREATE"");; }; As soon as the function foohas finished executing, the variable f is deleted. When a TFile object is deleted an implicit call to TFile::Close is made. This will save only the file descriptor to disk. It contains the file header, the StreamerInfolist, the key list, the free segment list, and the end address. See “The Physical Layout of ROOT Files”. The TFile::Close does not make a call to Write(), which means that the objects in memory will not be saved in the file. You need to explicitly call TFile::Write() to save the object in memory to file before the exit of the function.; void foo() {; TFile f(""AFile.root"",""RECREATE"");; ... stuff ...; f.Write();; }; To prevent an object in a function from being deleted when it goes out of scope, you can create it on the heap instead of on the stack. This will create a TFile object f, that is available on a global scope, and it will",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:459195,variab,variable,459195,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"ion; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMatrixDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build matrix specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. TGeoMatrixDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). virtual ~TGeoMatrixDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-02 16:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoMatrixDialog.html:24215,Inherit,Inheritance,24215,root/html604/TGeoMatrixDialog.html,https://root.cern,https://root.cern/root/html604/TGeoMatrixDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMatrixDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build matrix specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. TGeoMatrixDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). virtual ~TGeoMatrixDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-30 15:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoMatrixDialog.html:24215,Inherit,Inheritance,24215,root/html602/TGeoMatrixDialog.html,https://root.cern,https://root.cern/root/html602/TGeoMatrixDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMediumDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build volume specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. TGeoMediumDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). virtual ~TGeoMediumDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-02 16:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoMediumDialog.html:24215,Inherit,Inheritance,24215,root/html604/TGeoMediumDialog.html,https://root.cern,https://root.cern/root/html604/TGeoMediumDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMediumDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build volume specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. TGeoMediumDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). virtual ~TGeoMediumDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-30 15:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoMediumDialog.html:24215,Inherit,Inheritance,24215,root/html602/TGeoMediumDialog.html,https://root.cern,https://root.cern/root/html602/TGeoMediumDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVolumeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build volume specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. TGeoVolumeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). virtual ~TGeoVolumeDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-02 16:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoVolumeDialog.html:24215,Inherit,Inheritance,24215,root/html604/TGeoVolumeDialog.html,https://root.cern,https://root.cern/root/html604/TGeoVolumeDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVolumeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build volume specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. TGeoVolumeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). virtual ~TGeoVolumeDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-30 15:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoVolumeDialog.html:24215,Inherit,Inheritance,24215,root/html602/TGeoVolumeDialog.html,https://root.cern,https://root.cern/root/html602/TGeoVolumeDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TASPaletteEditor(TAttImage* attImage, UInt_t w, UInt_t h); Palette editor constructor.; The palette editor aloows the editing of the color palette of the image. ~TASPaletteEditor(); Palette editor destructor. Deletes all frames and their layout hints. void CloseWindow(); Close editor. Bool_t ProcessMessage(Long_t msg, Long_t param1, Long_t param2); Process all editor mouse events. void InsertNewPalette(TImagePalette* newPalette); The newPalette is inserted in the list of palettes (fPaletteList) and; fPalette is set to the newPalette. Protected method,. void Save(); Saves the current palette either into a ROOT file or in an ASCII file.; It is called by the Save - button. Protected method. void Open(); Opens either a ROOT file or an ASCII file and reads a palette.; It is called by the Open - button. Protected method. void UpdateScreen(Bool_t histoUpdate); All widgeds of the screen are updated with the current palette.; Protected method. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TASPaletteEditor.html:23257,Inherit,Inheritance,23257,root/html602/TASPaletteEditor.html,https://root.cern,https://root.cern/root/html602/TASPaletteEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitParametersDialog(const TGWindow* p, const TGWindow* main, TF1* func, TVirtualPad* pad, Int_t* ret_code = 0); Create a dialog for fit function parameters' settings. ~TFitParametersDialog(); Destructor. void CloseWindow(); Close parameters' dialog. void DoCancel(); Slot related to the Cancel button. void DoParBound(Bool_t on); Slot related to the Bound check button. void DoParStep(); Slot related to parameter step setting. void DoParFix(Bool_t on); Slot related to the Fix check button. void SetParameters(); Set the parameter values inside the function. void DoOK(); Slot related to the OK button. void DoApply(); Slot related to the Preview button. void DoReset(); Slot related to the Reset button. void DoSlider(); Slot related to the parameters' value settings. void DoParValue(); Slot related to the parameter value settings. void DoParMinLimit(); Slot related to the minumum parameter limit settings. void DoParMaxLimit(); Slot related t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFitParametersDialog.html:25264,Inherit,Inheritance,25264,root/html602/TFitParametersDialog.html,https://root.cern,https://root.cern/root/html602/TFitParametersDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFunctionParametersDialog(const TGWindow* p, const TGWindow* main, TF1* func, TVirtualPad* pad, Double_t rmin, Double_t rmax); Create the parameters' dialog of currently selected function 'func'. ~TFunctionParametersDialog(); Destructor. void CloseWindow(); Close parameters' dialog. void DoCancel(); Slot related to the Cancel button. void DoFix(Bool_t on); Slot related to the Fix check button. void DoOK(); Slot related to the OK button. void DoApply(); Slot related to the Preview button. void DoReset(); Slot related to the Reset button. void DoSlider(); Slot related to the parameters' value settings. void DoParValue(); Slot related to the parameter value settings. void DoParMinLimit(); Slot related to the minumum parameter limit settings. void DoParMaxLimit(); Slot related to the maximum parameter limit settings. void RedrawFunction(); Redraw function graphics. void HandleButtons(Bool_t update); Handle the button dependent states in th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFunctionParametersDialog.html:24836,Inherit,Inheritance,24836,root/html602/TFunctionParametersDialog.html,https://root.cern,https://root.cern/root/html602/TFunctionParametersDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGColorDialog(const TGWindow* p = 0, const TGWindow* m = 0, Int_t* retc = 0, Pixel_t* color = 0, Bool_t wait = kTRUE); Color selection dialog constructor.; The TGColorDialog presents a full featured color selection dialog.; It uses 2 TGColorPalette's and the TGColorPick widgets. ~TGColorDialog(); TGColorDialog destructor. void SetCurrentColor(Pixel_t col); Change current color. void ColorSelected(Pixel_t ); Emit signal about selected color. void AlphaColorSelected(ULong_t ); Emit signal about selected alpha and color. void CloseWindow(); Called when window is closed via window manager. void UpdateAlpha(Pixel_t* c); Upadate Opacity text entry with alpha value of color c. void UpdateRGBentries(Pixel_t* c); Update RGB text entries with RGB values of color c. void UpdateHLSentries(Pixel_t* c); Update HLS text entries with HLS values of color c. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages for the color se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGColorDialog.html:25331,Inherit,Inheritance,25331,root/html602/TGColorDialog.html,https://root.cern,https://root.cern/root/html602/TGColorDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFileBrowser(const TGWindow* p, TBrowser* b = 0, UInt_t w = 200, UInt_t h = 400); TGFileBrowser constructor. void CreateBrowser(); Create the actual file browser. ~TGFileBrowser(); Destructor. void Add(TObject* obj, const char* name = 0, Int_t check = -1); Add items to the browser. This function has to be called; by the Browse() member function of objects when they are; called by a browser. If check < 0 (default) no check box is drawn,; if 0 then unchecked checkbox is added, if 1 checked checkbox is added. void AddRemoteFile(TObject* obj); Add remote file in list tree. void BrowseObj(TObject* obj); Browse object. This, in turn, will trigger the calling of; TBrowser::Add() which will fill the IconBox and the tree.; Emits signal ""BrowseObj(TObject*)"". void Checked(TObject* obj, Bool_t check); Emits signal when double clicking on icon. Option_t * GetDrawOption() const; returns drawing option. void GetFilePictures(const TGPicture** pic, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFileBrowser.html:25982,Inherit,Inheritance,25982,root/html602/TGFileBrowser.html,https://root.cern,https://root.cern/root/html602/TGFileBrowser.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFileDialog(const TGWindow* p = 0, const TGWindow* main = 0, EFileDialogMode dlg_type = kFDOpen, TGFileInfo* file_info = 0); Create a file selection dialog. Depending on the dlg_type it can be; used for opening or saving a file.; About the first two arguments, p is the parent Window, usually the; desktop (root) window, and main is the main (TGMainFrame) application; window (the one opening the dialog), onto which the dialog is; usually centered, and which is waiting for it to close. ~TGFileDialog(); Delete file dialog. void CloseWindow(); Close file dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages generated by the user input in the file dialog. TGFileInfo& operator=(const TGFileDialog& ). TGFileDialog(const TGFileDialog& ). » Author: Fons Rademakers 20/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:50; This page has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGFileDialog.html:24490,Inherit,Inheritance,24490,root/html604/TGFileDialog.html,https://root.cern,https://root.cern/root/html604/TGFileDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFileDialog(const TGWindow* p = 0, const TGWindow* main = 0, EFileDialogMode dlg_type = kFDOpen, TGFileInfo* file_info = 0); Create a file selection dialog. Depending on the dlg_type it can be; used for opening or saving a file.; About the first two arguments, p is the parent Window, usually the; desktop (root) window, and main is the main (TGMainFrame) application; window (the one opening the dialog), onto which the dialog is; usually centered, and which is waiting for it to close. ~TGFileDialog(); Delete file dialog. void CloseWindow(); Close file dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages generated by the user input in the file dialog. TGFileInfo& operator=(const TGFileDialog& ). TGFileDialog(const TGFileDialog& ). » Author: Fons Rademakers 20/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:50; This page has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFileDialog.html:24490,Inherit,Inheritance,24490,root/html602/TGFileDialog.html,https://root.cern,https://root.cern/root/html602/TGFileDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFontDialog(const TGWindow* parent = 0, const TGWindow* t = 0, TGFontDialog::FontProp_t* fontProp = 0, const TString& sample = """", char** fontList = 0, Bool_t wait = kTRUE); Create font dialog. When closed via OK button fontProp is set to; the newly selected font. If closed via Cancel button or WM close box; fontProp->fName == """". ~TGFontDialog(); Delete all widgets. void CloseWindow(); Called when window is closed via window manager. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Handle dialog events. Bool_t Build(char** fontList, Int_t cnt); Build font dialog. void UpdateStyleSize(const char* family); Build font style and size list boxes. void GetFontName(); Sets fLName and other data members. void SetFont(TGFont* font); Set font. void SetColor(Pixel_t color); Set color. void SetAlign(Int_t align); Set align. void EnableAlign(Bool_t on = kTRUE); Enable/disable align combobox. TGFontDialog(const TGWindow* parent = 0, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFontDialog.html:24458,Inherit,Inheritance,24458,root/html602/TGFontDialog.html,https://root.cern,https://root.cern/root/html602/TGFontDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGotoDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, Long_t* ret_code = 0, UInt_t options = kVerticalFrame); Create a dialog to GoTo a specific line number. Returns -1 in; ret_code in case no valid line number was given or in case; cancel was pressed. If on input *ret_code is > 0 then this value; will be used as default value. ~TGGotoDialog(); Clean up goto dialog. void CloseWindow(); Close the dialog. On close the dialog will be deleted and cannot be; re-used. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process goto dialog widget messages. TGGotoDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, Long_t* ret_code = 0, UInt_t options = kVerticalFrame). » Author: Fons Rademakers 10/7/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:50; This page has been automatically gene",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGGotoDialog.html:23650,Inherit,Inheritance,23650,root/html604/TGGotoDialog.html,https://root.cern,https://root.cern/root/html604/TGGotoDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGotoDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, Long_t* ret_code = 0, UInt_t options = kVerticalFrame); Create a dialog to GoTo a specific line number. Returns -1 in; ret_code in case no valid line number was given or in case; cancel was pressed. If on input *ret_code is > 0 then this value; will be used as default value. ~TGGotoDialog(); Clean up goto dialog. void CloseWindow(); Close the dialog. On close the dialog will be deleted and cannot be; re-used. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process goto dialog widget messages. TGGotoDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, Long_t* ret_code = 0, UInt_t options = kVerticalFrame). » Author: Fons Rademakers 10/7/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:51; This page has been automatically gene",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGGotoDialog.html:23650,Inherit,Inheritance,23650,root/html602/TGGotoDialog.html,https://root.cern,https://root.cern/root/html602/TGGotoDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGHtmlBrowser(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); TGHtmlBrowser constructor. void Selected(const char* txt); Open (browse) selected URL. void URLChanged(); URL combobox has changed. void Back(); Handle ""Back"" navigation button. Bool_t CheckAnchors(const char* ); Check if we just change position in the page (using anchor); and return kTRUE if any anchor has been found and followed. void Forward(); Handle ""Forward"" navigation button. void Reload(); Handle ""Reload"" navigation button. void Stop(); Handle ""Reload"" navigation button. void MouseOver(const char* ); Handle ""MouseOver"" TGHtml signal. void MouseDown(const char* ); Handle ""MouseDown"" TGHtml signal. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Process Events. TGHtmlBrowser(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); { ; }. void Clicked(char* uri); { Emit(""Clicked(char *)"",uri); }. » Aut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGHtmlBrowser.html:23263,Inherit,Inheritance,23263,root/html602/TGHtmlBrowser.html,https://root.cern,https://root.cern/root/html602/TGHtmlBrowser.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGPrintDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, char** printerName = 0, char** printProg = 0, Int_t* ret_code = 0, UInt_t options = kVerticalFrame); Create the printer dialog box. Returns kTRUE in ret_code when; printerName and printProg have been set and cancel was not pressed,; kFALSE otherwise. ~TGPrintDialog(); Clean up print dialog. void CloseWindow(); Close the dialog. On close the dialog will be deleted and cannot be; re-used. void GetPrinters(); Ask the system fo the list of available printers and populate the combo; box. If there is a default printer, select it in the list. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process print dialog widget messages. TGPrintDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, char** printerName = 0, char** printProg = 0, Int_t* ret_code = 0, UInt_t options = kVerticalFrame). » Author: Fons Rademake",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPrintDialog.html:24232,Inherit,Inheritance,24232,root/html602/TGPrintDialog.html,https://root.cern,https://root.cern/root/html602/TGPrintDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTextEditor(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); TGTextEditor constructor with file name as first argument. TGTextEditor(TMacro* macro, const TGWindow* p = 0, UInt_t w = 0, UInt_t h = 0); TGTextEditor constructor with pointer to a TMacro as first argument. ~TGTextEditor(); TGTextEditor destructor. void DeleteWindow(); Delete TGTextEditor Window. void Build(); Build TGTextEditor widget. void DataDropped(char* fname); Update file information when receiving the signal; DataDropped from TGTextEdit widget. void DataChanged(); Slot setting the fTextChanged flag to true when the text has been; modified in fTextEdit. void LoadFile(const char* fname = 0); Load a file into the editor. If fname is 0, a TGFileDialog will popup. void SaveFile(const char* fname); Save the edited text in the file ""fname"". Bool_t SaveFileAs(); Save the edited text in a file selected with TGFileDialog.; Shouldn't we create ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextEditor.html:27965,Inherit,Inheritance,27965,root/html602/TGTextEditor.html,https://root.cern,https://root.cern/root/html602/TGTextEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTransientFrame(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kVerticalFrame); Create a transient window. A transient window is typically used for; dialog boxes. void CenterOnParent(Bool_t croot = kTRUE, TGTransientFrame::EPlacement pos = kCenter); Position transient frame centered relative to the parent frame.; If fMain is 0 (i.e. TGTransientFrame is acting just like a; TGMainFrame) and croot is true, the window will be centered on; the root window, otherwise no action is taken and the default; wm placement will be used. void SaveSource(const char* filename = ""Rootdlog.C"", Option_t* option = """"); Save the GUI tranzient frame widget in a C++ macro file. void SavePrimitive(ostream& out, Option_t* option = """"); Save a transient frame widget as a C++ statement(s) on output stream out. TGFrame& operator=(const TGTransientFrame& ). TGTransientFrame(const TGTransientFrame& ). const TGWindow * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTransientFrame.html:23921,Inherit,Inheritance,23921,root/html602/TGTransientFrame.html,https://root.cern,https://root.cern/root/html602/TGTransientFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressMemoryPlot(TProofProgressDialog* d, Int_t w = 700, Int_t h = 300); Main constructor. ~TProofProgressMemoryPlot(); Destructor. TGListBox* BuildLogList(TGFrame* parent); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void Clear(Option_t* = 0); Clear the canvases. void DoPlot(); Draw the plot from the logs. TGraph * DoAveragePlot(Int_t& max_el, Int_t& min_el); Create the average plots. Int_t ParseLine(TString l, Long64_t& v, Long64_t& r, Long64_t& e); Extract from line 'l' the virtual memory 'v', the resident memory 'r' and the; number of events 'e'.; The line is assumed to be in the form; ""... Memory 130868 virtual 31540 ... event 5550""; The fields are only filled if >= 0 .; Return 0 on success, -1 if any of the values coudl not be filled (the output; fields are not touched in such a case). TGraph * DoWorkerPlot(TProofLogElem* ple); Make a memory consumption graph for a worke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofProgressMemoryPlot.html:23978,Inherit,Inheritance,23978,root/html602/TProofProgressMemoryPlot.html,https://root.cern,https://root.cern/root/html602/TProofProgressMemoryPlot.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupCintExport(TClass* cl); Add ""Export to CINT"" into context-menu for class cl. void CalculateReparentXY(TGObject* parent, Int_t& x, Int_t& y); Calculate position of a widget for reparenting into parent. TEveBrowser(UInt_t w, UInt_t h); Constructor. void EveMenu(Int_t id); Handle events from Eve menu. void InitPlugins(Option_t* opt = ""FI""); Initialize standard plugins. TGFileBrowser* MakeFileBrowser(Bool_t make_default = kFALSE); Create a file-browser. Caller should provide Start/StopEmbedding() calls; and populate the new browser.; If flag make_default is kTRUE, the default file-browser is set to the; newly created browser. TGFileBrowser* GetFileBrowser() const; Returns the default file-browser. void SetFileBrowser(TGFileBrowser* b); Set the default file browser. void ReallyDelete(); Override from TRootBrowser. We need to be more brutal as fBrowser is; not set in Eve case. void CloseTab(Int_t id); Virtual from TRootBrowser. Nee",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveBrowser.html:29272,Inherit,Inheritance,29272,root/html602/TEveBrowser.html,https://root.cern,https://root.cern/root/html602/TEveBrowser.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion;  Base class for MinimizerVariable transformations defining the functions to deal with bounded parameters. More...;  ; class  ROOT::Math::MinimTransformFunction;  MinimTransformFunction class to perform a transformations on the variables to deal with fixed or limited variables (support both double and single bounds) The class manages the passed function pointer. More...;  ; class  ROOT::Math::MinimTransformVariable;  MinimTransformVariable class Contains meta information of the variables such as bounds, fix flags and deals with transformation of the variable The class does not contain the values and the step size (error) of the variable This is an internal class used by the MinimTransformFunction class. More...;  ; class  ROOT::Math::MultiNumGradFunction;  MultiNumGradFunction class to wrap a normal function in a gradient function using numerical gradient calculation provided by the class Derivator (based on GSL numerical derivation) More...;  ; class  ROOT::Math::SinVariableTransformation;  Sin Transformation class for dealing with double bounded variables. More...;  ; class  ROOT::Math::SqrtLowVariableTransformation;  Sqrt Transformation class for dealing with lower bounded variables. More...;  ; class  ROOT::Math::SqrtUpVariableTransformation;  Sqrt Transformation class for dealing with upper bounded variables. More...;  . Enumerations; enum  ROOT::Math::EGSLMinimizerType { ;   ROOT::Math::kConjugateFR; , ROOT::Math::kConjugatePR; , ROOT::Math::kVectorBFGS; , ROOT::Math::kVectorBFGS2; , ;   ROOT::Math::kSteepestDescent. };  enumeration specifying the types of GSL minimizers More...;  . Enumeration Type Documentation. ◆ EGSLMinimizerType. enum ROOT::Math::EGSLMinimizerType. enumeration specifying the types of GSL minimizers . EnumeratorkConjugateFR ; kConjugatePR ; kVectorBFGS ; kVectorBFGS2 ; kSteepestDescent . Definition at line 49 of file GSLMinimizer.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MultiMin.html:3975,variab,variables,3975,doc/master/group__MultiMin.html,https://root.cern,https://root.cern/doc/master/group__MultiMin.html,3,['variab'],['variables']
Modifiability,"ion;  CTIDNode;  CTLoopConfigurationBase class of the Configurations for the member wise looping routines ;  CTNestedIDs;  ►Nvecgeom;  ►Nwriter;  Cwriter;  C_x3d_data_;  C_x3d_sizeof_;  CAnyCollectionProxy;  CAnyCollectionStreamer;  CBalancerInfo;  Cbasic_string_view;  ►CBidirMMapPipeBidirMMapPipe creates a bidirectional channel between the current process and a child it forks ;  CPollEntryFor poll() interface ;  CBinaryOpPolicy;  CBinomialNeymanInterval;  CBinomialProbHelper;  CColorStruct_t;  CCompareAsc;  CcompareBAasc;  CcompareBAdesc;  CCompareDesc;  CContDistFree functions adapter needed by UNURAN for onedimensional continuous distributions ;  CContextSmall helper to keep current directory context ;  CCpuInfo_t;  CDebuggingSamplerDebuggingSampler is a simple implementation of the DistributionCreator interface used for debugging ;  CDebuggingTestStatDebuggingTestStat is a simple implementation of the DistributionCreator interface used for debugging ;  CDiscrDistFree functions adapter needed by UNURAN for one-dimensional discrete distribution ;  CEvent_t;  CExceptionContext_t;  CFeldmanCousinsBinomialInterval;  CFeldmanCousinsSorter;  CFileStat_t;  CFontAttributes_t;  CFontMetrics_t;  CFoption_t;  Cfuncptr_and_voidptr_t;  CGcCache_t;  CGCValues_t;  Cgroup;  Ch1analysis;  Ch1analysisTreeReader;  Chash< std::experimental::basic_string_view< _CharT, _Traits > >;  CHelperOps;  CHEPEVT_DEFHEPEVT common block ;  CHit;  CHoption_tHistogram option structure ;  CHparam_tHistogram parameters structure ;  CJet;  CJetEvent;  CMemInfo_t;  Cmg_callbacks;  Cmg_client_options;  Cmg_form_data_handler;  Cmg_option;  ►Cmg_request_info;  Cmg_header;  Cmg_server_ports;  CMultiDistFree functions adapter needed by UNURAN for multidimensional cont distribution ;  CMYSQL_BIND;  CMYSQL_STMT;  CNuMuToNuE_Oscillation;  ►CParamHistFunc;  CCacheElem;  CPassiveKeyGrab;  Cpasswd;  CPattern;  CPgSQL_Stmt_t;  CPictureAttributes_t;  ►CPiecewiseInterpolation;  CCacheElem;  CPoint_t;  CProcInfo_t; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:88637,adapt,adapter,88637,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,1,['adapt'],['adapter']
Modifiability,"ion=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for DummyObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~DummyObject(). DummyObject::~DummyObject ; (; ). inlineoverride . Definition at line 58 of file rootqt5.cpp. gui/qt5webdisplay/rootqt5.cpp. DummyObject. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:35 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classDummyObject.html:9184,inherit,inherited,9184,doc/master/classDummyObject.html,https://root.cern,https://root.cern/doc/master/classDummyObject.html,2,['inherit'],['inherited']
Modifiability,"ion=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGRegion (Bool_t);  Create empty region. ;  ; TGRegion CopyRegion () const;  Copy a region. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGRegionData * fData;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGImageMap.h>. Inheritance diagram for TGRegion:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERegionType. enum TGRegion::ERegionType. EnumeratorkRectangle ; kEllipse . Definition at line 36 of file TGImageMap.h. Constructor & Destructor Documentation. ◆ TGRegion() [1/7]. TGRegion::TGRegion ; (; Bool_t ; is_null). protected . Create empty region. ; Definition at line 89 of file TGImageMap.cxx. ◆ TGRegion() [2/7]. TGRegion::TGRegion ; (; ). Create a region object. ; Definition at line 77 of file TGImageMap.cxx. ◆ TGRegion() [3/7]. TGRegion::TGRegion ; (; Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h, . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRegion.html:11961,inherit,inherited,11961,doc/master/classTGRegion.html,https://root.cern,https://root.cern/doc/master/classTGRegion.html,1,['inherit'],['inherited']
Modifiability,"ion=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from RooPrintable;  RooPrintable ();  ; virtual ~RooPrintable ();  ; virtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printExtras (std::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Types; enum  Message { ;   SendReal =0; , SendCat; , Calculate; , Retrieve; , ;   ReturnValue; , Terminate; , ConstOpt; , Verbose; , ;   LogEvalError; , ApplyNLLW2; , EnableOffset; , CalculateNoOffset. };  ; enum  State { Initialize; , Client; , Server; , Inline; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void constOptimizeTestStatistic (ConstOpCode opcode, bool doAlsoTracking=true) override;  Intercept call to optimize constant term in test statistics and forward it to object on server side. ;  ; void doApplyNLLW2 (bool flag);  ; double evaluate () const override;  Send message to server process to retrieve output value If error were logged use logEvalError() on remote side transfer those errors to the local eval error queue. ;  ; virtual double getCarry () const;  ; void initialize ();  Initialize the remote process and message passing pipes between current process and remote process. ;  ; void initVars ();  Initialize list of variables of front-end argument 'arg'. ;  ; void serverLoop ();  Server loop of remote processes. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:46739,inherit,inherited,46739,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['inherit'],['inherited']
Modifiability,"ion=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:42832,inherit,inherited,42832,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"ionCheck;  CTViewSee TView3D ;  CTView3DThe 3D view class ;  CTViewer3DPadProvides 3D viewer interface (TVirtualViewer3D) support on a pad ;  CTViewPubDataMembersView implementing the TList interface and giving access all the TDictionary describing public data members in a class and all its base classes without caching any of the TDictionary pointers ;  CTViewPubDataMembersIterIterator of over the view's content ;  CTViewPubFunctionsView implementing the TList interface and giving access all the TFunction describing public methods in a class and all its base classes without caching any of the TFunction pointers ;  CTViewPubFunctionsIterIterator of over the view's content ;  CTViewTimer;  CTVirtualArrayWrapper around an object and giving indirect access to its content even if the object is not of a class in the Cint/Reflex dictionary ;  CTVirtualAuth;  CTVirtualBranchBrowsableTVirtualBranchBrowsable is a base class (not really abstract, but useless by itself) for helper objects that extend TBranch's browsing support ;  CTVirtualCollectionIteratorsSmall helper class to generically acquire and release iterators ;  ►CTVirtualCollectionProxy;  CTPushPop;  ►CTVirtualCollectionPtrIterators;  CTInternalIterator;  CTVirtualDragManager;  CTVirtualFFTTVirtualFFT is an interface class for Fast Fourier Transforms ;  CTVirtualFitterAbstract Base Class for Fitting ;  CTVirtualGeoConverterAbstract class for geometry converters ;  CTVirtualGeoPainterAbstract class for geometry painters ;  CTVirtualGeoTrackBase class for user-defined tracks attached to a geometry ;  CTVirtualGLManip;  CTVirtualGLPainter;  CTVirtualGraphPainterAbstract interface to a histogram painter ;  CTVirtualHistPainterAbstract interface to a histogram painter ;  CTVirtualIndexAbstract interface for Tree Index ;  CTVirtualIsAProxy;  CTVirtualMagFieldAbstract class for magnetic field ;  CTVirtualMCAbstract Monte Carlo interface ;  CTVirtualMCApplicationInterface to a user Monte Carlo application ;  CTVirtualMCDecay",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:195539,extend,extend,195539,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,5,['extend'],['extend']
Modifiability,"ionCheck;  CTViewSee TView3D ;  CTView3DThe 3D view class ;  CTViewer3DPadProvides 3D viewer interface (TVirtualViewer3D) support on a pad ;  CTViewPubDataMembersView implementing the TList interface and giving access all the TDictionary describing public data members in a class and all its base classes without caching any of the TDictionary pointers ;  CTViewPubDataMembersIterIterator of over the view's content ;  CTViewPubFunctionsView implementing the TList interface and giving access all the TFunction describing public methods in a class and all its base classes without caching any of the TFunction pointers ;  CTViewPubFunctionsIterIterator of over the view's content ;  CTViewTimer;  CTVirtualArrayWrapper around an object and giving indirect access to its content even if the object is not of a class in the Cint/Reflex dictionary ;  CTVirtualAuth;  CTVirtualBranchBrowsableTVirtualBranchBrowsable is a base class (not really abstract, but useless by itself) for helper objects that extend TBranch's browsing support ;  CTVirtualCollectionIteratorsSmall helper class to generically acquire and release iterators ;  ►CTVirtualCollectionProxy;  CTPushPop;  ►CTVirtualCollectionPtrIterators;  CTInternalIterator;  CTVirtualDragManager;  CTVirtualFFTTVirtualFFT is an interface class for Fast Fourier Transforms ;  CTVirtualFitterAbstract Base Class for Fitting ;  CTVirtualGeoPainter;  CTVirtualGeoTrack;  CTVirtualGLManip;  CTVirtualGLPainter;  CTVirtualGraphPainterAbstract interface to a histogram painter ;  CTVirtualHistPainterAbstract interface to a histogram painter ;  CTVirtualIndexAbstract interface for Tree Index ;  CTVirtualIsAProxy;  CTVirtualMagField;  CTVirtualMC;  CTVirtualMCApplication;  CTVirtualMCDecayer;  CTVirtualMCGeometry;  CTVirtualMCStack;  CTVirtualMonitoringReader;  CTVirtualMonitoringWriter;  CTVirtualMutexThis class implements a mutex interface ;  CTVirtualObjectWrapper around an object and giving indirect access to its content even if the object is not ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:163279,extend,extend,163279,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['extend'],['extend']
Modifiability,"ionErrorsX1, Double_t* positionErrorsY1); voidGetPositions(Double_t* positionsX, Double_t* positionsY, Double_t* positionsX1, Double_t* positionsY1); voidGetRo(Double_t& ro, Double_t& roErr); voidGetSigmaX(Double_t& sigmaX, Double_t& sigmaErrX); voidGetSigmaY(Double_t& sigmaY, Double_t& sigmaErrY); voidGetTailParameters(Double_t& txy, Double_t& txyErr, Double_t& tx, Double_t& txErr, Double_t& ty, Double_t& tyErr, Double_t& bx, Double_t& bxErr, Double_t& by, Double_t& byErr, Double_t& sxy, Double_t& sxyErr, Double_t& sx, Double_t& sxErr, Double_t& sy, Double_t& syErr); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGetVolumeErrors(Double_t* volumeErrors); voidGetVolumes(Double_t* volumes); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSpectrum2Fit&operator=(const TSpectrum2Fit&); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Fit.html:4308,Inherit,InheritsFrom,4308,root/html602/TSpectrum2Fit.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Fit.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ionGradient&Grad() const; boolHasAccurateCovar() const; boolHasCovariance() const; boolHasMadePosDefCovar() const; boolHasPosDefCovar() const; boolHasReachedCallLimit() const; boolHasValidCovariance() const; boolHasValidParameters() const; boolHesseFailed() const; boolIsAboveMaxEdm() const; boolIsValid() const; intNFcn() const; ROOT::Minuit2::FunctionMinimum&operator=(const ROOT::Minuit2::FunctionMinimum& min); const ROOT::Minuit2::MinimumParameters&Parameters() const; const ROOT::Minuit2::MinimumSeed&Seed() const; voidSetErrorDef(double up); const ROOT::Minuit2::MinimumState&State() const; const vector<ROOT::Minuit2::MinimumState>&States() const; doubleUp() const; const ROOT::Minuit2::MnUserCovariance&UserCovariance() const; const ROOT::Minuit2::MnUserParameters&UserParameters() const; const ROOT::Minuit2::MnUserParameterState&UserState() const. Data Members; private:. ROOT::Minuit2::MnRefCountedPointer<ROOT::Minuit2::BasicFunctionMinimum>fData. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, double up); constructor from only MinimumSeed. Minimum is only from seed result not full minimization. {}. FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, const vector<ROOT::Minuit2::MinimumState>& states, double up); constructor at the end of a successfull minimization from seed and vector of states. {}. FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, const vector<ROOT::Minuit2::MinimumState>& states, double up, ROOT::Minuit2::FunctionMinimum::MnReachedCallLimit ); constructor at the end of a failed minimization due to exceeding function call limit. {}. FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, const vector<ROOT::Minuit2::MinimumState>& states, double up, ROOT::Minuit2::FunctionMinimum::MnAboveMaxEdm ); constructor at the end of a failed minimization due to edm above maximum value. {}. FunctionMinimum(const ROOT::Minuit2::FunctionMinimum& min); copy ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__FunctionMinimum.html:2506,Inherit,Inheritance,2506,root/html602/ROOT__Minuit2__FunctionMinimum.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__FunctionMinimum.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ionHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(); TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(const TMVA::IFitterTarget&); TMVA::IMethodTMVA::IMethod::IMethod(); TMVA::IMethodTMVA::IMethod::IMethod(const TMVA::IMethod&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TMVA::MethodBaseTMVA::MethodBase::MethodBase(const TMVA::MethodBase&); TMVA::MethodBaseTMVA::MethodBase::MethodBase(TMVA::Types::EMVA methodType, TMVA::DataSetInfo& dsi, const TString& weightFile, TDirectory* theBaseDir = 0); TMVA::MethodBaseTMVA::MethodBase::Meth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodFDA.html:8068,Inherit,InheritsFrom,8068,root/html602/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodFDA.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ionHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(); TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(const TMVA::IFitterTarget&); TMVA::IMethodTMVA::IMethod::IMethod(); TMVA::IMethodTMVA::IMethod::IMethod(const TMVA::IMethod&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TMVA::MethodBaseTMVA::MethodBase::MethodBase(const TMVA::MethodBase&); TMVA::MethodBaseTMVA::MethodBase::MethodBase(TMVA::Types::EMVA methodType, TMVA::DataSetInfo& dsi, const TString& weightFile, TDirectory* theBaseDir = 0); TMVA::MethodBaseTMVA::MethodBase::MethodBase(const TString",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCuts.html:9978,Inherit,InheritsFrom,9978,root/html602/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCuts.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ionJitstd::shared_ptr< RJittedVariation > BookVariationJit(const std::vector< std::string > &colNames, std::string_view variationName, const std::vector< std::string > &variationTags, std::string_view expression, RLoopManager &lm, RDataSource *ds, const RColumnRegister &colRegister, const ColumnNames_t &branches, std::shared_ptr< RNodeBase > *upcastNodeOnHeap, bool isSingleColumn)Book the jitting of a Vary call.Definition RDFInterfaceUtils.cxx:782; ROOT::Internal::RDF::CheckForDuplicateSnapshotColumnsvoid CheckForDuplicateSnapshotColumns(const ColumnNames_t &cols)Definition RDFInterfaceUtils.cxx:985; ROOT::Internal::RDF::ConvertRegexToColumnsColumnNames_t ConvertRegexToColumns(const ColumnNames_t &colNames, std::string_view columnNameRegexp, std::string_view callerName)Definition RDFInterfaceUtils.cxx:450; ROOT::Internal::RDF::AddSizeBranchesstd::pair< std::vector< std::string >, std::vector< std::string > > AddSizeBranches(const std::vector< std::string > &branches, TTree *tree, std::vector< std::string > &&colsWithoutAliases, std::vector< std::string > &&colsWithAliases)Return copies of colsWithoutAliases and colsWithAliases with size branches for variable-sized array b...Definition RDFInterfaceUtils.cxx:1001; ROOT::Internal::RDF::BookDefinePerSampleJitstd::shared_ptr< RJittedDefine > BookDefinePerSampleJit(std::string_view name, std::string_view expression, RLoopManager &lm, const RColumnRegister &colRegister, std::shared_ptr< RNodeBase > *upcastNodeOnHeap)Book the jitting of a DefinePerSample call.Definition RDFInterfaceUtils.cxx:750; ROOT::Internal::TreeUtils::GetTopLevelBranchNamesstd::vector< std::string > GetTopLevelBranchNames(TTree &t)Get all the top-level branches names, including the ones of the friend trees.Definition InternalTreeUtils.cxx:74; ROOT::Minuit2::GradientParameterSpace::Internal@ Internal; ROOT::RDF::RNodeRInterface<::ROOT::Detail::RDF::RNodeBase, void > RNodeDefinition InterfaceUtils.hxx:57; ROOT::RDF::ColumnNames_tstd::vector< std::string ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:223775,variab,variable-sized,223775,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable-sized']
Modifiability,"ionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:10368,inherit,inherited,10368,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,2,['inherit'],['inherited']
Modifiability,"ionModel: public RooAbsPdf. RooResolutionModel is the base class of for PDFs that represent a; resolution model that can be convoluted with physics a physics model of the form. Phys(x,a,b) = Sum_k coef_k(a) * basis_k(x,b). where basis_k are a limited number of functions in terms of the variable; to be convoluted and coef_k are coefficients independent of the convolution; variable. Classes derived from RooResolutionModel implement; _ _ _ _; R_k(x,b,c) = Int(dx') basis_k(x',b) * resModel(x-x',c). which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; _ _ _ _ _ _; PDF(x,a,b,c) = Sum_k coef_k(a) * R_k(x,b,c). A minimal implementation of a RooResolutionModel consists of a. Int_t basisCode(const char* name). function indication which basis functions this resolution model supports, and. Double_t evaluate(). Implementing the resolution model, optionally convoluted with one of the; supported basis functions. RooResolutionModel objects can be used as regular; PDFs (They inherit from RooAbsPdf), or as resolution model convoluted with; a basis function. The implementation of evaluate() can identify the requested; from of use from the basisCode() function. If zero, the regular PDF value; should be calculated. If non-zero, the models value convoluted with the; basis function identified by the code should be calculated. Optionally, analytical integrals can be advertised and implemented, in the; same way as done for regular PDFS (see RooAbsPdf for further details).; Also in getAnalyticalIntegral()/analyticalIntegral() the implementation; should use basisCode() to determine for which scenario the integral is; requested. The choice of basis returned by basisCode() is guaranteed not to change; of the lifetime of a RooResolutionModel object. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooResolutionModel(); voidTObject::AbstractMethod(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooResolutionModel.html:1288,inherit,inherit,1288,root/html526/RooResolutionModel.html,https://root.cern,https://root.cern/root/html526/RooResolutionModel.html,11,['inherit'],['inherit']
Modifiability,"ionMultiDim>::kLeastSquare; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::kLogLikelihood; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::kUndefined. protected:. shared_ptr<ROOT::Fit::UnBinData>ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDim,ROOT::Fit::UnBinData>::fData; shared_ptr<ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::IModelFunction>ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDim,ROOT::Fit::UnBinData>::fFunc. private:. vector<double>fGradfor derivatives; boolfIsExtendedflag for indicating if likelihood is extended; unsigned intfNEffPointsnumber of effective points used in the fit; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new LogLikelihoodFCN(*this); }. unsigned int NFitPoints() const; using BaseObjFunction::operator();; effective points used in the fit. { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th likelihood contribution and its gradient. void Gradient(const double* x, double* g) const; need to be virtual to be instantited. void UseSumOfWeightSquare(bool on = true); Use sum of the weight squared in evaluating the likelihood; (this is needed for calculating the errors). double DoEval(const double* x) const. Evaluation of the function (required by interface). double DoDerivative(const double* x, unsigned int icoord) const; for derivatives. » Author: L. Moneta Fri Aug 17 14:29:24 2007 » Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:33; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:6384,Inherit,Inheritance,6384,root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ionMultiDim>::operator=(const ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>&); virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::UpdateNCalls() const. protected:. virtual voidSetNFitPoints(unsigned int n) const. private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const. Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; unsigned intfNEffPointsnumber of effective points used in the fit . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function. unsigned int NFitPoints() const; effective points used in the fit (exclude the rejected one). { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th chi-square residual. void Gradient(const double* x, double* g) const; need to be virtual to be instantiated. void SetNFitPoints(unsigned int n) const; set number of fit points (need to be called in const methods, make it const). { fNEffPoints = n; }. double DoEval(const double* x) const. Evaluation of the function (required by interface). double DoDerivative(const double* x, unsigned int icoord) const; for derivatives. » Author: L. Moneta Tue Sep 5 09:13:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html:3331,Inherit,Inheritance,3331,root/html534/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ionMultiDim>::operator=(const ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>&); virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::UpdateNCalls() const. protected:. virtual voidSetNFitPoints(unsigned int n) const. private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const. Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; unsigned intfNEffPointsnumber of effective points used in the fit . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function. unsigned int NFitPoints() const; effective points used in the fit (exclude the rejected one). { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th chi-square residual. void Gradient(const double* x, double* g) const; need to be virtual to be instantiated. void SetNFitPoints(unsigned int n) const; set number of fit points (need to be called in const methods, make it const). { fNEffPoints = n; }. double DoEval(const double* x) const. Evaluation of the function (required by interface). double DoDerivative(const double* x, unsigned int icoord) const; for derivatives. » Author: L. Moneta Tue Sep 5 09:13:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id: Chi2FCN.h 40577 2011-08-12 10:43:12Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or sugge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html:3331,Inherit,Inheritance,3331,root/html532/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ionOneDim * func;  ; RooRealProxy var;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctor1DBinding.html:55884,inherit,inherited,55884,doc/master/classRooFunctor1DBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctor1DBinding.html,1,['inherit'],['inherited']
Modifiability,"ionOutput.root"", ""RECREATE"");; ; /***; ## Create TMVA Factory; ; Create the Factory class. Later you can choose the methods; whose performance you'd like to investigate.; ; The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ; - The first argument is the base of the name of all the output; weight files in the directory weight/ that will be created with the; method parameters; ; - The second argument is the output file for the training results; ; - The third argument is a string option defining some general configuration for the TMVA session.; For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; option string; ; - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; input variables; ***/; ; TMVA::Factory factory(; ""TMVA_CNN_Classification"", outputFile,; ""!V:ROC:!Silent:Color:AnalysisType=Classification:Transformations=None:!Correlations"");; ; /***; ; ## Declare DataLoader(s); ; The next step is to declare the DataLoader class that deals with input variables; ; Define the input variables that shall be used for the MVA training; note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]; ; In this case the input data consists of an image of 16x16 pixels. Each single pixel is a branch in a ROOT TTree; ; **/; ; TMVA::DataLoader loader(""dataset"");; ; /***; ; ## Setup Dataset(s); ; Define input data file and signal and background trees; ; **/; ; std::unique_ptr<TFile> inputFile{TFile::Open(inputFileName)};; if (!inputFile) {; Error(""TMVA_CNN_Classification"", ""Error opening input file %s - exit"", inputFileName.Data());; return;; }; ; // --- Register the training and test trees; ; auto signalTree = inputFile->Get<TTree>(""sig_tree"");; auto backgroundTree = inputFile->Get<TTree>(""bkg_tree"");; ; if (!signalTree) {; Error(""TMVA_CNN_Classification"", ""Could not ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:50018,variab,variables,50018,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,5,['variab'],"['variable', 'variables']"
Modifiability,"ionPointbreak-down point for gradient regression; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; UInt_tfUseNTrainEventsnumber of randomly picked training events used in randomised (and bagged) trees; UInt_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<const TMVA::Event*>fValidationSamplethe Validation events; vector<Double_t>fVariableImportancethe relative importance of the different variables; map<const TMVA::Event*,std::pair<Double_t,Double_t> >fWeightedResidualsweighted regression residuals; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBDT(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for the ""boosted decision trees"". MethodBDT(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL). Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); BDT can handle classification with multiple classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; nTrees number of trees in the forest to be created; BoostType the boosting type for the trees in the forest (AdaBoost e.t.c..); known: AdaBoost; AdaBoostR2 (Adaboost for regression); Bagging; GradBoost; AdaBoostBeta the boosting parameter, beta, for AdaBoost; UseRandomisedTrees choose at each node splitting a random set of va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBDT.html:26124,Inherit,Inheritance,26124,root/html534/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBDT.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ionPolicy);; 175 }; 176 /**; 177 Fit a binned data set using a least square fit NOT copying the input data.; 178 */; 179 bool LeastSquareFit(const std::shared_ptr<BinData> & data, const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 180 SetData(data);; 181 return DoLeastSquareFit(executionPolicy);; 182 }; 183 ; 184 /**; 185 Fit an un-binned data set using the negative log-likelihood method.; 186 This function copies the input data.; 187 */; 188 bool Fit(const UnBinData & data, bool extended = false, const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 189 return LikelihoodFit(data, extended, executionPolicy);; 190 }; 191 /**; 192 Fit an un-binned data set using the negative log-likelihood method.; 193 This function uses a `shared_ptr` to avoid copying the input data.; 194 */; 195 bool Fit(const std::shared_ptr<UnBinData> & data, bool extended = false, const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 196 return LikelihoodFit(data, extended, executionPolicy);; 197 }; 198 ; 199 /**; 200 Binned Likelihood fit copying the input data.; 201 Default is extended.; 202 */; 203 bool LikelihoodFit(const BinData &data, bool extended = true,; 204 const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 205 SetData(data);; 206 return DoBinnedLikelihoodFit(extended, executionPolicy);; 207 }; 208 /**; 209 Binned Likelihood fit using a `shared_ptr` for NOT copying the input data.; 210 Default is extended.; 211 */; 212 bool LikelihoodFit(const std::shared_ptr<BinData> &data, bool extended = true,; 213 const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 214 SetData(data);; 215 return DoBinnedLikelihoodFit(extended, executionPolicy);; 216 }; 217 /**; 218 Un-binned Likelihood fit copying the input data; 219 Default is NOT extended; 220 */; 221 bool LikelihoodFit(const UnBinData & data, bool extended = false, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:7103,extend,extended,7103,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,2,['extend'],['extended']
Modifiability,"ionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PositionVector3D & operator=(const ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). SetXYZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). const CoordSystem & Coordinates() const. Retrieve a copy of the coordinates object. PositionVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:10421,Inherit,Inheritance,10421,root/html532/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ion_t *="""", Bool_t=kFALSE);  ; virtual TGridCollection * OpenCollection (const char *, UInt_t=1000000);  ; virtual TGridCollection * OpenCollectionQuery (TGridResult *, Bool_t=kFALSE);  ; virtual TGridJobStatusList * Ps (const char *, Bool_t=kTRUE);  ; virtual const char * Pwd (Bool_t=kFALSE);  ; virtual TGridResult * Query (const char *, const char *, const char *="""", const char *="""");  ; virtual Bool_t Register (const char *, const char *, Long_t=-1, const char *=nullptr, const char *=nullptr, Bool_t=kFALSE);  ; virtual Bool_t Resubmit (TGridJob *gridjob);  ; virtual Bool_t ResubmitById (TString);  ; virtual Bool_t Rm (const char *, Option_t *="""", Bool_t=kFALSE);  ; virtual Bool_t Rmdir (const char *="""", Option_t *="""", Bool_t=kFALSE);  ; virtual void Shell ();  ; virtual void Stderr ();  ; virtual void Stdout ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual TGridJob * Submit (const char *);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGrid.html:2173,inherit,inherited,2173,doc/master/classTGrid.html,https://root.cern,https://root.cern/doc/master/classTGrid.html,1,['inherit'],['inherited']
Modifiability,"ion_t *axis=""X"");  Set color to draw the axis line and tick marks. ;  ; virtual void SetAxisRange (Double_t xmin, Double_t xmax, Option_t *axis=""X"");  Set the ""axis"" range. ;  ; virtual void SetBarOffset (Float_t offset=0.25);  Set the bar offset as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBarWidth (Float_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBinsLength (Int_t=-1);  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:26678,variab,variable,26678,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,2,['variab'],['variable']
Modifiability,"ion_t *axis=""X"");  Set color to draw the axis line and tick marks. ;  ; virtual void SetAxisRange (Double_t xmin, Double_t xmax, Option_t *axis=""X"");  Set the ""axis"" range. ;  ; virtual void SetBarOffset (Float_t offset=0.25);  Set the bar offset as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBarWidth (Float_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:28594,variab,variable,28594,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,13,['variab'],['variable']
Modifiability,"ion_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooExponentialExponential PDF.Definition RooExponential.h:22; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::LayoutRooCmdArg Layout(double xmin, double xmax=0.99, double ymin=0.95)Definition RooGlobalFunc.cxx:783; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdArg VisualizeError(const RooDataSet &paramData, double Z=1)Definition RooGlobalFunc.cxx:300; xDouble_t x[n]Definition legend1.C:17; ROOT::R::Labelconst Rcpp::internal::NamedPlaceHolder & Label; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:8978,variab,variable,8978,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,1,['variab'],['variable']
Modifiability,"ion_t result);  Computes the union of two regions. ;  ; virtual void UnmapWindow (Window_t id);  Unmaps the specified window ""id"". ;  ; virtual void Update (Int_t mode=0);  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; virtual void UpdateWindow (Int_t mode);  Updates or synchronises client and server once (not permanent). ;  ; virtual void Warp (Int_t ix, Int_t iy, Window_t id=0);  Sets the pointer position. ;  ; virtual void WMDeleteNotify (Window_t id);  Tells WM to send message when window is closed via WM. ;  ; virtual Int_t WriteGIF (char *name);  Writes the current window into GIF file. ;  ; virtual void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname);  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; virtual void XorRegion (Region_t rega, Region_t regb, Region_t result);  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:31514,inherit,inherited,31514,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,1,['inherit'],['inherited']
Modifiability,"ion_t* mode = 0) const; TQueryResult*GetQueryResult(const char* ref = 0); TList*GetQueryResults(); Float_tGetRealTime() const; Int_tGetRemoteProtocol() const; TProof::ERunStatusGetRunStatus() const; Int_tGetSeqNum() const; Int_tGetSessionID() const; const char*GetSessionTag() const; voidGetStatistics(Bool_t verbose = kFALSE); Int_tGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl(); const char*GetUser() const; const char*GetWorkDir() const; voidGoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tIsIdle() const; Bool_tIsLite() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tIsParallel() const; Bool_tIsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tIsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tLoad(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); static voidTQObject::LoadRQ_OBJECT(); voidLogMessage(const char* msg, Bool_t all)SIGNAL ; static voidLogViewer(const char* url = 0, Int_t sessionidx = 0); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProof.html:9596,Inherit,InheritsFrom,9596,root/html532/TProof.html,https://root.cern,https://root.cern/root/html532/TProof.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ion_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidsetCacheAllNumeric(Int_t ndim); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCacheNumeric(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooRealIntegral.html:22647,config,config,22647,root/html528/RooRealIntegral.html,https://root.cern,https://root.cern/root/html528/RooRealIntegral.html,1,['config'],['config']
Modifiability,"ion_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsHiddenReal.html:23087,config,config,23087,root/html532/RooAbsHiddenReal.html,https://root.cern,https://root.cern/root/html532/RooAbsHiddenReal.html,62,['config'],['config']
Modifiability,"ion_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetMode(const Roo1DMomentMorphFunction::Setting& setting); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/Roo1DMomentMorphFunction.html:23039,config,config,23039,root/html532/Roo1DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html532/Roo1DMomentMorphFunction.html,1,['config'],['config']
Modifiability,"ion_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetMode(const Roo2DMomentMorphFunction::Setting& setting); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/Roo2DMomentMorphFunction.html:23341,config,config,23341,root/html532/Roo2DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html532/Roo2DMomentMorphFunction.html,1,['config'],['config']
Modifiability,"ion_t* options); voidDrawSlicesAverage(Option_t* options); Int_tFindTextAlign(Double_t theta); Double_tFindTextAngle(Double_t theta); voidInitArrays(Int_t newsize); voidInitVariables(Long64_t firstentry, Long64_t nentries); voidSetCurrentEntries(); voidSyncFormulas(); voidUpdateView(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width. private:. Bool_tfAngularLabelsTrue if the labels are oriented according to their axis.; Int_tfArraySizeActual size of the arrays.; Double_t*fAve[fNcols] Average value of each variable.; TPolyLine*fAveragePolyPolygon representing the average variables value.; TArc**fAverageSlices! Average slices.; TCanvas*fCanvas! Pointer to the mother pad.; Long64_t*fCurrentEntries![fNx*fNy] current selected entries;; Bool_tfDisplayAverageDisplay or not the average.; Long64_tfEntryPresent entry number in fTree.; Long64_tfFirstEntryFirst entry.; Bool_tfForceDimForce dimension.; TList*fFormulasList of all formulas to represent.; TList*fInputUsed for fSelector.; TTreeFormulaManager*fManagerCoordinator for the formulas.; Double_t*fMax[fNcols] Maximum value of the variables.; Double_t*fMin[fNcols] Minimum value of the variables.; UInt_tfNcolsNumber of variables.; Long64_tfNentriesNumber of entries.; UInt_tfNxNumber of horizontal spider plots.; UInt_tfNyNumber of vertical spider plots.; TGraphPolargram*fPolargramPolar graph.; TList*fPolyListPolygons representing the variables.; Bool_tfSegmentDisplayTrue if displaying a segment plot.; TTreeFormula*fSelectSelection condition; TSelectorDraw*fSelector! Selector.; Bool_tfShowRang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpider.html:9464,variab,variables,9464,root/html530/TSpider.html,https://root.cern,https://root.cern/root/html530/TSpider.html,5,['variab'],['variables']
Modifiability,"ion_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tIsKeyModified(const char* keyname, const char* keytitle, const char* keydatime, Int_t cycle, const char* classname); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKeySQL.html:3445,Inherit,InheritsFrom,3445,root/html532/TKeySQL.html,https://root.cern,https://root.cern/root/html532/TKeySQL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ion_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tIsKeyModified(const char* keyname, const char* keytitle, const char* keydatime, Int_t cycle, const char* classname); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKeySQL.html:3091,Inherit,InheritsFrom,3091,root/html602/TKeySQL.html,https://root.cern,https://root.cern/root/html602/TKeySQL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ion_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTDataSetManager::GetGroupQuota(const char* group); virtual TMap*TDataSetManager::GetGroupQuotaMap(); virtual Long64_tTDataSetManager::GetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; const char*GetMSSUrl() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetStageOpts() const; virtual TMap*TDataSetManager::GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTDataSetManager::MonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDataSetManagerFile.html:3851,Inherit,InheritsFrom,3851,root/html532/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html532/TDataSetManagerFile.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ion_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMatrix::GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual Double_t*GetRotationMatrix(); virtual const Double_t*GetScale() const; virtual Double_t*GetScale(); virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual Double_t*GetTranslation(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; Bool_tTGeoMatrix::IsShared() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidTGeoMatrix::LocalToMaster(const Double_t* local, Double_t* master) const; virtual voidTGeoMatrix::LocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidTGeoMatrix::LocalToMasterVect(const Double_t* local, D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHMatrix.html:9650,Inherit,InheritsFrom,9650,root/html534/TGeoHMatrix.html,https://root.cern,https://root.cern/root/html534/TGeoHMatrix.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ion_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMatrix::GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual Double_t*GetRotationMatrix(); virtual const Double_t*GetScale() const; virtual Double_t*GetScale(); virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual Double_t*GetTranslation(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidTGeoMatrix::LocalToMaster(const Double_t* local, Double_t* master) const; virtual voidTGeoMatrix::LocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidTGeoMatrix::LocalToMasterVect(const Double_t* local, Double_t* master) const; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoHMatrix.html:9650,Inherit,InheritsFrom,9650,root/html532/TGeoHMatrix.html,https://root.cern,https://root.cern/root/html532/TGeoHMatrix.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ion_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGLEventHandler.h>. Inheritance diagram for TGLEventHandler:. This b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEventHandler.html:19346,inherit,inherited,19346,doc/master/classTGLEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGLEventHandler.html,2,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Init (void);  common initialisation with defaults for the DT-Method ;  . Private Attributes; Bool_t fAutomatic;  use user given prune strength or automatically determined one using a validation sample ;  ; Double_t fDeltaPruneStrength;  step size in pruning, is adjusted according to experience of previous trees ;  ; Double_t fErrorFraction;  ntuple var: misclassification error fraction ;  ; std::vector< Event * > fEventSample;  the training events ;  ; UInt_t fMaxDepth;  max depth ;  ; Int_t fMinNodeEvents;  min number of events in node ;  ; Float_t fMinNodeSize;  min percentage of training events in node ;  ; TString fMinNodeSizeS;  string containing min percentage of training events in node ;  ; Int_t fNCuts;  grid used in cut applied in node splitting ;  ; Double_t fNodePurityLimit;  purity limit for sig/bkg nodes ;  ; Bool_t fPruneBeforeBoost;  ancient variable, only needed for ""CompatibilityOptions"" ;  ; DecisionTree::EPruneMethod fPruneMethod;  method used for pruning ;  ; TString fPruneMethodS;  prune method option String ;  ; Double_t fPruneStrength;  a parameter to set the ""amount"" of pruning..needs to be adjusted ;  ; Bool_t fRandomisedTrees;  choose a random subset of possible cut variables at each node during training ;  ; SeparationBase * fSepType;  the separation used in node splitting ;  ; TString fSepTypeS;  the separation (option string) used in node splitting ;  ; DecisionTree * fTree;  the decision tree ;  ; Int_t fUseNvars;  the number of variables used in the randomised tree splitting ;  ; Bool_t fUsePoissonNvars;  fUseNvars is used as a poisson mea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:27425,variab,variable,27425,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,1,['variab'],['variable']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Private Member Functions;  TSelector (const TSelector &);  ; TSelector & operator= (const TSelector &);  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSelector.h>. Inheritance diagram for TSelector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAbort. enum TSelector::EAbort. EnumeratorkContinue ; kAbortProcess ; kAbortFile . Definition at line 34 of file TSelector.h. Constructor & Destructor Documentation. ◆ TSelector() [1/2]. TSelector::TSelector ; (; const TSelector & ; ). private . ◆ TSelector() [2/2]. TSelector::TSelector ; (; ). Default selector ctor. ; Definition at line 89 of file TSelector.cxx. ◆ ~TSelector(). TSelector::~TSelector ; (; ). override . Selector destructor. ; Definition at line 102 of file TSelector.cxx. Member Function Documentation. ◆ Abort(). void TSelector::Abort ; (; const char * ; why, . EAbort ; what = kAbortProcess . ). virtual . A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelector.html:14332,inherit,inherited,14332,doc/master/classTSelector.html,https://root.cern,https://root.cern/doc/master/classTSelector.html,2,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; void attachCache (const RooAbsArg *newOwner, const RooArgSet &cachedVars) override;  Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ;  ; void createTree (RooStringView name, RooStringView title);  Create TTree object that lives in memory, independent of current location of gDirectory. ;  ; Int_t getBranchBufferSize () const;  ; void initialize ();  One-time initialization common to all constructor forms. ;  ; std::string makeTreeName () const;  Generate a name for the storage tree from the name and title of this instance. ;  ; void setBranchBufferSize (Int_t size);  ; RooArgSet varsNoWeight (const RooArgSet &allVars, const char *wgtName=nullptr);  Utility function for constructors Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. ;  ; RooRealVar * weightVar (const RooArgSet &allVars, const char *wgtName=nullptr);  Utility function for constructors Return pointer to weight variable if it is defined. ;  . Private Attributes; RooArgSet _attachedBuffers;  ! Currently attached bu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeDataStore.html:19913,variab,variables,19913,doc/master/classRooTreeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooTreeDataStore.html,1,['variab'],['variables']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; double evaluate () const override;  Calculate current value of this object. ;  ;  Protected Member Functions inherited from RooAbsRealLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ; virtual void setValFast (double value);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearVar.html:56571,inherit,inherited,56571,doc/master/classRooLinearVar.html,https://root.cern,https://root.cern/doc/master/classRooLinearVar.html,1,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; value_type evaluate () const override;  Evaluate the category state and return. ;  ; void recomputeShape () override;  Ask server category to recompute shape, and copy its information. ;  ;  Protected Member Functions inherited from RooAbsCategoryLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value from given source and raise dirty flag. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the given vector store. ;  ; void clearTypes ();  Delete all currently defined states. ;  ; virtual const std::map< std::string, RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSuperCategory.html:38401,inherit,inherited,38401,doc/master/classRooSuperCategory.html,https://root.cern,https://root.cern/doc/master/classRooSuperCategory.html,1,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; value_type evaluate () const override;  Evaluate the category state and return. ;  ; void recomputeShape () override;  This category's shape does not depend on others, and does not need recomputing. ;  ;  Protected Member Functions inherited from RooAbsCategoryLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value from given source and raise dirty flag. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the given vector store. ;  ; void clearTypes ();  Delete all currently defined states. ;  ; virtual const std::map< std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:41234,inherit,inherited,41234,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,1,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ; virtual void setValFast (double value);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; virtual double evaluate () const =0;  Evaluate this PDF / function / constant. Needs to be overridden by all ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsRealLValue.html:55679,inherit,inherited,55679,doc/master/classRooAbsRealLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsRealLValue.html,1,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value from given source and raise dirty flag. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the given vector store. ;  ; void clearTypes ();  Delete all currently defined states. ;  ; virtual const std::map< std::string, RooAbsCategory::value_type >::value_type & defineState (const std::string &label);  Define a new state with given label. ;  ; virtual const std::map< std::string, RooAbsCategory::value_type >::value_type & defineState (const std::string &label, value_type index",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategoryLValue.html:36704,inherit,inherited,36704,doc/master/classRooAbsCategoryLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategoryLValue.html,1,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void syncCache (const RooArgSet *set=nullptr) override;  Force the internal value cache to be up to date. ;  ;  Protected Member Functions inherited from RooAbsRealLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ; virtual void setValFast (double value);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:57131,inherit,inherited,57131,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; using SharedPropertiesMap = std::map< RooSharedProperties::UUID, std::weak_ptr< RooRealVarSharedProperties > >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ;  ; double chopAt (double what, Int_t where) const;  Utility to calculate number of decimals to show based on magnitude of error. ;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:58726,inherit,inherited,58726,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTLazy< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void FillIn (TMatrixT< Element > &m) const override;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMatrixTLazy< Element >;  TMatrixTLazy (const TMatrixTLazy< Element > &);  ; void operator= (const TMatrixTLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHaarMatrixT.html:9869,inherit,inherited,9869,doc/master/classTHaarMatrixT.html,https://root.cern,https://root.cern/doc/master/classTHaarMatrixT.html,2,['inherit'],['inherited']
Modifiability,"ion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; std::set< std::string > fDependencies;  ; std::set< std::string > fModules;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDocInfo.h>. Inheritance diagram for TLibraryDoc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLibraryDocInfo.html:10347,inherit,inherited,10347,doc/master/classTLibraryDocInfo.html,https://root.cern,https://root.cern/doc/master/classTLibraryDocInfo.html,1,['inherit'],['inherited']
Modifiability,"ional functions, with several adaptive and non-adaptive methods; 47and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; 48The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; 49ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; 50The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; 51ROOT::Math::IntegratorMultiDimOptions classes.; 52 ; 53@ingroup NumAlgo; 54 ; 55*/; 56 ; 57 ; 58 ; 59namespace ROOT {; 60namespace Math {; 61 ; 62 ; 63 ; 64 ; 65//____________________________________________________________________________________________; 66/**; 67 ; 68User Class for performing numerical integration of a function in one dimension.; 69It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the; 70algorithms used in the QUADPACK, a numerical integration package written in Fortran.; 71 ; 72Various types of adaptive and non-adaptive integration are supported. These include; 73integration over infinite and semi-infinite ranges and singular integrals.; 74 ; 75The integration type is selected using the Integration::type enumeration; 76in the class constructor.; 77The default type is adaptive integration with singularity; 78(ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule.; 79In the case of ADAPTIVE type, the integration rule can also be specified via the; 80Integration::GKRule. The default rule is 31 points.; 81 ; 82In the case of integration over infinite and semi-infinite ranges, the type used is always; 83ADAPTIVESINGULAR applying a transformation from the original interval into (0,1).; 84 ; 85The ADAPTIVESINGULAR type is the most sophisticated type. When performances are; 86important, it is then recommended ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Integrator_8h_source.html:2161,plug-in,plug-in,2161,doc/master/Integrator_8h_source.html,https://root.cern,https://root.cern/doc/master/Integrator_8h_source.html,1,['plug-in'],['plug-in']
Modifiability,ionally a scale factor (for each coordinate) which can be used to scale the step sizes (this is used for example by the minimization algorithm) ; Definition at line 43 of file GSLSimAnnealing.cxx. ◆ GSLSimAnFunc() [3/3]. ROOT::Math::GSLSimAnFunc::GSLSimAnFunc ; (; ). inlineprotected . derived classes might need to re-define completely the class ; Definition at line 70 of file GSLSimAnnealing.h. ◆ ~GSLSimAnFunc(). virtual ROOT::Math::GSLSimAnFunc::~GSLSimAnFunc ; (; ). inlinevirtual . virtual destructor (no operations) ; Definition at line 78 of file GSLSimAnnealing.h. Member Function Documentation. ◆ Clone(). virtual GSLSimAnFunc * ROOT::Math::GSLSimAnFunc::Clone ; (; ); const. inlinevirtual . clone method. ; Needs to be re-implemented by the derived classes for deep copying ; Definition at line 92 of file GSLSimAnnealing.h. ◆ Distance(). double ROOT::Math::GSLSimAnFunc::Distance ; (; const GSLSimAnFunc & ; func); const. virtual . calculate the distance (metric) between this one and another configuration Presently a cartesian metric is used. ; re-implement by derived classes if needed to be modified ; Definition at line 66 of file GSLSimAnnealing.cxx. ◆ Energy(). double ROOT::Math::GSLSimAnFunc::Energy ; (; ); const. virtual . evaluate the energy ( objective function value) re-implement by derived classes if needed to be modified ; Definition at line 50 of file GSLSimAnnealing.cxx. ◆ FastCopy(). GSLSimAnFunc & ROOT::Math::GSLSimAnFunc::FastCopy ; (; const GSLSimAnFunc & ; f). virtual . fast copy method called by GSL simulated annealing internally copy only the things which have been changed must be re-implemented by derived classes if needed ; Definition at line 96 of file GSLSimAnnealing.cxx. ◆ NDim(). unsigned int ROOT::Math::GSLSimAnFunc::NDim ; (; ); const. inline . Definition at line 135 of file GSLSimAnnealing.h. ◆ Print(). void ROOT::Math::GSLSimAnFunc::Print ; (; ). virtual . print the position in the standard output std::ostream GSL prints in addition n iter,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnFunc.html:4567,config,configuration,4567,doc/master/classROOT_1_1Math_1_1GSLSimAnFunc.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnFunc.html,1,['config'],['configuration']
Modifiability,"ionary. This effectively enable the full customization of the creation of the dictionary. It should be noted that the file is intended as a linkdef fragment, so usually you would not list the typical: #pragma link off .... Definition at line 4227 of file TSystem.cxx. ◆ SetLinkedLibs(). void TSystem::SetLinkedLibs ; (; const char * ; linkedLibs). virtual . LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ; It is used to expand $LinkedLibs in the directives given to SetMakeSharedLib() and SetMakeExe() The default value on Unix is: root-config --glibs ; Definition at line 4205 of file TSystem.cxx. ◆ SetMakeExe(). void TSystem::SetMakeExe ; (; const char * ; directives). virtual . Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:87794,variab,variable,87794,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['variab'],['variable']
Modifiability,"ions &opt)Definition GeneticMinimizer.cxx:217; ROOT::Math::GeneticMinimizer::MinValuedouble MinValue() const overridereturn minimum function valueDefinition GeneticMinimizer.cxx:331; ROOT::Math::GeneticMinimizer::Errorsconst double * Errors() const overridereturn errors at the minimumDefinition GeneticMinimizer.cxx:366; ROOT::Math::GeneticMinimizer::NCallsunsigned int NCalls() const overridenumber of function calls to reach the minimumDefinition GeneticMinimizer.cxx:340; ROOT::Math::GeneticMinimizer::Minimizebool Minimize() overridemethod to perform the minimizationDefinition GeneticMinimizer.cxx:252; ROOT::Math::GeneticMinimizer::GetGeneticOptionsvoid GetGeneticOptions(ROOT::Math::MinimizerOptions &opt) constDefinition GeneticMinimizer.cxx:191; ROOT::Math::GeneticMinimizer::ProvidesErrorbool ProvidesError() const overrideminimizer provides error and error matrixDefinition GeneticMinimizer.cxx:365; ROOT::Math::GeneticMinimizer::SetVariablebool SetVariable(unsigned int ivar, const std::string &name, double val, double step) overrideset a new free variableDefinition GeneticMinimizer.cxx:153; ROOT::Math::GeneticMinimizer::fResultstd::vector< double > fResultDefinition GeneticMinimizer.h:109; ROOT::Math::GeneticMinimizer::fFitnessTMVA::IFitterTarget * fFitnessDefinition GeneticMinimizer.h:107; ROOT::Math::GeneticMinimizer::fRangesstd::vector< TMVA::Interval * > fRangesDefinition GeneticMinimizer.h:106; ROOT::Math::GeneticMinimizer::SetParametersvoid SetParameters(const GeneticMinimizerParameters &params)Definition GeneticMinimizer.cxx:177; ROOT::Math::GeneticMinimizer::MinGradientconst double * MinGradient() const overridereturn pointer to gradient values at the minimumDefinition GeneticMinimizer.cxx:364; ROOT::Math::GeneticMinimizer::Edmdouble Edm() const overridereturn expected distance reached from the minimum (re-implement if minimizer provides itDefinition GeneticMinimizer.cxx:367; ROOT::Math::GeneticMinimizer::~GeneticMinimizer~GeneticMinimizer() overrideDefinition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GeneticMinimizer_8h_source.html:6189,variab,variableDefinition,6189,doc/master/GeneticMinimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/GeneticMinimizer_8h_source.html,1,['variab'],['variableDefinition']
Modifiability,"ions () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQConnection.html:18071,inherit,inherited,18071,doc/master/classTQConnection.html,https://root.cern,https://root.cern/doc/master/classTQConnection.html,2,['inherit'],['inherited']
Modifiability,"ions (fits and user); TH1F*TGraph::fHistogramPointer to histogram used for drawing axis; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph::fMaxSize!Current dimension of arrays fX and fY; Double_tTGraph::fMaximumMaximum value for plotting along y; Double_tTGraph::fMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. private:. Double_t_entriesNumber of entries in histogram; Double_t_nSigmaNumber of 'sigmas' error bars represent; Double_t_nominalBinWidthAverage bin width; Double_t_rawEntriesNumber of entries in source dataset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHist(); Default constructor. RooHist(Double_t nominalBinWidth, Double_t nSigma = 1, Double_t xErrorFrac = 1., Double_t scaleFactor = 1.); Create an empty histogram that can be filled with the addBin(); and addAsymmetryBin() methods. Use the optional parameter to; specify the confidence level in units of sigma to use for; calculating error bars. The nominal bin width specifies the; default used by addBin(), and is used to set the relative; normalization of bins with different widths. RooHist(const TH1& data, Double_t nominalBinWidth = 0, Double_t nSigma = 1, RooAbsData::ErrorType = RooAbsData::Poisson, Double_t xErrorFrac = 1., Bool_t correctForBinWidth = kTRUE, Double_t scaleFactor = 1.); Create a histogram from the contents of the specified TH1 object; which may have fixed or variable bin widths. Error bars are; calculated using Poisson statistics. Prints a warning and rounds; any bins with non-integer contents. Use the optional pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHist.html:20067,Inherit,Inheritance,20067,root/html602/RooHist.html,https://root.cern,https://root.cern/root/html602/RooHist.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ions (fits and user); TH1F*TGraph::fHistogramPointer to histogram used for drawing axis; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph::fMaxSize!Current dimension of arrays fX and fY; Double_tTGraph::fMaximumMaximum value for plotting along y; Double_tTGraph::fMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. private:. Double_t_entriesNumber of entries in histogram; Double_t_nSigmaNumber of 'sigmas' error bars represent; Double_t_nominalBinWidthAverage bin width; Double_t_rawEntriesNumber of entries in source dataset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHist(); Default constructor. RooHist(Double_t nominalBinWidth, Double_t nSigma = 1, Double_t xErrorFrac = 1.0, Double_t scaleFactor = 1.0); Create an empty histogram that can be filled with the addBin(); and addAsymmetryBin() methods. Use the optional parameter to; specify the confidence level in units of sigma to use for; calculating error bars. The nominal bin width specifies the; default used by addBin(), and is used to set the relative; normalization of bins with different widths. RooHist(const TH1& data, Double_t nominalBinWidth = 0, Double_t nSigma = 1, RooAbsData::ErrorType = RooAbsData::Poisson, Double_t xErrorFrac = 1.0, Bool_t correctForBinWidth = kTRUE, Double_t scaleFactor = 1.); Create a histogram from the contents of the specified TH1 object; which may have fixed or variable bin widths. Error bars are; calculated using Poisson statistics. Prints a warning and rounds; any bins with non-integer contents. Use the optional",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHist.html:18650,Inherit,Inheritance,18650,root/html532/RooHist.html,https://root.cern,https://root.cern/root/html532/RooHist.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ions and parameter settings)Definition Fitter.h:562; ROOT::Fit::Fitter::FitterFitter()Default constructor.Definition Fitter.h:102; ROOT::Fit::Fitter::fFuncstd::shared_ptr< IModelFunction > fFunc! copy of the fitted function containing on output the fit resultDefinition Fitter.h:566; ROOT::Fit::Fitter::SetFCNbool SetFCN(const ROOT::Math::FitMethodGradFunction &fcn, const double *params=nullptr)Set the objective function (FCN) using a FitMethodGradFunction interface.; ROOT::Fit::Fitter::LeastSquareFitbool LeastSquareFit(const BinData &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Fit a binned data set using a least square fit copying the input data.Definition Fitter.h:172; ROOT::Fit::Fitter::FitFCNbool FitFCN(const ROOT::Math::FitMethodGradFunction &fcn, const double *params=nullptr)Fit using a FitMethodGradFunction interface.; ROOT::Fit::Fitter::Fitbool Fit(const std::shared_ptr< UnBinData > &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Fit an un-binned data set using the negative log-likelihood method.Definition Fitter.h:195; ROOT::Fit::Fitter::LikelihoodFitbool LikelihoodFit(const UnBinData &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Un-binned Likelihood fit copying the input data Default is NOT extended.Definition Fitter.h:221; ROOT::Fit::Fitter::DoLinearFitbool DoLinearFit()linear least square fitDefinition Fitter.cxx:513; ROOT::Fit::Fitter::DoInitMinimizerbool DoInitMinimizer()Definition Fitter.cxx:692; ROOT::Fit::Fitter::GetNCallsFromFCNint GetNCallsFromFCN()Definition Fitter.cxx:870; ROOT::Fit::UnBinDataClass describing the un-binned data sets (just x coordinates values) of any dimensions.Definition UnBinData.h:46; ROOT::Math::BasicFitMethodFunctionFitMethodFunction class Interface for objective functions (like chi2 and likelihood used in the fit) ...Definition FitMethodFunction.h:38; ROOT::M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:40518,extend,extended,40518,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['extend'],['extended']
Modifiability,"ions are run in a context such that the branch names are available as local variables of the correct (read-only) type.; Note that if you use the same 'variable' twice, it is more efficient to 'cache' the value. For example Int_t n = fEventNumber; // Read fEventNumber; if (n<10 || n>10) { ... }; int; nconst Int_t nDefinition legend1.C:16; is more efficient than if (fEventNumber<10 || fEventNumber>10); Access to TClonesArray.; If a branch (or member) is a TClonesArray (let's say fTracks), you can access the TClonesArray itself by using ->: fTracks->GetLast();; However this will load the full TClonesArray object and its content. To quickly read the size of the TClonesArray use (note the dot): fTracks.GetEntries();; This will read only the size from disk if the TClonesArray has been split. To access the content of the TClonesArray, use the [] operator: float px = fTracks[i].fPx; // fPx of the i-th track; Warning:; The variable actually use for access are 'wrapper' around the real data type (to add autoload for example) and hence getting to the data involves the implicit call to a C++ conversion operator. This conversion is automatic in most case. However it is not invoked in a few cases, in particular in variadic function (like printf). So when using printf you should either explicitly cast the value or use any intermediary variable: fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; Also, optionally, the generated selector will also call methods named macrofilename_methodname in each of 6 main selector methods if the method macrofilename_methodname exist (Where macrofilename is stripped of its extension).; Concretely, with the script named h1analysisProxy.C,. The method calls the method (if it exist); Begin -> void h1analysisProxy_Begin(TTree*);; SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; Notify -> bool h1analysisProxy_Notify();; Process -> bool h1analysisProxy_Process(Long64_t);; SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; Terminate -> voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:34307,variab,variable,34307,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['variab'],['variable']
Modifiability,"ions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fAngle;  Arrow opening angle (degrees) ;  ; Float_t fArrowSize;  Arrow Size. ;  ; TString fOption;  Arrow shapes. ;  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Static Protected Attributes; static Float_t fgDefaultAngle = 60;  Default Arrow opening angle (degrees) ;  ; static Float_t fgDefaultArrowSize = 0.05;  Default Arrow Size. ;  ; static TString fgDefaultOption = "">"";  Default Arrow shapes. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrow.html:18584,inherit,inherited,18584,doc/master/classTArrow.html,https://root.cern,https://root.cern/doc/master/classTArrow.html,1,['inherit'],['inherited']
Modifiability,"ions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fClick;  mouse click location (kCLICK_NONE, kCLICK_HS, kCLICK_L) ;  ; Rectangle_t fColormapRect;  hue / saturation colormap rectangle ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  hue / saturation colormap pixmap ;  ; Pixmap_t fLimage;  color lightness slider pixmap ;  ; Int_t fNColors;  number of color samples ;  ; Rectangle_t fSliderRect;  color lightness slider rectangle ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the wi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPick.html:25581,inherit,inherited,25581,doc/master/classTGColorPick.html,https://root.cern,https://root.cern/doc/master/classTGColorPick.html,1,['inherit'],['inherited']
Modifiability,"ions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TObjArray * fNetwork;  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  . Protected Member Functions; virtual void BuildNetwork (std::vector< Int_t > *layout, std::vector< Double_t > *weights=nullptr, Bool_t fromFile=kFALSE);  build network given a layout (number of neurons in each layer) and optional weights array ;  ; void CreateWeightMonitoringHists (const TString &bulkname, std::vector< TH1 * > *hv=nullptr) const;  ; void ForceNetworkCalculations ();  calculate input values to each neuron ;  ; void ForceNetworkInputs (const Event *ev, Int_t ignoreIndex=-1);  force the input values of the input neurons force the value for each input neuron ;  ; TNeuron * GetInputNeuron (Int_t index);  ; Double_t GetNetworkOutput ();  ; TNeuron * GetOutputNeuron (Int_t index=0);  ; virtual void MakeClassSpecific (std::ostream &, const TString &) const;  write specific classifier response ;  ; Int_t NumCycles ();  ; std::vector< Int_t > * ParseLayoutString (TString layerSpec);  parse layout speci",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:25208,inherit,inherited,25208,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,1,['inherit'],['inherited']
Modifiability,"ions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Char_t fMaximum;  Maximum value if leaf range is specified. ;  ; Char_t fMinimum;  Minimum value if leaf range is specified. ;  ; Char_t ** fPointer;  ! Address of a pointer to data buffer! ;  ; Char_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafB.html:14264,inherit,inherited,14264,doc/master/classTLeafB.html,https://root.cern,https://root.cern/doc/master/classTLeafB.html,1,['inherit'],['inherited']
Modifiability,"ions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TBits * fActive;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TProcessID; std::atomic_int fCount;  ; std::atomic_flag fLock;  Array pointing to the referenced objects. ;  ; ROOT::Internal::TAtomicPointer< TObjArray * > fObjects;  Reference count to this object (from TFile) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TProcessUUID (const TProcessID &)=delete;  ; TProcessUUID & operator= (const TProcessUUID &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Membe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessUUID.html:14849,inherit,inherited,14849,doc/master/classTProcessUUID.html,https://root.cern,https://root.cern/doc/master/classTProcessUUID.html,1,['inherit'],['inherited']
Modifiability,"ions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoSphere (const TGeoSphere &)=delete;  ; TGeoSphere & operator= (const TGeoSphere &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fNseg;  ; Int_t fNz;  ; Double_t fPhi1;  ; Double_t fPhi2;  ; Double_t fRmax;  ; Double_t fRmin;  ; Double_t fTheta1;  ; Double_t fTheta2;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSphere.html:19746,inherit,inherited,19746,doc/master/classTGeoSphere.html,https://root.cern,https://root.cern/doc/master/classTGeoSphere.html,1,['inherit'],['inherited']
Modifiability,"ions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TGFrameElementPack * fSplitFE;  ! cached variable for optimisation ;  ; Float_t fWeight;  relative weight ;  ;  Public Attributes inherited from TGFrameElement; TGFrame * fFrame;  ; TGLayoutHints * fLayout;  ; Int_t fState;  . Private Member Functions;  TGFrameElementPack (const TGFrameElementPack &)=delete;  ; TGFrameElementPack & operator= (const TGFrameElementPack &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGPack.h>. Inheritance diagram for TGFrameElementPack:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrameElementPack.html:9820,inherit,inherited,9820,doc/master/classTGFrameElementPack.html,https://root.cern,https://root.cern/doc/master/classTGFrameElementPack.html,1,['inherit'],['inherited']
Modifiability,ions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGPack * fPack;  ;  Protected Attributes inherited from TEveWindow; TEveCompositeFrame * fEveFrame;  ; Bool_t fShowTitleBar;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowPack.html:32700,inherit,inherited,32700,doc/master/classTEveWindowPack.html,https://root.cern,https://root.cern/doc/master/classTEveWindowPack.html,3,['inherit'],['inherited']
Modifiability,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFolder.html:9463,inherit,inheritance,9463,doc/master/classTFolder.html,https://root.cern,https://root.cern/doc/master/classTFolder.html,2,['inherit'],['inheritance']
Modifiability,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html:3739,inherit,inheritance,3739,doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html,49,['inherit'],['inheritance']
Modifiability,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager.html:53725,inherit,inheritance,53725,doc/master/classTGeoManager.html,https://root.cern,https://root.cern/doc/master/classTGeoManager.html,1,['inherit'],['inheritance']
Modifiability,"ions inherited from TVirtualViewer3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualViewer3D * Viewer3D (TVirtualPad *pad=nullptr, Option_t *type="""");  Create a Viewer 3D of specified type. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGLScene; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t IsOutside (const TGLBoundingBox &box, const TGLPlaneSet_t &planes);  Check if box is outside of all planes. ;  ; static void RGBAFromColorIdx (Float_t rgba[4], Color_t ci, Char_t transp=0);  Fill rgba color from ROOT color-index ci and transparency (0->100). ;  ;  Static Public Member Functions inherited from TGLSceneBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLLockable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * LockName (ELock lock);  Return name-string for given lock-type. ;  ; static Bool_t LockValid (ELock lock);  Test if lock is a valid type to take/release. ;  . Protected Types; typedef std::pair< UInt_t, RootCsg::TBaseMesh *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:18776,inherit,inherited,18776,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,1,['inherit'],['inherited']
Modifiability,"ions of the ROOT::Math::LorentzVector template which offer superior runtime performance, i.e.:; ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the Physics Vectors package. . Description; TLorentzVector is a general four-vector class, which can be used either for the description of position and time (x,y,z,t) or momentum and energy (px,py,pz,E). Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default all components are initialized by zero.; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; TLorentzVectorDefinition TLorentzVector.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; For backward compatibility there are two constructors from an Double_t and Float_t C array. Access to the components; There are two sets of access functions to the components of a LorentzVector: X(), Y(), Z(), T() and Px(), Py(), Pz() and E(). Both sets return the same values but the first set is more relevant for use where TLorentzVector describes a combination of position and time and the second set is more relevant where TLorentzVector describes momentum and energy:; Double_t xx =v.X(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLorentzVector.html:1544,variab,variable,1544,doc/master/classTLorentzVector.html,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html,1,['variab'],['variable']
Modifiability,"ions on default DataSet; 192 ; 193 // cd to local directory; 194 TString fOptions; ///< option string given by construction (presently only ""V""); 195 TString fTransformations; ///< List of transformations to test; 196 Bool_t fVerbose; ///< verbose mode; 197 ; 198 // flag determining the way training and test data are assigned to DataLoader; 199 enum DataAssignType { kUndefined = 0,; 200 kAssignTrees,; 201 kAssignEvents };; 202 DataAssignType fDataAssignType; ///< flags for data assigning; 203 std::vector<TTree*> fTrainAssignTree; ///< for each class: tmp tree if user wants to assign the events directly; 204 std::vector<TTree*> fTestAssignTree; ///< for each class: tmp tree if user wants to assign the events directly; 205 ; 206 Int_t fATreeType = 0; ///< type of event (=classIndex); 207 Float_t fATreeWeight = 0.0; ///< weight of the event; 208 std::vector<Float_t> fATreeEvent; ///< event variables; 209 ; 210 Types::EAnalysisType fAnalysisType; ///< the training type; 211 ; 212 protected:; 213 ; 214 ClassDef(DataLoader,4);; 215 };; 216 void DataLoaderCopy(TMVA::DataLoader* des, TMVA::DataLoader* src);; 217} // namespace TMVA; 218 ; 219#endif; 220 ; Configurable.h; DataSet.h; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Float_tfloat Float_tDefinition RtypesCore.h:57; Double_tdouble Double_tDefinition RtypesCore.h:59; ClassDef#define ClassDef(name, id)Definition Rtypes.h:342; TCut.h; srcOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t srcDefinition TGWin32VirtualXProxy.cxx:164; typeOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Windo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:9268,variab,variables,9268,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variables']
Modifiability,"ions to determine, with a simple; approximation, the values of ; . We call these values; ; .; ; Determine from ; a set of at least five relevant; coordinates ; , using contrains, or; alternative:. Perform a Principal Component Analysis (using; TPrincipal), and use; to get a linear transformation; ; , so that; ; are constrained and linear independent.; ; Perform a Principal Component Analysis on; ; , to get linear; indenpendent (among themselves, but not independent of; ; ) quantities . For each component ; make a mutlidimensional fit,; using ; as the variables, thus determing a set of; coefficents ; .; . To process data, using this parameterisation, do; ; Test wether the observation ; within the domain of; the parameterization, using the result from the Principal Component; Analysis.; ; Determine ; as before.; ; Detetmine ; as before.; ; Use the result of the fit to determind ; .; ; Transform back to ; from ; , using; the result from the Principal Component Analysis.; . Testing the parameterization; . The class also provides functionality for testing the, over the; training sample, found parameterization; (TMultiDimFit::Fit). This is done by passing; the class a test sample of tuples of the form ; , where ; are the independent; variables, the known, dependent quantity, and is; the square error in ; (TMultiDimFit::AddTestRow).; ; The parameterization is then evaluated at every ; in the; test sample, and; . is evaluated. The relative error over the test sample; . should not be to low or high compared to from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representive of; the problem. A large difference in the reduced over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced.; ; It's possible to use Minuit; [4] to further improve the fit, using the test sample.; . Christian Holm; November 2000, NBI; . Bibliography; 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:11846,parameteriz,parameterization,11846,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,6,['parameteriz'],['parameterization']
Modifiability,"ions to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCheckButton.html:33328,inherit,inherited,33328,doc/master/classTGCheckButton.html,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html,5,['inherit'],['inherited']
Modifiability,"ions to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGRadioButton (const TGRadioButton &)=delete;  ; TGRadioButton & operator= (const TGRadioButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRadioButton.html:33433,inherit,inherited,33433,doc/master/classTGRadioButton.html,https://root.cern,https://root.cern/doc/master/classTGRadioButton.html,5,['inherit'],['inherited']
Modifiability,"ions |; Private Attributes |; List of all members ; TSessionServerFrame Class Reference. . Definition at line 180 of file TSessionViewer.h. Public Member Functions;  TSessionServerFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionServerFrame () override;  Destructor. ;  ; void Build (TSessionViewer *gui);  Build server configuration frame. ;  ; const char * GetAddress () const;  ; const char * GetConfigText () const;  ; Int_t GetLogLevel () const;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; Int_t GetPortNumber () const;  ; const char * GetUserName () const;  ; Bool_t HandleExpose (Event_t *event) override;  Handle expose event in server frame. ;  ; TClass * IsA () const override;  ; Bool_t IsSync () const;  ; void OnBtnAddClicked ();  Add newly created session configuration in the list of sessions. ;  ; void OnBtnConnectClicked ();  Connect to selected server. ;  ; void OnBtnDeleteClicked ();  Delete selected session configuration (remove it from the list). ;  ; void OnBtnNewServerClicked ();  Reset server configuration fields. ;  ; void OnConfigFileClicked ();  Browse configuration files. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for session server frame. ;  ; void SetAddEnabled (Bool_t on=kTRUE);  ; void SetAddress (const char *str);  ; void SetConfigText (const char *str);  ; void SetConnectEnabled (Bool_t on=kTRUE);  ; void SetLogLevel (Int_t log);  ; void SetName (const char *str) override;  ; void SetPortNumber (Int_t port);  ; void SetSync (Bool_t sync);  ; void SettingsChanged ();  Settings have changed, update GUI accordingly. ;  ; void SetUserName (const char *str);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (TSessionDescription *desc);  Update fields with values from session description desc. ;  ;  Public",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionServerFrame.html:1212,config,configuration,1212,doc/master/classTSessionServerFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionServerFrame.html,1,['config'],['configuration']
Modifiability,"ions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedFunction< Func > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<typename Func = FreeFunctionPtr>; class ROOT::Math::WrappedFunction< Func >Template class to wrap any C++ callable object which takes one argument i.e. ; implementing operator() (double x) in a One-dimensional function interface. It provides a ROOT::Math::IGenFunction-like signature; Note: If you want to wrap just the reference (to avoid copying) you need to use Func& or const Func & as template parameter. The former should be used when the operator() is not a const method of Func ; Definition at line 45 of file WrappedFunction.h. Public Member Functions;  WrappedFunction (Func f);  construct from the pointer to the object and the member function ;  ; WrappedFunction * Clone () const override;  clone (required by the interface) ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  . Private Attributes; Func fFunc;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/WrappedFunction.h>. Inheritance diagram for ROOT::Math::WrappedFunction< Func >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ WrappedFunction(). template<typename Func = FreeFunctionPtr> . ROOT::Math::WrappedFunction< Func >::WrappedFunction ; (; Func ; f). inlin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedFunction.html:1204,inherit,inherited,1204,doc/master/classROOT_1_1Math_1_1WrappedFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedFunction.html,1,['inherit'],['inherited']
Modifiability,"ions |; Protected Attributes |; Private Attributes |; Friends |; List of all members ; TMVA::MethodPyAdaBoost Class Reference. . Definition at line 35 of file MethodPyAdaBoost.h. Public Member Functions;  MethodPyAdaBoost (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  ;  MethodPyAdaBoost (DataSetInfo &dsi, const TString &theWeightFile);  ;  ~MethodPyAdaBoost ();  ; virtual void AddWeightsXMLTo (void *) const;  ; const Ranking * CreateRanking ();  ; void DeclareOptions ();  ; std::vector< Float_t > & GetMulticlassValues ();  ; Double_t GetMvaValue (Double_t *errLower=nullptr, Double_t *errUpper=nullptr);  ; std::vector< Double_t > GetMvaValues (Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the current Data type ;  ; Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets);  ; void Init ();  ; virtual TClass * IsA () const;  ; void ProcessOptions ();  ; virtual void ReadModelFromFile ();  ; virtual void ReadWeightsFromStream (std::istream &);  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; virtual void ReadWeightsFromStream (TFile &);  ; virtual void ReadWeightsFromXML (void *);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TestClassification ();  initialization ;  ; void Train ();  ;  Public Member Functions inherited from TMVA::PyMethodBase;  PyMethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  ;  PyMethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  ; virtual ~PyMethodBase ();  ; PyObject * Eval (TString code);  Evaluate Python code. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyAdaBoost.html:1710,inherit,inherited,1710,doc/master/classTMVA_1_1MethodPyAdaBoost.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyAdaBoost.html,1,['inherit'],['inherited']
Modifiability,"ions() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUser() const; static Long_tGetVirtMemMax(); const char*GetWorkDir() const; virtual TProofServ::EQueryActionGetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE); virtual voidHandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual voidHandleSigPipe(); virtual voidHandleSocketInput(); virtual Int_tHandleSocketInput(TMessage* mess, Bool_t all); virtual voidHandleTermination(); virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual voidHandleUrgentData(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tIsActive(); virtual Bool_tTApplication::IsCmdThread(); Bool_tIsEndMaster() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tIsParallel() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsTopMaster() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); voidLogToMaster(Bool_t on = kTRUE); virtual voidTApplication::Lower(); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofServ.html:7591,Inherit,InheritsFrom,7591,root/html532/TProofServ.html,https://root.cern,https://root.cern/root/html532/TProofServ.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ions() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUser() const; static Long_tGetVirtMemMax(); const char*GetWorkDir() const; virtual TProofServ::EQueryActionGetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE); virtual voidHandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual voidHandleSigPipe(); virtual voidHandleSocketInput(); virtual Int_tHandleSocketInput(TMessage* mess, Bool_t all); virtual voidHandleTermination(); virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual voidHandleUrgentData(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tIsActive(); virtual Bool_tTApplication::IsCmdThread(); Bool_tIsEndMaster() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tIsParallel() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsTopMaster() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; voidLogToMaster(Bool_t on = kTRUE); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofServ.html:7764,Inherit,InheritsFrom,7764,root/html602/TProofServ.html,https://root.cern,https://root.cern/root/html602/TProofServ.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ions). GSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limited variable. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limited variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower, double upper); set upper/lower limited variable. bool SetFixedVariable(unsigned int ivar, const string& name, double val); set fixed variable. bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. { return (fObjFunc) ? fObjFunc->NCalls() : 0; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fNFree; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html:7005,variab,variable,7005,root/html528/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html,4,['variab'],['variable']
Modifiability,"ions, that the evaluation of the 's becomes trivial; [5]. To derive ; , we first note that; equation (4) can be written as; . (15). where; . (16). Consequently, ; is an upper triangle matrix, which can be; readily inverted. So we now evaluate; . (17). The model ; can therefore be written as; . The original model ; is therefore identical with; this if; . (18). The reason we use ; rather then; ; is to save storage, since; ; can be stored in the same matrix as; . (TMultiDimFit::MakeCoefficients). The errors in; the coefficients is calculated by inverting the curvature matrix; of the non-orthogonal functions [1]; (TMultiDimFit::MakeCoefficientErrors).; . Considerations; . It's important to realize that the training sample should be; representive of the problem at hand, in particular along the borders; of the region of interest. This is because the algorithm presented; here, is a interpolation, rahter then a extrapolation; [5].; ; Also, the independent variables need to be linear; independent, since the procedure will perform poorly if they are not; [5]. One can find an linear transformation from ones; original variables to a set of linear independent variables; , using a Principal Components Analysis; (see TPrincipal), and; then use the transformed variable as input to this class [5]; [6].; ; H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):; . Define ; are the 5 dependent; quantities that define a track.; ; Compute, for different values of ; , the tracks; through the magnetic field, and determine the corresponding; ; .; ; Use the simulated observations to determine, with a simple; approximation, the values of ; . We call these values; ; .; ; Determine from ; a set of at least five relevant; coordinates ; , using contrains, or; alternative:. Perform a Principal Component Analysis (using; TPrincipal), and u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:10072,variab,variables,10072,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,6,['variab'],['variables']
Modifiability,"ions.Definition RooSpline.h:27; xDouble_t x[n]Definition legend1.C:17. Definition at line 27 of file RooSpline.h. Public Member Functions;  RooSpline ()=default;  ;  RooSpline (const char *name, const char *title, RooAbsReal &x, const TGraph &gr, int order=3, bool logx=false, bool logy=false);  Constructor for creating a spline from a TGraph. ;  ;  RooSpline (const char *name, const char *title, RooAbsReal &x, std::span< const double > x0, std::span< const double > y0, int order=3, bool logx=false, bool logy=false);  Constructor for creating a spline from raw data. ;  ;  RooSpline (const RooSpline &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  Virtual copy constructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpline.html:2562,inherit,inherited,2562,doc/master/classRooSpline.html,https://root.cern,https://root.cern/doc/master/classRooSpline.html,1,['inherit'],['inherited']
Modifiability,"ions::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1457; TStreamerInfoActions::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1444; TStreamerInfoActions::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1414; TStreamerInfoActions::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1415; TStreamerInfoActions::GenericLooper::ConvertBasicType< BitsMarker, To, Generic >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2447; TStreamerInfoActions::GenericLooper::ConvertBasicType< NoFactorMarker< From >, To, Converter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2504; TStreamerInfoActions::GenericLooper::ConvertBasicType< WithFactorMarker< From >, To, Converter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2484; TStreamerInfoActions::GenericLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:2428; TStreamerInfoActions::GenericLooper::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2429; TStreamerInfoActions::GenericLooper::ConvertCollectionBasicTypeDefinition TStreamerInfoActions.cxx:2623; TStreamerInfoActions::GenericLooper::ConvertCollectionBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf)Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:265750,config,config,265750,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"ions:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::IBaseParam. class ROOT::Math::IBaseParam. Documentation for the abstract class IBaseParam.; It defines the interface for dealing with the function parameters; This is used only for internal convinience, to avoid redefining the Parameter API; for the one and the multi-dim functions.; Concrete class should derive from ROOT::Math::IParamFunction and not from this class. @ingroup ParamFunc. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IBaseParam(); ROOT::Math::IBaseParamIBaseParam(); ROOT::Math::IBaseParamIBaseParam(const ROOT::Math::IBaseParam&); virtual unsigned intNPar() const; ROOT::Math::IBaseParam&operator=(const ROOT::Math::IBaseParam&); virtual stringParameterName(unsigned int i) const; virtual const double*Parameters() const; virtual voidSetParameters(const double* p). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IBaseParam(). Virtual Destructor (no operations). {}. const double * Parameters() const. Access the parameter values. void SetParameters(const double* p). Set the parameter values; @param p vector of doubles containing the parameter values. to be defined: can user change number of params ? At the moment no. unsigned int NPar() const. Return the number of Parameters. std::string ParameterName(unsigned int i) const. Return the name of the i-th parameter (starting from zero); Overwrite if want to avoid the default name (""Par_0, Par_1, ...""). » Author: L. Moneta Tue Nov 14 14:20:07 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__IBaseParam.html:1179,Inherit,Inheritance,1179,root/html602/ROOT__Math__IBaseParam.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__IBaseParam.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ions:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::IBaseParam. class ROOT::Math::IBaseParam. Documentation for the abstract class IBaseParam.; It defines the interface for dealing with the function parameters; This is used only for internal convinience, to avoid redefining the Parameter API; for the one and the multi-dim functions.; Concrete class should derive from ROOT::Math::IParamFunction and not from this class. @ingroup ParamFunc. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IBaseParam(); ROOT::Math::IBaseParamIBaseParam(); ROOT::Math::IBaseParamIBaseParam(const ROOT::Math::IBaseParam&); virtual unsigned intNPar() const; ROOT::Math::IBaseParam&operator=(const ROOT::Math::IBaseParam&); virtual stringParameterName(unsigned int i) const; virtual const double*Parameters() const; virtual voidSetParameters(const double* p). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IBaseParam(). Virtual Destructor (no operations). {}. const double * Parameters() const. Access the parameter values. void SetParameters(const double* p). Set the parameter values; @param p vector of doubles containing the parameter values. to be defined: can user change number of params ? At the moment no. unsigned int NPar() const. Return the number of Parameters. std::string ParameterName(unsigned int i) const. Return the name of the i-th parameter (starting from zero); Overwrite if want to avoid the default name (""Par_0, Par_1, ...""). » Author: L. Moneta Tue Nov 14 14:20:07 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__IBaseParam.html:1179,Inherit,Inheritance,1179,root/html604/ROOT__Math__IBaseParam.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__IBaseParam.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ions:; class description; function members; data members; class charts. ROOT; » MATH; » MATHMORE; » ROOT::Math::KelvinFunctions. class ROOT::Math::KelvinFunctions. KelvinFunctions. Calculates the Kelvin Functions Ber(x), Bei(x), Ker(x), Kei(x), and; their first derivatives. Function Members (Methods); public:. virtual~KelvinFunctions(); static doubleBei(double x); static doubleBer(double x); static doubleDBei(double x); static doubleDBer(double x); static doubleDKei(double x); static doubleDKer(double x); static doubleF1(double x); static doubleF2(double x); static doubleG1(double x); static doubleG2(double x); static doubleKei(double x); ROOT::Math::KelvinFunctionsKelvinFunctions(); ROOT::Math::KelvinFunctionsKelvinFunctions(const ROOT::Math::KelvinFunctions&); static doubleKer(double x); static doubleM(double x); static doubleN(double x); ROOT::Math::KelvinFunctions&operator=(const ROOT::Math::KelvinFunctions&); static doublePhi(double x); static doubleTheta(double x). Data Members; protected:. static doublefgEpsilon; static doublefgMin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; double Ber(double x); The Kelvin functions and their first derivatives. double Bei(double x). double Ker(double x). double Kei(double x). double DBer(double x). double DBei(double x). double DKer(double x). double DKei(double x). double F1(double x); Utility functions appearing in the calculations of the Kelvin; functions. double F2(double x). double G1(double x). double G2(double x). double M(double x). double Theta(double x). double N(double x). double Phi(double x). virtual ~KelvinFunctions(); Include and empty virtual desctructor to eliminate compiler warnings. {}. » Last changed: root/mathmore:$Id: KelvinFunctions.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__KelvinFunctions.html:1212,Inherit,Inheritance,1212,root/html532/ROOT__Math__KelvinFunctions.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__KelvinFunctions.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ions:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::NumEventsTestStat. class RooStats::NumEventsTestStat: public RooStats::TestStatistic. NumEventsTestStat is a simple implementation of the TestStatistic interface used for simple number counting.; It should probably support simple cuts as well. Function Members (Methods); public:. virtual~NumEventsTestStat(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet&); virtual const RooAbsArg*GetTestStatistic() const; virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::NumEventsTestStatNumEventsTestStat(); RooStats::NumEventsTestStatNumEventsTestStat(RooAbsPdf& pdf); RooStats::NumEventsTestStatNumEventsTestStat(const RooStats::NumEventsTestStat&); RooStats::NumEventsTestStat&operator=(const RooStats::NumEventsTestStat&); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. RooAbsPdf*fPdf. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NumEventsTestStat(); { }. NumEventsTestStat(RooAbsPdf& pdf). virtual ~NumEventsTestStat(); delete fRand;; delete fTestStatistic;. Double_t Evaluate(RooAbsData& data, RooArgSet& ); Main interface to evaluate the test statistic on a dataset. const RooAbsArg* GetTestStatistic() const; Get the TestStatistic. {return fPdf;}. const TString GetVarName() const; {return ""Number of events"";}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: NumEventsTestStat.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__NumEventsTestStat.html:1264,Inherit,Inheritance,1264,root/html532/RooStats__NumEventsTestStat.html,https://root.cern,https://root.cern/root/html532/RooStats__NumEventsTestStat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ions; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; Int_tTEveTrack::fIndexReconstruction index; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tTEveTrack::fLabelSimulation label; Int_tTEveTrack::fLastPMIdx!Last path-mark index tried in track-propagation.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTEveTrack::fLockPointsLock points that are currently in - do nothing in MakeTrack().; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; TEveVectorDTEveTrack::fPStarting momentum; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; TEveVectorDTEveTrack::fPEndMomentum at the last point of extrapolation; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; vector<TEvePathMarkT<double> >TEveTrack::fPathMarksTEveVector o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveTrackProjected.html:29345,variab,variable,29345,root/html534/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html534/TEveTrackProjected.html,2,['variab'],['variable']
Modifiability,"ions; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; Int_tTEveTrack::fIndexReconstruction index; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tTEveTrack::fLabelSimulation label; Int_tTEveTrack::fLastPMIdx!Last path-mark index tried in track-propagation.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTEveTrack::fLockPointsLock points that are currently in - do nothing in MakeTrack().; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNnumber of points; TStringTPolyMarker3D::fNamename of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionoptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; TEveVectorDTEveTrack::fPStarting momentum; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; TEveVectorDTEveTrack::fPEndMomentum at the last point of extrapolation; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; vector<TEvePathMarkT<double> >TEveTrack::fPathMarksTEveVector of known po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTrackProjected.html:28951,variab,variable,28951,root/html530/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html530/TEveTrackProjected.html,3,['variab'],['variable']
Modifiability,"ions; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; Int_tTEveTrack::fIndexReconstruction index; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tTEveTrack::fLabelSimulation label; Int_tTEveTrack::fLastPMIdx!Last path-mark index tried in track-propagation.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTEveTrack::fLockPointsLock points that are currently in - do nothing in MakeTrack().; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNnumber of points; TStringTPolyMarker3D::fNamename of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionoptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; TEveVectorTEveTrack::fPStarting momentum; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; TEveVectorTEveTrack::fPEndMomentum at the last point of extrapolation; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; vector<TEvePathMarkT<float> >TEveTrack::fPathMarksTEveVector of known point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrackProjected.html:28578,variab,variable,28578,root/html528/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html528/TEveTrackProjected.html,1,['variab'],['variable']
Modifiability,"ions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TEventIter * Create (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Create and instance of the appropriate iterator. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t LoadDir ();  Load directory. ;  ; virtual void PreProcessEvent (Long64_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Long64_t fCur;  ; TDirectory * fDir;  ; TDSet * fDSet;  ; TDSetElement * fElem;  ; Long64_t fElemCur;  ; Long64_t fElemFirst;  ; Long64_t fElemNum;  ; TEntryList * fEntryList;  current position in the eventList ;  ; Long64_t fEntryListPos;  entry list for processing ;  ; TEventList * fEventList;  ; Int_t fEventListPos;  eventList for processing ;  ; TFile * fFile;  ; TString fFilename;  ; Long64_t fFirst;  ; Long64_t fNum;  ; Long64_t fOldBytesRead;  ; TList * fPackets;  current position in the entrylist ;  ; TString fPath;  ; TSelector * fSel;  ; Bool_t fStop;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TEventIter.h>. Inheritance diagram for TEventIter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIter.html:10569,inherit,inherited,10569,doc/master/classTEventIter.html,https://root.cern,https://root.cern/doc/master/classTEventIter.html,1,['inherit'],['inherited']
Modifiability,"ions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetAverageWindow (Int_t w=3);  static function: Set average window of searched peaks see TSpectrum2::SearchHighRes ;  ; static void SetDeconIterations (Int_t n=3);  static function: Set max number of decon iterations in deconvolution operation see TSpectrum2::SearchHighRes ;  ; static TH1 * StaticBackground (const TH1 *hist, Int_t niter=20, Option_t *option="""");  static function (called by TH1), interface to TSpectrum2::Background ;  ; static Int_t StaticSearch (const TH1 *hist, Double_t sigma=2, Option_t *option=""goff"", Double_t threshold=0.05);  static function (called by TH1), interface to TSpectrum2::Search ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TH1 * fHistogram;  resulting histogram ;  ; Int_t fMaxPeaks;  Maximum number of peaks to be found. ;  ; Int_t fNPeaks;  number of peaks found ;  ; Double_t * fPosition;  [fNPeaks] array of current peak positions ;  ; Double_t * fPositionX;  [fNPeaks] X position of peaks ;  ; Double_t * fPositionY;  [fNPeaks] Y position of peaks ;  ; Double_t fResolution;  NOT USED resolution of the neighboring peaks ;  ;  Protected Attributes inherited from TNamed; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2.html:14444,inherit,inherited,14444,doc/master/classTSpectrum2.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2.html,2,['inherit'],['inherited']
Modifiability,"ions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fActive;  ; Int_t fBreakin;  ; Int_t fBreakout;  ; Bool_t fHasExecuted;  ; TString fOption;  ; TList * fTasks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTask.html:14610,inherit,inherited,14610,doc/master/classTTask.html,https://root.cern,https://root.cern/doc/master/classTTask.html,1,['inherit'],['inherited']
Modifiability,"ions; void configure (const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build This method parses any SplitParam and SplitParamComstrained argument in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::list< std::string > _miStateNameList;  ; std::map< std::string, std::pair< std::list< std::string >, std::string > > _paramSplitMap;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class BuildConfig;  ; class MultiBuildConfig;  ; class RooSimWSTool;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html:10432,inherit,inherited,10432,doc/master/classRooSimWSTool_1_1SplitRule.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html,1,['inherit'],['inherited']
Modifiability,ions;  IntegratorMultiDimOptions (const IntegratorMultiDimOptions &rhs);  copy constructor ;  ;  IntegratorMultiDimOptions (IOptions *extraOpts=nullptr);  constructor using the default options can pass a pointer to extra options (N.B. ;  ;  ~IntegratorMultiDimOptions () override;  ; std::string Integrator () const override;  name of multi-dim integrator ;  ; IntegrationMultiDim::Type IntegratorType () const;  type of the integrator (return the enumeration type) ;  ; unsigned int NCalls () const;  maximum number of function calls ;  ; IntegratorMultiDimOptions & operator= (const IntegratorMultiDimOptions &rhs);  assignment operator ;  ; void Print (std::ostream &os=std::cout) const;  print all the options ;  ; void SetIntegrator (const char *name);  set multi-dim integrator name ;  ; void SetNCalls (unsigned int calls);  set maximum number of function calls ;  ;  Public Member Functions inherited from ROOT::Math::BaseIntegratorOptions;  BaseIntegratorOptions (const BaseIntegratorOptions &opt);  ; virtual ~BaseIntegratorOptions ();  protected constructor to avoid user creating this class ;  ; double AbsTolerance () const;  non-static methods for retrieving options ;  ; IOptions * ExtraOptions () const;  return extra options ;  ; BaseIntegratorOptions & operator= (const BaseIntegratorOptions &opt);  assignment operators ;  ; double RelTolerance () const;  absolute tolerance ;  ; void SetAbsTolerance (double tol);  non-static methods for setting options ;  ; void SetExtraOptions (const IOptions &opt);  set extra options (in this case pointer is cloned) ;  ; void SetRelTolerance (double tol);  set the relative tolerance ;  ; void SetWKSize (unsigned int size);  set workspace size ;  ; unsigned int WKSize () const;  size of the workspace ;  . Static Public Member Functions; static ROOT::Math::IOptions & Default (const char *name);  retrieve specific options ;  ; static double DefaultAbsTolerance ();  ; static std::string DefaultIntegrator ();  ; static IntegrationMultiDim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDimOptions.html:1408,inherit,inherited,1408,doc/master/classROOT_1_1Math_1_1IntegratorMultiDimOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDimOptions.html,1,['inherit'],['inherited']
Modifiability,"ions;  RooDecay ();  ;  RooDecay (const char *name, const char *title, RooRealVar &t, RooAbsReal &tau, const RooResolutionModel &model, DecayType type);  Create a new RooDecay. ;  ;  RooDecay (const RooDecay &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; double coefficient (Int_t basisIndex) const override;  ; void generateEvent (Int_t code) override;  Interface for generation of an event using the algorithm corresponding to the specified code. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsAnaConvPdf;  RooAbsAnaConvPdf ();  Default constructor, required for persistence. ;  ;  RooAbsAnaConvPdf (const char *name, const char *title, const RooResolutionModel &model, RooRealVar &convVar);  Constructor. ;  ;  RooAbsAnaConvPdf (const RooAbsAnaConvPdf &other, const char *name=nullptr);  ;  ~RooAbsAnaConvPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integral defined by given code, which is returned by getAnalyticalIntegralWN() ;  ; virtual bool changeModel (const RooResolutionModel &newModel);  Change the current resolution model to newModel. ;  ; virtual double coefAnalyticalIntegral (Int_t coef, Int_t code, const char *rangeName=nullptr) const;  Default implementation of function implementing advertised integrals. ;  ; virtual RooFit::OwningPtr< RooArgSet > coefVars (Int_t coefIdx) const;  Return set of parameters with are used exclusively ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDecay.html:4127,inherit,inherited,4127,doc/master/classRooDecay.html,https://root.cern,https://root.cern/doc/master/classRooDecay.html,1,['inherit'],['inherited']
Modifiability,"ions;  TVirtualMonitoringWriter (const TVirtualMonitoringWriter &)=delete;  ; TVirtualMonitoringWriter & operator= (const TVirtualMonitoringWriter &)=delete;  . Private Attributes; Double_t fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualMonitoring.h>. Inheritance diagram for TVirtualMonitoringWriter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualMonitoringWriter() [1/3]. TVirtualMonitoringWriter::TVirtualMonitoringWriter ; (; const TVirtualMonitoringWriter & ; ). privatedelete . ◆ TVirtualMonitoringWriter() [2/3]. TVirtualMonitoringWriter::TVirtualMonitoringWriter ; (; ). inline . Definition at line 48 of file TVirtualMonitoring.h. ◆ TVirtualMonitoringWriter() [3/3]. TVirtualMonitoringWriter::TVirtualMonitoringWriter ; (; const char * ; name, . Double_t ; value . ). inline . Definition at line 49 of file TVirtualMonitoring.h. ◆ ~TVirtualMonitoringWriter(). TVirtualMonitoringWriter::~TVirtualMonitoringWriter ; (; ). virtual . destructor ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMonitoringWriter.html:11842,inherit,inherited,11842,doc/master/classTVirtualMonitoringWriter.html,https://root.cern,https://root.cern/doc/master/classTVirtualMonitoringWriter.html,2,['inherit'],['inherited']
Modifiability,"ions;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGClient.h>. Inheritance diagram for TGClient:. This browser is not ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGClient.html:20069,inherit,inherited,20069,doc/master/classTGClient.html,https://root.cern,https://root.cern/doc/master/classTGClient.html,2,['inherit'],['inherited']
Modifiability,"ionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDEFoam.html:11435,Config,Configurable,11435,root/html532/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDEFoam.html,1,['Config'],['Configurable']
Modifiability,"ionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStrea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDEFoam.html:12160,Config,Configurable,12160,root/html602/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDEFoam.html,2,['Config'],['Configurable']
Modifiability,"ionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodPDEFoam.html:11523,Config,Configurable,11523,root/html534/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodPDEFoam.html,1,['Config'],['Configurable']
Modifiability,"ior will also be plotted for the 1-D case. ; Definition at line 28 of file MCMCIntervalPlot.h. Public Member Functions;  MCMCIntervalPlot ();  ;  MCMCIntervalPlot (MCMCInterval &interval);  ;  ~MCMCIntervalPlot () override;  Destructor of SamplingDistribution. ;  ; void Draw (const Option_t *options=nullptr) override;  ; void DrawChainScatter (RooRealVar &xVar, RooRealVar &yVar);  ; void DrawNLLHist (const Option_t *options=nullptr);  ; void DrawNLLVsTime ();  ; void DrawParameterVsTime (RooRealVar &param);  ; void DrawWeightHist (const Option_t *options=nullptr);  ; TClass * IsA () const override;  ; void SetLineColor (Color_t color);  ; void SetLineWidth (Int_t width);  ; void SetMCMCInterval (MCMCInterval &interval);  ; void SetShadeColor (Color_t color);  ; void SetShowBurnIn (bool showBurnIn);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCIntervalPlot.html:2052,inherit,inherited,2052,doc/master/classRooStats_1_1MCMCIntervalPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCIntervalPlot.html,1,['inherit'],['inherited']
Modifiability,"ip::ETypekClipNone; static TGLClip::ETypekClipPlane; static TGLClip::EModekInside; static TGLPhysicalShape::EManipTGLPhysicalShape::kManipAll; static TGLClip::EModekOutside; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateAll; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateX; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateY; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateZ; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleAll; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleX; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleY; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleZ; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateAll; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateX; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateY; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateZ. protected:. TGLClip::EModefMode; UInt_tfTimeStamp; Bool_tfValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLClip(const TGLLogicalShape& logical, const TGLMatrix& transform, const float[4] color); Construct a stand-alone physical clipping object. ~TGLClip(); Destroy clip object. void Setup(const TGLVector3& , const TGLVector3& ); Setup the clipping object with two vectors.; The interpretation of the two is different for plane and box; clipping objects. void Draw(TGLRnrCtx& rnrCtx) const; Draw out clipping object with blending and back + front filling.; Some clip objects are single face which we want to see both sides of. TGLClip(const TGLLogicalShape& logical, const TGLMatrix& transform, const float[4] color). void Modified(); { TGLPhysicalShape::Modified(); IncTimeStamp(); }. void Setup(const TGLBoundingBox& bbox). EMode GetMode() const; { return fMode; }. void SetMode(TGLClip::EMode mode). UInt_t TimeStamp() const; { return fTimeStamp; }. void IncTimeStamp(); { ++fTimeStamp; }. Bool_t IsValid() const; { return fValid; }. void Invalidate(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLClip.html:4470,Inherit,Inheritance,4470,root/html602/TGLClip.html,https://root.cern,https://root.cern/root/html602/TGLClip.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"iple; arguments). The initial value expression is taken to be; 'expression' which can be any one-line C++ expression in terms of; variables that occur in 'vars'. Skeleton code for handling of; analytical integrals is added if hasAnaInt is true. You can add; optional expressions for analytical integrals to be advertised by; your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. Bool_t makeClass(const char* className, const char* name, const char* realArgNames = 0, const char* catArgNames = 0, const char* expression = ""1.0"", Bool_t hasAnaInt = kFALSE, Bool_t hasIntGen = kFALSE, const char* intExpression = 0); Write code for a 'baseName' implementation with class name 'className',; taking RooAbsReal arguments with names listed in argNames and; RooAbsCategory arguments with names listed in catArgNames as; constructor arguments (use a comma separated list for multiple; arguments). The initial value expression is taken to be; 'expression' which can be any one-line C++ expression in terms of; variables that occur in 'vars'. Skeleton code for handling of; analytical integrals is added if hasAnaInt is true. You can add; optional expressions for analytical integrals to be advertised by; your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. Skeleton code for internal event generation is added; if hasIntGen is true. RooClassFactory(); Constructors, assignment etc. » Last changed: Tue Jun 30 14:32:09 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooClassFactory.html:17421,variab,variables,17421,root/html602/RooClassFactory.html,https://root.cern,https://root.cern/root/html602/RooClassFactory.html,2,['variab'],['variables']
Modifiability,"iple; arguments). The initial value expression is taken to be; 'expression' which can be any one-line C++ expression in terms of; variables that occur in 'vars'. Skeleton code for handling of; analytical integrals is added if hasAnaInt is true. You can add; optional expressions for analytical integrals to be advertised by; your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. Bool_t makeClass(const char* className, const char* name, const char* realArgNames = 0, const char* catArgNames = 0, const char* expression = ""1.0"", Bool_t hasAnaInt = kFALSE, Bool_t hasIntGen = kFALSE, const char* intExpression = 0); Write code for a 'baseName' implementation with class name 'className',; taking RooAbsReal arguments with names listed in argNames and; RooAbsCategory arguments with names listed in catArgNames as; constructor arguments (use a comma separated list for multiple; arguments). The initial value expression is taken to be; 'expression' which can be any one-line C++ expression in terms of; variables that occur in 'vars'. Skeleton code for handling of; analytical integrals is added if hasAnaInt is true. You can add; optional expressions for analytical integrals to be advertised by; your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. Skeleton code for internal event generation is added; if hasIntGen is true. RooClassFactory(); Constructors, assignment etc. » Last changed: Tue Mar 10 17:16:00 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooClassFactory.html:16415,variab,variables,16415,root/html534/RooClassFactory.html,https://root.cern,https://root.cern/root/html534/RooClassFactory.html,2,['variab'],['variables']
Modifiability,"iplies transformed; coefficients in the given region by the given; enhance_coeff and transforms it back. Function parameters:; fSource-pointer to the matrix of source spectrum, its size should; be fSizeX*fSizeY; fDest-pointer to the matrix of destination data, its size should be; fSizeX*fSizeY. . Example of enhancement;  ; Function:; void TSpectrumTransform2::Enhance(const; double; **fSource, double; **fDest);  ; This function transforms the; source spectrum (for details see Transform function). �Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter; functions. The Enhance function multiplies transformed coefficients in the given; region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; back. Enhanced data are written into dest spectrum.; Example � script Enhance2.c:. Fig. 1 Original two-dimensional noisy spectrum. Fig. 2 Enhanced spectrum of; the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63); were multiplied by 5) ;  ; Script:; // Example to illustrate; enhancement (class TSpectrumTransform2).; // To execute this example,; do; // root > .x Enhance2.C; �; void Enhance2() {; �� Int_t i, j;; �� Int_t nbinsx =; 256;; �� Int_t nbinsy =; 256;�� ; �� Int_t xmin� = 0;; �� Int_t xmax� =; nbinsx;; �� Int_t ymin� = 0;; �� Int_t ymax� =; nbinsy;; �� Double_t ** source = new Double_t *[nbinsx];�� ; �� Double_t ** dest = new; Double_t *[nbinsx];����� ; �� for (i=0;i<nbinsx;i++); ����������������������������������������������� source[i]=new; Double_t[nbinsy];; �� for (i=0;i<nbinsx;i++); ����������������������������������������������� dest[i]=new; Double_t[nbinsy];�� ; �� TH2F *trans = new; TH2F(""trans"",""Background; estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; �� TFile *f = new; TFile(""TSpectrum2.root"");; �� trans=(TH2F*); f->Get(""back3;1"");; �� TCanvas *Tr = new; TCanvas(""Transform"",""Illustation of trans",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Transform.html:23723,Enhance,Enhanced,23723,root/html602/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Transform.html,2,['Enhance'],['Enhanced']
Modifiability,"iply this profile2D by a constant c1.; 1905///; 1906/// `this = c1*this; 1907///; 1908/// This function uses the services of TProfile2D::Add; 1909 ; 1910void TProfile2D::Scale(Double_t c1, Option_t * option); 1911{; 1912 TProfileHelper::Scale(this, c1, option);; 1913}; 1914 ; 1915////////////////////////////////////////////////////////////////////////////////; 1916/// Set the number of entries in bin.; 1917 ; 1918void TProfile2D::SetBinEntries(Int_t bin, Double_t w); 1919{; 1920 TProfileHelper::SetBinEntries(this, bin, w);; 1921}; 1922 ; 1923////////////////////////////////////////////////////////////////////////////////; 1924/// Redefine x and y axis parameters.; 1925 ; 1926void TProfile2D::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); 1927{; 1928 TH1::SetBins(nx,xmin, xmax,ny, ymin,ymax);; 1929 fBinEntries.Set(fNcells);; 1930 if (fBinSumw2.fN) fBinSumw2.Set(fNcells);; 1931}; 1932 ; 1933////////////////////////////////////////////////////////////////////////////////; 1934/// Redefine x and y axis parameters for variable bin sizes.; 1935 ; 1936void TProfile2D::SetBins(Int_t nx, const Double_t *xbins, Int_t ny, const Double_t *ybins); 1937{; 1938 TH1::SetBins(nx,xbins,ny,ybins);; 1939 fBinEntries.Set(fNcells);; 1940 if (fBinSumw2.fN) fBinSumw2.Set(fNcells);; 1941}; 1942 ; 1943////////////////////////////////////////////////////////////////////////////////; 1944/// Set total number of bins including under/overflow.; 1945/// Reallocate bin contents array; 1946 ; 1947void TProfile2D::SetBinsLength(Int_t n); 1948{; 1949 TH2D::SetBinsLength(n);; 1950 TProfileHelper::BuildArray(this);; 1951}; 1952 ; 1953////////////////////////////////////////////////////////////////////////////////; 1954/// Set the buffer size in units of 8 bytes (double).; 1955 ; 1956void TProfile2D::SetBuffer(Int_t buffersize, Option_t *); 1957{; 1958 if (fBuffer) {; 1959 BufferEmpty();; 1960 delete [] fBuffer;; 1961 fBuffer = nullptr;; 1962 }; 1963 if (buffersi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:70463,variab,variable,70463,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ipt.; If there are errors, it calls the compiler to build a dummy executable to clearly report unresolved symbols. ACLiC makes a shared library with a dictionary containing the classes and functions declared in the script. It also adds the classes and functions declared in included files with the same name as the script file and any of the following extensions: .h, .hh, .hpp, .hxx, .hPP, .hXX. This means that, by default, you cannot combine scripts from different files into one library by using #include statements; you will need to compile each script separately. In a future release, we plan to add the global variables declared in the script to the dictionary also. If you are curious about the specific calls, you can raise the ROOT debug level: gDebug=3 and ACLiC will print these steps. If you need to keep the intermediate files around, for example when debugging the script using gdb, use gDebug=7.; 7.4.5 Moving between Interpreter and Compiler; The best way to develop portable scripts is to make sure you can always run them with both, the interpreter and with ACLiC. To do so, do not use the Cling extensions and program around the Cling limitations. When it is not possible or desirable to program around the Cling limitations, you can use the C preprocessor symbols defined for Cling and rootcling.; The preprocessor symbol __CLING__ is defined for both ROOT and rootcling. The symbol __ROOTCLING__ (and __MAKECINT__ for backward compatibility) is only defined in rootcling.; Use !defined(__CLING__) || defined(__ROOTCLING__) to bracket code that needs to be seen by the compiler and rootcling, but will be invisible to the interpreter.; Use !defined(__CLING__)to bracket code that should be seen only by the compiler and not by Cling nor rootcling.For example, the following will hide the declaration and initialization of the array gArray from both Cling and rootcling.; #if !defined(__CLING__); int gArray[] = { 2, 3, 4};; #endif; Because ACLiC calls rootcling to build a dictio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:276109,portab,portable,276109,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['portab'],['portable']
Modifiability,"iption including matrices and other attributes. ; Definition at line 71 of file RGeomData.hxx. Public Member Functions;  RGeomNode (int _id=0);  ; bool CanDisplay () const;  True when there is shape and it can be displayed. ;  ;  Public Member Functions inherited from ROOT::RGeomNodeBase;  RGeomNodeBase (int _id=0);  ; const char * GetArg (int kind);  Returns argument for regexp. ;  ; bool IsVisible () const;  . Public Attributes; int idshift {-1};  ! used to jump over then scan all geom hierarchy ;  ; std::vector< float > matr;  matrix for the node, can have reduced number of elements ;  ; int nfaces {0};  ! number of shape faces ;  ; float opacity {1.};  ! opacity of the color ;  ; bool useflag {false};  ! extra flag, used for selection ;  ; double vol {0};  ! volume estimation ;  ;  Public Attributes inherited from ROOT::RGeomNodeBase; std::vector< int > chlds;  list of childs id ;  ; std::string color;  rgb code in hex format ;  ; int id {0};  node id, index in array ;  ; std::string material;  name of the material ;  ; std::string name;  node name ;  ; bool nochlds {false};  how far in hierarchy depth should be scanned ;  ; int sortid {0};  ! place in sorted array, to check cuts, or id of original node when used search structures ;  ; int vis {0};  visibility flag, 0 - off, 1 - only when level==0, 99 - always ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeomNode(). ROOT::RGeomNode::RGeomNode ; (; int ; _id = 0). inline . Definition at line 80 of file RGeomData.hxx. Member Function Documentation. ◆ CanDisplay(). bool ROOT::RGeomNode::CanDisplay ; (; ); const. inline . True when there is shape and it can be displayed. ; Definition at line 83 of file RGeomData.hxx. Member Data Documentation. ◆ idshift. int ROOT::RGeomNode::idshift {-1}. ! used to jump over then scan all geom hierarchy ; Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomNode.html:1079,inherit,inherited,1079,doc/v632/classROOT_1_1RGeomNode.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomNode.html,2,['inherit'],['inherited']
Modifiability,iption; function members; data members; class charts. ROOT; » TEST; » Event. class Event: public TObject. Event and Track classes. The Event class is a naive/simple example of an event structure.; public:; char fType[20];; char *fEventName; //run+event number in character format; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Double32_t fTemperature;; Int_t fMeasures[10];; Double32_t fMatrix[4][4];; Double32_t *fClosestDistance; //[fNvertex] indexed array!; EventHeader fEvtHdr;; TClonesArray *fTracks;; TRefArray *fHighPt; //array of High Pt tracks only; TRefArray *fMuons; //array of Muon tracks only; TRef fLastTrack; //pointer to last track; TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; TH1F *fH;; TBits fTriggerBits; //Bits triggered by this event. The EventHeader class has 3 data members (integers):; public:; Int_t fEvtNum;; Int_t fRun;; Int_t fDate;. The Event data member fTracks is a pointer to a TClonesArray.; It is an array of a variable number of tracks per event.; Each element of the array is an object of class Track with the members:; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the momentum; Float_t fRandom; //A random track quantity; Float_t fMass2; //The mass square of this particle; Float_t fBx; //X intercept at the vertex; Float_t fBy; //Y intercept at the vertex; Float_t fMeanCharge; //Mean charge deposition of all hits of this track; Float_t fXfirst; //X coordinate of the first point; Float_t fXlast; //X coordinate of the last point; Float_t fYfirst; //Y coordinate of the first point; Float_t fYlast; //Y coordinate of the last point; Float_t fZfirst; //Z coordinate of the first point; Float_t fZlast; //Z coordinate of the last point; Double32_t fCharge; //Charge of this track; Double32_t fVertex[3]; //Track vertex position; Int_t fNpoint; //Number of points for this track; Short_t fValid; //Validity criterion; Int_t fNsp; //N,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Event.html:1155,variab,variable,1155,root/html528/Event.html,https://root.cern,https://root.cern/root/html528/Event.html,1,['variab'],['variable']
Modifiability,iption; function members; data members; class charts. ROOT; » TEST; » Track. class Track: public TObject. Event and Track classes. The Event class is a naive/simple example of an event structure.; public:; char fType[20];; char *fEventName; //run+event number in character format; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Double32_t fTemperature;; Int_t fMeasures[10];; Double32_t fMatrix[4][4];; Double32_t *fClosestDistance; //[fNvertex] indexed array!; EventHeader fEvtHdr;; TClonesArray *fTracks;; TRefArray *fHighPt; //array of High Pt tracks only; TRefArray *fMuons; //array of Muon tracks only; TRef fLastTrack; //pointer to last track; TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; TH1F *fH;; TBits fTriggerBits; //Bits triggered by this event. The EventHeader class has 3 data members (integers):; public:; Int_t fEvtNum;; Int_t fRun;; Int_t fDate;. The Event data member fTracks is a pointer to a TClonesArray.; It is an array of a variable number of tracks per event.; Each element of the array is an object of class Track with the members:; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the momentum; Float_t fRandom; //A random track quantity; Float_t fMass2; //The mass square of this particle; Float_t fBx; //X intercept at the vertex; Float_t fBy; //Y intercept at the vertex; Float_t fMeanCharge; //Mean charge deposition of all hits of this track; Float_t fXfirst; //X coordinate of the first point; Float_t fXlast; //X coordinate of the last point; Float_t fYfirst; //Y coordinate of the first point; Float_t fYlast; //Y coordinate of the last point; Float_t fZfirst; //Z coordinate of the first point; Float_t fZlast; //Z coordinate of the last point; Double32_t fCharge; //Charge of this track; Double32_t fVertex[3]; //Track vertex position; Int_t fNpoint; //Number of points for this track; Short_t fValid; //Validity criterion; Int_t fNsp; //N,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Track.html:1155,variab,variable,1155,root/html528/Track.html,https://root.cern,https://root.cern/root/html528/Track.html,1,['variab'],['variable']
Modifiability,"ique file systems; Bool_tfValidis this a valid proof object; TList*fWaitingSlavesstores a TPair of the slaves's TSocket and TMessage; TStringfWorkDircurrent work directory on remote servers; Int_tfWorkersToMergeCurrent total number of workers, which have not been yet assigned to any merger; static TPluginHandler*fgLogViewerLog dialog box plugin; static TList*fgProofEnvListList of TNameds defining environment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProof(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:32073,config,config,32073,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,8,['config'],"['config', 'configurations']"
Modifiability,"iqueID() const; const Text_t*RooAbsReal::getUnit() const; virtual Double_tRooAbsCachedReal::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumCdf.html:15415,Inherit,InheritsFrom,15415,root/html532/RooNumCdf.html,https://root.cern,https://root.cern/root/html532/RooNumCdf.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ir = NULL); TMVA::MethodCFMlpANNMethodCFMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCFMlpANN.html:10786,Config,Configurable,10786,root/html534/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCFMlpANN.html,1,['Config'],['Configurable']
Modifiability,"ir of the slaves's TSocket and TMessage; TStringfWorkDircurrent work directory on remote servers; Int_tfWorkersToMergeCurrent total number of workers, which have not been yet assigned to any merger; TList*fWrksOutputReadyList of workers ready to send output (in control output sending mode); static TPluginHandler*fgLogViewerLog dialog box plugin; static TList*fgProofEnvListList of TNameds defining environment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProof(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:35448,config,config,35448,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,4,['config'],"['config', 'configurations']"
Modifiability,"ir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); Bool_tUseBoost() const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodRuleFit.html:14226,Config,Configurable,14226,root/html602/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodRuleFit.html,2,['Config'],['Configurable']
Modifiability,"ir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); static TMVA::MethodCFMlpANN*This(); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html:14150,Config,Configurable,14150,root/html532/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html,1,['Config'],['Configurable']
Modifiability,"ir. The dir parameter can; be 0 in which case the tree does not belong to any directory. Long64_t SetEntries(Long64_t n = -1); Change number of entries in the tree. If n >= 0, set number of entries in the tree = n. If n < 0, set number of entries in the tree to match the; number of entries in each branch. (default for n is -1). This function should be called only when one fills each branch; independently via TBranch::Fill without calling TTree::Fill.; Calling TTree::SetEntries() make sense only if the number of entries; in each branch is identical, a warning is issued otherwise.; The function returns the number of entries. void SetEntryList(TEntryList* list, Option_t* opt = """"); Set an EntryList. void SetEventList(TEventList* list); This function transfroms the given TEventList into a TEntryList; The new TEntryList is owned by the TTree and gets deleted when the tree; is deleted. This TEntryList can be returned by GetEntryList() function. void SetEstimate(Long64_t nentries = 10000); Set number of entries to estimate variable limits. void SetFileNumber(Int_t number = 0); Set fFileNumber to number.; fFileNumber is used by TTree::Fill to set the file name; for a new file to be created when the current file exceeds fgTreeMaxSize.; (see TTree::ChangeFile); if fFileNumber=10, the new file name will have a suffix ""_11"",; ie, fFileNumber is incremented before setting the file name. void SetMakeClass(Int_t make); Set all the branches in this TTree to be in decomposed object mode; (also known as MakeClass mode). void SetMaxTreeSize(Long64_t maxsize = 1900000000); Set the maximum size in bytes of a Tree file (static function).; The default size is 100000000000LL, ie 100 Gigabytes. In TTree::Fill, when the file has a size > fgMaxTreeSize,; the function closes the current file and starts writing into; a new file with a name of the style ""file_1.root"" if the original; requested file name was ""file.root"". void SetName(const char* name); Change the name of this tree. void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:122957,variab,variable,122957,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,4,['variab'],['variable']
Modifiability,"irName of c:/user/root/ is /user/root. ; Reimplemented from TSystem.; Definition at line 2434 of file TWinNTSystem.cxx. ◆ GetDynamicPath(). const char * TWinNTSystem::GetDynamicPath ; (; ). overridevirtual . Return the dynamic path (used to find shared libraries). ; Reimplemented from TSystem.; Definition at line 4090 of file TWinNTSystem.cxx. ◆ GetEffectiveGid(). Int_t TWinNTSystem::GetEffectiveGid ; (; ). overridevirtual . Returns the effective group id. ; The effective group id corresponds to the set id bit on the file being executed. ; Reimplemented from TSystem.; Definition at line 3684 of file TWinNTSystem.cxx. ◆ GetEffectiveUid(). Int_t TWinNTSystem::GetEffectiveUid ; (; ). overridevirtual . Returns the effective user id. ; The effective id corresponds to the set id bit on the file being executed. ; Reimplemented from TSystem.; Definition at line 3616 of file TWinNTSystem.cxx. ◆ Getenv(). const char * TWinNTSystem::Getenv ; (; const char * ; name). overridevirtual . Get environment variable. ; Reimplemented from TSystem.; Definition at line 3855 of file TWinNTSystem.cxx. ◆ GetError(). const char * TWinNTSystem::GetError ; (; ). overridevirtual . Return system error string. ; Reimplemented from TSystem.; Definition at line 1255 of file TWinNTSystem.cxx. ◆ GetFPEMask(). Int_t TWinNTSystem::GetFPEMask ; (; ). overridevirtual . Return the bitmap of conditions that trigger a floating point exception. ; Reimplemented from TSystem.; Definition at line 1573 of file TWinNTSystem.cxx. ◆ GetFsInfo(). int TWinNTSystem::GetFsInfo ; (; const char * ; path, . Long_t * ; id, . Long_t * ; bsize, . Long_t * ; blocks, . Long_t * ; bfree . ). overridevirtual . Get info about a file system: id, bsize, bfree, blocks. ; Id is file system type (machine dependend, see statfs()) Bsize is block size of file system Blocks is total number of blocks in file system Bfree is number of free blocks in file system The function returns 0 in case of success and 1 if the file system could not be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:50516,variab,variable,50516,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['variab'],['variable']
Modifiability,"irName""; directories that do not exist are silently ignored. ; Definition at line 750 of file TTabCom.cxx. ◆ Class(). static TClass * TTabCom::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTabCom::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTabCom::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 226 of file TTabCom.h. ◆ ClearAll(). void TTabCom::ClearAll ; (; ). clears all lists except for user names and system include files. ; Definition at line 319 of file TTabCom.cxx. ◆ ClearClasses(). void TTabCom::ClearClasses ; (; ). Clear classes and namespace collections. ; Definition at line 218 of file TTabCom.cxx. ◆ ClearCppDirectives(). void TTabCom::ClearCppDirectives ; (; ). Forget all Cpp directives seen so far. ; Definition at line 230 of file TTabCom.cxx. ◆ ClearEnvVars(). void TTabCom::ClearEnvVars ; (; ). Forget all environment variables seen so far. ; Definition at line 242 of file TTabCom.cxx. ◆ ClearFiles(). void TTabCom::ClearFiles ; (; ). Close all files. ; Definition at line 254 of file TTabCom.cxx. ◆ ClearGlobalFunctions(). void TTabCom::ClearGlobalFunctions ; (; ). Forget all global functions seen so far. ; Not needed anymore. Use gROOT->GetListOfGlobalFunctions() ; Definition at line 267 of file TTabCom.cxx. ◆ ClearGlobals(). void TTabCom::ClearGlobals ; (; ). Forget all global variables seen so far. ; With teh new implamentation the list is gROOT->GetListOfGlobals(true). ; Definition at line 275 of file TTabCom.cxx. ◆ ClearPragmas(). void TTabCom::ClearPragmas ; (; ). Forget all pragmas seen so far. ; Definition at line 282 of file TTabCom.cxx. ◆ ClearSysIncFiles(). void TTabCom::ClearSysIncFiles ; (; ). Close system files. ; Definition at line 294 of file TTabCom.cxx. ◆ ClearUsers(). void TTabCom::ClearUsers ; (; ). Forget all user seen so far. ; Definition at line 306 of file TTabCom.cxx. ◆ Compl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:9753,variab,variables,9753,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['variab'],['variables']
Modifiability,"ird convention); 4028 gSystem->Rename(cachefilepathtmp, cachefilepath);; 4029 else // another process or thread already wrote a file with the same name while we were copying it; 4030 gSystem->Unlink(cachefilepathtmp);; 4031 }; 4032 fgCacheFileForce = forcedcache;; 4033 ::Info(""TFile::OpenFromCache"", ""using local cache copy of %s [%s]"", name, cachefilepath.Data());; 4034 // finally we have the file and can open it locally; 4035 fileurl.SetProtocol(""file"");; 4036 fileurl.SetFile(cachefilepath);; 4037 ; 4038 TString tagfile;; 4039 tagfile = cachefilepath;; 4040 tagfile += "".ROOT.cachefile"";; 4041 // we symlink this file as a ROOT cached file; 4042 gSystem->Symlink(gSystem->BaseName(cachefilepath), tagfile);; 4043 return TFile::Open(fileurl.GetUrl(), ""READ"", ftitle, compress, netopt);; 4044 }; 4045 }; 4046 }; 4047 ; 4048 // Failed; 4049 return f;; 4050}; 4051 ; 4052////////////////////////////////////////////////////////////////////////////////; 4053/// Create / open a file; 4054///; 4055/// The type of the file can be either a; 4056/// TFile, TNetFile, TWebFile or any TFile derived class for which an; 4057/// plugin library handler has been registered with the plugin manager; 4058/// (for the plugin manager see the TPluginManager class). The returned; 4059/// type of TFile depends on the file name specified by 'url'.; 4060/// If 'url' is a '|'-separated list of file URLs, the 'URLs' are tried; 4061/// sequentially in the specified order until a successful open.; 4062/// If the file starts with ""root:"", ""roots:"" or ""rootk:"" a TNetFile object; 4063/// will be returned, with ""http:"" a TWebFile, with ""file:"" a local TFile,; 4064/// etc. (see the list of TFile plugin handlers in $ROOTSYS/etc/system.rootrc; 4065/// for regular expressions that will be checked) and as last a local file will; 4066/// be tried.; 4067/// Before opening a file via TNetFile a check is made to see if the URL; 4068/// specifies a local file. If that is the case the file will be opened; 4069/// via a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:147396,plugin,plugin,147396,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,3,['plugin'],['plugin']
Modifiability,"irectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); static TMVA::MethodPDERS*ThisPDERS(); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const; voidWriteWeightsToStream(TFile& rf) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodPDERS.html:14208,Config,Configurable,14208,root/html534/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodPDERS.html,1,['Config'],['Configurable']
Modifiability,"irectory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  . Additional Inherited Members;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TBufferFile.h>. Inheritance diagram for TBufferFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ InfoList_t. typedef std::vector<TStreamerInfo*> TBufferFile::InfoList_t. protected . Definition at line 50 of file TBufferFile.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkStreamedMemberWise . Definition at line 69 of file TBufferFile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferFile.html:36919,inherit,inherited,36919,doc/master/classTBufferFile.html,https://root.cern,https://root.cern/doc/master/classTBufferFile.html,2,"['extend', 'inherit']","['extending', 'inherited']"
Modifiability,"irst and second. ;  . Protected Attributes; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Private Member Functions; Element * GetElements ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMatrixTBase.h>. Inheritance diagram for TMatrixTBase< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. protected . EnumeratorkSizeMax . Definition at line 106 of file TMatrixTBase.h. ◆ anonymous enum. template<class Element > . anonymous enum. protected . EnumeratorkWorkMax . Definition at line 107 of file TMatrixTBase.h. ◆ EMatrixStatusBits. template<class Element > . enum TMatrixTBase::EMatrixStatusBits. protected . EnumeratorkStatus . Definition at line 109 of file TMatrixTBase.h. Constructor & Destructor Documentation. ◆ TMatrixTBase(). template<class Element > . TMatrixTBase< Element >::TMatrixTBase ; (; ). inline . Definition at line 115 of file TMatrixTBase.h. ◆ ~TMatrixTBase(). template<class El",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTBase.html:15313,inherit,inherited,15313,doc/master/classTMatrixTBase.html,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html,1,['inherit'],['inherited']
Modifiability,"irstentry) override;  Interface to the Principal Components Analysis class. ;  ; Long64_t Process (const char *filename, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Process this tree executing the TSelector code in the specified filename. ;  ; Long64_t Process (TSelector *selector, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Process this tree executing the code in the specified selector. ;  ; TSQLResult * Query (const char *varexp, const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Loop on Tree and return TSQLResult object containing entries passing selection. ;  ; void RecursiveRemove (TObject *obj) override;  cleanup pointers in the player pointing to obj ;  ; Long64_t Scan (const char *varexp, const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Loop on Tree and print entries passing selection. ;  ; bool ScanRedirected ();  ; void SetEstimate (Long64_t n) override;  Set number of entries to estimate variable limits. ;  ; void SetScanFileName (const char *name);  ; void SetScanRedirect (bool on=false);  ; void SetTree (TTree *t) override;  ; void StartViewer (Int_t ww, Int_t wh) override;  Start the TTreeViewer on this TTree. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t UnbinnedFit (const char *formula, const char *varexp, const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Unbinned fit of one or more variable(s) from a Tree. ;  ; void UpdateFormulaLeaves () override;  this function is called by TChain::LoadTree when a new Tree is loaded. ;  ;  Public Member Functions inherited from TVirtualTreePlayer;  TVirtualTreePlayer ();  ;  ~TVirtualTreePlayer () override;  Common destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:4892,variab,variable,4892,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['variab'],['variable']
Modifiability,"irtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; const TGPicture * fLarge;  ; TString fName;  ; const TGPicture * fSmall;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIconBoxThumb.html:8210,inherit,inherited,8210,doc/master/classTIconBoxThumb.html,https://root.cern,https://root.cern/doc/master/classTIconBoxThumb.html,1,['inherit'],['inherited']
Modifiability,"irtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 2338 of file RooProdPdf.cxx. ◆ evaluate(). double RooFixedProdPdf::evaluate ; (; ); const. inlineoverrideprivatevirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 2398 of file RooProdPdf.cxx. ◆ expectedEvents(). double RooFixedProdPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooAbsPdf.; Definition at line 2353 of file RooProdPdf.cxx. ◆ extendMode(). ExtendMode RooFixedProdPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 2352 of file RooProdPdf.cxx. ◆ forceAnalyticalInt(). bool RooFixedProdPdf::forceAnalyticalInt ; (; const RooAbsArg & ; dep); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 2360 of file RooProdPdf.cxx. ◆ getAnalyticalIntegral(). Int_t RooFixedProdPdf::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. inlineoverridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:76784,extend,extended,76784,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,1,['extend'],['extended']
Modifiability,"irtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 310 of file RooGExpModel.cxx. ◆ generateEvent(). void RooGExpModel::generateEvent ; (; Int_t ; code). overridevirtual . Interface for generation of an event using the algorithm corresponding to the specified code. ; The meaning of each code is defined by the getGenerator() implementation. The default implementation does nothing. ; Reimplemented from RooAbsPdf.; Definition at line 944 of file RooGExpModel.cxx. ◆ getAnalyticalIntegral(). Int_t RooGExpModel::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 648 of file RooGExpModel.cxx. ◆ getGenerator(). Int_t RooGExpModel::getGenerator ; (; const RooArgSet & ; directVars, . RooArgSet & ; generateVars, . bool ; staticInitOK = true . ); const. overridevirtual . Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ; A code of zero indicates that we cannot generate any of the directVars (in this case, nothing should be added to generatedVars). Any non-zero codes will be passed to our generateEvent() implementation, but otherwise its value is arbitrary. The default implementation of this method returns zero. Subclasses will usually implement this method using the matchArgs() methods to advertise the algorithms they provide. ; Reimplemented from RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGExpModel.html:86461,config,configuration,86461,doc/master/classRooGExpModel.html,https://root.cern,https://root.cern/doc/master/classRooGExpModel.html,1,['config'],['configuration']
Modifiability,"irtual . Get TProofDesc instance corresponding to 'id'. ; Definition at line 325 of file TProofMgr.cxx. ◆ GetProofDesc() [2/2]. TProofDesc * TProofMgr::GetProofDesc ; (; TProof * ; p). virtual . Get TProofDesc instance corresponding to TProof object 'p'. ; Definition at line 346 of file TProofMgr.cxx. ◆ GetRemoteProtocol(). virtual Int_t TProofMgr::GetRemoteProtocol ; (; ); const. inlinevirtual . Definition at line 90 of file TProofMgr.h. ◆ GetSessionLogs(). virtual TProofLog * TProofMgr::GetSessionLogs ; (; Int_t ; = 0, . const char * ; = 0, . const char * ; = ""-v \""| SvcMsg\"""", . Bool_t ; = kFALSE . ). inlinevirtual . Reimplemented in TProofMgrLite.; Definition at line 91 of file TProofMgr.h. ◆ GetUrl(). virtual const char * TProofMgr::GetUrl ; (; ). inlinevirtual . Definition at line 94 of file TProofMgr.h. ◆ GetXProofMgrHook(). TProofMgr_t TProofMgr::GetXProofMgrHook ; (; ). staticprivate . Get the constructor hook fro TXProofMgr. ; We do this without the plugin manager because it blocks the CINT mutex breaking the parallel startup. ; Definition at line 596 of file TProofMgr.cxx. ◆ Grep(). virtual void TProofMgr::Grep ; (; const char * ; , . const char * ; = 0, . const char * ; = 0 . ). inlinevirtual . Definition at line 114 of file TProofMgr.h. ◆ IsA(). TClass * TProofMgr::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Reimplemented in TProofMgrLite.; Definition at line 136 of file TProofMgr.h. ◆ IsLite(). virtual Bool_t TProofMgr::IsLite ; (; ); const. inlinevirtual . Definition at line 75 of file TProofMgr.h. ◆ IsProofd(). virtual Bool_t TProofMgr::IsProofd ; (; ); const. inlinevirtual . Definition at line 76 of file TProofMgr.h. ◆ IsValid(). virtual Bool_t TProofMgr::IsValid ; (; ); const. inlinevirtual . Definition at line 77 of file TProofMgr.h. ◆ Ls(). virtual void TProofMgr::Ls ; (; const char * ; = ""~/"", . const char * ; = 0, . const char * ; = 0 . ). inlinevirtual . Definition at line 11",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMgr.html:22119,plugin,plugin,22119,doc/master/classTProofMgr.html,https://root.cern,https://root.cern/doc/master/classTProofMgr.html,1,['plugin'],['plugin']
Modifiability,"irtual . Reimplemented in TNetFileStager, and TNetXNGFileStager.; Definition at line 50 of file TFileStager.h. ◆ Locate(). Int_t TFileStager::Locate ; (; const char * ; u, . TString & ; f . ). virtual . Just check if the file exists locally. ; Reimplemented in TNetFileStager, and TNetXNGFileStager.; Definition at line 146 of file TFileStager.cxx. ◆ LocateCollection(). Int_t TFileStager::LocateCollection ; (; TFileCollection * ; fc, . Bool_t ; addDummyUrl = kFALSE . ). virtual . Massive location of files. ; Returns < 0 on error, or number of files processed. Results are returned on the TFileCollection itself ; Reimplemented in TNetXNGFileStager.; Definition at line 158 of file TFileStager.cxx. ◆ Matches(). virtual Bool_t TFileStager::Matches ; (; const char * ; s). inlinevirtual . Reimplemented in TNetFileStager, and TNetXNGFileStager.; Definition at line 46 of file TFileStager.h. ◆ Open(). TFileStager * TFileStager::Open ; (; const char * ; stager). static . Open a stager, after having loaded the relevant plug-in. ; The format of 'stager' depends on the plug-in. ; Definition at line 101 of file TFileStager.cxx. ◆ Stage() [1/2]. virtual Bool_t TFileStager::Stage ; (; const char * ; , . Option_t * ; = nullptr . ). inlinevirtual . Reimplemented in TNetXNGFileStager.; Definition at line 47 of file TFileStager.h. ◆ Stage() [2/2]. Bool_t TFileStager::Stage ; (; TCollection * ; pathlist, . Option_t * ; opt = nullptr . ). virtual . Issue a stage request for a list of files. ; Return the '&' of all single Prepare commands. ; Reimplemented in TNetXNGFileStager.; Definition at line 75 of file TFileStager.cxx. ◆ Streamer(). void TFileStager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TNetFileStager. ◆ StreamerNVirtual(). void TFileStager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 58 of file TFileStager.h. Libraries for TFileStager:. [legend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileStager.html:15220,plug-in,plug-in,15220,doc/master/classTFileStager.html,https://root.cern,https://root.cern/doc/master/classTFileStager.html,1,['plug-in'],['plug-in']
Modifiability,"irtual Bool_t ChangeDirectory(const char *path)Change directory.Definition TSystem.cxx:862; TSystem::GetBuildCompilerVersionStrvirtual const char * GetBuildCompilerVersionStr() constReturn the build compiler version identifier string.Definition TSystem.cxx:3899; TSystem::WorkingDirectoryvirtual const char * WorkingDirectory()Return working directory.Definition TSystem.cxx:871; TSystem::Whichvirtual char * Which(const char *search, const char *file, EAccessMode mode=kFileExists)Find location of file in a search path.Definition TSystem.cxx:1548; TSystem::GetBuildArchvirtual const char * GetBuildArch() constReturn the build architecture.Definition TSystem.cxx:3875; TSystem::HomeDirectoryvirtual const char * HomeDirectory(const char *userName=nullptr)Return the user's home directory.Definition TSystem.cxx:887; TTabComDefinition TTabCom.h:52; TTabCom::HookInt_t Hook(char *buf, int *pLoc, std::ostream &out)[private]Definition TTabCom.cxx:1567; TTabCom::ClearAllvoid ClearAll()clears all lists except for user names and system include files.Definition TTabCom.cxx:319; TTermInputHandlerDefinition TRint.cxx:121; TTermInputHandler::TTermInputHandlerTTermInputHandler(Int_t fd)Definition TRint.cxx:123; TTermInputHandler::ReadNotifyBool_t ReadNotify() overrideNotify when something can be read from the descriptor associated with this handler.Definition TRint.cxx:125; TTermInputHandler::NotifyBool_t Notify() overrideNotify implementation. Call the application interupt handler.Definition TRint.cxx:131; bool; int; lineTLine * lineDefinition entrylistblock_figure1.C:235; nconst Int_t nDefinition legend1.C:16; ROOT::Internal::gMmallocDescR__EXTERN void * gMmallocDescDefinition TStorage.h:143; TClassEdit::DemangleTypeIdNamechar * DemangleTypeIdName(const std::type_info &ti, int &errorCode)Demangle in a portable way the type id name.Definition TClassEdit.cxx:2148. corerintsrcTRint.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:45235,portab,portable,45235,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['portab'],['portable']
Modifiability,"irtual Bool_tRooAbsCachedPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidsetBufferFraction(Double_t frac); voidsetBufferStrategy(RooFFTConvPdf::BufStrat bs); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCacheObservables(const RooArgSet& obs); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedPdf::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidsetShift(Double_t val1, Double_t val2); voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFFTConvPdf.html:31954,config,config,31954,root/html526/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html526/RooFFTConvPdf.html,1,['config'],['config']
Modifiability,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootDialog.html:10016,Inherit,InheritsFrom,10016,root/html532/TRootDialog.html,https://root.cern,https://root.cern/root/html532/TRootDialog.html,7,['Inherit'],['InheritsFrom']
Modifiability,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGSplitTool.html:8734,Inherit,InheritsFrom,8734,root/html532/TGSplitTool.html,https://root.cern,https://root.cern/root/html532/TGSplitTool.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tIsCurrent() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tIsMaximized() const; Bool_tIsMinimized() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMdiDecorFrame.html:9745,Inherit,InheritsFrom,9745,root/html532/TGMdiDecorFrame.html,https://root.cern,https://root.cern/root/html532/TGMdiDecorFrame.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TArrowEditor.html:9343,Inherit,InheritsFrom,9343,root/html532/TArrowEditor.html,https://root.cern,https://root.cern/root/html532/TArrowEditor.html,442,['Inherit'],['InheritsFrom']
Modifiability,"irtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGContainer::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGContainer::HandleKey(Event_t* event); virtual Bool_tTGContainer::HandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGContainer::Home(Bool_t select = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual voidTGContainer::InvertSelection()SIGNAL ; virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLVContainer.html:11190,Inherit,InheritsFrom,11190,root/html532/TGLVContainer.html,https://root.cern,https://root.cern/root/html532/TGLVContainer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; Bool_tTGGroupFrame::HasOwnFont() const; virtual voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInsert(TGButton* button, int id = -1); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; Bool_tIsBorderDrawn() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; Bool_tIsExclusive() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; Bool_tIsRadioButtonExclusive() const; virtual Bool_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGButtonGroup.html:12068,Inherit,InheritsFrom,12068,root/html532/TGButtonGroup.html,https://root.cern,https://root.cern/root/html532/TGButtonGroup.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidRemoveHandler(const char* base, const char* regexp = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Int_tWritePluginMacros(const char* dir, const char* plugin = 0) const; Int_tWritePluginRecords(const char* envFile, const char* plugin = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPluginManager.html:8148,plugin,plugin,8148,root/html530/TPluginManager.html,https://root.cern,https://root.cern/root/html530/TPluginManager.html,6,['plugin'],['plugin']
Modifiability,"irtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProfile2D * fProfile;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:12704,inherit,inherited,12704,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,2,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; EErrorType fErrorMode = kERRORMEAN;  ; TProfile2PolyBin fOverflowBins [kNOverflow];  ; Double_t fTsumwz;  ; Double_t fTsumwz2;  . Friends; class TProfile2PolyBin;  ; class TProfileHelper;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2Poly.html:54484,inherit,inherited,54484,doc/master/classTProfile2Poly.html,https://root.cern,https://root.cern/doc/master/classTProfile2Poly.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fBinContentChanged;  !For the 3D Painter ;  ; TList * fBins;  List of bins. The list owns the contained objects. ;  ; TList * fCells;  [fNCells] The array of TLists that store the bins that intersect with each cell. List do not own the contained objects ;  ; Int_t fCellX;  Number of partition cells in the x-direction of the histogram. ;  ; Int_t fCellY;  Number of partition cells in the y-direction of the histogram. ;  ; Bool_t * fCompletelyInside;  [fNCells] The array that returns true if the cell at the given coordinate is completely inside a bin ;  ; Bool_t fFloat;  When set to kTRUE, allows the histogram to expand if a bin outside the limits is added. ;  ; Bool_t * fIsEmpty;  [fNCells] The array that returns true if the cell at the given coordinate is empty ;  ; Int_t fNCells;  Number of partition cells: fCellX*fCellY. ;  ; Bool_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:58574,inherit,inherited,58574,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH1C operator* (const TH1C &h1, const TH1C &h2);  Operator *. ;  ; TH1C operator* (const TH1C &h1, Double_t c1);  ; TH1C operator* (Double_t c1, const TH1C &h1);  Operator *. ;  ; TH1C operator+ (const TH1C &h1, const TH1C &h2);  Operator +. ;  ; TH1C operator- (const TH1C &h1, const TH1C &h2);  Operator -. ;  ; TH1C operator/ (const TH1C &h1, const TH1C &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1C.html:44995,inherit,inherited,44995,doc/master/classTH1C.html,https://root.cern,https://root.cern/doc/master/classTH1C.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH1D operator* (const TH1D &h1, const TH1D &h2);  Operator *. ;  ; TH1D operator* (const TH1D &h1, Double_t c1);  ; TH1D operator* (Double_t c1, const TH1D &h1);  Operator *. ;  ; TH1D operator+ (const TH1D &h1, const TH1D &h2);  Operator +. ;  ; TH1D operator- (const TH1D &h1, const TH1D &h2);  Operator -. ;  ; TH1D operator/ (const TH1D &h1, const TH1D &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1D.html:45235,inherit,inherited,45235,doc/master/classTH1D.html,https://root.cern,https://root.cern/doc/master/classTH1D.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH1F operator* (const TH1F &h1, const TH1F &h2);  Operator *. ;  ; TH1F operator* (const TH1F &h1, Double_t c1);  ; TH1F operator* (Double_t c1, const TH1F &h1);  Operator *. ;  ; TH1F operator+ (const TH1F &h1, const TH1F &h2);  Operator +. ;  ; TH1F operator- (const TH1F &h1, const TH1F &h2);  Operator -. ;  ; TH1F operator/ (const TH1F &h1, const TH1F &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1F.html:45097,inherit,inherited,45097,doc/master/classTH1F.html,https://root.cern,https://root.cern/doc/master/classTH1F.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH1I operator* (const TH1I &h1, const TH1I &h2);  Operator *. ;  ; TH1I operator* (const TH1I &h1, Double_t c1);  ; TH1I operator* (Double_t c1, const TH1I &h1);  Operator *. ;  ; TH1I operator+ (const TH1I &h1, const TH1I &h2);  Operator +. ;  ; TH1I operator- (const TH1I &h1, const TH1I &h2);  Operator -. ;  ; TH1I operator/ (const TH1I &h1, const TH1I &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1I.html:44943,inherit,inherited,44943,doc/master/classTH1I.html,https://root.cern,https://root.cern/doc/master/classTH1I.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH1L operator* (const TH1L &h1, const TH1L &h2);  Operator *. ;  ; TH1L operator* (const TH1L &h1, Double_t c1);  ; TH1L operator* (Double_t c1, const TH1L &h1);  Operator *. ;  ; TH1L operator+ (const TH1L &h1, const TH1L &h2);  Operator +. ;  ; TH1L operator- (const TH1L &h1, const TH1L &h2);  Operator -. ;  ; TH1L operator/ (const TH1L &h1, const TH1L &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1L.html:45010,inherit,inherited,45010,doc/master/classTH1L.html,https://root.cern,https://root.cern/doc/master/classTH1L.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH1S operator* (const TH1S &h1, const TH1S &h2);  Operator *. ;  ; TH1S operator* (const TH1S &h1, Double_t c1);  ; TH1S operator* (Double_t c1, const TH1S &h1);  Operator *. ;  ; TH1S operator+ (const TH1S &h1, const TH1S &h2);  Operator +. ;  ; TH1S operator- (const TH1S &h1, const TH1S &h2);  Operator -. ;  ; TH1S operator/ (const TH1S &h1, const TH1S &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1S.html:44960,inherit,inherited,44960,doc/master/classTH1S.html,https://root.cern,https://root.cern/doc/master/classTH1S.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2C operator* (Float_t c1, TH2C const &h1);  Operator *. ;  ; TH2C operator* (TH2C const &h1, Float_t c1);  ; TH2C operator* (TH2C const &h1, TH2C const &h2);  Operator *. ;  ; TH2C operator+ (TH2C const &h1, TH2C const &h2);  Operator +. ;  ; TH2C operator- (TH2C const &h1, TH2C const &h2);  Operator -. ;  ; TH2C operator/ (TH2C const &h1, TH2C const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:53033,inherit,inherited,53033,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2D operator* (Float_t c1, TH2D const &h1);  Operator *. ;  ; TH2D operator* (TH2D const &h1, Float_t c1);  ; TH2D operator* (TH2D const &h1, TH2D const &h2);  Operator *. ;  ; TH2D operator+ (TH2D const &h1, TH2D const &h2);  Operator +. ;  ; TH2D operator- (TH2D const &h1, TH2D const &h2);  Operator -. ;  ; TH2D operator/ (TH2D const &h1, TH2D const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2D.html:53309,inherit,inherited,53309,doc/master/classTH2D.html,https://root.cern,https://root.cern/doc/master/classTH2D.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2F operator* (Float_t c1, TH2F const &h1);  Operator *. ;  ; TH2F operator* (TH2F const &h1, Float_t c1);  Operator *. ;  ; TH2F operator* (TH2F const &h1, TH2F const &h2);  Operator *. ;  ; TH2F operator+ (TH2F const &h1, TH2F const &h2);  Operator +. ;  ; TH2F operator- (TH2F const &h1, TH2F const &h2);  Operator -. ;  ; TH2F operator/ (TH2F const &h1, TH2F const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying whi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2F.html:53123,inherit,inherited,53123,doc/master/classTH2F.html,https://root.cern,https://root.cern/doc/master/classTH2F.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2I operator* (Float_t c1, TH2I const &h1);  Operator *. ;  ; TH2I operator* (TH2I const &h1, Float_t c1);  ; TH2I operator* (TH2I const &h1, TH2I const &h2);  Operator *. ;  ; TH2I operator+ (TH2I const &h1, TH2I const &h2);  Operator +. ;  ; TH2I operator- (TH2I const &h1, TH2I const &h2);  Operator -. ;  ; TH2I operator/ (TH2I const &h1, TH2I const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2I.html:53040,inherit,inherited,53040,doc/master/classTH2I.html,https://root.cern,https://root.cern/doc/master/classTH2I.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2L operator* (Float_t c1, TH2L const &h1);  Operator *. ;  ; TH2L operator* (TH2L const &h1, Float_t c1);  ; TH2L operator* (TH2L const &h1, TH2L const &h2);  Operator *. ;  ; TH2L operator+ (TH2L const &h1, TH2L const &h2);  Operator +. ;  ; TH2L operator- (TH2L const &h1, TH2L const &h2);  Operator -. ;  ; TH2L operator/ (TH2L const &h1, TH2L const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:53110,inherit,inherited,53110,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2S operator* (Float_t c1, TH2S const &h1);  Operator *. ;  ; TH2S operator* (TH2S const &h1, Float_t c1);  ; TH2S operator* (TH2S const &h1, TH2S const &h2);  Operator *. ;  ; TH2S operator+ (TH2S const &h1, TH2S const &h2);  Operator +. ;  ; TH2S operator- (TH2S const &h1, TH2S const &h2);  Operator -. ;  ; TH2S operator/ (TH2S const &h1, TH2S const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2S.html:53100,inherit,inherited,53100,doc/master/classTH2S.html,https://root.cern,https://root.cern/doc/master/classTH2S.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3C operator* (Float_t c1, TH3C const &h1);  Operator *. ;  ; TH3C operator* (TH3C const &h1, Float_t c1);  ; TH3C operator* (TH3C const &h1, TH3C const &h2);  Operator *. ;  ; TH3C operator+ (TH3C const &h1, TH3C const &h2);  Operator +. ;  ; TH3C operator- (TH3C const &h1, TH3C const &h2);  Operator -. ;  ; TH3C operator/ (TH3C const &h1, TH3C const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3C.html:53871,inherit,inherited,53871,doc/master/classTH3C.html,https://root.cern,https://root.cern/doc/master/classTH3C.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3D operator* (Float_t c1, TH3D const &h1);  Operator *. ;  ; TH3D operator* (TH3D const &h1, Float_t c1);  ; TH3D operator* (TH3D const &h1, TH3D const &h2);  Operator *. ;  ; TH3D operator+ (TH3D const &h1, TH3D const &h2);  Operator +. ;  ; TH3D operator- (TH3D const &h1, TH3D const &h2);  Operator -. ;  ; TH3D operator/ (TH3D const &h1, TH3D const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D.html:54139,inherit,inherited,54139,doc/master/classTH3D.html,https://root.cern,https://root.cern/doc/master/classTH3D.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3F operator* (Float_t c1, TH3F const &h1);  Operator *. ;  ; TH3F operator* (TH3F const &h1, Float_t c1);  ; TH3F operator* (TH3F const &h1, TH3F const &h2);  Operator *. ;  ; TH3F operator+ (TH3F const &h1, TH3F const &h2);  Operator +. ;  ; TH3F operator- (TH3F const &h1, TH3F const &h2);  Operator -. ;  ; TH3F operator/ (TH3F const &h1, TH3F const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3F.html:53999,inherit,inherited,53999,doc/master/classTH3F.html,https://root.cern,https://root.cern/doc/master/classTH3F.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3I operator* (Float_t c1, TH3I const &h1);  Operator *. ;  ; TH3I operator* (TH3I const &h1, Float_t c1);  ; TH3I operator* (TH3I const &h1, TH3I const &h2);  Operator *. ;  ; TH3I operator+ (TH3I const &h1, TH3I const &h2);  Operator +. ;  ; TH3I operator- (TH3I const &h1, TH3I const &h2);  Operator _. ;  ; TH3I operator/ (TH3I const &h1, TH3I const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:53966,inherit,inherited,53966,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3L operator* (Float_t c1, TH3L const &h1);  Operator *. ;  ; TH3L operator* (TH3L const &h1, Float_t c1);  ; TH3L operator* (TH3L const &h1, TH3L const &h2);  Operator *. ;  ; TH3L operator+ (TH3L const &h1, TH3L const &h2);  Operator +. ;  ; TH3L operator- (TH3L const &h1, TH3L const &h2);  Operator _. ;  ; TH3L operator/ (TH3L const &h1, TH3L const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:54036,inherit,inherited,54036,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3S operator* (Float_t c1, TH3S const &h1);  Operator *. ;  ; TH3S operator* (TH3S const &h1, Float_t c1);  ; TH3S operator* (TH3S const &h1, TH3S const &h2);  Operator *. ;  ; TH3S operator+ (TH3S const &h1, TH3S const &h2);  Operator +. ;  ; TH3S operator- (TH3S const &h1, TH3S const &h2);  Operator -. ;  ; TH3S operator/ (TH3S const &h1, TH3S const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:53858,inherit,inherited,53858,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['inherit'],['inherited']
Modifiability,"irtual Bool_t FindNewAxisLimits (const TAxis *axis, const Double_t point, Double_t &newMin, Double_t &newMax);  finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ;  ; UInt_t GetAxisLabelStatus () const;  Internal function used in TH1::Fill to see which axis is full alphanumeric, i.e. ;  ; virtual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing the projection to 1D histogram ;  ; static TH2D * DoProject2D (const TH3 &h, const char *name, const char *title, const TAxis *projX, const TAxis *projY, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing the projection to 2D histogram ;  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:57288,inherit,inherited,57288,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,1,['inherit'],['inherited']
Modifiability,"irtual Double_tRooAbsPdf::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsAnaConvPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDecay.html:19089,Inherit,InheritsFrom,19089,root/html532/RooDecay.html,https://root.cern,https://root.cern/root/html532/RooDecay.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tRooAbsPdf::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDstD0BG.html:18363,Inherit,InheritsFrom,18363,root/html532/RooDstD0BG.html,https://root.cern,https://root.cern/root/html532/RooDstD0BG.html,24,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tRooAbsPdf::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsAnaConvPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNonCPEigenDecay.html:20194,Inherit,InheritsFrom,20194,root/html532/RooNonCPEigenDecay.html,https://root.cern,https://root.cern/root/html532/RooNonCPEigenDecay.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTGraph::GetMean(Int_t axis = 1) const; Double_tTGraph::GetMinimum() const; Int_tTGraph::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tGetOptionAxis(); virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; TGraphPolargram*GetPolargram(); virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_t*GetXpol(); Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; Double_t*GetYpol(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTGraph::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTGraph::LeastSquareFit(Int_t m, Double_t* a, Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::LeastSquareLinearFit(Int_t n, Double_t& a0, Double_t& a1, Int_t& ifai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphPolar.html:6931,Inherit,InheritsFrom,6931,root/html532/TGraphPolar.html,https://root.cern,https://root.cern/root/html532/TGraphPolar.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::Kolmogo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1C.html:9670,Inherit,InheritsFrom,9670,root/html532/TH1C.html,https://root.cern,https://root.cern/root/html532/TH1C.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::Kolmogo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1D.html:9709,Inherit,InheritsFrom,9709,root/html532/TH1D.html,https://root.cern,https://root.cern/root/html532/TH1D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::Kolmogo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1F.html:9702,Inherit,InheritsFrom,9702,root/html532/TH1F.html,https://root.cern,https://root.cern/root/html532/TH1F.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::Kolmogo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1I.html:9671,Inherit,InheritsFrom,9671,root/html532/TH1I.html,https://root.cern,https://root.cern/root/html532/TH1I.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::Kolmogo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1S.html:9678,Inherit,InheritsFrom,9678,root/html532/TH1S.html,https://root.cern,https://root.cern/root/html532/TH1S.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2C.html:10990,Inherit,InheritsFrom,10990,root/html532/TH2C.html,https://root.cern,https://root.cern/root/html532/TH2C.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2D.html:11034,Inherit,InheritsFrom,11034,root/html532/TH2D.html,https://root.cern,https://root.cern/root/html532/TH2D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2F.html:11027,Inherit,InheritsFrom,11027,root/html532/TH2F.html,https://root.cern,https://root.cern/root/html532/TH2F.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2I.html:10998,Inherit,InheritsFrom,10998,root/html532/TH2I.html,https://root.cern,https://root.cern/root/html532/TH2I.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2S.html:11005,Inherit,InheritsFrom,11005,root/html532/TH2S.html,https://root.cern,https://root.cern/root/html532/TH2S.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLTH3Composition.html:10866,Inherit,InheritsFrom,10866,root/html532/TGLTH3Composition.html,https://root.cern,https://root.cern/root/html532/TGLTH3Composition.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3D.html:11302,Inherit,InheritsFrom,11302,root/html532/TH3D.html,https://root.cern,https://root.cern/root/html532/TH3D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3F.html:11295,Inherit,InheritsFrom,11295,root/html532/TH3F.html,https://root.cern,https://root.cern/root/html532/TH3F.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3I.html:11295,Inherit,InheritsFrom,11295,root/html532/TH3I.html,https://root.cern,https://root.cern/root/html532/TH3I.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; Int_tTArray::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3S.html:11302,Inherit,InheritsFrom,11302,root/html532/TH3S.html,https://root.cern,https://root.cern/root/html532/TH3S.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidGetStats(Double_t* stats) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tKolm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3.html:10981,Inherit,InheritsFrom,10981,root/html532/TH3.html,https://root.cern,https://root.cern/root/html532/TH3.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTH1::GetRMSError(Int_t axis = 1) const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidGetStats(Double_t* stats) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2.html:10320,Inherit,InheritsFrom,10320,root/html532/TH2.html,https://root.cern,https://root.cern/root/html532/TH2.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tTCanvas::GetYsizeReal() const; Size_tTCanvas::GetYsizeUser() const; Float_tTAttPad::GetYstat() const; virtual voidTCanvas::HandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tTCanvas::HasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTCanvas::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTCanvas::ls(Option_t* option = """") const; static TCanvas*TCanvas::MakeDefCanvas(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDialogCanvas.html:13155,Inherit,InheritsFrom,13155,root/html532/TDialogCanvas.html,https://root.cern,https://root.cern/root/html532/TDialogCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tTCanvas::GetYsizeReal() const; Size_tTCanvas::GetYsizeUser() const; Float_tTAttPad::GetYstat() const; virtual voidTCanvas::HandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tTCanvas::HasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTCanvas::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTCanvas::ls(Option_t* option = """") const; static TCanvas*TCanvas::MakeDefCanvas(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTPad::Modified(Bool_t flag = 1)SIG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDialogCanvas.html:13167,Inherit,InheritsFrom,13167,root/html602/TDialogCanvas.html,https://root.cern,https://root.cern/root/html602/TDialogCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Visual_tGetVisual() const; virtual voidGetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tGetWindowID(Int_t wid); virtual voidGetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidGrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidGrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidGrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHasTTFonts() const; virtual voidIconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display = 0); virtual Int_tInitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&Instance(); virtual Atom_tInternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidIntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsCmdThread() const; virtual Bool_tIsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tKeysymToKeycode(UInt_t keysym); virtual char**ListFonts(const char* fontname, Int_t max, Int_t& count); virtual FontStruct_tLoadQueryFont(const char* font_name); virtual voidLookupS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualX.html:10051,Inherit,InheritsFrom,10051,root/html532/TVirtualX.html,https://root.cern,https://root.cern/root/html532/TVirtualX.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Visual_tGetVisual() const; virtual voidGetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tGetWindowID(Int_t wid); virtual voidGetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidGrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidGrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidGrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHasTTFonts() const; virtual voidIconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display = 0); virtual Int_tInitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&TVirtualX::Instance(); virtual Atom_tInternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidIntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTVirtualX::IsCmdThread() const; static Int_tIsCoinLoaded(); virtual Bool_tIsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsHandleValid(Window_t id); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; static Int_tiwid(QPaintDevice* wid); static QPaintDevice*iwid(Int_t wid); static QPaintDevice*iwid(Win",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGQt.html:10133,Inherit,InheritsFrom,10133,root/html532/TGQt.html,https://root.cern,https://root.cern/root/html532/TGQt.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Visual_tGetVisual() const; virtual voidGetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tGetWindowID(Int_t wid); virtual voidGetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidGrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidGrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidGrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHasTTFonts() const; virtual voidIconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display); virtual Int_tInitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&TVirtualX::Instance(); virtual Atom_tInternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidIntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTVirtualX::IsCmdThread() const; virtual Bool_tIsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tKeysymToKeycode(UInt_t keysym); virtual char**ListFonts(const char* fontname, Int_t max, Int_t& count); virtual FontStruct_tLoadQueryFont(const char* font_name); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGX11.html:10080,Inherit,InheritsFrom,10080,root/html532/TGX11.html,https://root.cern,https://root.cern/root/html532/TGX11.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual Float_tTMaterial::GetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Float_tTMaterial::GetInterLength() const; virtual const char*TNamed::GetName() const; Int_tGetNmixt() const; virtual Int_tTMaterial::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTMaterial::GetRadLength() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_t*GetWmixt() const; virtual Float_tTMaterial::GetZ() const; Float_t*GetZmixt() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMixture.html:2946,Inherit,InheritsFrom,2946,root/html532/TMixture.html,https://root.cern,https://root.cern/root/html532/TMixture.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Float_tTMaterial::GetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Float_tTMaterial::GetInterLength() const; virtual const char*TNamed::GetName() const; Int_tGetNmixt() const; virtual Int_tTMaterial::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTMaterial::GetRadLength() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_t*GetWmixt() const; virtual Float_tTMaterial::GetZ() const; Float_t*GetZmixt() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMixture.html:2847,Inherit,InheritsFrom,2847,root/html602/TMixture.html,https://root.cern,https://root.cern/root/html602/TMixture.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Int_tGetNdata(); virtual Int_tTFormula::GetNdim() const; virtual Int_tTFormula::GetNpar() const; virtual Int_tTFormula::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTFormula::GetParameter(Int_t ipar) const; Double_tTFormula::GetParameter(const char* name) const; virtual Double_t*TFormula::GetParameters() const; virtual voidTFormula::GetParameters(Double_t* params); virtual const char*TFormula::GetParName(Int_t ipar) const; virtual Int_tTFormula::GetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInteger(Bool_t fast = kTRUE) const; virtual Bool_tTFormula::IsLinear() const; virtual Bool_tTFormula::IsNormalized() const; Bool_tTObject::IsOnHeap() const; Bool_tIsQuickLoad() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsString() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:5840,Inherit,InheritsFrom,5840,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Int_tGetNdata(); virtual Int_tTFormula::GetNdim() const; virtual Int_tTFormula::GetNpar() const; virtual Int_tTFormula::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTFormula::GetParameter(Int_t ipar) const; Double_tTFormula::GetParameter(const char* name) const; virtual Double_t*TFormula::GetParameters() const; virtual voidTFormula::GetParameters(Double_t* params); virtual const char*TFormula::GetParName(Int_t ipar) const; virtual Int_tTFormula::GetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInteger(Bool_t fast = kTRUE) const; virtual Bool_tTFormula::IsLinear(); virtual Bool_tTFormula::IsNormalized(); Bool_tTObject::IsOnHeap() const; Bool_tIsQuickLoad() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsString() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTreeFormula.html:5432,Inherit,InheritsFrom,5432,root/html532/TTreeFormula.html,https://root.cern,https://root.cern/root/html532/TTreeFormula.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tGetValueLong64(Int_t i = 0) const; virtual LongDouble_tGetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafL.html:3217,Inherit,InheritsFrom,3217,root/html534/TLeafL.html,https://root.cern,https://root.cern/root/html534/TLeafL.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tGetValueLong64(Int_t i = 0) const; virtual LongDouble_tGetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafL.html:3123,Inherit,InheritsFrom,3123,root/html602/TLeafL.html,https://root.cern,https://root.cern/root/html602/TLeafL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTHttpEngine::Process(); voidTHttpEngine::SetServer(THttpServer* serv). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tfDebugMode! debug mode, may required for fastcgi debugging in other servers; TStringTNamed::fNameobject identifier; THttpServer*THttpEngine::fServer! object server; Int_tfSocket! socket used by fastcgi; TThread*fThrd! thread which takes requests, can be many later; TStringTNamed::fTitleobject title; TStringfTopName! name of top item. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFastCgi(); normal constructor. ~TFastCgi(); destructor. Bool_t Create(const char* args); initializes fastcgi variables and start thread,; which will process incoming http requests. void * run_func(void* ). TFastCgi(). Int_t GetSocket() const. » Last changed: Tue Jul 21 16:38:17 2015 » Last generated: 2015-07-21 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFastCgi.html:6905,variab,variables,6905,root/html534/TFastCgi.html,https://root.cern,https://root.cern/root/html534/TFastCgi.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variables']"
Modifiability,"irtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGLParametricEquation(const TGLParametricEquation&); TGLParametricEquation&operator=(const TGLParametricEquation&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfConstrained; ParametricEquation_tfEquation; Bool_tfModified; auto_ptr<TGLHistPainter>fPainter; pair<double,double>fURange; pair<double,double>fVRange; auto_ptr<TF2>fXEquation; auto_ptr<TF2>fYEquation; auto_ptr<TF2>fZEquation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLParametricEquation(const TString& name, const TString& xEquation, const TString& yEquation, const TString& zEquation, Double_t uMin, Double_t uMax, Double_t vMin, Double_t vMax); Surface is defined by three strings.; ROOT does not use exceptions in ctors,; so, I have to use MakeZombie to let; external user know about errors. TGLParametricEquation(const TString& name, ParametricEquation_t equation, Double_t uMin, Double_t uMax, Double_t vMin, Double_t vMax); Surface defined by user's function (see ParametricEquation_t declaration in TGLParametricEquation.h). Rgl::Range_t GetURange() const; [uMin, uMax]. Rgl::Range_t GetVRange() const; [vMin, vMax]. Bool_t IsConstrained() const; Check is constrained. void SetConstrained(Bool_t c); Set constrained. Bool_t IsModified() const; Something was changed in parametric equation (or constrained option was changed). void SetModified(Bool_t m); Set modified. void EvalVertex(TGLVertex3& newVertex, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLParametricEquation.html:7000,Inherit,Inheritance,7000,root/html532/TGLParametricEquation.html,https://root.cern,https://root.cern/root/html532/TGLParametricEquation.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGTabLayout&operator=(const TGTabLayout&); TGTabLayout(const TGTabLayout&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*fListlist of frames to arrange; TGTab*fMaincontainer frame; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTabLayout(TGTab* main); Create a tab layout manager. void Layout(); Layout the tab widget. TGDimension GetDefaultSize() const; Get default size of tab widget. void SavePrimitive(ostream& out, Option_t* option = """"); Save tab layout manager as a C++ statement(s) on out stream. TGTabLayout(const TGTabLayout& ). TGTabLayout& operator=(const TGTabLayout& ). » Author: Fons Rademakers 13/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:57; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGTabLayout.html:6421,Inherit,Inheritance,6421,root/html604/TGTabLayout.html,https://root.cern,https://root.cern/root/html604/TGTabLayout.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGTabLayout&operator=(const TGTabLayout&); TGTabLayout(const TGTabLayout&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*fListlist of frames to arrange; TGTab*fMaincontainer frame; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTabLayout(TGTab* main); Create a tab layout manager. void Layout(); Layout the tab widget. TGDimension GetDefaultSize() const; Get default size of tab widget. void SavePrimitive(ostream& out, Option_t* option = """"); Save tab layout manager as a C++ statement(s) on out stream. TGTabLayout(const TGTabLayout& ). TGTabLayout& operator=(const TGTabLayout& ). » Author: Fons Rademakers 13/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:57; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTabLayout.html:6421,Inherit,Inheritance,6421,root/html602/TGTabLayout.html,https://root.cern,https://root.cern/root/html602/TGTabLayout.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); static voidRandomlyChooseBoundedVariables(TVectorD& x, TVectorD& dualx, TVectorD& blx, TVectorD& ixlow, TVectorD& bux, TVectorD& ixupp, Double_t& ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound). Data Members; public:. TVectorDfBavector of equality constraint; TVectorDfCloBound; TVectorDfCloIndex; TVectorDfCupBoundInequality constraints; TVectorDfCupIndex; TVectorDfGlinear part of Objective function; Int_tfMy; Int_tfMz; Int_tfNx; TVectorDfXloBound; TVectorDfXloIndex; TVectorDfXupBoundBounds on variables; TVectorDfXupIndex; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TQpDataBase. ←. TQpDataDens. TQpDataSparse. Function documentation; TQpDataBase(); Default constructor. TQpDataBase(Int_t nx, Int_t my, Int_t mz); Constructor. TQpDataBase(const TQpDataBase& another); Copy constructor. void RandomlyChooseBoundedVariables(TVectorD& x, TVectorD& dualx, TVectorD& blx, TVectorD& ixlow, TVectorD& bux, TVectorD& ixupp, Double_t& ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpDataBase.html:7155,variab,variables,7155,root/html602/TQpDataBase.html,https://root.cern,https://root.cern/root/html602/TQpDataBase.html,4,['variab'],['variables']
Modifiability,"irtual Int_t CloseWindow ();  ; TGMdiHorizontalWinResizer * GetLeftVR () const;  ; TGMdiVerticalWinResizer * GetLowerHR () const;  ; TGMdiCornerWinResizer * GetLowerLeftCR () const;  ; TGMdiCornerWinResizer * GetLowerRightCR () const;  ; ULong_t GetMdiButtons () const;  ; TGMdiFrame * GetMdiFrame () const;  ; Int_t GetMinimizedX () const;  ; Int_t GetMinimizedY () const;  ; Bool_t GetMinUserPlacement () const;  ; Int_t GetPreResizeHeight () const;  ; Int_t GetPreResizeWidth () const;  ; Int_t GetPreResizeX () const;  ; Int_t GetPreResizeY () const;  ; TGMdiHorizontalWinResizer * GetRightVR () const;  ; TGMdiTitleBar * GetTitleBar () const;  ; TGMdiVerticalWinResizer * GetUpperHR () const;  ; TGMdiCornerWinResizer * GetUpperLeftCR () const;  ; TGMdiCornerWinResizer * GetUpperRightCR () const;  ; const TGPicture * GetWindowIcon ();  ; const char * GetWindowName ();  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events. ;  ; Bool_t HandleConfigureNotify (Event_t *event) override;  Handle configure notify event. ;  ; TClass * IsA () const override;  ; Bool_t IsCurrent () const;  ; Bool_t IsMaximized () const;  ; Bool_t IsMinimized () const;  ; void Layout () override;  Recalculates the postion and the size of all decor frame components. ;  ; void Maximize (Bool_t max=kTRUE);  ; void Minimize (Bool_t min=kTRUE);  ; void Move (Int_t x, Int_t y) override;  Move the MDI window at position x, y. ;  ; void MoveResize (Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Move the MDI window at position x, y and set size to w, h. ;  ; void SetCurrent (Bool_t cur=kTRUE);  ; void SetDecorBorderWidth (Int_t bw);  Set border width of the decor. ;  ; void SetMdiButtons (ULong_t buttons);  Set-up MDI buttons. ;  ; void SetMinimizedX (Int_t x);  ; void SetMinimizedY (Int_t y);  ; void SetMinUserPlacement (Bool_t place=kTRUE);  ; void SetPreResizeHeight (Int_t h);  ; void SetPreResizeWidth (Int_t w);  ; void SetPreResizeX (Int_t x);  ; void SetPreResizeY (Int_t y);  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiDecorFrame.html:2957,config,configure,2957,doc/master/classTGMdiDecorFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiDecorFrame.html,1,['config'],['configure']
Modifiability,"irtual Int_t Merge (TCollection *list);  Merge polylines in the collection in this polyline. ;  ; void Paint (Option_t *option="""") override;  Paint this polyline with its current attributes. ;  ; virtual void PaintPolyLine (Int_t n, Double_t *x, Double_t *y, Option_t *option="""");  Draw this polyline with new coordinates. ;  ; virtual void PaintPolyLineNDC (Int_t n, Double_t *x, Double_t *y, Option_t *option="""");  Draw this polyline with new coordinates in NDC. ;  ; void Print (Option_t *option="""") const override;  Dump this polyline with its attributes. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetNDC (Bool_t isNDC=kTRUE);  Set NDC mode on if isNDC = kTRUE, off otherwise. ;  ; virtual Int_t SetNextPoint (Double_t x, Double_t y);  Set point following LastPoint to x, y. ;  ; virtual void SetOption (Option_t *option="""");  ; virtual void SetPoint (Int_t point, Double_t x, Double_t y);  Set point number n to (x, y) If n is greater than the current size, the arrays are automatically extended. ;  ; virtual void SetPolyLine (Int_t n);  Resize this polyline to size n. ;  ; virtual void SetPolyLine (Int_t n, Double_t *x, Double_t *y3, Option_t *option="""");  Set new values for this polyline (double precision). ;  ; virtual void SetPolyLine (Int_t n, Float_t *x, Float_t *y, Option_t *option="""");  Set new values for this polyline (single precision). ;  ; virtual Int_t Size () const;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void Append",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyArc.html:10910,extend,extended,10910,doc/master/classTCurlyArc.html,https://root.cern,https://root.cern/doc/master/classTCurlyArc.html,3,['extend'],['extended']
Modifiability,"irtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; Int_t ControlValue (Int_t v);  ; virtual void GrabMouse ();  Acquire mouse grab. ;  ; virtual Bool_t Rotate (Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2);  Method to handle action TGLViewer::kDragCameraRotate. ;  ; virtual void SelectForClicked (Event_t *event);  Run selection (optionally with on secondary selection) and emit corresponding Clicked() signals. ;  ; virtual void SelectForMouseOver ();  Run selection (optionally with on secondary selection) and emit corresponding MouseOver() signals. ;  ; virtual void UnGrabMouse ();  Release mouse grab. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; UInt_t fActiveButtonID;  ; Bool_t fArcBall;  ; Float_t fArrowKeyFactor;  ; TPoint fButtonPushPos;  ; Bool_t fDoInternalSelection;  ; TGLViewer * fGLViewer;  ; Bool_t fIgnoreButtonUp;  ; Bool_t fInPointerGrab;  ; UInt_t fLastEventState;  ; TPoint fLastGlobalPos;  ; TPoint fLastMouseOverPos;  ; TGLPhysicalShape * fLastMouseOverShape;  ; TPoint fLastPos;  ; Float_t fMouseDragFactor;  ; TTimer * fMouseTimer;  ; Bool_t fMouseTimerRunning;  ; Float_t fMouseWheelFactor;  ; Int_t fSecSelType;  ; TGToolTip * fTooltip;  ; Int_t fTooltipPixelTolerance;  ; TPoint fTooltipPos;  ; Bool_t fTooltipShown;  ; Bool_t fViewerCentricControls;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEventHandler.html:15519,inherit,inherited,15519,doc/master/classTGLEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGLEventHandler.html,1,['inherit'],['inherited']
Modifiability,"irtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tTWebFile::GetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; const TUrl&GetUrl() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTWebFile::IsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(const char* method) const; virtual TDirectory*TDirectoryFile::mkdir(const char* name, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TS3WebFile.html:10011,Inherit,InheritsFrom,10011,root/html534/TS3WebFile.html,https://root.cern,https://root.cern/root/html534/TS3WebFile.html,3,['Inherit'],['InheritsFrom']
Modifiability,"irtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; voidGetInverse(Double_t* invmat) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetPhiRotation(Bool_t fixX = kFALSE) const; char*TGeoMatrix::GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; Bool_tTGeoMatrix::IsShared() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidLocalToMaster(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterVect(const Double_t* local, Double_t* mast",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoRotation.html:10010,Inherit,InheritsFrom,10010,root/html534/TGeoRotation.html,https://root.cern,https://root.cern/root/html534/TGeoRotation.html,3,['Inherit'],['InheritsFrom']
Modifiability,"irtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; voidGetInverse(Double_t* invmat) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetPhiRotation(Bool_t fixX = kFALSE) const; char*TGeoMatrix::GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidLocalToMaster(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterVect(const Double_t* local, Double_t* master) const; virtual voidTNamed::ls(Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoRotation.html:10010,Inherit,InheritsFrom,10010,root/html532/TGeoRotation.html,https://root.cern,https://root.cern/root/html532/TGeoRotation.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual RooAbsData*RooAbsData::reduceEng(const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange = 0, Int_t nStart = 0, Int_t nStop = 2000000000, Bool_t copyCache = kTRUE); virtual voidRooAbsData::resetCache(); virtual voidRooAbsData::setArgStatus(const RooArgSet& set, Bool_t active). Data Members; public:. enum RooAbsData::ErrorType { Poisson; SumW2; None; Auto; };; enum RooAbsData::StorageType { Tree; Vector; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static RooAbsData::StorageTypeRooAbsData::defaultStorageType. protected:. TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; map<std::string,RooAbsData*>RooAbsData::_ownedComponentsOwned external components; RooArgSetRooAbsData::_varsDimensions of this data set; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TString_blindStringBlinding string (optionally read from ASCII files) ; TTree*_treeTTree holding the data points; RooArgSet_truthTruth variables . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Thu Nov 3 20:10:00 2011 » Last generated: 2011-11-03 20:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTreeData.html:14891,variab,variables,14891,root/html532/RooTreeData.html,https://root.cern,https://root.cern/root/html532/RooTreeData.html,10,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variables']"
Modifiability,"irtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; TVirtualGeoTrack*GetMother() const; TObject*GetMotherParticle() const; virtual const char*GetName() const; Int_tGetNdaughters() const; virtual Int_tGetNpoints() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetParentId() const; TObject*GetParticle() const; Int_tGetPDG() const; virtual const Double_t*GetPoint(Int_t i) const; virtual Int_tGetPoint(Int_t i, Double_t& x, Double_t& y, Double_t& z, Double_t& t) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasPoints() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoAtt::IsActive() const; Bool_tTGeoAtt::IsActiveDaughters() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInTimeRange() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoAtt::IsVisBranch() const; Bool_tTGeoAtt::IsVisContainers() const; Bool_tTGeoAtt::IsVisDaughters() const; Bool_tTGeoAtt::IsVisible() const; Bool_tTGeoAtt::IsVisLeaves() const; Bool_tTGeoAtt::IsVisOnly() const; Bool_tTGeoAtt::IsVisRaytrace() const; Bool_tTGeoAtt::IsVisStreamed() const; Bool_tTGeoAtt::IsVisTouched() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualGeoTrack.html:4053,Inherit,InheritsFrom,4053,root/html532/TVirtualGeoTrack.html,https://root.cern,https://root.cern/root/html532/TVirtualGeoTrack.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printExtras (std::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; double getValV (const RooArgSet *) const override;  Return current value, normalized by integrating over the observables in nset. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return lookup table with randomized order for nProto prototype events. ;  ; bool redirectServersHook (const RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNormalizedPdf.html:55252,inherit,inherited,55252,doc/master/classRooNormalizedPdf.html,https://root.cern,https://root.cern/doc/master/classRooNormalizedPdf.html,1,['inherit'],['inherited']
Modifiability,"irtual TClass*TTable::GetRowClass() const; virtual TTableDescriptor*TTable::GetRowDescriptors() const; virtual Long_tTTable::GetRowSize() const; Int_tTTable::GetSize() const; tableDescriptor_st*GetTable(Int_t i = 0) const; virtual TTableDescriptor*TTable::GetTableDescriptors() const; virtual Long_tTTable::GetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*TTable::GetType() const; static TTable::EColumnTypeTTable::GetTypeId(const char* typeName); static const char*TTable::GetTypeName(TTable::EColumnType type); virtual UInt_tTTable::GetTypeSize(Int_t columnIndex) const; virtual Int_tTTable::GetTypeSize(const Char_t* columnName = 0) const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tTTable::HasData() const; virtual ULong_tTNamed::Hash() const; const UInt_t*IndexArray(Int_t column) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Long_tTTable::InsertRows(const void* rows, Long_t indx, UInt_t nRows = 1); virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTTable::IsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; voidLearnTable(const TTable* parentTable); voidLearnTable(TClass* classPtr); virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTableDescriptor.html:6768,Inherit,InheritsFrom,6768,root/html532/TTableDescriptor.html,https://root.cern,https://root.cern/root/html532/TTableDescriptor.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual TContextMenuImp*TContextMenu::GetContextMenuImp(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TVirtualPad*TContextMenu::GetSelectedCanvas(); virtual TClassMenuItem*TContextMenu::GetSelectedMenuItem(); virtual TFunction*TContextMenu::GetSelectedMethod(); virtual TObject*TContextMenu::GetSelectedObject(); virtual TVirtualPad*TContextMenu::GetSelectedPad(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveContextMenu.html:3772,Inherit,InheritsFrom,3772,root/html534/TEveContextMenu.html,https://root.cern,https://root.cern/root/html534/TEveContextMenu.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual TContextMenuImp*TContextMenu::GetContextMenuImp(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TVirtualPad*TContextMenu::GetSelectedCanvas(); virtual TClassMenuItem*TContextMenu::GetSelectedMenuItem(); virtual TFunction*TContextMenu::GetSelectedMethod(); virtual TObject*TContextMenu::GetSelectedObject(); virtual TVirtualPad*TContextMenu::GetSelectedPad(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveContextMenu&operator=(const TEveContextMenu&); TE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveContextMenu.html:3704,Inherit,InheritsFrom,3704,root/html602/TEveContextMenu.html,https://root.cern,https://root.cern/root/html602/TEveContextMenu.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual THnSparse * GetAsSparseHist (RooAbsCollection *whichVars=nullptr) const;  Get a clone of the markov chain on which this interval is based as a sparse histogram. ;  ; virtual RooRealVar * GetNLLVar () const;  get a clone of the NLL variable ;  ; virtual RooRealVar * GetWeightVar () const;  get a clone of the weight variable ;  ; TClass * IsA () const override;  ; virtual double NLL () const;  get the NLL value of the current (last indexed) entry ;  ; virtual double NLL (Int_t i) const;  get the NLL value of entry at position i ;  ; virtual void SetParameters (RooArgSet &parameters);  set which of your parameters this chain should store ;  ; virtual Int_t Size () const;  get the number of steps in the chain ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual double Weight () const;  get the weight of the current (last indexed) entry ;  ; virtual double Weight (Int_t i) const;  get the weight of entry at position i ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MarkovChain.html:3682,inherit,inherited,3682,doc/master/classRooStats_1_1MarkovChain.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MarkovChain.html,1,['inherit'],['inherited']
Modifiability,"irtual TObject*TObject::FindObject(const TObject* obj) const; RooAbsArg*RooAbsCollection::first() const; RooFIterRooAbsCollection::fwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tRooAbsCollection::getHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*RooAbsCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tRooAbsCollection::getSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Int_tindex(const RooAbsArg* arg) const; Int_tindex(const char* name) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsCollection::isOwning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIterRooAbsCollection::iterator(Bool_t dir = kIterForward) const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooArgList.html:6546,Inherit,InheritsFrom,6546,root/html534/RooArgList.html,https://root.cern,https://root.cern/root/html534/RooArgList.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual TObject*TObject::FindObject(const TObject* obj) const; RooAbsArg*RooAbsCollection::first() const; RooFIterRooAbsCollection::fwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tRooAbsCollection::getHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*RooAbsCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tRooAbsCollection::getSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Int_tindex(const RooAbsArg* arg) const; Int_tindex(const char* name) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsCollection::isOwning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIterRooAbsCollection::iterator(Bool_t dir = kIterForward) const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooArgList.html:4997,Inherit,InheritsFrom,4997,root/html602/RooArgList.html,https://root.cern,https://root.cern/root/html602/RooArgList.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetCurrentParentTrackNumber() const; virtual TParticle*GetCurrentTrack() const; virtual Int_tGetCurrentTrackNumber() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNprimary() const; virtual Int_tGetNtrack() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualMCStack&operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualMCStack.html:2696,Inherit,InheritsFrom,2696,root/html532/TVirtualMCStack.html,https://root.cern,https://root.cern/root/html532/TVirtualMCStack.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetCurrentParentTrackNumber() const; virtual TParticle*GetCurrentTrack() const; virtual Int_tGetCurrentTrackNumber() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNprimary() const; virtual Int_tGetNtrack() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualMCStack&operator=(const TVirtualMCStack&); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCStack.html:2720,Inherit,InheritsFrom,2720,root/html602/TVirtualMCStack.html,https://root.cern,https://root.cern/root/html602/TVirtualMCStack.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); voidGetOppositeCorner(const Double_t* point, Int_t inorm, Double_t* vertex, Double_t* normals) const; virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; voidGetVisibleCorner(const Double_t* point, Double_t* vertex, Double_t* normals) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape::IsSameWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTrd1.html:6047,Inherit,InheritsFrom,6047,root/html534/TGeoTrd1.html,https://root.cern,https://root.cern/root/html534/TGeoTrd1.html,6,['Inherit'],['InheritsFrom']
Modifiability,"irtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; Double_tGetStIn() const; Double_tGetStOut() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasInner() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoHype.html:6760,Inherit,InheritsFrom,6760,root/html532/TGeoHype.html,https://root.cern,https://root.cern/root/html532/TGeoHype.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; Double_tGetStIn() const; Double_tGetStOut() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasInner() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHype.html:7415,Inherit,InheritsFrom,7415,root/html534/TGeoHype.html,https://root.cern,https://root.cern/root/html534/TGeoHype.html,3,['Inherit'],['InheritsFrom']
Modifiability,"irtual const char*TNamed::GetName() const; Int_tGetNumMergers() const; Int_tGetNumWrks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; TList*GetOutputList(); const char*GetParList() const; Float_tGetPrepTime() const; Float_tGetProcTime() const; Float_tGetRecvTime() const; const char*GetResultFile() const; TMacro*GetSelecHdr() const; TMacro*GetSelecImp() const; Int_tGetSeqNum() const; TDatimeGetStartTime() const; TQueryResult::EQueryStatusGetStatus() const; Float_tGetTermTime() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tGetUsedCPU() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsArchived() const; virtual Bool_tIsDone() const; Bool_tIsDraw() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFinalized() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tMatches(const char* ref); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQueryResult.html:3204,Inherit,InheritsFrom,3204,root/html534/TQueryResult.html,https://root.cern,https://root.cern/root/html534/TQueryResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual const char*TNamed::GetName() const; Int_tGetNumMergers() const; Int_tGetNumWrks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; TList*GetOutputList(); const char*GetParList() const; Float_tGetPrepTime() const; Float_tGetProcTime() const; Float_tGetRecvTime() const; const char*GetResultFile() const; TMacro*GetSelecHdr() const; TMacro*GetSelecImp() const; Int_tGetSeqNum() const; TDatimeGetStartTime() const; TQueryResult::EQueryStatusGetStatus() const; Float_tGetTermTime() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tGetUsedCPU() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsArchived() const; virtual Bool_tIsDone() const; Bool_tIsDraw() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFinalized() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tMatches(const char* ref); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TQueryResult.html:3177,Inherit,InheritsFrom,3177,root/html604/TQueryResult.html,https://root.cern,https://root.cern/root/html604/TQueryResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Color_tGetOverColor() const; Int_tGetOverflowAction() const; UChar_t*GetOverRGBA(); const UChar_t*GetOverRGBA() const; Bool_tGetShowDefValue() const; virtual const char*TObject::GetTitle() const; Color_tGetUnderColor() const; Int_tGetUnderflowAction() const; UChar_t*GetUnderRGBA(); const UChar_t*GetUnderRGBA() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveRefCnt::IncRefCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; voidMinMaxValChanged()SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidTEveRefCnt::OnZeroRefCount(); static voidTObject::operator delete(void* ptr); static voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveRGBAPalette.html:6004,Inherit,InheritsFrom,6004,root/html532/TEveRGBAPalette.html,https://root.cern,https://root.cern/root/html532/TEveRGBAPalette.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidClearFormula(); virtual Bool_tCompileVariables(); virtual voidDefVar(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidFillWeight(); voidTObject::MakeZombie(); virtual Bool_tProcessSingle(Long64_t, Int_t); voidSetCanvas(const char* objname); voidSetDrawAtt(TObject* o); voidSetError(const char* sub, const char* mesg). Data Members; public:. enum { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tfDimensionDimension of the current expression; TStringfInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*fManager; Int_tfMultiplicityIndicator of the variability of the size of entries; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*fSelectPointer to selection formula; TStringfSelection; TStatus*fStatus; Long64_tTSelector::fStatusSelector status; TTree*fTree; TTreeDrawArgsParserfTreeDrawArgsParser; TTreeFormula*fVar[4]Pointer to variable formula; Double_tfWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDraw(); Destructor. void Init(TTree* ); Init the tree. Bool_t Notify(); Called when a new tree is loaded. void Begin(TTree* ); Executed by the client before processing. void SlaveBegin(TTree* ); Executed by each slave before processing. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDraw.html:6890,variab,variability,6890,root/html534/TProofDraw.html,https://root.cern,https://root.cern/root/html534/TProofDraw.html,2,['variab'],['variability']
Modifiability,"irtual voidClearFormula(); virtual Bool_tCompileVariables(); virtual voidDefVar(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidFillWeight(); voidTObject::MakeZombie(); virtual Bool_tProcessSingle(Long64_t, Int_t); voidSetCanvas(const char* objname); voidSetDrawAtt(TObject* o); voidSetError(const char* sub, const char* mesg). Data Members; public:. enum { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tfDimensionDimension of the current expression; TStringfInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*fManager; Int_tfMultiplicityIndicator of the variability of the size of entries; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*fSelectPointer to selection formula; TStringfSelection; TStatus*fStatus; Long64_tTSelector::fStatusselector status; TTree*fTree; TTreeDrawArgsParserfTreeDrawArgsParser; TTreeFormula*fVar[4]Pointer to variable formula; Double_tfWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDraw(); Destructor. void Init(TTree* ); Init the tree. Bool_t Notify(); Called when a new tree is loaded. void Begin(TTree* ); Executed by the client before processing. void SlaveBegin(TTree* ); Executed by each slave before processing. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDraw.html:6824,variab,variability,6824,root/html530/TProofDraw.html,https://root.cern,https://root.cern/root/html530/TProofDraw.html,3,['variab'],['variability']
Modifiability,"irtual voidProcessOptions(). Data Members; public:. enum EFisherMethod { kFisher; kMahalanobis; };; enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TMatrixD*fBetwbetween-class matrix; TMatrixD*fCovfull covariance matrix; vector<Double_t>*fDiscrimPowdiscriminating power; Double_tfF0offset; vector<Double_t>*fFisherCoeffFisher coefficients; TMVA::MethodFisher::EFisherMethodfFisherMethodFisher or Mahalanobis ; TMatrixD*fMeanMatx; Double_tfSumOfWeightsBsum-of-weights for background training events; Double_tfSumOfWeightsSsum-of-weights for signal training events; TStringfTheMethodFisher or Mahalanobis; TMatrixD*fWithwithin-class matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodFisher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodFisher.html:17285,variab,variables,17285,root/html528/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodFisher.html,1,['variab'],['variables']
Modifiability,"irtual voidRooAbsPdf::resetErrorCounters(Int_t resetValue = 10); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooExtendPdf.html:27285,config,config,27285,root/html526/RooExtendPdf.html,https://root.cern,https://root.cern/root/html526/RooExtendPdf.html,4,['config'],['config']
Modifiability,"irtual voidRooAbsPdf::resetErrorCounters(Int_t resetValue = 10); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCachedPdf.html:27538,config,config,27538,root/html526/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsCachedPdf.html,1,['config'],['config']
Modifiability,"irtual voidRooAbsPdf::resetErrorCounters(Int_t resetValue = 10); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetMode(const RooMomentMorph::Setting& setting); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMomentMorph.html:26893,config,config,26893,root/html526/RooMomentMorph.html,https://root.cern,https://root.cern/root/html526/RooMomentMorph.html,1,['config'],['config']
Modifiability,"irtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). private:. Double_tg(Double_t x, Double_t sigma) const. Data Members; public:. enum Mirror { NoMirror; MirrorLeft; MirrorRight; MirrorBoth; MirrorAsymLeft; MirrorAsymLeftRight; MirrorAsymRight; MirrorLeftAsymRight; MirrorAsymBoth; };; enum { _nPoints; };; enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooKeysPdf.html:38600,Extend,ExtendMode,38600,root/html534/RooKeysPdf.html,https://root.cern,https://root.cern/root/html534/RooKeysPdf.html,2,"['Config', 'Extend']","['ConfigChange', 'ExtendMode']"
Modifiability,"irtual voidSetNFitPoints(unsigned int n) const. private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const. Data Members; public:. static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::kLeastSquare; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::kLogLikelihood; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::kUndefined. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; unsigned intfNEffPointsnumber of effective points used in the fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function. unsigned int NFitPoints() const; effective points used in the fit (exclude the rejected one). { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th chi-square residual. void Gradient(const double* x, double* g) const; need to be virtual to be instantiated. void SetNFitPoints(unsigned int n) const; set number of fit points (need to be called in const methods, make it const). { fNEffPoints = n; }. double DoEval(const double* x) const. Evaluation of the function (required by interface). double DoDerivative(const double* x, unsigned int icoord) const; for derivatives. » Author: L. Moneta Tue Sep 5 09:13:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html:4728,Inherit,Inheritance,4728,root/html602/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__Chi2FCN_-p0Math__IGradientFunctionMultiDim_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TEveProjected(); virtual voidUnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidUpdateProjection(). protected:. voidSetDepthCommon(Float_t d, TEveElement* el, Float_t* bbox); virtual voidSetDepthLocal(Float_t d). private:. TEveProjected&operator=(const TEveProjected&); TEveProjected(const TEveProjected&). Data Members; protected:. Float_tfDepthz coordinate; TEveProjectionManager*fManagermanager; TEveProjectable*fProjectablelink to original object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveProjected(); Constructor. ~TEveProjected(); Destructor.; If fProjectable is non-null, *this is removed from its list of; projected replicas. TEveElement* GetProjectedAsElement(); Returns this projected dynamic-casted to TEveElement.; This is needed as class TEveProjected is used as secondary; inheritance. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); Sets projection manager and reference in the projectable object. Method called; immediately after default constructor.; See also TEveProjectionManager::ImportElements(). void UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); Remove reference to projectable. void SetDepth(Float_t d); Set depth coordinate for the element.; Bounding-box should also be updated.; If projection type is 3D, this only sets fDepth member. void SetDepthCommon(Float_t d, TEveElement* el, Float_t* bbox); Utility function to update the z-values of the bounding-box.; As this is an abstract interface, the element and bbox pointers; must be passed from outside. void SetDepthLocal(Float_t d); Base-class implementation -- just sets fDepth. TEveProjectable& operator=(const TEveProjected& ). TEveProjected(const TEveProjected& ). TEveProjectionManager* GetManager() const; { return fManage",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveProjected.html:2008,inherit,inheritance,2008,root/html602/TEveProjected.html,https://root.cern,https://root.cern/root/html602/TEveProjected.html,4,['inherit'],['inheritance']
Modifiability,"irtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::MsgLogger*TMVA::PDEFoamKernelBase::fLogger! message logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamKernelTrivial(); Default constructor for streamer. PDEFoamKernelTrivial(const TMVA::PDEFoamKernelTrivial& ); Copy constructor. Float_t Estimate(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue ); Simple kernel estimator. It returns the cell value 'cv',; corresponding to the event vector 'txvec' (in foam coordinates). Parameters:. - foam - the pdefoam to search in. - txvec - event vector in foam coordinates [0,1]. - cv - cell value to estimate. virtual ~PDEFoamKernelTrivial(); {}. » Author: Dominik Dannheim, Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id: PDEFoamKernelTrivial.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDEFoamKernelTrivial.html:5607,Inherit,Inheritance,5607,root/html532/TMVA__PDEFoamKernelTrivial.html,https://root.cern,https://root.cern/root/html532/TMVA__PDEFoamKernelTrivial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMVA::SVEventSVEvent(); TMVA::SVEventSVEvent(const TMVA::SVEvent&); TMVA::SVEventSVEvent(const TMVA::Event*, Float_t, Bool_t isSignal = kFALSE); TMVA::SVEventSVEvent(const vector<Float_t>*, Float_t alpha, Int_t typeFlag, UInt_t ns); TMVA::SVEventSVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); voidUpdateErrorCache(Float_t upercache). Data Members; private:. Float_tfAlphalagrange multiplier; Float_tfAlpha_plagrange multiplier; const Float_tfCweightsvm cost weight; vector<Float_t>fDataVector; Float_tfErrorCacheoptimization parameter; Int_tfIdxindex flag; Int_tfIsShrinkedshrinking flag, see documentation; Float_t*fLinepointer to column of kerenl matrix; UInt_tfNVarnumber of variables; UInt_tfNsdocumentation; const Float_tfTargetregression target; const Int_tfTypeFlagis sig or bkg - svm requieres 1 for sig and -1 for bkg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVEvent(). SVEvent(const TMVA::Event* , Float_t , Bool_t isSignal = kFALSE); constructor. SVEvent(const vector<Float_t>* , Float_t alpha, Int_t typeFlag, UInt_t ns); constructor. SVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); constructor. ~SVEvent(); destructor. void Print(ostream& os) const; printout. void PrintData(); printout. SVEvent(). void SetAlpha(Float_t alpha); { fAlpha = alpha; }. void SetAlpha_p(Float_t alpha); { fAlpha_p = alpha; }. void SetErrorCache(Float_t err_cache); { fErrorCache = err_cache; }. void SetIsShrinked(Int_t isshrinked); { fIsShrinked = isshrinked; }. void SetLine(Float_t* line); { fLine = line; }. void SetIdx(Int_t idx); { fIdx = idx; }. void SetNs(UInt_t ns); { fNs = ns; }. void UpdateErrorCache(Float_t upercache); { fErrorCache += upercache; }. std::vector<Float_t>* GetDataVector(); { return &fDataVector; }. Float_t GetAlpha() const; { return fAlpha; }. Float_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__SVEvent.html:2163,Inherit,Inheritance,2163,root/html602/TMVA__SVEvent.html,https://root.cern,https://root.cern/root/html602/TMVA__SVEvent.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableDecorrTransformVariableDecorrTransform(TMVA::DataSetInfo& dsi); TMVA::VariableDecorrTransformVariableDecorrTransform(const TMVA::VariableDecorrTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html:6066,Variab,VariableInfo,6066,root/html532/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html,1,['Variab'],['VariableInfo']
Modifiability,"irtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableGaussTransformVariableGaussTransform(const TMVA::VariableGaussTransform&); TMVA::VariableGaussTransformVariableGaussTransform(TMVA::DataSetInfo& dsi, TString strcor = """"); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableGaussTransform.html:6135,Variab,VariableInfo,6135,root/html532/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableGaussTransform.html,1,['Variab'],['VariableInfo']
Modifiability,"irtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableIdentityTransformVariableIdentityTransform(TMVA::DataSetInfo& dsi); TMVA::VariableIdentityTransformVariableIdentityTransform(const TMVA::VariableIdentityTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:6133,Variab,VariableInfo,6133,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,1,['Variab'],['VariableInfo']
Modifiability,"irtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVariableNormalizeTransform(const TMVA::VariableNormalizeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html:6153,Variab,VariableInfo,6153,root/html532/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html,1,['Variab'],['VariableInfo']
Modifiability,"irtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariablePCATransformVariablePCATransform(TMVA::DataSetInfo& dsi); TMVA::VariablePCATransformVariablePCATransform(const TMVA::VariablePCATransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariablePCATransform.html:6110,Variab,VariableInfo,6110,root/html532/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariablePCATransform.html,1,['Variab'],['VariableInfo']
Modifiability,"irtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVariableRearrangeTransform(const TMVA::VariableRearrangeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html:6078,Variab,VariableInfo,6078,root/html532/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html,1,['Variab'],['VariableInfo']
Modifiability,"irtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); TMVA::MethodBase*GetCurrentMethod(); TMVA::MethodBase*GetCurrentMethod(UInt_t idx); UInt_tGetCurrentMethodIndex(); virtual voidTMVA::IMethod::GetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; TMVA::IMethod*GetLastMethod(); TMVA::IMethod*GetMethod(const TString& title) const; TMVA::IMethod*GetMethod(const Int_t index) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; TMVA::IMethod*GetPreviousMethod(); const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidTMVA::MethodBase::MakeClassSpecific(ostream&, const TString& = """") const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); virtual voidProcessOptions(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCompositeBase.html:14127,Config,Configurable,14127,root/html534/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCompositeBase.html,4,['Config'],['Configurable']
Modifiability,"irtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. virtual Bool_tCleanupSecContext(Bool_t all). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Int_tfRSAKeyType of RSA key used. Class Charts. Inheritance Chart:. TObject. ←; TSecContext. ←; TRootSecContext. Function documentation; TRootSecContext(const char* user, const char* host, Int_t meth, Int_t offset, const char* id, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0, Int_t key = 1); Ctor for SecContext object. TRootSecContext(const char* url, Int_t meth, Int_t offset, const char* id, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0, Int_t key = 1); Ctor for SecContext object.; User and host from url = user@host . ~TRootSecContext(); Dtor: delete (deActivate, local/remote cleanup, list removal); all what is still active. void DeActivate(Option_t* opt = ""CR""); Set OffSet to -1 and expiring Date to default; Remove from the list; If globus, cleanup local stuff; If Opt contains ""C"" or ""c"", ask for remote cleanup; If Opt contains ""R"" or ""r"", remove from the list; Default Opt=""CR"". Bool_t CleanupSecContext(Bool_t all); Ask remote client to cleanup security context 'ctx'; If 'all', all sec context with the sa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSecContext.html:6878,Inherit,Inheritance,6878,root/html602/TRootSecContext.html,https://root.cern,https://root.cern/root/html602/TRootSecContext.html,2,['Inherit'],['Inheritance']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static Memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Memstat__TMemStatMng.html:2329,Inherit,InheritsFrom,2329,root/html602/Memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html602/Memstat__TMemStatMng.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/memstat__TMemStatMng.html:2329,Inherit,InheritsFrom,2329,root/html534/memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLayoutManager.html:3375,Inherit,InheritsFrom,3375,root/html532/TGLayoutManager.html,https://root.cern,https://root.cern/root/html532/TGLayoutManager.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLayoutManager.html:3382,Inherit,InheritsFrom,3382,root/html602/TGLayoutManager.html,https://root.cern,https://root.cern/root/html602/TGLayoutManager.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColumnLayout.html:3336,Inherit,InheritsFrom,3336,root/html532/TGColumnLayout.html,https://root.cern,https://root.cern/root/html532/TGColumnLayout.html,16,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGColumnLayout.html:3251,Inherit,InheritsFrom,3251,root/html602/TGColumnLayout.html,https://root.cern,https://root.cern/root/html602/TGColumnLayout.html,16,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; voidNewSize(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGXYLayout.html:4930,Inherit,InheritsFrom,4930,root/html532/TGXYLayout.html,https://root.cern,https://root.cern/root/html532/TGXYLayout.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; voidNewSize(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGXYLayout.html:4901,Inherit,InheritsFrom,4901,root/html602/TGXYLayout.html,https://root.cern,https://root.cern/root/html602/TGXYLayout.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGTileLayout::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGListDetailsLayout.html:3339,Inherit,InheritsFrom,3339,root/html532/TGListDetailsLayout.html,https://root.cern,https://root.cern/root/html532/TGListDetailsLayout.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGTileLayout::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGListDetailsLayout.html:3272,Inherit,InheritsFrom,3272,root/html602/TGListDetailsLayout.html,https://root.cern,https://root.cern/root/html602/TGListDetailsLayout.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction3Map<double,double,double,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Ref_double_double_double_double_.html:3342,Inherit,InheritsFrom,3342,root/html534/RooCFunction3Ref_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Ref_double_double_double_double_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction3Map<double,double,double,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); doubleoperator()(double x,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Ref_double_double_double_double_.html:3045,Inherit,InheritsFrom,3045,root/html602/RooCFunction3Ref_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Ref_double_double_double_double_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Bool_tFlush(); virtual Int_tGetBytesInCache() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileCacheWrite.html:2974,Inherit,InheritsFrom,2974,root/html532/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html532/TFileCacheWrite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Bool_tFlush(); virtual Int_tGetBytesInCache() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileCacheWrite.html:2907,Inherit,InheritsFrom,2907,root/html602/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html602/TFileCacheWrite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TObject*GetUserObject() const; virtual TGeoExtension*Grab(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoRCExtension.html:2800,Inherit,InheritsFrom,2800,root/html534/TGeoRCExtension.html,https://root.cern,https://root.cern/root/html534/TGeoRCExtension.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TObject*GetUserObject() const; virtual TGeoExtension*Grab(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoRCExtension.html:2750,Inherit,InheritsFrom,2750,root/html602/TGeoRCExtension.html,https://root.cern,https://root.cern/root/html602/TGeoRCExtension.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFilterZonal(const Double_t** fSource, Double_t** fDest); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSpectrum2Transform&operator=(const TSpectrum2Trans",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Transform.html:3493,Inherit,InheritsFrom,3493,root/html602/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Transform.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX() const; Double_tGetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttMarker::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMarker.html:2696,Inherit,InheritsFrom,2696,root/html532/TMarker.html,https://root.cern,https://root.cern/root/html532/TMarker.html,1,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooMsgService::StreamConfig&getStream(Int_t id); Bool_tgetStreamStatus(Int_t id) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; RooFit::MsgLevelglobalKillBelow() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooMsgService&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tisActive(const RooAbsArg* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Bool_tisActive(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; ostream&log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); ostream&log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Int_tnumStreams() const; voidTObject::Obsolete(const char* method, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMsgService.html:4015,Inherit,InheritsFrom,4015,root/html532/RooMsgService.html,https://root.cern,https://root.cern/root/html532/RooMsgService.html,4,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetId() const; TGeoMaterial*GetMaterial() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParam(Int_t i) const; char*GetPointerName() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMedium.html:3291,Inherit,InheritsFrom,3291,root/html532/TGeoMedium.html,https://root.cern,https://root.cern/root/html532/TGeoMedium.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetId() const; TGeoMaterial*GetMaterial() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParam(Int_t i) const; char*GetPointerName() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoMedium.html:3005,Inherit,InheritsFrom,3005,root/html602/TGeoMedium.html,https://root.cern,https://root.cern/root/html602/TGeoMedium.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TParticlePDG*GetParticle(Int_t pdgCode) const; TParticlePDG*GetParticle(const char* name) const; TParticleClassPDG*GetParticleClass(const char* name); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static TDatabasePDG*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDatabasePDG.html:3612,Inherit,InheritsFrom,3612,root/html532/TDatabasePDG.html,https://root.cern,https://root.cern/root/html532/TDatabasePDG.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TParticlePDG*GetParticle(Int_t pdgCode) const; TParticlePDG*GetParticle(const char* name) const; TParticleClassPDG*GetParticleClass(const char* name); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static TDatabasePDG*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDatabasePDG.html:3614,Inherit,InheritsFrom,3614,root/html602/TDatabasePDG.html,https://root.cern,https://root.cern/root/html602/TDatabasePDG.html,2,['Inherit'],['InheritsFrom']
Modifiability,"irtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Int_tTryLock(); virtual Int_tUnLock(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TMutexImp(); { }. Int_t Lock(). Int_t TryLock(). Int_t UnLock(). » Author: Fons Rademakers 01/07/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id: TMutexImp.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMutexImp.html:5336,Inherit,Inheritance,5336,root/html532/TMutexImp.html,https://root.cern,https://root.cern/root/html532/TMutexImp.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetErrorTolerance(Double_t t); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidSetForceSum(Bool_t flag); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidSetMaxIters(Int_t mi); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNonCentralChiSquare.html:28488,config,config,28488,root/html528/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html528/RooNonCentralChiSquare.html,1,['config'],['config']
Modifiability,"irtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidsetAllInterpCodes(int code); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpCode(RooAbsReal& param, int code); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html:23499,config,config,23499,root/html532/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html,2,['config'],['config']
Modifiability,"irtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidsetCacheAllNumeric(Int_t ndim); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCacheNumeric(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooRealIntegral.html:22772,config,config,22772,root/html530/RooRealIntegral.html,https://root.cern,https://root.cern/root/html530/RooRealIntegral.html,1,['config'],['config']
Modifiability,"irtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tSignal(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Int_tTimedWait(ULong_t secs, ULong_t nanoSecs = 0); virtual voidTObject::UseCurrentStyle(); virtual Int_tWait(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TConditionImp(); { }. Int_t Wait(). Int_t TimedWait(ULong_t secs, ULong_t nanoSecs = 0). Int_t Signal(). Int_t Broadcast(). » Author: Fons Rademakers 01/07/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TConditionImp.html:5457,Inherit,Inheritance,5457,root/html534/TConditionImp.html,https://root.cern,https://root.cern/root/html534/TConditionImp.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTMatrixTLazy<float>::operator=(const TMatrixTLazy<float>&). private:. virtual voidFillIn(TMatrixT<float>& m) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTMatrixTLazy<float>::fColLwb; Int_tTMatrixTLazy<float>::fColUpb; Int_tTMatrixTLazy<float>::fRowLwb; Int_tTMatrixTLazy<float>::fRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void THaarMatrixT<Element> FillIn(TMatrixT<float>& m) const. » Last changed: root/matrix:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THaarMatrixT_float_.html:5828,Inherit,Inheritance,5828,root/html534/THaarMatrixT_float_.html,https://root.cern,https://root.cern/root/html534/THaarMatrixT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetObjectName(const char* s); static voidTObject::SetObjectStat(Bool_t stat); voidSetOriginal(TObject* o); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidClearPrevious(); TTreeDrawArgsParser::EOutputTypeDefineType(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); Bool_tParseName(TString name); Bool_tParseOption(); Bool_tParseVarExp(); Bool_tSplitVariables(TString variables). Data Members; public:. enum EOutputType { kUNKNOWN; kEVENTLIST; kENTRYLIST; kPROFILE; kPROFILE2D; kGRAPH; kPOLYMARKER3D; kHISTOGRAM1D; kHISTOGRAM2D; kLISTOFGRAPHS; kLISTOFPOLYMARKERS3D; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static Int_tfgMaxDimension= 4; static Int_tfgMaxParameters= 9. protected:. Bool_tfAddvalues should be added to an existing object; Int_tfDimensiondimension of the histogram/plot; Bool_tfDrawProfiletrue if the options contain :""prof""; Bool_tfEntryListif fill a TEntryList; TStringfExpcomplete variable expression; TStringfNamehistogram's/plot's name; Int_tfNoParametersif dimensions of the plot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeDrawArgsParser.html:5757,variab,variables,5757,root/html528/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html528/TTreeDrawArgsParser.html,4,['variab'],['variables']
Modifiability,"irtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Long64_tfFirstFirst free word of segment; Long64_tfLastLast free word of segment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFree(); TFree default constructor. TFree(TList* lfree, Long64_t first, Long64_t last); Constructor for a FREE segment. TFree * AddFree(TList* lfree, Long64_t first, Long64_t last); Add a new free segment to the list of free segments. If last just precedes an existing free segment, then first becomes; the new starting location of the free segment.; if first just follows an existing free segment, then last becomes; the new ending location of the free segment.; if first just follows an existing free segment AND last just precedes; an existing free segment, these two segments are merged into; one single segment. ~TFree(); TFree Destructor. void FillBuffer(char*& buffer); Encode FREE structure into output buffer. TFree * GetBestFree(TList* lfree, Int_t nbytes); Return the best free segment where to store nbytes. void ls(Option_t* ) const; List free segment contents. void ReadBuffer(char*& buffer); Decode one FREE structure from input buffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFree.html:6106,Inherit,Inheritance,6106,root/html534/TFree.html,https://root.cern,https://root.cern/root/html534/TFree.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Long64_tfFirstFirst free word of segment; Long64_tfLastLast free word of segment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFree(); TFree default constructor. TFree(TList* lfree, Long64_t first, Long64_t last); Constructor for a FREE segment. TFree * AddFree(TList* lfree, Long64_t first, Long64_t last); Add a new free segment to the list of free segments. If last just preceedes an existing free segment, then first becomes; the new starting location of the free segment.; if first just follows an existing free segment, then last becomes; the new ending location of the free segment.; if first just follows an existing free segment AND last just preceedes; an existing free segment, these two segments are merged into; one single segment. ~TFree(); TFree Destructor. void FillBuffer(char*& buffer); Encode FREE structure into output buffer. TFree * GetBestFree(TList* lfree, Int_t nbytes); Return the best free segment where to store nbytes. void ls(Option_t* ) const; List free segment contents. void ReadBuffer(char*& buffer); Decode one FREE structure from input buf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFree.html:6087,Inherit,Inheritance,6087,root/html532/TFree.html,https://root.cern,https://root.cern/root/html532/TFree.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TParticleClassPDG(const TParticleClassPDG& pcp); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TParticleClassPDG&operator=(const TParticleClassPDG& pcp). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fListOfParticleslist of (non-owned) particles; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParticleClassPDG(const char* name = 0); default constructor. ~TParticleClassPDG(); destructor, class doesn't own its particles... void Print(Option_t* opt = """") const. Print the entire information of this kind of particle. void Browse(TBrowser* b); browse this particle class. TParticleClassPDG(const TParticleClassPDG& pcp); { }. TParticleClassPDG& operator=(const TParticleClassPDG& pcp). Int_t GetNParticles(); ****** access methods. TParticlePDG* GetParticle(Int_t i). TObjArray* GetListOfParticles(); { return fListOfParticles; }. void AddParticle(TObject* p); ****** modifiers. { fListOfParticles->Add(p); }. Bool_t IsFolder() const; { return kTRUE; }. » Author: Pasha Murat 12/02/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-03-14 16:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParticleClassPDG.html:5726,Inherit,Inheritance,5726,root/html534/TParticleClassPDG.html,https://root.cern,https://root.cern/root/html534/TParticleClassPDG.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TParticleClassPDG(const TParticleClassPDG& pcp); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TParticleClassPDG&operator=(const TParticleClassPDG& pcp). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fListOfParticleslist of (non-owned) particles; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParticleClassPDG(const char* name = 0); default constructor. ~TParticleClassPDG(); destructor, class doesn't own its particles... void Print(Option_t* opt = """") const. Print the entire information of this kind of particle. void Browse(TBrowser* b); browse this particle class. TParticleClassPDG(const TParticleClassPDG& pcp); { }. TParticleClassPDG& operator=(const TParticleClassPDG& pcp). Int_t GetNParticles(); ****** access methods. TParticlePDG* GetParticle(Int_t i). TObjArray* GetListOfParticles(); { return fListOfParticles; }. void AddParticle(TObject* p); ****** modifiers. { fListOfParticles->Add(p); }. Bool_t IsFolder() const; { return kTRUE; }. » Author: Pasha Murat 12/02/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id: TParticleClassPDG.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regardi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParticleClassPDG.html:5707,Inherit,Inheritance,5707,root/html532/TParticleClassPDG.html,https://root.cern,https://root.cern/root/html532/TParticleClassPDG.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidDeleteOwnMatrix(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EPositionBits { kIsOwn; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UInt_tfIdUnique ID of this position; TRotMatrix*fMatrixPointer to rotation matrix; TVolume*fNodeRefs pointer to the node defined; Double_tfX[3]X offset with respect to parent object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVolumePosition(TVolume* node, Double_t x, Double_t y, Double_t z, const char* matrixname); Node normal constructor*-*-*-*-; *-* ======================; -; *-* name is the name of the node; *-* title is title; *-* x,y,z are the offsets of the volume with respect to his mother; *-* matrixname is the name of the rotation matrix; -; *-* This new node is added into the list of sons of the current node; -. TVolumePosition(TVolume* node = 0, Double_t x = 0, Double_t y = 0, Double_t z = 0, TRotMatrix* matrix = 0); Node normal constructor; *-* ================================; -; *-* name is the name of the node; *-* title is title; *-* x,y,z are the offsets of the volume with respect to his mother; *-* matrix is the pointer to the rotation matrix; -; *-* This new node is added into the list of sons of the current node; -. TVolumePosition(const TVolumePosition* oldPosition, const TVolumePosition* curPosition); Pick the ""old"" position by pieces",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVolumePosition.html:8174,Inherit,Inheritance,8174,root/html532/TVolumePosition.html,https://root.cern,https://root.cern/root/html532/TVolumePosition.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TGeoMatrix::EGeoTransfTypes { kGeoIdentity; kGeoShared; kGeoTranslation; kGeoRotation; kGeoScale; kGeoReflection; kGeoRegistered; kGeoSavePrimitive; kGeoMatrixOwned; kGeoCombiTrans; kGeoGenTrans; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoIdentity(); dummy ctor. TGeoIdentity(const char* name); constructor. TGeoMatrix & Inverse() const; Return a temporary inverse of this. TGeoMatrix& operator=(const TGeoIdentity& ); Preventing warnings with -Weffc++ in GCC since the behaviour of operator * was chosen so by design. const Double_t * GetTranslation() const. const Double_t * GetRotationMatrix() const. const Double_t * GetScale() const. void LocalToMaster(const Double_t* local, Double_t* master) const. void LocalToMasterVect(const Double_t* local, Double_t* master) const. void LocalToMasterBomb(const Double_t* local, Double_t* master) const. TGeoMatrix * MakeClone() const. void MasterToLocal(const Double_t* master, Double_t* local) const. void MasterToLocalVect(const Double_t* master, Double_t* local) const. void MasterToLocalBomb(const Double_t* master, Double_t* local) const. void SavePrimitive(ostream& , Option_t* = """"). TGeoIdentity(); no data members. virtual ~TGeoId",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoIdentity.html:14363,Inherit,Inheritance,14363,root/html534/TGeoIdentity.html,https://root.cern,https://root.cern/root/html534/TGeoIdentity.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual void CreateVisualAxes ();  Creates the TGaxis objects that are used for consistent display of the axes. ;  ; void ImportAxisAttributes (TGaxis *gaxis, TAxis *axis);  Internal method to import TAxis attributes to a TGaxis. ;  ; virtual void Init (TH1 *h1, TH1 *h2, Option_t *option="""");  Internal method that shares constructor logic. ;  ; void SetPadMargins ();  Sets the margins of all the pads to the value specified in class members. ;  ; virtual void SetupPads ();  Setup the pads. ;  ; virtual void SyncAxesRanges ();  Syncs the axes ranges from the shared ones to the actual ones. ;  ; virtual Bool_t SyncPadMargins ();  Figures out which pad margin has deviated from the stored ones, to figure out what the new nominal is and set the other pad to it subsequently. ;  ; void UpdateGridlines ();  Update positions of grid lines. ;  ; virtual void UpdateVisualAxes ();  Update TGaxis attributes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1 = 1.;  Stores the scale factor for h1 (or THStack sum) ;  ; Double_t fC2 = 1.;  Stores the scale factor for h2. ;  ; Color_t fCi1Color = kYellow;  Stores the color for the 1 sigma band. ;  ; Color_t fCi2Color = kGreen;  Stores the color for the 2 sigma band. ;  ; Double_t fCl1 = 0.6827;  Stores the confidence level for the inner confidence interval band. ;  ; Double_t fCl2 = 0.9545;  Stores the confidence level for the outer confidence interval band. ;  ; TGraphErrors * fConfidenceInterval1 = nullptr;  Stores the graph for the 1 sigma band. ;  ; TGraphErrors * fConfidenceInterval2 = nullptr;  Stores the graph for the 2 sigma band. ;  ; Int_t fErrorMode = ErrorMode::kErrorSymmetric;  Stores the error mode, sym, asym or func. ;  ; TString fFitDrawOpt;  Stores draw option for the fit function in the fit residual case. ;  ; TFitResult",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRatioPlot.html:20428,inherit,inherited,20428,doc/master/classTRatioPlot.html,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html,1,['inherit'],['inherited']
Modifiability,"irtual void DefineSection (Int_t snum, Double_t z, Double_t rmin, Double_t rmax);  ; Double_t DistToSegZ (const Double_t *point, const Double_t *dir, Int_t &iz) const;  ; Double_t & Dphi ();  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; Double_t GetDphi () const;  ; Int_t GetNz () const;  ; Double_t GetPhi1 () const;  ; Double_t * GetRmax () const;  ; Double_t GetRmax (Int_t ipl) const;  ; Double_t * GetRmin () const;  ; Double_t GetRmin (Int_t ipl) const;  ; Double_t * GetZ () const;  ; Double_t GetZ (Int_t ipl) const;  ; Bool_t IsCylType () const override;  ; Double_t & Phi1 ();  ; Double_t & Rmax (Int_t ipl);  ; Double_t & Rmin (Int_t ipl);  ; Double_t SafetyToSegment (const Double_t *point, Int_t ipl, Bool_t in=kTRUE, Double_t safmin=TGeoShape::Big()) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t & Z (Int_t ipl);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPgon.html:4958,inherit,inherited,4958,doc/master/classTGeoPgon.html,https://root.cern,https://root.cern/doc/master/classTGeoPgon.html,1,['inherit'],['inherited']
Modifiability,"irtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSetDefaultTree = 0x20; , kForceScan = 0x40; , kNoHeaderPrint = 0x80; , ;   kReopen = 0x100; , kTouch = 0x200; , kMaxFiles = 0x400; , kReadShort = 0x800; , ;   kFileMustExist = 0x1000; , kNoAction = 0x2000; , kLocateOnly = 0x4000; , kStageOnly = 0x8000; , ;   kNoCacheUpdate = 0x10000; , kRefreshLs = 0x20000; , kList = 0x40000; , kAllFiles = 0x80000; , ;   kStagedFiles = 0x100000; , kNoStagedCheck = 0x200000. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataSetManagerFile.html:18007,inherit,inherited,18007,doc/master/classTDataSetManagerFile.html,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html,1,['inherit'],['inherited']
Modifiability,"irtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooCFunction2Ref< VO, VI1, VI2 > func;  ; RooRealProxy x;  ; RooRealProxy y;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction2PdfBinding.html:68067,inherit,inherited,68067,doc/master/classRooCFunction2PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction2PdfBinding.html,1,['inherit'],['inherited']
Modifiability,"irtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList fClasses;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Private Member Functions;  TViewPubFunctions (const TViewPubFunctions &)=delete;  ; TViewPubFunctions & operator= (const TViewPubFunctions &)=delete;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewPubFunctions.html:16798,inherit,inherited,16798,doc/master/classTViewPubFunctions.html,https://root.cern,https://root.cern/doc/master/classTViewPubFunctions.html,3,['inherit'],['inherited']
Modifiability,"irtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/roofit/roofitcore/src/RooFormula.h>. Inheritance diagram for RooFormula:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFormula() [1/2]. RooFormula::RooFormula ; (; const char * ; name, . const char * ; formula, . const RooArgList & ; varList, . bool ; checkVariables = true . ). Construct a new formula. ; Parameters. [in]nameName of the formula. ; [in]formulaFormula to be evaluated. Parameters/observables are identified by name or ordinal position in varList. ; [in]varListList of variables to be passed to the formula. ; [in]checkVariablesUnused parameter. . Definition at line 194 of file RooFormula.cxx. ◆ RooFormula() [2/2]. RooFormula::RooFormula ; (; const RooFormula & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 205 of file RooFormula.cxx. Member Function Documentation. ◆ actualDependents(). RooArgSet RooFormula::actualDependents ; (; ); const. inline . Return list of arguments which are used in the formula. ; Definition at line 39 of file RooFormula.h. ◆ changeDependents(). bool RooFormula::changeDependents ; (; const RooAbsCollection & ; newDeps, . bool ; mustReplaceAll, . bool ; nameChange . ). Change used variables to those with the same name in given list. ; Parameters. [in]newDepsNew dependents to replace the old ones. ; [in]mustReplaceAllWill yield an error if one dependent does not have a replacement. ; [in]nameChangePassed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const. . Definition at line 344 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormula.html:17837,variab,variables,17837,doc/master/classRooFormula.html,https://root.cern,https://root.cern/doc/master/classRooFormula.html,1,['variab'],['variables']
Modifiability,"irtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Bool_t fIntegralHeight;  true if height should be multiple of fItemVsize ;  ; UInt_t fItemVsize;  maximum height of single entry ;  ; TGLBContainer * fLbc;  listbox container ;  ; TGViewPort * fVport;  listbox viewport (see TGCanvas.h) ;  ; TGVScrollBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListBox.html:30538,inherit,inherited,30538,doc/master/classTGListBox.html,https://root.cern,https://root.cern/doc/master/classTGListBox.html,2,['inherit'],['inherited']
Modifiability,"irtual void MasterToLocal (const Double_t *master, Double_t *local) const;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; virtual void MasterToLocalBomb (const Double_t *master, Double_t *local) const;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; virtual void MasterToLocalVect (const Double_t *master, Double_t *local) const;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void Print (Option_t *option="""") const override;  print the matrix in 4x4 format ;  ; virtual void RegisterYourself ();  Register the matrix in the current manager, which will become the owner. ;  ; void SetDefaultName ();  If no name was supplied in the ctor, the type of transformation is checked. ;  ; void SetShared (Bool_t flag=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoHMatrix.html:6019,inherit,inherited,6019,doc/master/classTGeoHMatrix.html,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html,1,['inherit'],['inherited']
Modifiability,"irtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveShape; static void CheckAndFixBoxOrientationEv (TEveVector box[8]);  Make sure box orientation is consistent with standard arrangement. ;  ; static void CheckAndFixBoxOrientationFv (Float_t box[8][3]);  Make sure box orientation is consistent with standard arrangement. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FindConvexHull (const vVector2_t &pin, vVector2_t &pout, TEveElement *caller=nullptr);  Determines the convex-hull of points in pin. ;  ; static Bool_t IsBoxOrientationConsistentEv (const TEveVector box[8]);  Checks if the first face normal is pointing into the other direction as the vector pointing towards the opposite face. ;  ; static Bool_t IsBoxOrientationConsistentFv (const Float_t box[8][3]);  Checks if the first face normal is pointing into the other direction as the vector pointing towards t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:29552,inherit,inherited,29552,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,2,['inherit'],['inherited']
Modifiability,"irtual void SetBottomMargin (Float_t bottommargin);  Set Pad bottom margin in fraction of the pad height. ;  ; void SetFrameBorderMode (Int_t mode=1);  ; void SetFrameBorderSize (Width_t size=1);  ; void SetFrameFillColor (Color_t color=1);  ; void SetFrameFillStyle (Style_t styl=0);  ; void SetFrameLineColor (Color_t color=1);  ; void SetFrameLineStyle (Style_t styl=0);  ; void SetFrameLineWidth (Width_t width=1);  ; virtual void SetLeftMargin (Float_t leftmargin);  Set Pad left margin in fraction of the pad width. ;  ; virtual void SetMargin (Float_t left, Float_t right, Float_t bottom, Float_t top);  Set all margins. ;  ; virtual void SetRightMargin (Float_t rightmargin);  Set Pad right margin in fraction of the pad width. ;  ; virtual void SetTopMargin (Float_t topmargin);  Set Pad top margin in fraction of the pad height. ;  ; virtual void SetXfile (Float_t xfile);  ; virtual void SetXstat (Float_t xstat);  ; virtual void SetYfile (Float_t yfile);  ; virtual void SetYstat (Float_t ystat);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:44111,inherit,inherited,44111,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,9,['inherit'],['inherited']
Modifiability,irtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitButton.html:27883,inherit,inherited,27883,doc/master/classTGSplitButton.html,https://root.cern,https://root.cern/doc/master/classTGSplitButton.html,1,['inherit'],['inherited']
Modifiability,"irtual void SetLabelOffset (Float_t offset=0.005, Option_t *axis=""*"");  Set label offset. ;  ; virtual void SetLabelSize (Float_t size=0.02, Option_t *axis=""*"");  Set label size. ;  ; virtual void SetNdivisions (Int_t n=510, Option_t *axis=""*"");  Set number of divisions. ;  ; virtual void SetOption (Option_t *option="" "");  ; virtual void SetTickLength (Float_t length=0.02, Option_t *axis=""*"");  Set tick mark length. ;  ; virtual void SetTitleOffset (Float_t offset=1, Option_t *axis=""*"");  Set title offset. ;  ; virtual void SetXTitle (const char *title);  ; virtual void SetYTitle (const char *title);  ; virtual void SetZTitle (const char *title);  ; Bool_t & StickyZoom ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ; Bool_t & Zoom ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis3D.html:6921,inherit,inherited,6921,doc/master/classTAxis3D.html,https://root.cern,https://root.cern/doc/master/classTAxis3D.html,1,['inherit'],['inherited']
Modifiability,"irtual void UnCheckEntryByData (void *user_data);  Uncheck a menu entry (i.e. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPopupMenu.html:5906,inherit,inheritance,5906,doc/master/classTGPopupMenu.html,https://root.cern,https://root.cern/doc/master/classTGPopupMenu.html,2,['inherit'],['inheritance']
Modifiability,"irtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGVerticalLayout; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLayoutManager; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHorizontalLayout.html:9507,inherit,inherited,9507,doc/master/classTGHorizontalLayout.html,https://root.cern,https://root.cern/doc/master/classTGHorizontalLayout.html,3,['inherit'],['inherited']
Modifiability,"irtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGVerticalLayout; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLayoutManager; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Int_t fSep;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRowLayout.html:9567,inherit,inherited,9567,doc/master/classTGRowLayout.html,https://root.cern,https://root.cern/doc/master/classTGRowLayout.html,3,['inherit'],['inherited']
Modifiability,"irtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::PDEFoamEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::PDEFoam; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  PDEFoamMultiTarget (const PDEFoamMultiTarget &);  Copy Constructor NOT IMPLEMENTED (NEVER USED) ;  ; virtual void CalculateMean (std::map< Int_t, Float_t > &, const std::vector< PDEFoamCell * > &);  This function calculates the mean target value from a given number of cells. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html:13649,inherit,inherited,13649,doc/master/classTMVA_1_1PDEFoamMultiTarget.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html,3,['inherit'],['inherited']
Modifiability,"irtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGVerticalLayout(const TGVerticalLayout& gvl); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGVerticalLayout&operator=(const TGVerticalLayout& gvl). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*fListlist of frames to arrange; TGCompositeFrame*fMaincontainer frame; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGVerticalLayout(TGCompositeFrame* main); Create vertical layout manager. void Layout(); Make a vertical layout of all frames in the list. TGDimension GetDefaultSize() const; Return default dimension of the vertical layout. void SavePrimitive(ostream& out, Option_t* = """"). TGLayoutHints& operator=(const TGVerticalLayout& gvl). TGVerticalLayout(const TGVerticalLayout& gvl); { }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGLayout.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGVerticalLayout.html:6561,Inherit,Inheritance,6561,root/html532/TGVerticalLayout.html,https://root.cern,https://root.cern/root/html532/TGVerticalLayout.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. static TVirtualGraphPainter*fgPainterPointer to class painter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualGraphPainter * GetPainter(); Static function returning a pointer to the current graph painter.; If the graph painter does not exist a default painter (singleton) is created. void SetPainter(TVirtualGraphPainter* painter); Static function to set an alternative histogram painter. virtual ~TVirtualGraphPainter(); { }. Int_t DistancetoPrimitiveHelper(TGraph* theGraph, Int_t px, Int_t py). void DrawPanelHelper(TGraph* theGraph). void ExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py). char * GetObjectInfoHelper(TGraph* theGraph, Int_t px, Int_t py) const. void PaintHelper(TGraph* theGraph, Option_t* option). void PaintGraph(TGraph* theGraph, Int_t npoints, const Double_t* x, const Double_t* y, Option_t* chopt). void PaintGrapHist(TGraph* theGraph, Int_t npoints, const Double_t* x, const Double_t* y, Option_t* chopt). void PaintStats(TGraph* theGraph, TF1* fit). » Author: Olivier Couet 20/05/08 » Copyright (C) 1995",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualGraphPainter.html:6078,Inherit,Inheritance,6078,root/html532/TVirtualGraphPainter.html,https://root.cern,https://root.cern/root/html532/TVirtualGraphPainter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtualPacketizer::EStatusBits { kIsInitializing; kIsDone; kIsTree; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTVirtualPacketizer::fAWLastFillWhether to fill the last measurement; Int_tTVirtualPacketizer::fActWrksLastActive workers at fProcTimeLast; Long_tTVirtualPacketizer::fCircNCircularity; TNtupleD*TVirtualPacketizer::fCircProgKeeps circular info for ""instantenous""; TList*TVirtualPacketizer::fConfigParamsList of configuration parameters; TStringTVirtualPacketizer::fDataSetName of the dataset being processed (for dataset-driven runs); Float_tTVirtualPacketizer::fEffSessLastNumber of effective sessions at fProcTimeLast; Float_tTVirtualPacketizer::fEvtRateLastEvt rate at fProcTimeLast; TList*TVirtualPacketizer::fFailedPacketsa list of packets that failed while processing; Float_tTVirtualPacketizer::fInitTimetime before processing; Float_tTVirtualPacketizer::fMBsReadLastMBs read at fProcTimeLast; Double_tTVirtualPacketizer::fMaxPacketTimemaximum packet time; Double_tTVirtualPacketizer::fMinPacketTimeminimum packet time; Float_tTVirtualPacketizer::fProcTimetime since start of processing; Float_tTVirtualPacketizer::fProcTimeLastTime of the last measurement; TTimer*TVirtualPacketizer::fProgressprogress updates timer; TNtuple*TVirtualPacketizer::fProgressPerf{Active workers, evt rate, MBs read} as a function of processing time; TProofProgressStatus*TVirtualPacketizer::fProgressStatuspointer to status in the player.; Float_tTVirtualPacketizer::fReportPeriodTime between reports if nothing changes (estimated proc time / 100); TMap*TVirtualPacketizer::fSlaveStatsslave status, keyed by correspondig TSlave; TTimeTVirtualPacketizer::fStartTimetime offset; Bool_tTVirtualPacketizer::fStopTermination of Process() requested?; Float_tTVirtualPacketizer::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPacketizerAdaptive.html:8867,config,configuration,8867,root/html528/TPacketizerAdaptive.html,https://root.cern,https://root.cern/root/html528/TPacketizerAdaptive.html,16,['config'],['configuration']
Modifiability,"irtualPad.h:308; RooAbsRealAbstract base class for objects that represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::derivativeRooDerivative * derivative(RooRealVar &obs, Int_t order=1, double eps=0.001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf111_derivativesDefinition rf111_derivatives.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf111__derivatives_8C.html:4211,variab,variable,4211,doc/master/rf111__derivatives_8C.html,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8C.html,1,['variab'],['variable']
Modifiability,"irtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPServerSocket.html:14242,inherit,inherited,14242,doc/master/classTPServerSocket.html,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html,1,['inherit'],['inherited']
Modifiability,"irtual_b);  ;  Public Member Functions inherited from TProcessID;  TProcessID ();  Default constructor. ;  ; virtual ~TProcessID ();  Destructor. ;  ; void CheckInit ();  Initialize fObjects. ;  ; void Clear (Option_t *option="""") override;  delete the TObjArray pointing to referenced objects this function is called by TFile::Close(""R"") ;  ; Int_t DecrementCount ();  The reference fCount is used to delete the TProcessID in the TFile destructor when fCount = 0. ;  ; Int_t GetCount () const;  ; TObjArray * GetObjects () const;  ; TObject * GetObjectWithID (UInt_t uid);  returns the TObject with unique identifier uid in the table of objects ;  ; Int_t IncrementCount ();  Increase the reference count to this object. ;  ; void PutObjectWithID (TObject *obj, UInt_t uid=0);  stores the object at the uid th slot in the table of objects The object uniqued is set as well as its kMustCleanup bit ;  ; void RecursiveRemove (TObject *obj) override;  called by the object destructor remove reference to obj from the current table if it is referenced ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessUUID.html:3506,inherit,inherited,3506,doc/master/classTProcessUUID.html,https://root.cern,https://root.cern/doc/master/classTProcessUUID.html,1,['inherit'],['inherited']
Modifiability,"irtual~RooComplex(); Double_tabs() const; Double_tabs2() const; static TClass*Class(); RooComplexconj() const; RooComplexexp() const; Double_tim() const; virtual TClass*IsA() const; RooComplexoperator*(const RooComplex& other) const; RooComplexoperator*(const Double_t& other) const; RooComplexoperator+(const RooComplex& other) const; RooComplexoperator-() const; RooComplexoperator-(const RooComplex& other) const; RooComplexoperator/(const RooComplex& other) const; RooComplex&operator=(const RooComplex& other); Bool_toperator==(const RooComplex& other) const; voidPrint() const; Double_tre() const; RooComplex(complex<Double_t> c); RooComplex(const RooComplex&); RooComplex(Double_t a = 0, Double_t b = 0); virtual voidShowMembers(TMemberInspector& insp) const; RooComplexsqrt() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. voidwarn() const. Data Members; private:. Double_t_im; Double_t_re. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void warn() const. void Print() const; WVE Solaric CC5.0 complains about this. inline RooComplex(complex<Double_t> c); { }. inline RooComplex(Double_t a = 0, Double_t b = 0); { warn(); }. virtual ~RooComplex(); { }. RooComplex& operator=(const RooComplex& other). RooComplex operator-() const; unary operators. return RooComplex(Double_t a = 0, Double_t b = 0). RooComplex operator+(const RooComplex& other) const; binary operators. RooComplex operator-(const RooComplex& other) const. RooComplex operator*(const RooComplex& other) const. RooComplex operator/(const RooComplex& other) const. RooComplex operator*(const Double_t& other) const. Bool_t operator==(const RooComplex& other) const. Double_t re() const; unary functions. Double_t im() const. Double_t abs() const. return sqrt(_re*_re + _im*_im). Double_t abs2() const. RooComplex exp() const. RooComplex conj() const. » Last changed: Tue Jun 2 15:30:03 2015 » Last generated: 2015-06-02 15",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooComplex.html:1363,Inherit,Inheritance,1363,root/html604/RooComplex.html,https://root.cern,https://root.cern/root/html604/RooComplex.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual~RooComplex(); Double_tabs() const; Double_tabs2() const; static TClass*Class(); RooComplexconj() const; RooComplexexp() const; Double_tim() const; virtual TClass*IsA() const; RooComplexoperator*(const RooComplex& other) const; RooComplexoperator*(const Double_t& other) const; RooComplexoperator+(const RooComplex& other) const; RooComplexoperator-() const; RooComplexoperator-(const RooComplex& other) const; RooComplexoperator/(const RooComplex& other) const; RooComplex&operator=(const RooComplex& other); Bool_toperator==(const RooComplex& other) const; voidPrint() const; Double_tre() const; RooComplex(complex<Double_t> c); RooComplex(const RooComplex&); RooComplex(Double_t a = 0, Double_t b = 0); virtual voidShowMembers(TMemberInspector& insp) const; RooComplexsqrt() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. voidwarn() const. Data Members; private:. Double_t_im; Double_t_re. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void warn() const. void Print() const; WVE Solaric CC5.0 complains about this. inline RooComplex(complex<Double_t> c); { }. inline RooComplex(Double_t a = 0, Double_t b = 0); { warn(); }. virtual ~RooComplex(); { }. RooComplex& operator=(const RooComplex& other). RooComplex operator-() const; unary operators. return RooComplex(Double_t a = 0, Double_t b = 0). RooComplex operator+(const RooComplex& other) const; binary operators. RooComplex operator-(const RooComplex& other) const. RooComplex operator*(const RooComplex& other) const. RooComplex operator/(const RooComplex& other) const. RooComplex operator*(const Double_t& other) const. Bool_t operator==(const RooComplex& other) const. Double_t re() const; unary functions. Double_t im() const. Double_t abs() const. return sqrt(_re*_re + _im*_im). Double_t abs2() const. RooComplex exp() const. RooComplex conj() const. » Last changed: Tue Jun 30 14:32:12 2015 » Last generated: 2015-06-30 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooComplex.html:1363,Inherit,Inheritance,1363,root/html602/RooComplex.html,https://root.cern,https://root.cern/root/html602/RooComplex.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irtual~TGLBoxCut(); static TClass*Class(); voidDrawBox(Bool_t selectionPass, Int_t selected) const; Rgl::Range_tGetXRange() const; Rgl::Range_tGetYRange() const; Rgl::Range_tGetZRange() const; virtual TClass*IsA() const; Bool_tIsActive() const; Bool_tIsInCut(Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax) const; voidMoveBox(Int_t px, Int_t py, Int_t axisID); voidResetBoxGeometry(); voidSetActive(Bool_t a); voidSetFactor(Double_t f); virtual voidShowMembers(TMemberInspector&); voidStartMovement(Int_t px, Int_t py); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTurnOnOff(). private:. voidAdjustBox(). Data Members; private:. Bool_tfActive; TGLVertex3fCenter; Double_tfFactor; TPointfMousePos; const TGLPlotBox *constfPlotBox; Double_tfXLength; pair<double,double>fXRange; Double_tfYLength; pair<double,double>fYRange; Double_tfZLength; pair<double,double>fZRange. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLBoxCut(const TGLPlotBox* plotBox); Constructor. ~TGLBoxCut(); Destructor. void TurnOnOff(); Turn the box cut on/off.; If it's on, it will be placed in front point of a plot. void SetActive(Bool_t a); Turn the box cut on/off. void ResetBoxGeometry(); Set geometry using plot's back box. void DrawBox(Bool_t selectionPass, Int_t selected) const; Draw cut as a semi-transparent box. void StartMovement(Int_t px, Int_t py); Start cut's movement. void MoveBox(Int_t px, Int_t py, Int_t axisID); Move box cut along selected direction. void AdjustBox(); Box cut is limited by plot's sizes. Bool_t IsInCut(Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax) const; Check, if box defined by xmin/xmax etc. is in cut. TGLBoxCut(const TGLPlotBox* plotBox). Bool_t IsActive() const; {return fActive;}. void SetFactor(Double_t f); {fFactor = f;}. Rgl::Range_t GetXRange() const; {return fXRange;}. Rgl::Range_t GetYRange(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLBoxCut.html:1427,Inherit,Inheritance,1427,root/html534/TGLBoxCut.html,https://root.cern,https://root.cern/root/html534/TGLBoxCut.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"irty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static bool _doFloorGlobal = false;  Global flag for introducing floor at zero in pdf. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static Int_t _evalErrorCount = 0;  ; static std::map< const RooAbsArg *, std::pair< std::string, std::list< EvalError > > > _evalErrorList;  ; static ErrorLoggingMode _evalErrorMode = RooAbsReal::PrintErrors;  ; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions; void setExtended (bool extended);  . Static Private Member Functions; static double analyticalIntegralWN (RooAbsReal const &caller, RooObjCacheManager &normIntMgr, RooArgList const &funcList, RooArgList const &coefList, Int_t code, const RooArgSet *normSet, const char *rangeName, bool hasWarnedBefore);  ; static std::list< double > * binBoundaries (RooArgList const &funcList, RooAbsRealLValue &, double, double);  ; static bool checkObservables (RooAbsReal const &caller, RooArgSet const *nset, RooArgList const &funcList, RooArgList const &coefList);  ; static double evaluate (RooAbsReal const &caller, RooArgList const &funcList, RooArgList const &coefList, bool doFloor, bool &hasWarnedBefore);  ; static Int_t getAnalyticalIntegralWN (RooAbsReal const &caller, RooObjCacheManager &normIntMgr, RooArgList const &funcList, RooArgList const &coefList, RooArgSet &allVars, RooArgSet &numVars, const RooArgSet *normSet, const char *rangeName);  ; static void initializeFuncsAndCoefs (RooAbsReal const &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:66502,extend,extended,66502,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,1,['extend'],['extended']
Modifiability,"irty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooRealProxy_pdfInput p.d.f; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; const TNamed*_rangeNameName of subset range; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendPdf(); Default co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooExtendPdf.html:40376,config,configuration,40376,root/html532/RooExtendPdf.html,https://root.cern,https://root.cern/root/html532/RooExtendPdf.html,4,['config'],['configuration']
Modifiability,"irtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealVar(); Default constructor. RooRealVar(const char* name, const char* title, Double_t value, const char* unit = """"); Constructor with value and unit. RooRealVar(const char* name, const char* title, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with range and unit. Initial value is center of range. RooRealVar(const char* name, const char* title, Double_t value, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with value, range and unit. RooRealVar(const RooRealVar& other, const char* name = 0); Copy Constructor. ~RooRealVar(); Destructor; cout << ""RooRealVar::dtor("" << this << "")"" << endl ;. Double_t getValV(const RooArgSet* nset = 0) const; Return value of variable. void setVal(Double_t value); Set value of variable to 'value'. If 'value' is outside; range of object, clip value into range. void setVal(Double_t value, const char* rangeName); Set value of variable to 'value'. If 'value' is outside; range named 'rangeName' of object, clip value into that range. RooErrorVar* errorVar() const; Return a RooAbsRealLValue representing the error associated; with this variable. The callers takes ownership of the; return object. Bool_t hasBinning(const char* name) const; Returns true if variable has a binning with 'name'. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealVar.html:40940,variab,variable,40940,root/html532/RooRealVar.html,https://root.cern,https://root.cern/root/html532/RooRealVar.html,8,['variab'],['variable']
Modifiability,"is & TAxis::operator= ; (; const TAxis & ; axis). Assignment operator. ; Definition at line 118 of file TAxis.cxx. ◆ RotateTitle(). void TAxis::RotateTitle ; (; Bool_t ; rotate = kTRUE). inline . Rotate title by 180 degrees. ; By default the title is drawn right adjusted. If rotate is TRUE, the title is left adjusted at the end of the axis and rotated by 180 degrees ; Definition at line 203 of file TAxis.h. ◆ SaveAttributes(). void TAxis::SaveAttributes ; (; std::ostream & ; out, . const char * ; name, . const char * ; subname . ). overridevirtual . Save axis attributes as C++ statement(s) on output stream out. ; Reimplemented from TAttAxis.; Definition at line 710 of file TAxis.cxx. ◆ Set() [1/3]. void TAxis::Set ; (; Int_t ; nbins, . const Double_t * ; xbins . ). virtual . Initialize axis with variable bins. ; Reimplemented in Axis2.; Definition at line 824 of file TAxis.cxx. ◆ Set() [2/3]. void TAxis::Set ; (; Int_t ; nbins, . const Float_t * ; xbins . ). virtual . Initialize axis with variable bins. ; Reimplemented in Axis2.; Definition at line 806 of file TAxis.cxx. ◆ Set() [3/3]. void TAxis::Set ; (; Int_t ; nbins, . Double_t ; xmin, . Double_t ; xmax . ). virtual . Initialize axis with fix bins. ; Reimplemented in Axis2.; Definition at line 794 of file TAxis.cxx. ◆ SetAlphanumeric(). void TAxis::SetAlphanumeric ; (; Bool_t ; alphanumeric = kTRUE). Set axis alphanumeric. ; Definition at line 842 of file TAxis.cxx. ◆ SetBinLabel(). void TAxis::SetBinLabel ; (; Int_t ; bin, . const char * ; label . ). virtual . Set label for bin. ; If no label list exists, it is created. If all the bins have labels, the axis becomes alphanumeric and extendable. New labels will not be added with the Fill method but will end-up in the underflow bin. See documentation of TAxis::FindBin(const char*) ; Definition at line 886 of file TAxis.cxx. ◆ SetCanExtend(). void TAxis::SetCanExtend ; (; Bool_t ; canExtend). inline . Definition at line 90 of file TAxis.h. ◆ SetDecimals(). void TAx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis.html:39228,variab,variable,39228,doc/master/classTAxis.html,https://root.cern,https://root.cern/doc/master/classTAxis.html,1,['variab'],['variable']
Modifiability,"is *a2);  Check bin limits. ;  ; static int CheckConsistency (const TH1 *h1, const TH1 *h2);  Check histogram compatibility. ;  ; static bool CheckConsistentSubAxes (const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0);  Check that two sub axis are the same. ;  ; static bool CheckEqualAxes (const TAxis *a1, const TAxis *a2);  Check that the axis are the same. ;  ; static Bool_t RecomputeAxisLimits (TAxis &destAxis, const TAxis &anAxis);  Finds new limits for the axis for the Merge function. ;  ; static Bool_t SameLimitsAndNBins (const TAxis &axis1, const TAxis &axis2);  Same limits and bins. ;  ;  Protected Attributes inherited from TH2; Double_t fScalefactor;  Scale factor. ;  ; Double_t fTsumwxy;  Total Sum of weight*X*Y. ;  ; Double_t fTsumwy;  Total Sum of weight*Y. ;  ; Double_t fTsumwy2;  Total Sum of weight*Y*Y. ;  ;  Protected Attributes inherited from TH1; Short_t fBarOffset;  (1000*offset) for bar charts or legos ;  ; Short_t fBarWidth;  (1000*width) for bar charts or legos ;  ; EBinErrorOpt fBinStatErrOpt;  Option for bin statistical errors. ;  ; Double_t * fBuffer;  [fBufferSize] entry buffer ;  ; Int_t fBufferSize;  fBuffer size ;  ; TArrayD fContour;  Array to display contour levels. ;  ; Int_t fDimension;  ! Histogram dimension (1, 2 or 3 dim) ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this histogram ;  ; Double_t fEntries;  Number of entries. ;  ; TList * fFunctions;  ->Pointer to list of functions (fits and user) ;  ; Double_t * fIntegral;  ! Integral of bins used by GetRandom ;  ; Double_t fMaximum;  Maximum value for plotting. ;  ; Double_t fMinimum;  Minimum value for plotting. ;  ; Int_t fNcells;  Number of bins(1D), cells (2D) +U/Overflows. ;  ; Double_t fNormFactor;  Normalization factor. ;  ; TString fOption;  Histogram options. ;  ; TVirtualHistPainter * fPainter;  ! Pointer to histogram painter ;  ; EStatOverflows fStatOverflows;  Per object flag to use under/overflows in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:57226,inherit,inherited,57226,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,6,['inherit'],['inherited']
Modifiability,"is HTTP request. ;  ; TString MakeHostHeader () const;  Returns the 'Host' header to include in the HTTP request. ;  ; TString MakeRequestLine (TS3HTTPRequest::EHTTPVerb httpVerb) const;  Returns the first line of a HTTP request for this object. ;  ; TString MakeTokenHeader () const;  Returns the session security token header for this HTTP request. ;  ; TS3HTTPRequest & SetTimeStamp ();  Sets this request's time stamp according to: http://code.google.com/apis/storage/docs/reference-headers.html#date. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TString fAccessKey;  ; EAuthType fAuthType;  ; TString fBucket;  ; TString fHost;  ; TString fObjectKey;  ; TString fSecretKey;  ; TString fSessionToken;  ; TString fTimeStamp;  ; EHTTPVerb fVerb;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TS3HTTPRequest.h>. Inheritance diagram for TS3HTTPRequest:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAuthType. enum TS3HTTPRequest::EAuthType. EnumeratorkNoAuth ; kAmazon ; kGoogle . Definition at line 50 of file TS3HTTPRequest.h. ◆ EHTTPVerb. enum TS3HTTPRequest::EHTTPVerb. EnumeratorkGET ; kPOST ; kPUT ; kDELETE ; kHEAD ; kCOPY . Definition at line 49 of file TS3HTTPRequest.h. Constructor & Destructor Documentation. ◆ TS3HTTPRequest() [1/3]. TS3HTTPRequest::TS3HTTPRequest ; (; ). Definition at line 57 of file TS3HTTPRequest.cxx. ◆ TS3HTTPRequest() [2/3]. TS3HTTPRequest::TS3HTTPRequest ; (; EHTTPVerb ; httpVerb, . const TString & ; host, . const TString & ; bucket, . const TString & ; objectKey, . EAuthType ; authType, . const TString & ; accessKey, . const TString & ; secretKey . ). Default constructor. ; Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3HTTPRequest.html:12368,inherit,inherited,12368,doc/master/classTS3HTTPRequest.html,https://root.cern,https://root.cern/doc/master/classTS3HTTPRequest.html,1,['inherit'],['inherited']
Modifiability,"is a Pave with several lines of text; 84///; 85/// - option = ""TR"" Top and Right shadows are drawn.; 86/// - option = ""TL"" Top and Left shadows are drawn.; 87/// - option = ""BR"" Bottom and Right shadows are drawn.; 88/// - option = ""BL"" Bottom and Left shadows are drawn.; 89///; 90/// If none of these four above options is specified the default the; 91/// option ""BR"" will be used to draw the border. To produces a pave; 92/// without any border it is enough to specify the option ""NB"" (no border).; 93/// If you want to remove the border or shadow of an already existing TPaveText,; 94/// then use the function TPave::SetBorderSize.; 95///; 96/// - option = ""NDC"" x1,y1,x2,y2 are given in NDC; 97/// - option = ""ARC"" corners are rounded; 98///; 99/// In case of option ""ARC"", the corner radius is specified; 100/// via TPave::SetCornerRadius(rad) where rad is given in percent; 101/// of the pave height (default value is 0.2).; 102///; 103/// The individual text items are entered via AddText; 104/// By default, text items inherits from the default pavetext AttText.; 105/// A title can be added later to this pavetext via TPaveText::SetLabel.; 106 ; 107TPaveText::TPaveText(Double_t x1, Double_t y1,Double_t x2, Double_t y2, Option_t *option); 108 :TPave(x1,y1,x2,y2,4,option), TAttText(22,0,gStyle->GetTextColor(),gStyle->GetTextFont(),0); 109{; 110 fLines = new TList;; 111 fMargin = 0.05;; 112 fLongest = 0;; 113}; 114 ; 115////////////////////////////////////////////////////////////////////////////////; 116/// pavetext default destructor.; 117 ; 118TPaveText::~TPaveText(); 119{; 120 if (ROOT::Detail::HasBeenDeleted(this)) return;; 121 if (fLines) fLines->Delete();; 122 delete fLines;; 123 fLines = nullptr;; 124}; 125 ; 126////////////////////////////////////////////////////////////////////////////////; 127/// pavetext copy constructor.; 128 ; 129TPaveText::TPaveText(const TPaveText &pavetext) : TPave(pavetext), TAttText(pavetext); 130{; 131 fLabel = pavetext.fLabel;; 132 fLongest ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveText_8cxx_source.html:3657,inherit,inherits,3657,doc/master/TPaveText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPaveText_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooBinningImplements a RooAbsBinning in terms of an array of boundary values, posing no constraints on the choi...Definition RooBinning.h:27; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMaximumSetMaximum(ymax); RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf108_plotbinningDefinition rf108_plotbinning.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf108_plotbinning.C. tutorialsroofitrf108_plotbinning.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf108__plotbinning_8C.html:6416,variab,variables,6416,doc/master/rf108__plotbinning_8C.html,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html,2,['variab'],['variables']
Modifiability,"is a observable in the given use context the cache histogram will; store sampled values for all values of observable x and parameter p.; In such a mode of operation the cache will also not be recalculated; if the observable p changes. RooCachedReal(const RooCachedReal& other, const char* name = 0); Copy constructor. ~RooCachedReal(); Destructor. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Update contents of cache histogram by resampling the input function. RooArgSet* actualObservables(const RooArgSet& nset) const; If this pdf is operated with a fixed set of observables, return; the subset of the fixed observables that are actual dependents; of the external input p.d.f. If this p.d.f is operated without; a fixed set of cache observables, return the actual observables; of the external input p.d.f given the choice of observables defined; in nset. RooArgSet* actualParameters(const RooArgSet& nset) const; If this p.d.f is operated with a fixed set of observables, return; all variables of the external input p.d.f that are not one of; the cache observables. If this p.d.f is operated in automatic mode,; return the parameters of the external input p.d.f. RooCachedReal(); coverity[UNINIT_CTOR]. TObject* clone(const char* newname) const; { return new RooCachedReal(*this,newname); }. void setCdfBoundaries(Bool_t flag); If flag is true the RooHistFunc that represent the cache histogram; will use special boundary conditions for use with cumulative distribution; functions: at the lower bound the function is forced to converge at zero and the upper; bound is the function is forced to converge at 1.0. Bool_t getCdfBoundaries() const; If true the c.d.f boundary mode is active. const char* inputBaseName() const; Return base name for caches, i.e. the name of the cached function. Double_t evaluate() const; Dummy evaluate, it is never called. const char* payloadUniqueSuffix() const; { return func.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Mon Jul 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCachedReal.html:36350,variab,variables,36350,root/html530/RooCachedReal.html,https://root.cern,https://root.cern/root/html530/RooCachedReal.html,1,['variab'],['variables']
Modifiability,"is a observable in the given use context the cache histogram will; store sampled values for all values of observable x and parameter p.; In such a mode of operation the cache will also not be recalculated; if the observable p changes. RooCachedReal(const RooCachedReal& other, const char* name = 0); Copy constructor. ~RooCachedReal(); Destructor. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Update contents of cache histogram by resampling the input function. RooArgSet* actualObservables(const RooArgSet& nset) const; If this pdf is operated with a fixed set of observables, return; the subset of the fixed observables that are actual dependents; of the external input p.d.f. If this p.d.f is operated without; a fixed set of cache observables, return the actual observables; of the external input p.d.f given the choice of observables defined; in nset. RooArgSet* actualParameters(const RooArgSet& nset) const; If this p.d.f is operated with a fixed set of observables, return; all variables of the external input p.d.f that are not one of; the cache observables. If this p.d.f is operated in automatic mode,; return the parameters of the external input p.d.f. RooCachedReal(); coverity[UNINIT_CTOR]. TObject* clone(const char* newname) const; { return new RooCachedReal(*this,newname); }. void setCdfBoundaries(Bool_t flag); If flag is true the RooHistFunc that represent the cache histogram; will use special boundary conditions for use with cumulative distribution; functions: at the lower bound the function is forced to converge at zero and the upper; bound is the function is forced to converge at 1.0. Bool_t getCdfBoundaries() const; If true the c.d.f boundary mode is active. const char* inputBaseName() const; Return base name for caches, i.e. the name of the cached function. Double_t evaluate() const; Dummy evaluate, it is never called. const char* payloadUniqueSuffix() const; { return func.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Thu Nov 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCachedReal.html:36729,variab,variables,36729,root/html532/RooCachedReal.html,https://root.cern,https://root.cern/root/html532/RooCachedReal.html,1,['variab'],['variables']
Modifiability,"is a observable in the given use context the cache histogram will; store sampled values for all values of observable x and parameter p.; In such a mode of operation the cache will also not be recalculated; if the observable p changes. RooCachedReal(const RooCachedReal& other, const char* name = 0); Copy constructor. ~RooCachedReal(); Destructor. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Update contents of cache histogram by resampling the input function. RooArgSet* actualObservables(const RooArgSet& nset) const; If this pdf is operated with a fixed set of observables, return; the subset of the fixed observables that are actual dependents; of the external input p.d.f. If this p.d.f is operated without; a fixed set of cache observables, return the actual observables; of the external input p.d.f given the choice of observables defined; in nset. RooArgSet* actualParameters(const RooArgSet& nset) const; If this p.d.f is operated with a fixed set of observables, return; all variables of the external input p.d.f that are not one of; the cache observables. If this p.d.f is operated in automatic mode,; return the parameters of the external input p.d.f. RooCachedReal(); {}. TObject* clone(const char* newname) const; { return new RooCachedReal(*this,newname); }. void setCdfBoundaries(Bool_t flag); If flag is true the RooHistFunc that represent the cache histogram; will use special boundary conditions for use with cumulative distribution; functions: at the lower bound the function is forced to converge at zero and the upper; bound is the function is forced to converge at 1.0. Bool_t getCdfBoundaries() const; If true the c.d.f boundary mode is active. const char* inputBaseName() const; Return base name for caches, i.e. the name of the cached function. Double_t evaluate() const; Dummy evaluate, it is never called. const char* payloadUniqueSuffix() const; { return func.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Thu Sep 23 19:59:12 2010 » L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCachedReal.html:35833,variab,variables,35833,root/html528/RooCachedReal.html,https://root.cern,https://root.cern/root/html528/RooCachedReal.html,1,['variab'],['variables']
Modifiability,"is a observable in the given use context the cache histogram will; store sampled values for all values of observable x and parameter p.; In such a mode of operation the cache will also not be recalculated; if the observable p changes. RooCachedReal(const RooCachedReal& other, const char* name = 0); Copy constructor. ~RooCachedReal(); Destructor. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Update contents of cache histogram by resampling the input function. RooArgSet* actualObservables(const RooArgSet& nset) const; If this pdf is operated with a fixed set of observables, return; the subset of the fixed observables that are actual dependents; of the external input p.d.f. If this p.d.f is operated without; a fixed set of cache observables, return the actual observables; of the external input p.d.f given the choice of observables defined; in nset. RooArgSet* actualParameters(const RooArgSet& nset) const; If this p.d.f is operated with a fixed set of observables, return; all variables of the external input p.d.f that are not one of; the cache observables. If this p.d.f is operated in automatic mode,; return the parameters of the external input p.d.f. RooCachedReal(); {}. TObject* clone(const char* newname) const; { return new RooCachedReal(*this,newname); }. void setCdfBoundaries(Bool_t flag); If flag is true the RooHistFunc that represent the cache histogram; will use special boundary conditions for use with cumulative distribution; functions: at the lower bound the function is forced to converge at zero and the upper; bound is the function is forced to converge at 1.0. Bool_t getCdfBoundaries() const; If true the c.d.f boundary mode is active. const char* inputBaseName() const; Return base name for caches, i.e. the name of the cached function. Double_t evaluate() const; Dummy evaluate, it is never called. » Last changed: Mon Dec 7 13:47:03 2009 » Last generated: 2009-12-07 13:47; This page has been automatically generated. For comments or sug",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCachedReal.html:35544,variab,variables,35544,root/html526/RooCachedReal.html,https://root.cern,https://root.cern/root/html526/RooCachedReal.html,1,['variab'],['variables']
Modifiability,"is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::rep_type. Function Members (Methods); public:. ~MatRepStd<Double32_t,4,4>(); Double32_tapply(unsigned int i) const; Double32_t*Array(); const Double32_t*Array() const; ROOT::Math::MatRepStd<Double32_t,4,4>MatRepStd<Double32_t,4,4>(); ROOT::Math::MatRepStd<Double32_t,4,4>MatRepStd<Double32_t,4,4>(const ROOT::Math::MatRepStd<Double32_t,4,4>&); const Double32_t&operator()(unsigned int i, unsigned int j) const; Double32_t&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<Double32_t,4,4>&operator=(const ROOT::Math::MatRepStd<Double32_t,4,4>&); Double32_t&operator[](unsigned int i); const Double32_t&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. Double32_tfArray[16]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<Double32_t,4,4>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_Double32_t_4_4_.html:1790,Inherit,Inheritance,1790,root/html534/ROOT__Math__MatRepStd_Double32_t_4_4_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_Double32_t_4_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::rep_type. Function Members (Methods); public:. ~MatRepStd<Double32_t,5,5>(); Double32_tapply(unsigned int i) const; Double32_t*Array(); const Double32_t*Array() const; ROOT::Math::MatRepStd<Double32_t,5,5>MatRepStd<Double32_t,5,5>(); ROOT::Math::MatRepStd<Double32_t,5,5>MatRepStd<Double32_t,5,5>(const ROOT::Math::MatRepStd<Double32_t,5,5>&); const Double32_t&operator()(unsigned int i, unsigned int j) const; Double32_t&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<Double32_t,5,5>&operator=(const ROOT::Math::MatRepStd<Double32_t,5,5>&); Double32_t&operator[](unsigned int i); const Double32_t&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. Double32_tfArray[25]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<Double32_t,5,5>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_Double32_t_5_5_.html:1790,Inherit,Inheritance,1790,root/html534/ROOT__Math__MatRepStd_Double32_t_5_5_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_Double32_t_5_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::rep_type. Function Members (Methods); public:. ~MatRepStd<Double32_t,6,6>(); Double32_tapply(unsigned int i) const; Double32_t*Array(); const Double32_t*Array() const; ROOT::Math::MatRepStd<Double32_t,6,6>MatRepStd<Double32_t,6,6>(); ROOT::Math::MatRepStd<Double32_t,6,6>MatRepStd<Double32_t,6,6>(const ROOT::Math::MatRepStd<Double32_t,6,6>&); const Double32_t&operator()(unsigned int i, unsigned int j) const; Double32_t&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<Double32_t,6,6>&operator=(const ROOT::Math::MatRepStd<Double32_t,6,6>&); Double32_t&operator[](unsigned int i); const Double32_t&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. Double32_tfArray[36]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<Double32_t,6,6>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_Double32_t_6_6_.html:1790,Inherit,Inheritance,1790,root/html534/ROOT__Math__MatRepStd_Double32_t_6_6_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_Double32_t_6_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is bin number of outAxis (the projected axis). Loop is done on all bin of TH2 histograms; 2309 // inbin is the axis being integrated. Loop is done only on the selected bins; 2310 // if the out axis has labels and is extendable, temporary make it non-extendable to avoid adding extra bins; 2311 Bool_t extendable = outAxis->CanExtend();; 2312 if ( labels && extendable ) h1->GetXaxis()->SetCanExtend(kFALSE);; 2313 for ( Int_t outbin = 0; outbin <= outAxis->GetNbins() + 1; ++outbin) {; 2314 err2 = 0;; 2315 cont = 0;; 2316 if (outAxis->TestBit(TAxis::kAxisRange) && ( outbin < firstOutBin || outbin > lastOutBin )) continue;; 2317 ; 2318 for (Int_t inbin = firstbin ; inbin <= lastbin ; ++inbin) {; 2319 Int_t binx, biny;; 2320 if (onX) { binx = outbin; biny=inbin; }; 2321 else { binx = inbin; biny=outbin; }; 2322 ; 2323 if (ncuts) {; 2324 if (!fPainter->IsInside(binx,biny)) continue;; 2325 }; 2326 // sum bin content and error if needed; 2327 cont += GetBinContent(binx,biny);; 2328 if (computeErrors) {; 2329 Double_t exy = GetBinError(binx,biny);; 2330 err2 += exy*exy;; 2331 }; 2332 }; 2333 // find corresponding bin number in h1 for outbin; 2334 Int_t binOut = h1->GetXaxis()->FindBin( outAxis->GetBinCenter(outbin) );; 2335 h1->SetBinContent(binOut ,cont);; 2336 if (computeErrors) h1->SetBinError(binOut,TMath::Sqrt(err2));; 2337 // sum all content; 2338 totcont += cont;; 2339 }; 2340 if ( labels ) h1->GetXaxis()->SetCanExtend(extendable);; 2341 ; 2342 // check if we can re-use the original statistics from the previous histogram; 2343 bool reuseStats = false;; 2344 if ( ( GetStatOverflowsBehaviour() == false && firstbin == 1 && lastbin == inNbin ) ||; 2345 ( GetStatOverflowsBehaviour() == true && firstbin == 0 && lastbin == inNbin + 1 ) ); 2346 reuseStats = true;; 2347 else {; 2348 // also if total content match we can re-use; 2349 double eps = 1.E-12;; 2350 if (IsA() == TH2F::Class() ) eps = 1.E-6;; 2351 if (fTsumw != 0 && TMath::Abs( fTsumw - totcont) < TMath::Abs(fTsumw) * e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:93980,extend,extendable,93980,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,5,['extend'],['extendable']
Modifiability,"is browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RWebDisplayHandle(). ROOT::RWebDisplayHandle::RWebDisplayHandle ; (; const std::string & ; url). inline . constructor ; Definition at line 91 of file RWebDisplayHandle.hxx. ◆ ~RWebDisplayHandle(). virtual ROOT::RWebDisplayHandle::~RWebDisplayHandle ; (; ). virtualdefault . required virtual destructor for correct cleanup at the end . Member Function Documentation. ◆ CanProduceImages(). bool RWebDisplayHandle::CanProduceImages ; (; const std::string & ; browser = """"). static . Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ; Definition at line 894 of file RWebDisplayHandle.cxx. ◆ CheckIfCanProduceImages(). bool RWebDisplayHandle::CheckIfCanProduceImages ; (; RWebDisplayArgs & ; args). staticprotected . Checks if configured browser can be used for image production. ; Definition at line 837 of file RWebDisplayHandle.cxx. ◆ Display(). std::unique_ptr< RWebDisplayHandle > RWebDisplayHandle::Display ; (; const RWebDisplayArgs & ; args). static . Create web display. ; Parameters. args- defines where and how to display web window Returns RWebDisplayHandle, which holds information of running browser application Can be used fully independent from RWebWindow classes just to show any web page . Definition at line 724 of file RWebDisplayHandle.cxx. ◆ DisplayUrl(). bool RWebDisplayHandle::DisplayUrl ; (; const std::string & ; url). static . Display provided url in configured web browser. ; Parameters. url- specified URL address like https://root.cern Browser can specified when starting root --web=firefox Returns true when browser started It is convenience method, equivalent to: RWebDisplayArgs args;; args.SetUrl(url);; args.SetStandalone(false);; auto handle = RWebDisplayHandle::Display(args);; ROOT::RWebDisplayArgsHolds diffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebDisplayHandle.html:4055,config,configured,4055,doc/v632/classROOT_1_1RWebDisplayHandle.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebDisplayHandle.html,1,['config'],['configured']
Modifiability,"is browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RWebDisplayHandle(). ROOT::RWebDisplayHandle::RWebDisplayHandle ; (; const std::string & ; url). inline . constructor ; Definition at line 92 of file RWebDisplayHandle.hxx. ◆ ~RWebDisplayHandle(). virtual ROOT::RWebDisplayHandle::~RWebDisplayHandle ; (; ). virtualdefault . required virtual destructor for correct cleanup at the end . Member Function Documentation. ◆ CanProduceImages(). bool RWebDisplayHandle::CanProduceImages ; (; const std::string & ; browser = """"). static . Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ; Definition at line 925 of file RWebDisplayHandle.cxx. ◆ CheckIfCanProduceImages(). bool RWebDisplayHandle::CheckIfCanProduceImages ; (; RWebDisplayArgs & ; args). staticprotected . Checks if configured browser can be used for image production. ; Definition at line 877 of file RWebDisplayHandle.cxx. ◆ Display(). std::unique_ptr< RWebDisplayHandle > RWebDisplayHandle::Display ; (; const RWebDisplayArgs & ; args). static . Create web display. ; Parameters. args- defines where and how to display web window Returns RWebDisplayHandle, which holds information of running browser application Can be used fully independent from RWebWindow classes just to show any web page . Definition at line 757 of file RWebDisplayHandle.cxx. ◆ DisplayUrl(). bool RWebDisplayHandle::DisplayUrl ; (; const std::string & ; url). static . Display provided url in configured web browser. ; Parameters. url- specified URL address like https://root.cern Browser can specified when starting root --web=firefox Returns true when browser started It is convenience method, equivalent to: RWebDisplayArgs args;; args.SetUrl(url);; args.SetStandalone(false);; auto handle = RWebDisplayHandle::Display(args);; ROOT::RWebDisplayArgsHolds diffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebDisplayHandle.html:4915,config,configured,4915,doc/master/classROOT_1_1RWebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebDisplayHandle.html,1,['config'],['configured']
Modifiability,"is called only internally by ROOT classes. Although being public it is not supposed to be used outside ROOT. If used, you must make sure that the bufferRead is large enough to accomodate the object being read. ; Reimplemented in TKeySQL, and TKeyXML.; Definition at line 893 of file TKey.cxx. ◆ Reset(). void TKey::Reset ; (; ). protected . Reset the key as it had not been 'filled' yet. ; Definition at line 1303 of file TKey.cxx. ◆ SetBuffer(). virtual void TKey::SetBuffer ; (; ). inlinevirtual . Reimplemented in TKeySQL, and TKeyXML.; Definition at line 110 of file TKey.h. ◆ SetMotherDir(). void TKey::SetMotherDir ; (; TDirectory * ; dir). inline . Definition at line 112 of file TKey.h. ◆ SetParent(). void TKey::SetParent ; (; const TObject * ; parent). virtual . Set parent in key buffer. ; Definition at line 1295 of file TKey.cxx. ◆ Sizeof(). Int_t TKey::Sizeof ; (; ); const. overridevirtual . Return the size in bytes of the key header structure. ; An explanation about the nbytes (Int_t nbytes) variable used in the function. The size of fSeekKey and fSeekPdir is 8 instead of 4 if version is greater than 1000. . Component Sizeof . fNbytes 4 . sizeof(Version_t) 2 . fObjlen 4 . fDatime 4 . fKeylen 2 . fCycle 2 . fSeekKey 4 or 8 . fSeekPdir 4 or 8 . FIXED TOTAL 26 or 34 . fClassName 1+ bytes . fName 1+ bytes . fTitle 1+ bytes . TOTAL 29+ or 37+ . Reimplemented from TNamed.; Definition at line 1342 of file TKey.cxx. ◆ Streamer(). void TKey::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TKeySQL, and TKeyXML.; Definition at line 1359 of file TKey.cxx. ◆ StreamerNVirtual(). void TKey::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 116 of file TKey.h. ◆ WriteFile(). Int_t TKey::WriteFile ; (; Int_t ; cycle = 1, . TFile * ; f = nullptr . ). virtual . Write the encoded object supported by this key. ; The function returns the number of bytes committed to the fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey.html:32598,variab,variable,32598,doc/master/classTKey.html,https://root.cern,https://root.cern/doc/master/classTKey.html,1,['variab'],['variable']
Modifiability,"is class . ◆ Class_Version(). static constexpr Version_t RooLognormal::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 57 of file RooLognormal.h. ◆ clone(). TObject * RooLognormal::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 23 of file RooLognormal.h. ◆ DeclFileName(). static const char * RooLognormal::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 57 of file RooLognormal.h. ◆ doEval(). void RooLognormal::doEval ; (; RooFit::EvalContext & ; ctx); const. overrideprotectedvirtual . Compute multiple values of Lognormal distribution. ; Reimplemented from RooAbsReal.; Definition at line 93 of file RooLognormal.cxx. ◆ evaluate(). double RooLognormal::evaluate ; (; ); const. overrideprotectedvirtual . ln(k)<1 would correspond to sigma < 0 in the parameterization resulting by transforming a normal random variable in its standard parameterization to a lognormal random variable => treat ln(k) as -ln(k) for k<1 ; Implements RooAbsReal.; Definition at line 77 of file RooLognormal.cxx. ◆ generateEvent(). void RooLognormal::generateEvent ; (; Int_t ; code). overridevirtual . Interface for generation of an event using the algorithm corresponding to the specified code. ; The meaning of each code is defined by the getGenerator() implementation. The default implementation does nothing. ; Reimplemented from RooAbsPdf.; Definition at line 135 of file RooLognormal.cxx. ◆ getAnalyticalIntegral(). Int_t RooLognormal::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:77228,parameteriz,parameterization,77228,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,4,"['parameteriz', 'variab']","['parameterization', 'variable']"
Modifiability,"is class [5]; [6].; ; H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):; . Define ; are the 5 dependent; quantities that define a track.; ; Compute, for different values of ; , the tracks; through the magnetic field, and determine the corresponding; ; .; ; Use the simulated observations to determine, with a simple; approximation, the values of ; . We call these values; ; .; ; Determine from ; a set of at least five relevant; coordinates ; , using contrains, or; alternative:. Perform a Principal Component Analysis (using; TPrincipal), and use; to get a linear transformation; ; , so that; ; are constrained and linear independent.; ; Perform a Principal Component Analysis on; ; , to get linear; indenpendent (among themselves, but not independent of; ; ) quantities . For each component ; make a mutlidimensional fit,; using ; as the variables, thus determing a set of; coefficents ; .; . To process data, using this parameterisation, do; ; Test wether the observation ; within the domain of; the parameterization, using the result from the Principal Component; Analysis.; ; Determine ; as before.; ; Detetmine ; as before.; ; Use the result of the fit to determind ; .; ; Transform back to ; from ; , using; the result from the Principal Component Analysis.; . Testing the parameterization; . The class also provides functionality for testing the, over the; training sample, found parameterization; (TMultiDimFit::Fit). This is done by passing; the class a test sample of tuples of the form ; , where ; are the independent; variables, the known, dependent quantity, and is; the square error in ; (TMultiDimFit::AddTestRow).; ; The parameterization is then evaluated at every ; in the; test sample, and; . is evaluated. The relative error over the test sample; . should not be to low or high compared to from the training; sam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:11406,variab,variables,11406,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,6,['variab'],['variables']
Modifiability,"is class is also known as (typedefs to this class)ROOT::Math::IMultiGradFunction, ROOT::Fit::Fitter::BaseGradFunc, ROOT::Math::IParametricGradFunctionMultiDim::BaseGradFunc, ROOT::Math::GradFunctor::Impl. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IGradientFunctionMultiDim(); virtual ROOT::Math::IBaseFunctionMultiDim*ROOT::Math::IBaseFunctionMultiDim::Clone() const; doubleROOT::Math::IGradientMultiDim::Derivative(const double* x, unsigned int icoord = 0) const; virtual voidFdF(const double* x, double& f, double* df) const; virtual voidGradient(const double* x, double* grad) const; virtual unsigned intROOT::Math::IBaseFunctionMultiDim::NDim() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; ROOT::Math::IGradientFunctionMultiDim&operator=(const ROOT::Math::IGradientFunctionMultiDim&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Gradient(const double* x, double* grad) const. Evaluate all the vector of function derivatives (gradient) at a point x.; Derived classes must re-implement if it is more efficient than evaluting one at a time. void FdF(const double* x, double& f, double* df) const. Optimized method to evaluate at the same time the function value and derivative at a point x.; Often both value and derivatives are needed and it is often more efficient to compute them at the same time.; Derived class should implement this method if performances play an important role and if it is faster to; evaluate value and derivative at the same time. virtual ~IGradientFunctionMultiDim(). Virtual Destructor (no operations). {}. » Last changed: root/mathcore:$Id: IFunction.h 24482 2008-06-23 15:33:08Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general plea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IGradientFunctionMultiDim.html:1999,Inherit,Inheritance,1999,root/html532/ROOT__Math__IGradientFunctionMultiDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IGradientFunctionMultiDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is class is the abstract kernel interface for PDEFoam ;  CPDEFoamKernelGaussThis PDEFoam kernel estimates a cell value for a given event by weighting all cell values with a gauss function ;  CPDEFoamKernelLinNThis PDEFoam kernel estimates a cell value for a given event by weighting with cell values of the nearest neighbor cells ;  CPDEFoamKernelTrivialThis class is a trivial PDEFoam kernel estimator ;  CPDEFoamMultiTargetThis PDEFoam variant is used to estimate multiple targets by creating an event density foam (PDEFoamEvent), which has dimension: ;  CPDEFoamTargetThis PDEFoam variant stores in every cell the average target fTarget (see the Constructor) as well as the statistical error on the target fTarget ;  CPDEFoamTargetDensityThis is a concrete implementation of PDEFoam ;  CPDEFoamVect;  CPDFPDF wrapper for histograms; uses user-defined spline interpolation ;  CPruningInfo;  CPyMethodBase;  ►CQuickMVAProbEstimator;  CEventInfo;  CRandomGenerator;  CRank;  CRankingRanking for variables in method (implementation) ;  CReaderServes to use the MVAs in a specific analysis context ;  CRegressionVarianceCalculate the ""SeparationGain"" for Regression analysis separation criteria used in various training algorithms ;  CResultsClass that is the base-class for a vector of result ;  CResultsClassificationClass that is the base-class for a vector of result ;  CResultsMulticlassClass which takes the results of a multiclass classification ;  CResultsRegressionClass that is the base-class for a vector of result ;  CRMethodBase;  CROCCalc;  CROCCurve;  CRootFinderRoot finding using Brents algorithm (translated from CERNLIB function RZERO) ;  CRuleImplementation of a rule ;  CRuleCutA class describing a 'rule cut' ;  CRuleEnsemble;  CRuleFitA class implementing various fits of rule ensembles ;  ►CRuleFitAPIJ Friedman's RuleFit method ;  CIntParms;  CRealParms;  CRuleFitParamsA class doing the actual fitting of a linear model using rules as base functions ;  CSdivSqrtSplusBImplemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:76670,variab,variables,76670,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,5,['variab'],['variables']
Modifiability,"is class propagates; all RooFit information (floating parameters, their values and errors); to MINUIT before each MINUIT call and propagates all MINUIT information; back to the RooFit object at the end of each call (updated parameter; values, their (asymmetric errors) etc. The default MINUIT error level; for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); value of the input function. ~RooMinuit(); Destructor. void setStrategy(Int_t strat); Change MINUIT strategy to istrat. Accepted codes; are 0,1,2 and represent MINUIT strategies for dealing; most efficiently with fast FCNs (0), expensive FCNs (2); and 'intermediate' FCNs (1). void setErrorLevel(Double_t level); Set the level for MINUIT error analysis to the given; value. This function overrides the default value; that is taken in the RooMinuit constructor from; the defaultErrorLevel() method of the input function. void setEps(Double_t eps); Change MINUIT epsilon. void setOffsetting(Bool_t flag); Enable internal likelihood offsetting for enhanced numeric precision. RooFitResult* fit(const char* options); Parse traditional RooAbsPdf::fitTo driver options. s - Run Hesse first to estimate initial step size; m - Run Migrad only; h - Run Hesse to estimate errors; v - Verbose mode; l - Log parameters after each Minuit steps to file; t - Activate profile timer; r - Save fit result; 0 - Run Migrad with strategy 0. Int_t migrad(); Execute MIGRAD. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t hesse(); Execute HESSE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(); Execute MINOS. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinuit.html:9775,enhance,enhanced,9775,root/html534/RooMinuit.html,https://root.cern,https://root.cern/root/html534/RooMinuit.html,6,['enhance'],['enhanced']
Modifiability,"is entry; TStringfOptionOptions associated with this entry; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLegendEntry(); TLegendEntry do-nothing default constructor. TLegendEntry(const TObject* obj, const char* label = 0, Option_t* option = ""lpf""); TLegendEntry normal constructor for one entry in a TLegend; obj is the object this entry will represent. If obj has; line/fill/marker attributes, then the TLegendEntry will display; these attributes.; label is the text that will describe the entry, it is displayed using; TLatex, so may have a complex format.; option may have values; L draw line associated w/ TAttLine if obj inherits from TAttLine; P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; default is object = ""LPF"". TLegendEntry(const TLegendEntry& entry); TLegendEntry copy constructor. ~TLegendEntry(); TLegendEntry default destructor. void Copy(TObject& obj) const; copy this TLegendEntry into obj. void Print(Option_t* option = """") const; dump this TLegendEntry to cout. void SaveEntry(ostream& out, const char* name); Save this TLegendEntry as C++ statements on output stream out; to be used with the SaveAs .C option. void SetObject(TObject* obj); (re)set the obj pointed to by this entry. void SetObject(const char* objectName); (re)set the obj pointed to by this entry. const char * GetLabel() const; { return fLabel.Data(); }. TObject * GetObject() const; { return fObject; }. Option_t * GetOption() const; { return fOption.Data(); }. void SetLabel(const char* label = """"); { fLabel = label; }. void SetOption(Option_t* option = ""lpf""); { fOption = option; }. TLegendEntry& operator=(const TLegendEntry& ). » Author: Matthew.Adam.Dob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLegendEntry.html:9546,inherit,inherits,9546,root/html528/TLegendEntry.html,https://root.cern,https://root.cern/root/html528/TLegendEntry.html,12,['inherit'],['inherits']
Modifiability,"is entry; TStringfOptionOptions associated with this entry; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLegendEntry(); TLegendEntry do-nothing default constructor. TLegendEntry(const TObject* obj, const char* label = 0, Option_t* option = ""lpf""); TLegendEntry normal constructor for one entry in a TLegend; obj is the object this entry will represent. If obj has; line/fill/marker attributes, then the TLegendEntry will display; these attributes.; label is the text that will describe the entry, it is displayed using; TLatex, so may have a complex format.; option may have values; L draw line associated w/ TAttLine if obj inherits from TAttLine; P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; default is object = ""LPF"". TLegendEntry(const TLegendEntry& entry); TLegendEntry copy constructor. ~TLegendEntry(); TLegendEntry default destructor. void Copy(TObject& obj) const; copy this TLegendEntry into obj. void Print(Option_t* option = """") const; dump this TLegendEntry to std::cout. void SaveEntry(ostream& out, const char* name); Save this TLegendEntry as C++ statements on output stream out; to be used with the SaveAs .C option. void SetObject(TObject* obj); (re)set the obj pointed to by this entry. void SetObject(const char* objectName); (re)set the obj pointed to by this entry. const char * GetLabel() const; { return fLabel.Data(); }. TObject * GetObject() const; { return fObject; }. Option_t * GetOption() const; { return fOption.Data(); }. void SetLabel(const char* label = """"); { fLabel = label; }. void SetOption(Option_t* option = ""lpf""); { fOption = option; }. TLegendEntry& operator=(const TLegendEntry& ). » Author: Matthew.Ada",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLegendEntry.html:10391,inherit,inherits,10391,root/html602/TLegendEntry.html,https://root.cern,https://root.cern/root/html602/TLegendEntry.html,8,['inherit'],['inherits']
Modifiability,"is functions will only be called with codes returned by getAnalyticalIntegral, except code zero. ; Reimplemented from RooAbsReal.; Definition at line 136 of file RooRealSumFunc.cxx. ◆ binBoundaries(). std::list< double > * RooRealSumFunc::binBoundaries ; (; RooAbsRealLValue & ; obs, . double ; xlo, . double ; xhi . ); const. overridevirtual . Retrieve bin boundaries if this distribution is binned in obs. ; Parameters. [in]obsObservable to retrieve boundaries for. ; [in]xloBeginning of range. ; [in]xhiEnd of range. . ReturnsThe caller owns the returned std::list. ; Reimplemented from RooAbsReal.; Definition at line 142 of file RooRealSumFunc.cxx. ◆ canNodeBeCached(). CacheMode RooRealSumFunc::canNodeBeCached ; (; ); const. inlineoverridevirtual . Reimplemented from RooAbsArg.; Definition at line 58 of file RooRealSumFunc.h. ◆ checkObservables(). bool RooRealSumFunc::checkObservables ; (; const RooArgSet * ; nset); const. overridevirtual . Overloadable function in which derived classes can implement consistency checks of the variables. ; If this function returns true, indicating an error, the fitter or generator will abort. ; Reimplemented from RooAbsArg.; Definition at line 123 of file RooRealSumFunc.cxx. ◆ Class(). static TClass * RooRealSumFunc::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooRealSumFunc::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooRealSumFunc::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 78 of file RooRealSumFunc.h. ◆ clone(). TObject * RooRealSumFunc::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 33 of file RooRealSumFunc.h. ◆ coefList(). const RooArgList & RooRealSumFunc::coefList ; (; ); const. inline . Definition at line 45 of file RooRealSumFunc.h. ◆ compileForNormSet(). std::unique_ptr< RooAbsArg > RooRealSumFunc::comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:64102,variab,variables,64102,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,2,['variab'],['variables']
Modifiability,"is has to be done in TSelector::Process(Long64_t entry). We will print also the current entry number, to see what's happening:; Bool_t EventSelector::Process(Long64_t entry); {; // ... // print some information about the current entry; printf(""Processing Entry number %ld\n"", entry);; // increase the total number of entries; ++fNumberOfEvents;. return kTRUE;; }. And finally, at the end of the process, in TSelector::Terminate(), print the total number of entries:; void EventSelector::Terminate(); {; // ... // print the result; printf(""\nTotal Number of Events: %d\n"", fNumberOfEvents);; }. As you can see, the fNumberOfEvents member is accessed in Process() and Terminate(), hence the reason of making it a data member.; More Complex Task; We want to calculate the sum of all event sizes. For this we need a new data member of type int. Create it - like the other data members in the class declaration. Don't forget to initialize it to 0 in the constructor. You also have to declare the reader variables used to access the tree's data. At the end, the code in EventSelector.h should look like this:; class EventSelector : public TSelector {; public :; Int_t fTotalDataSize; // Sum of data size (in bytes) of all events. // Variables used to access and store the data; TTreeReader fReader; // The tree reader ; TTreeReaderValue<Int_t> fCurrentEventSize; // Size of the current event. EventSelector(TTree * = 0):; fTotalDataSize(0),; fCurrentEventSize(fReader, ""fEventSize"") { }; virtual ~EventSelector() { }. virtual void Init(TTree *tree);; ... Connecting a Tree Branch with the Data Member; As already explained in the Using a Macro to Read a TTree tutorial, here again we have to ""connect"" the TTreeReader to the tree we want to read by calling TTreeReader::SetTree(). This has to be done in the TSelector::Init() method, as shown below:; void EventSelector::Init(TTree *tree); {; //... // Associate the TTreeReader with the tree we want to read; fReader.SetTree(tree);; }. Loading TTree's Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/accessing-ttree-tselector.html:5242,variab,variables,5242,d/accessing-ttree-tselector.html,https://root.cern,https://root.cern/d/accessing-ttree-tselector.html,1,['variab'],['variables']
Modifiability,"is interval is based; You do not own the returned MarkovChain*. { return fChain; }. RooDataSet* GetChainAsDataSet(RooArgSet* whichVars = __null); Get a clone of the markov chain on which this interval is based; as a RooDataSet. You own the returned RooDataSet*. { return fChain->GetAsDataSet(whichVars); }. const RooDataSet* GetChainAsConstDataSet(); Get the markov chain on which this interval is based; as a RooDataSet. You do not own the returned RooDataSet*. { return fChain->GetAsConstDataSet(); }. RooDataHist* GetChainAsDataHist(RooArgSet* whichVars = __null); Get a clone of the markov chain on which this interval is based; as a RooDataHist. You own the returned RooDataHist*. { return fChain->GetAsDataHist(whichVars); }. THnSparse* GetChainAsSparseHist(RooArgSet* whichVars = __null); Get a clone of the markov chain on which this interval is based; as a THnSparse. You own the returned THnSparse*. { return fChain->GetAsSparseHist(whichVars); }. RooRealVar* GetNLLVar() const; Get a clone of the NLL variable from the markov chain. { return fChain->GetNLLVar(); }. RooRealVar* GetWeightVar() const; Get a clone of the weight variable from the markov chain. { return fChain->GetWeightVar(); }. void SetEpsilon(Double_t epsilon); set the acceptable level or error for Keys interval determination. void SetIntervalType(enum IntervalType intervalType); Set the type of interval to find. This will only have an effect for; 1-D intervals. If is more than 1 parameter of interest, then a; ""shortest"" interval will always be used, since it generalizes directly; to N dimensions. { fIntervalType = intervalType; }. enum IntervalType GetIntervalType(); Return the type of this interval. { return fIntervalType; }. void SetLeftSideTailFraction(Double_t a); set the left-side tail fraction for a tail-fraction interval. { fLeftSideTF = a; }. void SetDelta(Double_t delta); kbelasco: The inner-workings of the class really should not be exposed; like this in a comment, but it seems to be the only way",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MCMCInterval.html:18150,variab,variable,18150,root/html602/RooStats__MCMCInterval.html,https://root.cern,https://root.cern/root/html602/RooStats__MCMCInterval.html,4,['variab'],['variable']
Modifiability,"is is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  Define relevant variables. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the histogram with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProfile2D * fProfile;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:11924,variab,variable,11924,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,1,['variab'],['variable']
Modifiability,"is is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A TPaletteAxis object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer palette can be used to change the pallette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Picture; Source. {; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,400);; TH2F *h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; return c1;; }; TPaletteAxis inherits from TBox and TPave. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z; . Function Members (Methods); public:. TPaletteAxis(); TPaletteAxis(const TPaletteAxis& palette); TPaletteAxis(Double_t x1, Double_t y1, Double_t x2, Double_t y2, TH1* h); virtual~TPaletteAxis(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidCopy(TObject& palette) const; virtual voidTObject::Delete(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPaletteAxis.html:1435,inherit,inherits,1435,root/html530/TPaletteAxis.html,https://root.cern,https://root.cern/root/html530/TPaletteAxis.html,5,['inherit'],['inherits']
Modifiability,"is is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A TPaletteAxis object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer palette can be used to change the pallette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Picture; Source. {; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,400);; TH2F *h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; return c1;; }; TPaletteAxis inherits from TBox and TPave. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z; . Function Members (Methods); public:. virtual~TPaletteAxis(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidCopy(TObject& palette) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPaletteAxis.html:1435,inherit,inherits,1435,root/html602/TPaletteAxis.html,https://root.cern,https://root.cern/root/html602/TPaletteAxis.html,4,['inherit'],['inherits']
Modifiability,"is is supported by e.g. RooRealVar or RooLinearVar, which accepts offsetting and scaling an observable. ; Definition at line 81 of file RooResolutionModel.cxx. ◆ RooResolutionModel() [3/3]. RooResolutionModel::RooResolutionModel ; (; const RooResolutionModel & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 92 of file RooResolutionModel.cxx. ◆ ~RooResolutionModel(). RooResolutionModel::~RooResolutionModel ; (; ). override . Destructor. ; Definition at line 113 of file RooResolutionModel.cxx. Member Function Documentation. ◆ basis(). const RooFormulaVar & RooResolutionModel::basis ; (; ); const. inline . Definition at line 58 of file RooResolutionModel.h. ◆ basisCode(). virtual Int_t RooResolutionModel::basisCode ; (; const char * ; name); const. pure virtual . Implemented in RooGaussModel, RooGExpModel, RooAddModel, and RooTruthModel. ◆ basisConvVar(). const RooRealVar & RooResolutionModel::basisConvVar ; (; ); const. Return the convolution variable of the selection basis function. ; This is, by definition, the first parameter of the basis function ; Definition at line 216 of file RooResolutionModel.cxx. ◆ changeBasis(). void RooResolutionModel::changeBasis ; (; RooFormulaVar * ; inBasis). virtual . Change the basis function we convolute with. ; For one-time use by convolution() only. ; Reimplemented in RooTruthModel.; Definition at line 185 of file RooResolutionModel.cxx. ◆ Class(). static TClass * RooResolutionModel::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooResolutionModel::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooResolutionModel::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 81 of file RooResolutionModel.h. ◆ clone(). TObject * RooResolutionModel::clone ; (; const char * ; newname); const. overridepure virtual . Implements RooAbsArg.; Implemented in RooGauss",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooResolutionModel.html:78058,variab,variable,78058,doc/master/classRooResolutionModel.html,https://root.cern,https://root.cern/doc/master/classRooResolutionModel.html,1,['variab'],['variable']
Modifiability,"is kept.; 3959/// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; 3960/// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; 3961/// ""R"" | Fit using a fitting range specified in the function range with `TF1::SetRange`.; 3962/// ""B"" | Use this option when you want to fix or set limits on one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..), otherwise in case of pre-defined functions, some default initial values and limits will be used.; 3963/// ""C"" | In case of linear fitting, do no calculate the chisquare (saves CPU time).; 3964/// ""G"" | Uses the gradient implemented in `TF1::GradientPar` for the minimization. This allows to use Automatic Differentiation when it is supported by the provided TF1 function.; 3965/// ""WIDTH"" | Scales the histogran bin content by the bin width (useful for variable bins histograms); 3966/// ""SERIAL"" | Runs in serial mode. By defult if ROOT is built with MT support and MT is enables, the fit is perfomed in multi-thread - ""E"" Perform better Errors estimation using Minos technique; 3967/// ""MULTITHREAD"" | Forces usage of multi-thread execution whenever possible; 3968///; 3969/// The default fitting of an histogram (when no option is given) is perfomed as following:; 3970/// - a chi-square fit (see below Chi-square Fits) computed using the bin histogram errors and excluding bins with zero errors (empty bins);; 3971/// - the full range of the histogram is used;; 3972/// - the default Minimizer with its default configuration is used (see below Minimizer Configuration) except for linear function;; 3973/// - for linear functions (`polN`, `chenbyshev` or formula expressions combined using operator `++`) a linear minimization is used.; 3974/// - only the status of the fit is returned;; 3975/// - the fit is performed in Multithread whenever",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:159218,variab,variable,159218,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"is linear (contains '|' or ""++""); Int_tfNOperOptimized!Number of operators after optimization; TStringTNamed::fNameobject identifier; TString*fNames[fNpar] Array of parameter names; Int_tfNconstNumber of constants; Int_tfNdimDimension of function (1=1-Dim, 2=2-Dim,etc); Int_tfNoperNumber of operators; Int_tfNparNumber of parameters; Int_tfNstringNumber of different constants character strings; Int_tfNumberformula number identifier; Int_tfNvalNumber of different variables in expression; TOperOffset*fOperOffset![fNOperOptimized] Offsets of operrands; Int_t*fOperOptimized![fNOperOptimized] List of operators. (See documentation for changes made at version 7); G__p2memfuncfOptimal!pointer to optimal function; Double_t*fParams[fNpar] Array of fNpar parameters; TFormulaPrimitive**fPredefined![fNPar] predefined function ; TStringTNamed::fTitleobject title. private:. Int_t*fOper[fNoper] List of operators. (See documentation for changes made at version 7). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFormula(); Formula default constructor*-*-*-; *-* ============================. TFormula(const char* name, const char* formula); Normal Formula constructor*-*-*-; *-* ==========================. TFormula(const TFormula& formula); Default constructor. TFormula& operator=(const TFormula& rhs); Operator =. ~TFormula(); Formula default destructor*-*-*-; *-* ===========================. Bool_t AnalyzeFunction(TString& chaine, Int_t& err, Int_t offset = 0); Check if the chain as function call *-*-; *-* =======================================; -; *-* If you overload this member function, you also HAVE TO; *-* never call the constructor:; -; *-* TFormula::TFormula(const char *name,const char *expression); -; *-* and write your own constructor; -; *-* MyClass::MyClass(const char *name,const char *expression) : TFormula(); -; *-* which has to call the TFormula default constructor and whose implementation; *-* should be similar to the implementa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFormula.html:14335,Inherit,Inheritance,14335,root/html532/TFormula.html,https://root.cern,https://root.cern/root/html532/TFormula.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is linear (contains '|' or ""++""); Int_tfNOperOptimized!Number of operators after optimization; TStringTNamed::fNameobject identifier; TString*fNames[fNpar] Array of parameter names; Int_tfNconstNumber of constants; Int_tfNdimDimension of function (1=1-Dim, 2=2-Dim,etc); Int_tfNoperNumber of operators; Int_tfNparNumber of parameters; Int_tfNstringNumber of different constants character strings; Int_tfNumberformula number identifier; Int_tfNvalNumber of different variables in expression; TOperOffset*fOperOffset![fNOperOptimized] Offsets of operrands; Int_t*fOperOptimized![fNOperOptimized] List of operators. (See documentation for changes made at version 7); G__p2memfuncfOptimal!pointer to optimal function; Double_t*fParams[fNpar] Array of fNpar parameters; TFormulaPrimitive**fPredefined![fNPar] predefined function ; TStringTNamed::fTitleobject title. private:. Int_t*fOper[fNoper] List of operators. (See documentation for changes made at version 7). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFormula(); Formula default constructor. TFormula(const char* name, const char* formula); Normal Formula constructor. TFormula(const TFormula& formula); Default constructor. TFormula& operator=(const TFormula& rhs); Operator =. ~TFormula(); Formula default destructor. Bool_t AnalyzeFunction(TString& chaine, Int_t& err, Int_t offset = 0); Check if the chain as function call. If you overload this member function, you also HAVE TO; never call the constructor:. TFormula::TFormula(const char *name,const char *expression). and write your own constructor. MyClass::MyClass(const char *name,const char *expression) : TFormula(). which has to call the TFormula default constructor and whose implementation; should be similar to the implementation of the normal TFormula constructor. This is necessary because the normal TFormula constructor call indirectly; the virtual member functions Analyze, DefaultString, DefaultValue; and DefaultVariable. void A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFormula.html:13800,Inherit,Inheritance,13800,root/html534/TFormula.html,https://root.cern,https://root.cern/root/html534/TFormula.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is means it was in most contexts unusable, because the input can’t be changed, other than loading a different bin in the dataset.; Furthermore, there was actually a constructor that took a RooAbsArg x, but it was simply ignored.; To fix all these problems, the existing constructors were replaced by a new one that takes the observable explicitly.; Since the old constructors resulted in wrong computation graphs that caused trouble with the new CPU evaluation backend, they had to be removed without deprecation. Please adapt your code if necessary.; Renaming of some RooFit classes; The RooPower was renamed to RooPowerSum, and RooExpPoly was renamed to RooLegacyExpPoly.; This was a necessary change, because the names of these classes introduced in ROOT 6.28 collided with some classes in CMS combine, which were around already long before. Therefore, the classes had to be renamed to not cause any problems for CMS.; In the unlikeliy case where you should have used these new classes for analysis already, please adapt your code to the new names and re-create your workspaces.; RDataFrame. The RDataFrame constructors that take in input one or more file names (or globs thereof) will now infer the format of the dataset, either TTree or RNTuple, that is stored in the first input file. When multiple files are specified, it is assumed that all other files contain a coherent dataset of the same format and with the same schema, exactly as it used to happen with TChain. This automatic inference further contributes towards a zero-code-change experience when moving from processing a TTree to processing an RNTuple dataset while using an RDataFrame. It also introduces a backwards-incompatible behaviour, i.e. now the constructor needs to open one file in order to infer the dataset type. This means that if the file does not exist, the constructor will throw an exception. Previously, an exception would be thrown only at a JIT-ting time, before the start of the computations.; Distributed RDataF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:14825,adapt,adapt,14825,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['adapt'],['adapt']
Modifiability,"is node; Bool_t_logInit! flag used for chaching polynomial coefficients; vector<double>_low; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Double_t_nominal; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; TIterator*_paramIter! do not persist; RooListProxy_paramList; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; vector<double>_polCoeff! cached polynomial coefficients; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FlexibleInterpVar(); Default constructor. FlexibleInterpVar(const char* name, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html:36200,config,configuration,36200,root/html534/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html,2,['config'],['configuration']
Modifiability,"is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooAddGenContext() [1/3]. RooAddGenContext::RooAddGenContext ; (; const RooAddPdf & ; model, . const RooArgSet & ; vars, . const RooDataSet * ; prototype = nullptr, . const RooArgSet * ; auxProto = nullptr, . bool ; _verbose = false . ). Constructor. ; Definition at line 47 of file RooAddGenContext.cxx. ◆ RooAddGenContext() [2/3]. RooAddGenContext::RooAddGenContext ; (; const RooAddModel & ; model, . const RooArgSet & ; vars, . const RooDataSet * ; prototype = nullptr, . const RooArgSet * ; auxProto = nullptr, . bool ; _verbose = false . ). Constructor. ; Definition at line 97 of file RooAddGenContext.cxx. ◆ RooAddGenContext() [3/3]. RooAddGenContext::RooAddGenContext ; (; const RooAddGenContext & ; other). protected . Member Function Documentation. ◆ attach(). void RooAddGenContext::attach ; (; const RooArgSet & ; params). overridevirtual . Attach given set of variables to internal p.d.f. clone. ; Reimplemented from RooAbsGenContext.; Definition at line 131 of file RooAddGenContext.cxx. ◆ Class(). static TClass * RooAddGenContext::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooAddGenContext::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooAddGenContext::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file RooAddGenContext.h. ◆ create(). template<class Pdf_t > . std::unique_ptr< RooAbsGenContext > RooAddGenContext::create ; (; const Pdf_t & ; pdf, . const RooArgSet & ; vars, . const RooDataSet * ; prototype, . const RooArgSet * ; auxProto, . bool ; verbose . ). static . Returns a RooAddGenContext if possible, or, if the RooAddGenContext doesn't support this particular RooAddPdf or RooAddModel because it has negative coefficients, returns a generic RooGenContext. ; Templated function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddGenContext.html:19154,variab,variables,19154,doc/master/classRooAddGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAddGenContext.html,1,['variab'],['variables']
Modifiability,"is object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGComboBox; virtual void Init ();  Initiate the internal classes of a combo box. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFontTypeComboBox.html:31953,inherit,inherited,31953,doc/master/classTGFontTypeComboBox.html,https://root.cern,https://root.cern/doc/master/classTGFontTypeComboBox.html,1,['inherit'],['inherited']
Modifiability,"is object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGDoubleSlider; static void FixBounds (Double_t &min, Double_t &max);  Avoid boundaries to be equal. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastCli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleHSlider.html:29602,inherit,inherited,29602,doc/master/classTGDoubleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleHSlider.html,4,['inherit'],['inherited']
Modifiability,"is object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockButton.html:28706,inherit,inherited,28706,doc/master/classTGDockButton.html,https://root.cern,https://root.cern/doc/master/classTGDockButton.html,5,['inherit'],['inherited']
Modifiability,"is object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCheckButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedMarkerSelect.html:30333,inherit,inherited,30333,doc/master/classTGedMarkerSelect.html,https://root.cern,https://root.cern/doc/master/classTGedMarkerSelect.html,2,['inherit'],['inherited']
Modifiability,"is object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Double_t fMBRateAvg;  ; Double_t fMBRateMax;  ; Double_t fMBRateMin;  ; TGraph * fMBRateP;  ; TGraph * fMBRatePRemote;  ; Int_t fPackets;  ; TList fPackList;  ; TGraph * fRateP;  ; TGraph * fRatePRemote;  ; Int_t fRPackets;  ; TList fRWrkList;  ; Long64_t fSizeAvg;  ; Long64_t fSizeMax;  ; Long64_t fSizeMin;  ; TGraph * fSizeP;  ; Float_t fStart;  ; Float_t fStop;  ; TList fWrkList;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html:9596,inherit,inherited,9596,doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,1,['inherit'],['inherited']
Modifiability,"is object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TH2D * CreateHistogramOfMigrations (TUnfoldBinning const *xAxis, TUnfoldBinning const *yAxis, char const *histogramName, Bool_t originalXAxisBinning=kFALSE, Bool_t originalYAxisBinning=kFALSE, char const *histogramTitle=nullptr);  create a TH2D histogram capable to hold the bins of the two input binning schemes on the x and y axes, respectively ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; TString BuildHistogramTitle (const char *histogramName, const char *histogramTitle, Int_t const *axisList) const;  construct a title ;  ; TString BuildHistogramTitle2D (const char *histogramName, const char *hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldBinning.html:19953,inherit,inherited,19953,doc/master/classTUnfoldBinning.html,https://root.cern,https://root.cern/doc/master/classTUnfoldBinning.html,2,['inherit'],['inherited']
Modifiability,"is object belongs to.; Float_tfDEta; Float_tfDPhi; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Float_tfEta; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveVectorfLimitsBorder of Barrel/Cylinder to cut the cone.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Int_tfNDiv; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Float_tfPhi; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Float_tfThetaCTransition theta; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveJetCone.html:20957,variab,variable,20957,root/html528/TEveJetCone.html,https://root.cern,https://root.cern/root/html528/TEveJetCone.html,1,['variab'],['variable']
Modifiability,"is object belongs to.; Float_tfDEta; Float_tfDPhi; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Float_tfEta; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveVectorfLimitsBorder of Barrel/Cylinder to cut the cone.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; Int_tfNDiv; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Float_tfPhi; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Float_tfThetaCTransition theta; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveEle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveJetCone.html:21703,variab,variable,21703,root/html530/TEveJetCone.html,https://root.cern,https://root.cern/root/html530/TEveJetCone.html,5,['variab'],['variable']
Modifiability,"is object to the current directory. ;  . Public Attributes; TMD5 fMD5;  ; Long_t fModtime;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for TApplicationRemote::TARFileStat:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote_1_1TARFileStat.html:9676,inherit,inherited,9676,doc/master/classTApplicationRemote_1_1TARFileStat.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote_1_1TARFileStat.html,2,['inherit'],['inherited']
Modifiability,"is object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstVar.html:17601,inherit,inherited,17601,doc/master/classRooConstVar.html,https://root.cern,https://root.cern/doc/master/classRooConstVar.html,7,['inherit'],['inherited']
Modifiability,"is object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void setDefCat (value_type defCat);  . Friends; class RooMappedCategoryCache;  . Additional Inherited Members;  Public Types inherited from RooAbsCategory; using value_type = int;  The type used to denote a specific category state. ;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMappedCategory.html:42603,inherit,inherited,42603,doc/master/classRooMappedCategory.html,https://root.cern,https://root.cern/doc/master/classRooMappedCategory.html,2,['inherit'],['inherited']
Modifiability,"is object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static bool _doFloorGlobal = false;  Global flag for introducing floor at zero in pdf. ;  ;  Static Protected Attributes inherited from RooAbsReal; static Int_t _evalErrorCount = 0;  ; static std::map< const RooAbsArg *, std::pair< std::string, std::list< EvalError > > > _evalErrorList;  ; static ErrorLoggingMode _evalErrorMode = RooAbsReal::PrintErrors;  ; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; typedef std::map< constRooAbsArg *, std::pair< std::string, std::list< EvalError > > >::const_iterator EvalErrorIter;  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:52178,inherit,inherited,52178,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,1,['inherit'],['inherited']
Modifiability,"is object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; Double_tfErrorTol; Bool_tfForceSum; Bool_tfHasIssuedConvWarning; Bool_tfHasIssuedSumWarning; Int_tfMaxIters; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxylambda; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNonCentralChiSquare(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _k, RooAbsReal& _lambda). RooNonCentralChiSquare(const RooNonCentralChiSquare& other, const char* name = 0). void SetForceSum(Bool_t flag). Double_t evaluate() const; ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooNonCentralChiSquare(); {}. TObject* clone(const char* newname) const; { return new RooNonCentralChiSquare(*this,newname); }. virtual ~RooNonCentralChiSquare(); { }. void SetErrorTolerance(Double_t t); {fErrorTol = t;}. void SetMaxIters(Int_t mi); {fMaxIters = mi;}. » Last changed: Tue Jun 2 15:32:34 2015 » Last generated: 2015-06-02 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooNonCentralChiSquare.html:46207,Inherit,Inheritance,46207,root/html604/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html604/RooNonCentralChiSquare.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; Double_tfErrorTol; Bool_tfForceSum; Bool_tfHasIssuedConvWarning; Bool_tfHasIssuedSumWarning; Int_tfMaxIters; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxylambda; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNonCentralChiSquare(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _k, RooAbsReal& _lambda). RooNonCentralChiSquare(const RooNonCentralChiSquare& other, const char* name = 0). void SetForceSum(Bool_t flag). Double_t evaluate() const; ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooNonCentralChiSquare(); {}. TObject* clone(const char* newname) const; { return new RooNonCentralChiSquare(*this,newname); }. virtual ~RooNonCentralChiSquare(); { }. void SetErrorTolerance(Double_t t); {fErrorTol = t;}. void SetMaxIters(Int_t mi); {fMaxIters = mi;}. » Last changed: Tue Jun 30 14:34:27 2015 » Last generated: 2015-06-30 14:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNonCentralChiSquare.html:46207,Inherit,Inheritance,46207,root/html602/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html602/RooNonCentralChiSquare.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"is object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:41 2015 » Last generated: 2015-06-02 13:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_double_int_int_.html:38904,variab,variable,38904,root/html602/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_double_int_int_.html,2,['variab'],['variable']
Modifiability,"is object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:28:55 2015 » Last generated: 2015-06-02 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction3Binding_double_double_int_int_.html:38904,variab,variable,38904,root/html604/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction3Binding_double_double_int_int_.html,2,['variab'],['variable']
Modifiability,"is ok, -1 fCallEnv is not ok; TStringfClassclass to be loaded from plugin library; TStringfCtorctor used to instantiate object of fClass; Bool_tfIsGlobalplugin ctor is a global function; Bool_tfIsMacroplugin is a macro and not a library; TFunction*fMethod!ctor method or global function; TStringfOriginorigin of plugin handler definition; TStringfPluginplugin library which should contain fClass; TStringfRegexpregular expression which must be matched in URI. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin); Create a plugin handler. Called by TPluginManager. Bool_t CanHandle(const char* base, const char* uri); Check if regular expression appears in the URI, if so return kTRUE.; If URI = 0 always return kTRUE. void SetupCallEnv(); Setup ctor or static method call environment. Int_t CheckPlugin() const; Check if the plugin library for this handler exits. Returns 0; when it exists and -1 in case the plugin does not exist. Int_t LoadPlugin(); Load the plugin library for this handler. Returns 0 on successful loading; and -1 in case the library does not exist or in case of error. Long_t ExecPlugin(Int_t va_(nargs), ...); Execute ctor for this plugin and return pointer to object of specific; class. User must cast the returned long to the correct class.; This method accepts a variable number of arguments to be passed; to the ctor, where nargs is the number of arguments, followed; by nargs arguments. Returns 0 in case of error. void Print(Option_t* opt = """") const; Print info about the plugin handler. If option is ""a"" print; also the ctor's that will be used. TPluginHandler(); { }. TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin). TPluginHandler& operator=(const TPluginHandler& ). const char * GetBase() const; { ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginHandler.html:9770,plugin,plugin,9770,root/html528/TPluginHandler.html,https://root.cern,https://root.cern/root/html528/TPluginHandler.html,6,['plugin'],['plugin']
Modifiability,"is out of bounds. ;  ; TObject *& operator[] (Int_t idx) override;  Return pointer to reserved area in which a new object of clones class can be constructed. ;  ; TObject * Remove (TObject *obj) override;  Remove object from array. ;  ; TObject * RemoveAt (Int_t idx) override;  Remove object at index idx. ;  ; void RemoveRange (Int_t idx1, Int_t idx2) override;  Remove objects from index idx1 to idx2 included. ;  ; void SetClass (const char *classname, Int_t size=1000);  see TClonesArray::SetClass(const TClass*) ;  ; void SetClass (const TClass *cl, Int_t size=1000);  Create an array of clone objects of class cl. ;  ; void SetOwner (Bool_t enable=kTRUE) override;  A TClonesArray is always the owner of the object it contains. ;  ; void Sort (Int_t upto=kMaxInt) override;  If objects in array are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Write all objects in array to the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObjArray;  TObjArray (const TObjArray &a);  Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ;  ;  TObjArray (Int_t s=TCollection::kInitCapacity, Int_t lowerBound=0);  Create an object array. ;  ; virtual ~TObjArray ();  Delete an array. ;  ; void Add (TObject *obj) override;  ; void AddAfter (const TObject *after, TObject *obj) override;  Add object in the slot after object after. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Add object at position ids. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Add object in the slot before object before. ;  ; void AddFirst (TObject *obj) override;  Add object in the first slot of the array. ;  ; void AddLast (TObject *obj) override;  Add object in the next empty slot in the array. ;  ; TObject * After (const TObject *obj) const override;  Return the object after obj. Returns 0 if obj is last object. ;  ; TObject * At (Int_t idx) const override;  ; TObject * Before (const TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClonesArray.html:9693,inherit,inherited,9693,doc/master/classTClonesArray.html,https://root.cern,https://root.cern/doc/master/classTClonesArray.html,1,['inherit'],['inherited']
Modifiability,"is overlapping or subsequent and, if the case, return a merged element. ;  ; void Print (Option_t *options="""") const override;  Print a TDSetElement. When option=""a"" print full data. ;  ; void Reset ();  Reset TDSet element. ;  ; void SetDataSet (const char *dataset);  ; void SetEntries (Long64_t ent);  ; void SetEntryList (TObject *aList, Long64_t first=-1, Long64_t num=-1);  Set entry (or event) list for this element. ;  ; void SetFirst (Long64_t first);  ; void SetLookedUp ();  ; void SetMaxProcTime (Float_t mpt);  ; void SetNum (Long64_t num);  ; void SetTDSetOffset (Long64_t offset);  ; void SetValid ();  ; void Streamer (TBuffer &) override;  Stream an object of class TDSetElement. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Validate (Bool_t isTree);  Validate by opening the file. ;  ; void Validate (TDSetElement *elem);  Validate by checking against another element. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSetElement.html:4293,inherit,inherited,4293,doc/master/classTDSetElement.html,https://root.cern,https://root.cern/doc/master/classTDSetElement.html,1,['inherit'],['inherited']
Modifiability,"is p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented in RooNormalizedPdf, RooFixedProdPdf, RooAddModel, RooAddPdf, RooBinSamplingPdf, RooExtendedTerm, RooExtendPdf, RooProdPdf, RooProjectedPdf, RooRealSumPdf, RooSimultaneous, and xRooProjectedPdf.; Definition at line 2398 of file RooAbsPdf.cxx. ◆ extendedTerm() [1/3]. double RooAbsPdf::extendedTerm ; (; double ; sumEntries, . double ; expected, . double ; sumEntriesW2 = 0.0, . bool ; doOffset = false . ); const. Definition at line 730 of file RooAbsPdf.cxx. ◆ extendedTerm() [2/3]. double RooAbsPdf::extendedTerm ; (; double ; sumEntries, . RooArgSet const * ; nset, . double ; sumEntriesW2 = 0.0, . bool ; doOffset = false . ); const. Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ; For successful operation, the PDF implementation must indicate that it is extendable by overloading canBeExtended(), and must implement the expectedEvents() function.; Parameters. [in]sumEntriesThe number of observed events. ; [in]nsetThe normalization set when asking the pdf for the expected number of events. ; [in]observedSumW2The number of observed events when weighting with squared weights. If non-zero, the weight-squared error correction is applied to the extended term. ; [in]doOffsetOffset the extended term by a counterterm where the expected number of events equals the observed number of events. This constant shift results in a term closer to zero that is approximately chi-square distributed. It is useful to do this also when summing multiple NLL terms to avoid numeric precision loss that happens if you sum multiple terms of different orders of magnitude. The weight-squared error correction works as follows: adjust poisson such that estimate of \(N_\mathrm{expect}\) stays at the same value, but has a different variance, rescale both the observed and expected ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:99424,extend,extendable,99424,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['extend'],['extendable']
Modifiability,"is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(const ROOT::Fit::BinData& data). bool Fit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit (default method). return DoLeastSquareFit(const ROOT::Fit::BinData& data). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit an unbinned data set using loglikelihood method. return DoLikelihoodFit(data, extended). bool LikelihoodFit(const Data & data ). Likelihood fit (unbinned or unbinned) depending on the type of data; If Binned default is extended; If Unbinned default is NOT extended (for backward compatibility). return DoLikelihoodFit(data). bool LikelihoodFit(const Data & data, bool extended ). Likelihood fit using extended or not extended method. bool LikelihoodFit( const Data & data, const Function & func, bool extended). fit a data set using any generic model function; Pre-requisite on the function:. SetFunction(func). bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fit using the a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see documentation for following methods FitFCN(IMultiGenFunction & fcn,..). bool SetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Set a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see documentation for following meth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__Fitter.html:7429,extend,extended,7429,root/html534/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__Fitter.html,4,['extend'],['extended']
Modifiability,"is read from the file into memory Once the key structure is read (via Streamer) the class identifier of the object is known. Using the class identifier we find the TClass object for this class. A TClass object contains a full description (i.e. dictionary) of the associated class. In particular the TClass object can create a new object of the class type it describes. This new object now calls its Streamer function to rebuilt itself.; Use TKey::ReadObjectAny to read any object non-derived from TObject. Note; A C style cast can only be used in the case where the final class of this object derives from TObject as a first inheritance, otherwise one must use a dynamic_cast.; Example1: simplified case; class MyClass : public TObject, public AnotherClass; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one get away with using: MyClass *obj = (MyClass*)key->ReadObj();; Example2: Usual case (recommended unless performance is critical); MyClass *obj = dynamic_cast<MyClass*>(key->ReadObj());; which support also the more complex inheritance like: class MyClass : public AnotherClass, public TObject; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented in TKeySQL, and TKeyXML.; Definition at line 759 of file TKey.cxx. ◆ ReadObject(). template<typename T > . T * TKey::ReadObject ; (; ). inline . To read an object (non deriving from TObject) from the file. ; This is more user friendly version of TKey::ReadObjectAny. See TKey::ReadObjectAny for more details. ; Definition at line 103 of file TKey.h. ◆ ReadObjectAny(). void * TKey::ReadObjectAny ; (; const TClass * ; expectedClass). virtual . To read an object (non deriving from TObject) from the file. ; If expectedClass is not null, we checked that that actual class of the object stored is suitable to be stored in a pointer pointing to an object of class 'expectedClass'. We also adjust the value of the returned address so that it is suitable to be cast (C-Style) a pointer pointing to a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey.html:28918,inherit,inheritance,28918,doc/master/classTKey.html,https://root.cern,https://root.cern/doc/master/classTKey.html,1,['inherit'],['inheritance']
Modifiability,"is returned; x, y - returned window position; w, h - returned window size. const char * DisplayName(const char* = 0); Returns hostname on which the display is opened. Handle_t GetNativeEvent() const; Returns the current native event handle. ULong_t GetPixel(Color_t cindex); Returns pixel value associated to specified ROOT color number ""cindex"". void GetPlanes(Int_t& nplanes); Returns the maximum number of planes. void GetRGB(Int_t index, Float_t& r, Float_t& g, Float_t& b); Returns RGB values for color ""index"". void GetTextExtent(UInt_t& w, UInt_t& h, char* mess); Returns the size of the specified character string ""mess"". w - the text width; h - the text height; mess - the string. Int_t GetFontAscent() const; Returns the ascent of the current font (in pixels).; The ascent of a font is the distance from the baseline; to the highest position characters extend to. Int_t GetFontDescent() const; Returns the descent of the current font (in pixels.; The descent is the distance from the base line; to the lowest point characters extend to. Float_t GetTextMagnitude(); Returns the current font magnification factor. Bool_t HasTTFonts() const; Returns True when TrueType fonts are used. Window_t GetWindowID(Int_t wid); Returns the X11 window identifier. wid - workstation identifier (input). Int_t InitWindow(ULong_t window); Creates a new window and return window number.; Returns -1 if window initialization fails. Int_t AddWindow(ULong_t qwid, UInt_t w, UInt_t h); Registers a window created by Qt as a ROOT window. w, h - the width and height, which define the window size. Int_t AddPixmap(ULong_t pixid, UInt_t w, UInt_t h); Registers a pixmap created by TGLManager as a ROOT pixmap. w, h - the width and height, which define the pixmap size. void RemoveWindow(ULong_t qwid); Removes the created by Qt window ""qwid"". void MoveWindow(Int_t wid, Int_t x, Int_t y); Moves the window ""wid"" to the specified x and y coordinates.; It does not change the window's size, raise the window, or change",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualX.html:26622,extend,extend,26622,root/html528/TVirtualX.html,https://root.cern,https://root.cern/root/html528/TVirtualX.html,4,['extend'],['extend']
Modifiability,"is routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 961 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 525 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 533 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but in a graphical form. In addition pointers to other objects can be followed.; The following picture is the Inspect of a histogram object: . Reimplemented in TSystemFile, TInspectorObject, TGFrame, and ROOT::Experimental::XRooFit::xRooNode.; Definition at line 546 of file TObject.cxx. ◆ InvertBit(). void TObject::InvertBit ; (; UInt_t ; f). inline . Definition at line 201 of file TObject.h. ◆ IsA(). virtual TClass * TObject::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in PyROOT::RegulatorCleanup, ROOT::R::TRDataFrame, ROOT::R::TRFunctionExport, ROOT::R::TRFunctionImport, ROOT::R::TRInterface, ROOT::R::TRObject, TVirtualMapFile, TDavixFile, TDavixSystem, TMonaLisaValue, TMonaLisaText, TMonaLisaWriter, TXNetFile, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTObject.html:45128,inherit,inherits,45128,doc/v632/classTObject.html,https://root.cern,https://root.cern/doc/v632/classTObject.html,1,['inherit'],['inherits']
Modifiability,"is routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 538 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but in a graphical form. In addition pointers to other objects can be followed.; The following picture is the Inspect of a histogram object: . Reimplemented in TSystemFile, TInspectorObject, TGFrame, and ROOT::Experimental::XRooFit::xRooNode.; Definition at line 551 of file TObject.cxx. ◆ InvertBit(). void TObject::InvertBit ; (; UInt_t ; f). inline . Definition at line 201 of file TObject.h. ◆ IsA(). virtual TClass * TObject::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in PyROOT::RegulatorCleanup, ROOT::R::TRDataFrame, ROOT::R::TRFunctionExport, ROOT::R::TRFunctionImport, ROOT::R::TRInterface, ROOT::R::TRObject, TVirtualMapFile, TDavixFile, TDavixSystem, ROOT::Experimental::XRooFit::xRooFit::StoredFitResult, ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:44853,inherit,inherits,44853,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['inherit'],['inherits']
Modifiability,"is special node with content ; Definition at line 1218 of file TXMLEngine.cxx. ◆ IsContentNode(). Bool_t TXMLEngine::IsContentNode ; (; XMLNodePointer_t ; xmlnode). return kTRUE is this is special node with content ; Definition at line 1210 of file TXMLEngine.cxx. ◆ IsEmptyNode(). Bool_t TXMLEngine::IsEmptyNode ; (; XMLNodePointer_t ; xmlnode). return kTRUE is this is node with special data like comments to data processing instructions ; Definition at line 1202 of file TXMLEngine.cxx. ◆ IsXmlNode(). Bool_t TXMLEngine::IsXmlNode ; (; XMLNodePointer_t ; xmlnode). return kTRUE is this is normal xmlnode ; Definition at line 1194 of file TXMLEngine.cxx. ◆ Makenstr(). char * TXMLEngine::Makenstr ; (; const char * ; start, . int ; len . ). protected . creates char* variable with copy of len symbols from provided string ; Definition at line 1501 of file TXMLEngine.cxx. ◆ Makestr(). char * TXMLEngine::Makestr ; (; const char * ; str). protected . creates char* variable with copy of provided string ; Definition at line 1486 of file TXMLEngine.cxx. ◆ NewAttr(). XMLAttrPointer_t TXMLEngine::NewAttr ; (; XMLNodePointer_t ; xmlnode, . XMLNsPointer_t ; , . const char * ; name, . const char * ; value . ). creates new attribute for xmlnode, namespaces are not supported for attributes ; Definition at line 586 of file TXMLEngine.cxx. ◆ NewChild(). XMLNodePointer_t TXMLEngine::NewChild ; (; XMLNodePointer_t ; parent, . XMLNsPointer_t ; ns, . const char * ; name, . const char * ; content = nullptr . ). create new child element for parent node ; Definition at line 715 of file TXMLEngine.cxx. ◆ NewDoc(). XMLDocPointer_t TXMLEngine::NewDoc ; (; const char * ; version = ""1.0""). creates new xml document with provided version ; Definition at line 1255 of file TXMLEngine.cxx. ◆ NewIntAttr(). XMLAttrPointer_t TXMLEngine::NewIntAttr ; (; XMLNodePointer_t ; xmlnode, . const char * ; name, . Int_t ; value . ). create node attribute with integer value ; Definition at line 612 of file TXMLEngine.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEngine.html:29637,variab,variable,29637,doc/master/classTXMLEngine.html,https://root.cern,https://root.cern/doc/master/classTXMLEngine.html,1,['variab'],['variable']
Modifiability,"is taken from Minuit.; Histograms of \(x\) are filled by weighting the events with \({_s{\cal P}}\) .; Error bars per bin are given by Eq. (6). The \(\hbox {$_s$}{\cal P}lots\) reproduce the true distributions of the species in the control variable \(x\), within the above defined statistical uncertainties. Illustrations; To illustrate the technique, one considers an example derived from the analysis where \(\hbox {$_s$}{\cal P}lots\) have been first used (charmless B decays). One is dealing with a data sample in which two species are present: the first is termed signal and the second background. A maximum Likelihood fit is performed to obtain the two yields \(N_1\) and \(N_2\) . The fit relies on two discriminating variables collectively denoted \(y\) which are chosen within three possible variables denoted \({m_{\rm ES}}\) , \(\Delta E\) and \({\cal F}\). The variable which is not incorporated in \(y\) is used as the control variable \(x\) . The six distributions of the three variables are assumed to be the ones depicted in Fig. 1. Figure 1 ; Distributions of the three discriminating variables available to perform the Likelihood fit: \({m_{\rm ES}}\) , \(\Delta E\) , \({\cal F}\) . Among the three variables, two are used to perform the fit while one is kept out of the fit to serve the purpose of a control variable. The three distributions on the top (resp. bottom) of the figure correspond to the signal (resp. background). The unit of the vertical axis is chosen such that it indicates the number of entries per bin, if one slices the histograms in 25 bins.; A data sample being built through a Monte Carlo simulation based on the distributions shown in Fig. 1, one obtains the three distributions of Fig. 2. Whereas the distribution of \(\Delta E\) clearly indicates the presence of the signal, the distribution of \({m_{\rm ES}}\) and \({\cal F}\) are less obviously populated by signal. Figure 2 ; Distributions of the three discriminating variables for signal plus backgrou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:7268,variab,variables,7268,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,1,['variab'],['variables']
Modifiability,"is the equivalence of ""."" and ""->"". Not only is this wrong, this egregiously ignores performance concerns that come with dereferencing. It also ensures that people using ROOT/Cling while learning C++ will have trouble compiling their programs using actual compilers. It implies that you intend to keep the (at best) insane class hierarchy TF1 <- TF2 <- TF3 and so on. This example shows some of the major design flaws in ROOT -- a 2-dimensional function IS a 1-dimensional function? There is no abstract base class? No templates? It implies that you plan to keep the pointless T in front of all the names of ROOT, even though you will have access to namespaces (finally) and thus can move past the 1970's C practice of avoiding name collisions by a sort of weird Hungarian notation. It implies that you plan to maintain the outdated interfaces which make no use of templates. Templates are one of the most powerful features of C++, are more relevant to performance critical tasks than inheritance, and help ensure the type-safety of code (thereby ensuring the accuracy of data by helping to prevent accidental narrowing etc). It implies that you intend to continue to encourage the use of bare new and delete operators, instead of relying on the more efficient, reliable, and safe method of using RAII. Why? This begs the obvious question: why bother migrating at all? You wish to migrate to the modern and superior C++11 in order to not take advantage of its features? Why not just simply maintain ROOT5 and CINT, and just refuse to upgrade? ROOT is not a particularly good framework that is written in a language that isn't quite C++. If you are going to break away and make/use/write cling, then fix the poor design decisions: cling will probably break compatibility anyways despite your best efforts, so you might as well take the time and effort to refactor and clean up the code base. A simple example, taken from this website: """""" TFFTComplex One of the interface classes to the FFTW package, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html:9819,inherit,inheritance,9819,d/blog/do-we-need-yet-another-custom-c-interpreter.html,https://root.cern,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html,1,['inherit'],['inheritance']
Modifiability,"is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' is kTRUE, make also sure; that the path is writable. void SetManager(TProofMgr* mgr); Set manager and schedule its destruction after this for clean; operations. Int_t AddWorkers(TList* wrks); Works on the master node only.; It starts workers on the machines in workerList and sets the paths,; packages and macros as on the master.; It is a subbstitute for StartSlaves(...); The code is mostly the master part of StartSlaves,; with the parallel startup removed. Int_t RemoveWorkers(TList* wrks); Used for shuting down the workres after a query is finished.; Sends each of the workers from the workerList, a kPROOF_STOP message.; If the workerList == 0, shutdown all the workers. Bool_t StartSlaves(Bool_t attach = kFALSE); Start up PROOF slaves. void Close(Option_t* option = """"); Close all open sla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:33309,config,config,33309,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,2,['config'],['config']
Modifiability,"is the user; code responsibility to take care (delete) this object to avoid; memory leak. TObject * ReadObj(const TKey* key) const; Read the next TObject from for the TDirectory by TKey provided. Int_t NextEventPut(TObject* obj, UInt_t eventNum, UInt_t runNumber, const char* name = 0); Create a special TKey name with obj provided and write it out. TString MapName(const char* name, const char* localSystemKey = 0, const char* mountedFileSystemKey = 0). MapName(const char *name, const char *localSystemKey,const char *mountedFileSystemKey). Substitute the logical name with the real one if any; 1. add a line into system.rootrc or ~/.rootrc or ./.rootrc. TFileIter.ForeignFileMap mapFile // the name of the file; to map the local name; to the global file service. If this line is omitted then TFileIter class seeks for; the default mapping file in the current directory ""io.config"". const char * GetResourceName(). {return ""ForeignFileMap"";}. const char * GetDefaultMapFileName(). {return ""io.config"";}. const char * GetLocalFileNameKey(). {return ""LocalFileSystem"";}. const char * GetForeignFileSystemKey(). {return ""MountedFileSystem"";}. Int_t CurrentCursorPosition() const. const TFile * GetTFile() const. { return GetTDirectory()->GetFile(); }. const TDirectory * GetTDirectory() const. { return fNestedIterator ? fNestedIterator->GetTDirectory() : fRootFile; }. TObject * Next(). void Rewind(). void SetCursorPosition(Int_t cursorPosition). TFileIter & operator=(const char* keyNameToFind). TFileIter & operator=(Int_t cursorPosition). TFileIter & operator+=(Int_t shift). { SkipObjects(shift); return *this;}. TFileIter & operator-=(Int_t shift). { return operator+=(-shift);}. TFileIter & operator++(). { SkipObjects( 1); return *this;}. TFileIter & operator--(). { SkipObjects(-1); return *this;}. TObject * operator*() const. { return GetObject();}. inline operator int() const. { return CurrentCursorPosition(); }. int operator==(const char* name) const. { return name ? !strcmp(name,GetK",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileIter.html:10667,config,config,10667,root/html528/TFileIter.html,https://root.cern,https://root.cern/root/html528/TFileIter.html,6,['config'],['config']
Modifiability,"is the user; code responsibility to take care (delete) this object to avoid; memory leak. TObject * ReadObj(const TKey* key) const; Read the next TObject from for the TDirectory by TKey provided. Int_t NextEventPut(TObject* obj, UInt_t eventNum, UInt_t runNumber, const char* name = 0); Create a special TKey name with obj provided and write it out. TString MapName(const char* name, const char* localSystemKey = 0, const char* mountedFileSystemKey = 0). MapName(const char *name, const char *localSystemKey,const char *mountedFileSystemKey). Substitute the logical name with the real one if any; 1. add a line into system.rootrc or ~/.rootrc or ./.rootrc. TFileIter.ForeignFileMap mapFile // the name of the file; to map the local name; to the global file service. If this line is omitted then TFileIter class seeks for; the default mapping file in the current directory ""io.config"". const char * GetResourceName(). {return ""ForeignFileMap"";}. const char * GetDefaultMapFileName(). {return ""io.config"";}. const char * GetLocalFileNameKey(). {return ""LocalFileSystem"";}. const char * GetForeignFileSystemKey(). {return ""MountedFileSystem"";}. Int_t CurrentCursorPosition() const. const TFile * GetTFile() const. { return GetTDirectory()->GetFile(); }. const TDirectory * GetTDirectory() const. { return fNestedIterator ? fNestedIterator->GetTDirectory() : fRootFile; }. TObject * Next(). void Rewind(). void SetCursorPosition(Int_t cursorPosition). TFileIter & operator=(const char* keyNameToFind). TFileIter & operator=(Int_t cursorPosition). inline operator const TDirectory *() const. { return GetTDirectory(); }. inline operator const TFile *() const. { return GetTFile (); }. TFileIter & operator+=(Int_t shift). { SkipObjects(shift); return *this;}. TFileIter & operator-=(Int_t shift). { return operator+=(-shift);}. TFileIter & operator++(). { SkipObjects( 1); return *this;}. TFileIter & operator--(). { SkipObjects(-1); return *this;}. TObject * operator*() const. { return GetObject();}. in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileIter.html:10577,config,config,10577,root/html602/TFileIter.html,https://root.cern,https://root.cern/root/html602/TFileIter.html,4,['config'],['config']
Modifiability,"is variable. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel, double xlo, double xhi, Int_t nBins) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel, const RooAbsBinning **bins) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel=nullptr, double *xlo=nullptr, double *xhi=nullptr, Int_t *nBins=nullptr) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH3F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, const char *tAxisLabel, const RooAbsBinning **bins) const;  ; TH3F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, const char *tAxisLabel, double *xlo=nullptr, double *xhi=nullptr, Int_t *nBins=nullptr) const;  Create an empty 3D-histogram with appropriate scale and labels for this variable (x) and the specified y,z variables. ;  ; TH1 * createHistogram (const char *name, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) const;  ; TH1 * createHistogram (const char *name, const RooLinkedList &cmdList) const;  Create empty 1,2 or 3D histogram Arguments recognized. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet *nset=nullptr, const RooNumIntConfig *cfg=nullptr, const char *rangeName=nullptr) const override;  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; RooPlot * frame () const;  Create a new RooPlot on the h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:6058,variab,variable,6058,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,8,['variab'],"['variable', 'variables']"
Modifiability,"is would be wrong!!!; Also if the class represented by 'this' and NONE of its parents classes have a virtual ptr table, the result will be 'this' and NOT the actual class. ; Definition at line 2607 of file TClass.cxx. ◆ GetBaseClass() [1/2]. TClass * TClass::GetBaseClass ; (; const char * ; classname). Return pointer to the base class ""classname"". ; Returns 0 in case ""classname"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2655 of file TClass.cxx. ◆ GetBaseClass() [2/2]. TClass * TClass::GetBaseClass ; (; const TClass * ; cl). Return pointer to the base class ""cl"". ; Returns 0 in case ""cl"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2674 of file TClass.cxx. ◆ GetBaseClassOffset(). Int_t TClass::GetBaseClassOffset ; (; const TClass * ; toBase, . void * ; address = nullptr, . bool ; isDerivedObject = true . ). Return data member offset to the base class ""cl"".; Returns -1 in case ""cl"" is not a base class. Takes care of multiple inheritance. . Definition at line 2791 of file TClass.cxx. ◆ GetBaseClassOffsetRecurse(). Int_t TClass::GetBaseClassOffsetRecurse ; (; const TClass * ; cl). private . Return data member offset to the base class ""cl"". . Returns -1 in case ""cl"" is not a base class.; Returns -2 if cl is a base class, but we can't find the offset because it's virtual. Takes care of multiple inheritance. . Definition at line 2705 of file TClass.cxx. ◆ GetBaseDataMember(). TClass * TClass::GetBaseDataMember ; (; const char * ; datamember). Return pointer to (base) class that contains datamember. ; Definition at line 2827 of file TClass.cxx. ◆ GetCheckSum() [1/3]. UInt_t TClass::GetCheckSum ; (; Bool_t & ; isvalid); const. Return GetCheckSum(kCurrentCheckSum,isvalid);. ; Definition at line 6514 of file TClass.cxx. ◆ GetCheckSum() [2/3]. UInt_t TClass::GetCheckSum ; (; ECheckSum ; code, . Bool_t & ; isvalid . ); const. Compute and/or return the class check sum. ; isvalid is set to false, if the function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:70515,inherit,inheritance,70515,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inheritance']
Modifiability,"is would be wrong!!!; Also if the class represented by 'this' and NONE of its parents classes have a virtual ptr table, the result will be 'this' and NOT the actual class. ; Definition at line 2674 of file TClass.cxx. ◆ GetBaseClass() [1/2]. TClass * TClass::GetBaseClass ; (; const char * ; classname). Return pointer to the base class ""classname"". ; Returns 0 in case ""classname"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2722 of file TClass.cxx. ◆ GetBaseClass() [2/2]. TClass * TClass::GetBaseClass ; (; const TClass * ; cl). Return pointer to the base class ""cl"". ; Returns 0 in case ""cl"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2741 of file TClass.cxx. ◆ GetBaseClassOffset(). Int_t TClass::GetBaseClassOffset ; (; const TClass * ; toBase, . void * ; address = nullptr, . bool ; isDerivedObject = true . ). Return data member offset to the base class ""cl"".; Returns -1 in case ""cl"" is not a base class. Takes care of multiple inheritance. . Definition at line 2858 of file TClass.cxx. ◆ GetBaseClassOffsetRecurse(). Int_t TClass::GetBaseClassOffsetRecurse ; (; const TClass * ; cl). private . Return data member offset to the base class ""cl"". . Returns -1 in case ""cl"" is not a base class.; Returns -2 if cl is a base class, but we can't find the offset because it's virtual. Takes care of multiple inheritance. . Definition at line 2772 of file TClass.cxx. ◆ GetBaseDataMember(). TClass * TClass::GetBaseDataMember ; (; const char * ; datamember). Return pointer to (base) class that contains datamember. ; Definition at line 2894 of file TClass.cxx. ◆ GetCheckSum() [1/3]. UInt_t TClass::GetCheckSum ; (; Bool_t & ; isvalid); const. Return GetCheckSum(kCurrentCheckSum,isvalid);. ; Definition at line 6581 of file TClass.cxx. ◆ GetCheckSum() [2/3]. UInt_t TClass::GetCheckSum ; (; ECheckSum ; code, . Bool_t & ; isvalid . ); const. Compute and/or return the class check sum. ; isvalid is set to false, if the function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:70516,inherit,inheritance,70516,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inheritance']
Modifiability,"is) 2-D histograms using input arrays of type float. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size (along Y axis) 2-D histograms. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for fix bin size 2-D histograms. ;  ; virtual void DoFitSlices (bool onX, TF1 *f1, Int_t firstbin, Int_t lastbin, Int_t cut, Option_t *option, TObjArray *arr);  ; virtual TH1D * DoProjection (bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) const;  Internal (protected) method for performing projection on the X or Y axis called by ProjectionX or ProjectionY. ;  ; virtual TH1D * DoQuantiles (bool onX, const char *name, Double_t prob) const;  Implementation of quantiles for x or y. ;  ; Double_t Interpolate (Double_t x) const override;  illegal for a TH2 ;  ;  Protected Member Functions inherited from TH1;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Constructor for variable bin size histograms using an input array of type float. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Constructor for fix bin size histograms. ;  ; virtual Int_t AutoP2FindLimits (Double_t min, Double_t max);  Buffer-based estimate of the histogram range using the power of 2 algorithm. ;  ; Int_t AxisChoice (Option_t *axis) const;  Choose an axis according to ""axis"". ;  ; virtual void DoFillN (Int_t ntimes, const Double_t *x, const Double_t *w, Int_t stride=1);  Internal method to fill histogram content from a vector called directly by TH1::BufferEmpty. ;  ; virtual Double_t DoInte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:57490,inherit,inherited,57490,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['inherit'],['inherited']
Modifiability,"is, Bool_t compact, Bool_t verbose = kFALSE); Bool_tRooAbsArg::recursiveCheckDependents(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveCheckObservables(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRooAbsArg::redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); voidRooAbsArg::registerCache(RooAbsCache& cache); voidRooAbsArg::removeServer(RooAbsArg& server, Bool_t force = kFALSE); voidRooAbsArg::replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); RooChi2Var(const RooChi2Var& other, const char* name = 0); RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitCutRange = kTRUE, RooDataHist::ErrorType = RooDataHist::SumW2); RooChi2Var(const char* name, const char* title, RooAbsReal& func, RooDataHist& data, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooChi2Var.html:23901,extend,extended,23901,root/html602/RooChi2Var.html,https://root.cern,https://root.cern/root/html602/RooChi2Var.html,4,['extend'],['extended']
Modifiability,"is.; Definition at line 861 of file xRooNode.cxx. ◆ GetBinWidth(). double Axis2::GetBinWidth ; (; Int_t ; bin); const. inlineoverridevirtual . Return bin width. ; Reimplemented from TAxis.; Definition at line 847 of file xRooNode.cxx. ◆ GetTitle(). const char * Axis2::GetTitle ; (; ); const. inlineoverridevirtual . Returns title of object. ; This default method returns the class title (i.e. description). Classes that give objects a title should override this method. ; Reimplemented from TObject.; Definition at line 868 of file xRooNode.cxx. ◆ rvar(). RooAbsRealLValue * Axis2::rvar ; (; ); const. inlineprivate . Definition at line 908 of file xRooNode.cxx. ◆ Set() [1/3]. void Axis2::Set ; (; Int_t ; nbins, . const double * ; xbins . ). inlineoverridevirtual . Initialize axis with variable bins. ; Reimplemented from TAxis.; Definition at line 881 of file xRooNode.cxx. ◆ Set() [2/3]. void Axis2::Set ; (; Int_t ; nbins, . const float * ; xbins . ). inlineoverridevirtual . Initialize axis with variable bins. ; Reimplemented from TAxis.; Definition at line 887 of file xRooNode.cxx. ◆ Set() [3/3]. void Axis2::Set ; (; Int_t ; nbins, . double ; xmin, . double ; xmax . ). inlineoverridevirtual . Initialize axis with fix bins. ; Reimplemented from TAxis.; Definition at line 894 of file xRooNode.cxx. ◆ SetTitle(). void Axis2::SetTitle ; (; const char * ; title). inlineoverridevirtual . Set the title of the TNamed. ; Reimplemented from TNamed.; Definition at line 872 of file xRooNode.cxx. ◆ TAxis() [1/4]. TAxis::TAxis ; (; ). Default constructor. ; Definition at line 79 of file TAxis.cxx. ◆ TAxis() [2/4]. TAxis::TAxis ; (; const TAxis & ; axis). Copy constructor. ; Definition at line 82 of file TAxis.cxx. ◆ TAxis() [3/4]. TAxis::TAxis ; (; Int_t ; nbins, . const Double_t * ; xbins . ). Axis constructor for variable bin size. ; Definition at line 81 of file TAxis.cxx. ◆ TAxis() [4/4]. TAxis::TAxis ; (; Int_t ; nbins, . Double_t ; xmin, . Double_t ; xmax . ). Axis constructor for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classAxis2.html:23646,variab,variable,23646,doc/master/classAxis2.html,https://root.cern,https://root.cern/doc/master/classAxis2.html,1,['variab'],['variable']
Modifiability,"is::fTitleColorcolor of axis title; Style_tTAttAxis::fTitleFontfont for axis title; Float_tTAttAxis::fTitleOffsetoffset of axis title; Float_tTAttAxis::fTitleSizesize of axis title. private:. UShort_tfBits2second bit status word; Int_tfFirstfirst bin to display; THashList*fLabelsList of labels; Int_tfLastlast bin to display; Int_tfNbinsNumber of bins; TObject*fParent!Object owning this axis; Bool_tfTimeDisplayon/off displaying time values instead of numerics; TStringfTimeFormatDate&time format, ex: 09/12/99 12:34:00; TArrayDfXbinsBin edges array in X; Double_tfXmaxupper edge of last bin; Double_tfXminlow edge of first bin; static TAxis::(anonymous)kAlphanumeric; static TAxis::(anonymous)kCanExtend; static TAxis::(anonymous)kNotAlpha. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAxis(); Default constructor. TAxis(Int_t nbins, Double_t xmin, Double_t xmax); Axis constructor for axis with fix bin size. TAxis(Int_t nbins, const Double_t* xbins); Axis constructor for variable bin size. ~TAxis(); Destructor. TAxis(const TAxis& axis); Copy constructor. TAxis& operator=(const TAxis& ); Assignment operator. const char * ChooseTimeFormat(Double_t axislength = 0); Choose a reasonable time format from the coordinates in the active pad; and the number of divisions in this axis; If orientation = ""X"", the horizontal axis of the pad will be used for ref.; If orientation = ""Y"", the vertical axis of the pad will be used for ref. void Copy(TObject& axis) const; Copy axis structure to another axis. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an axis. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when an axis is clicked with the locator. The axis range is set between the position where the mouse is pressed; and the position where it is released.; If the mouse position is outside the current axis range when it is released; t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAxis.html:12467,variab,variable,12467,root/html602/TAxis.html,https://root.cern,https://root.cern/root/html602/TAxis.html,4,['variab'],['variable']
Modifiability,"is:; import { httpRequest, draw } from './jsrootsys/modules/core.mjs';; let res = await httpRequest(""your_server/multi.json?number=3"", ""multi"",; ""Files/job1.root/hpx/root.json\nFiles/job1.root/hpxpy/root.json\nFiles/job1.root/hprof/root.json\n"");; for (let n = 0; n < res.length; ++n) {; console.log('Requested element of type', res[n]._typename);; // draw('drawid', res[n], 'hist');; }; Here argument “multi” identifies, that server response should be parsed with parseMulti() function, which correctly interprets JSON code, produced by multi.json request. When sending such request to the server, one should provide list of objects names and not forget “?number=N” parameter in the request URL string.; 1.10 Using unix sockets; Starting from ROOT version 6.28, one can start server with unix socket. Just do:; Just call:; [root] new THttpServer(""socket:/tmp/root.socket""); Name of socket should be unique and not match any existing files.; Most easy way to access THttpServer running via unix socket is to configure ssh tunnel:; [shell] ssh -L 7654:/tmp/root.socket localhost; Once such tunnel is configured one can open following URL in web browser:; [shell] xdg-open http://localhost:7654; 1.11 Websockets supports; Websockets support available starting from ROOT v6.12. Minimal example provided in $ROOTSYS/tutorials/http/ws.C macro.; To work with websockets, subclass of THttpWSHandler should be created and registered to THttpServer:; #include ""THttpWSHandler.h"". class TUserHandler : public THttpWSHandler {; public:; TUserHandler(const char *name, const char *title) : THttpWSHandler(name, title) {}. // provide custom HTML page when open correspondent address; TString GetDefaultPageContent() override { return ""file:ws.htm""; }. Bool_t ProcessWS(THttpCallArg *arg) override;; };; Central method is TUserHandler::ProcessWS(THttpCallArg *arg), where four kinds of websockets events should be handled:. WS_CONNECT - clients attempts to create websockets, return false when refusing connection; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html:22602,config,configure,22602,root/htmldoc/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html,2,['config'],['configure']
Modifiability,"is; Int_tTVirtualFitter::fYlastlast bin on Y axis; Int_tTVirtualFitter::fZfirstfirst bin on Z axis; Int_tTVirtualFitter::fZlastlast bin on Z axis; static TStringTVirtualFitter::fgDefaultname of the default fitter (""Minuit"",""Fumili"",etc); static Double_tTVirtualFitter::fgErrorDefError definition (default=1); static TVirtualFitter*TVirtualFitter::fgFitterCurrent fitter (default TFitter); static Int_tTVirtualFitter::fgMaxiterMaximum number of iterations; static Int_tTVirtualFitter::fgMaxparMaximum number of fit parameters for current fitter; static Double_tTVirtualFitter::fgPrecisionmaximum precision. private:. vector<double>fCovarcached covariance matrix (NxN); auto_ptr<ROOT::Fit::FitData>fFitData! data of the fit (managed by TBackCompFitter); auto_ptr<ROOT::Fit::Fitter>fFitter! pointer to fitter object (managed by TBackCompFitter); ROOT::Math::Minimizer*fMinimizer; ROOT::Math::IParamMultiFunction*fModelFunc; ROOT::Math::IMultiGenFunction*fObjFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBackCompFitter(); Constructur needed by TVirtualFitter interface. Same behavior as default constructor.; initialize setting name and the global pointer. TBackCompFitter(auto_ptr<ROOT::Fit::Fitter> fitter, auto_ptr<ROOT::Fit::FitData> data); constructor used after having fit using directly ROOT::Fit::Fitter; will create a dummy fitter copying configuration and parameter settings. ~TBackCompFitter(); data are own here; if (fFitData) delete fFitData;. Double_t Chisquare(Int_t npar, Double_t* params) const; do chisquare calculations in case of likelihood fits; do evaluation a the minimum only. void Clear(Option_t* option = """"); clear resources for consecutive fits. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); execute the command (Fortran Minuit compatible interface). bool ValidParameterIndex(int ipar) const; check if ipar is a valid parameter index. void FixParameter(Int_t ipar); fix the paramter; std::cout<<""Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBackCompFitter.html:12687,Inherit,Inheritance,12687,root/html602/TBackCompFitter.html,https://root.cern,https://root.cern/root/html602/TBackCompFitter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"isHastings::FunctionSignkPositive; static RooStats::MetropolisHastings::FunctionTypekRegular; static RooStats::MetropolisHastings::FunctionSignkSignUnset; static TObject::(anonymous)TObject::kSingleKey; static RooStats::MetropolisHastings::FunctionTypekTypeUnset; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooArgSetfChainParamsRooRealVars that are stored in the chain; RooAbsReal*fFunctionfunction that will generate likelihood values; Int_tfNumBurnInStepsnumber of iterations to discard as burn-in, starting from the first; Int_tfNumItersnumber of iterations to run metropolis algorithm; RooArgSetfParametersRooRealVars that define all parameter space; RooStats::ProposalFunction*fPropFuncProposal function for MCMC integration; enum FunctionSignfSignwhether the likelihood is negative (like NLL) or positive; enum FunctionTypefTypewhether the likelihood is on a regular, log, (or other) scale. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MetropolisHastings(); default constructor. MetropolisHastings(RooAbsReal& function, const RooArgSet& paramsOfInterest, RooStats::ProposalFunction& proposalFunction, Int_t numIters). MarkovChain* ConstructChain(). Bool_t ShouldTakeStep(Double_t d). Double_t CalcNLL(Double_t xL). MetropolisHastings(); default constructor. virtual ~MetropolisHastings(); {}. void SetChainParameters(const RooArgSet& set); specify the parameters to store in the chain; if not specified all of them will be stored. { fChainParams.removeAll(); fChainParams.add(set); RemoveConstantParameters(&fChainParams); }. void SetParameters(const RooArgSet& set); specify all the parameters of interest in the interval. { fParameters.removeAll(); fParameters.add(set); RemoveConstantParameters(&fParameters); }. void SetProposalFunction(RooStats::ProposalFunction& proposalFunction); set the proposal function for suggesting new points for the MCMC. { fPropFunc = &proposalFunction",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MetropolisHastings.html:8890,Inherit,Inheritance,8890,root/html602/RooStats__MetropolisHastings.html,https://root.cern,https://root.cern/root/html602/RooStats__MetropolisHastings.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"isLeaves (Bool_t flag=kTRUE) override;  Set visibility for leaves. ;  ; void SetVisOnly (Bool_t flag=kTRUE) override;  Set visibility for leaves. ;  ; void SetVoxelFinder (TGeoVoxelFinder *finder);  ; void SortNodes ();  sort nodes by decreasing volume of the bounding box. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGeoVolume. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmarkSaved ();  Reset SavePrimitive bits. ;  ; Bool_t Valid () const;  Check if the shape of this volume is valid. ;  ; void VisibleDaughters (Bool_t vis=kTRUE);  set visibility for daughters ;  ; void Voxelize (Option_t *option);  build the voxels for this volume ;  ; Double_t Weight (Double_t precision=0.01, Option_t *option=""va"");  Estimate the weight of a volume (in kg) with SIGMA(M)/M better than PRECISION. ;  ; Double_t WeightA () const;  Analytical computation of the weight. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume.html:24665,inherit,inherited,24665,doc/master/classTGeoVolume.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume.html,1,['inherit'],['inherited']
Modifiability,"isStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeMatrix() [1/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoNodeMatrix & ; gnm). privatedelete . ◆ TGeoNodeMatrix() [2/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; ). Default constructor. ; Definition at line 749 of file TGeoNode.cxx. ◆ TGeoNodeMatrix() [3/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoVolume * ; vol, . const TGeoMatrix * ; matrix . ). Constructor. ; Definition at line 757 of file TGeoNode.cxx. ◆ ~TGeoNodeMatrix(). TGeoNodeMatrix::~TGeoNodeMatrix ; (; ). override . Destructor. ; Definition at line 767 of file TGeoNode.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoNodeMatrix",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNodeMatrix.html:19497,inherit,inherited,19497,doc/master/classTGeoNodeMatrix.html,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html,2,['inherit'],['inherited']
Modifiability,"isStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeOffset() [1/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoNodeOffset & ; ). privatedelete . ◆ TGeoNodeOffset() [2/3]. TGeoNodeOffset::TGeoNodeOffset ; (; ). Default constructor. ; Definition at line 846 of file TGeoNode.cxx. ◆ TGeoNodeOffset() [3/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoVolume * ; vol, . Int_t ; index, . Double_t ; offset . ). Constructor. Null pointer to matrix means identity transformation. ; Definition at line 857 of file TGeoNode.cxx. ◆ ~TGeoNodeOffset(). TGeoNodeOffset::~TGeoNodeOffset ; (; ). override . Destructor. ; Definition at line 868 of file TGeoNode.cxx. Member Functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNodeOffset.html:19537,inherit,inherited,19537,doc/master/classTGeoNodeOffset.html,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html,2,['inherit'],['inherited']
Modifiability,"isValid() const; Int_tRooAbsFunc::numCall() const; virtual Double_toperator()(const Double_t[] xvector) const; RooRealAnalytic&operator=(const RooRealAnalytic&); virtual list<Double_t>*RooRealBinding::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; voidRooAbsFunc::resetNumCall() const; virtual voidRooRealBinding::restoreXVec() const; RooRealAnalytic(const RooRealAnalytic&); RooRealAnalytic(const RooAbsReal& func, const RooArgSet& vars, Int_t code, const RooArgSet* normSet = 0, const TNamed* rangeName = 0); virtual voidRooRealBinding::saveXVec() const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidRooRealBinding::loadValues(const Double_t[] xvector) const. Data Members; protected:. Bool_tRooRealBinding::_clipInvalid; Int_t_code; list<RooAbsReal*>RooRealBinding::_compList!; list<Double_t>RooRealBinding::_compSave!; UInt_tRooAbsFunc::_dimensionNumber of observables; const RooAbsReal*RooRealBinding::_func; Double_tRooRealBinding::_funcSave!; Int_tRooAbsFunc::_ncallFunction call counter; const RooArgSet*RooRealBinding::_nset; const TNamed*RooRealBinding::_rangeName!; Bool_tRooAbsFunc::_validIs binding in valid state?; RooAbsRealLValue**RooRealBinding::_vars; Double_t*RooRealBinding::_xsave; Bool_tRooRealBinding::_xvecValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Double_t operator()(const Double_t[] xvector) const; Evaluate our analytic integral at the specified values of the dependents. inline RooRealAnalytic(const RooAbsReal& func, const RooArgSet& vars, Int_t code, const RooArgSet* normSet = 0, const TNamed* rangeName = 0); { }. virtual ~RooRealAnalytic(); { }. » Last changed: Tue Jun 2 15:33:19 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooRealAnalytic.html:2291,Inherit,Inheritance,2291,root/html604/RooRealAnalytic.html,https://root.cern,https://root.cern/root/html604/RooRealAnalytic.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"isVertex(). virtual void TView::AxisVertex ; (; Double_t ; ang, . Double_t * ; av, . Int_t & ; ix1, . Int_t & ; ix2, . Int_t & ; iy1, . Int_t & ; iy2, . Int_t & ; iz1, . Int_t & ; iz2 . ). pure virtual . Implemented in TView3D. ◆ Centered(). virtual void TView::Centered ; (; ). pure virtual . Implemented in TView3D. ◆ Centered3DImages(). virtual void TView::Centered3DImages ; (; TVirtualPad * ; pad = nullptr). pure virtual . Implemented in TView3D. ◆ Class(). static TClass * TView::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TView::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TView::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 127 of file TView.h. ◆ CreateView(). TView * TView::CreateView ; (; Int_t ; system = 1, . const Double_t * ; rmin = nullptr, . const Double_t * ; rmax = nullptr . ). static . Create a concrete default 3-d view via the plug-in manager. ; Definition at line 27 of file TView.cxx. ◆ DeclFileName(). static const char * TView::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 127 of file TView.h. ◆ DefinePerspectiveView(). virtual void TView::DefinePerspectiveView ; (; ). pure virtual . Implemented in TView3D. ◆ DefineViewDirection(). virtual void TView::DefineViewDirection ; (; const Double_t * ; s, . const Double_t * ; c, . Double_t ; cosphi, . Double_t ; sinphi, . Double_t ; costhe, . Double_t ; sinthe, . Double_t ; cospsi, . Double_t ; sinpsi, . Double_t * ; tnorm, . Double_t * ; tback . ). pure virtual . Implemented in TView3D. ◆ DrawOutlineCube(). virtual void TView::DrawOutlineCube ; (; TList * ; outline, . Double_t * ; rmin, . Double_t * ; rmax . ). pure virtual . Implemented in TView3D. ◆ ExecuteEvent(). void TView::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). overridepure virtual . Execute action co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView.html:18078,plug-in,plug-in,18078,doc/master/classTView.html,https://root.cern,https://root.cern/doc/master/classTView.html,1,['plug-in'],['plug-in']
Modifiability,"isZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3(); Default constructor. TH3(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3(const TH3& ); Copy constructor.; The list of functions is not copied. (Use Clone if needed). ~TH3(); Destructor. void Copy(TObject& hnew) const; Copy. Int_t BufferEmpty(Int_t action = 0); Fill histogram with all entries in the buffer.; action = -1 histogram is reset and refilled from the buffer (called by THistPainter::Paint); action = 0 histogram is filled from the buffer; action = 1 histogram is filled and buffer is deleted; The buffer is automatically deleted when the number of entries; in the buffer is greater than the number of entries in the histogram. Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t w); accumulate arguments in buffer. When buffer is full, empty the buffer; fBuffer[0] = number of entries in buffer; fBuffer[1] = w of first entry; fBuffer[2] = x of first entry; fBuffer[3] = y of first entry; fBuffer[4] = z of first entry. Int_t Fill(Double_t );",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3.html:29699,variab,variable,29699,root/html602/TH3.html,https://root.cern,https://root.cern/root/html602/TH3.html,4,['variab'],['variable']
Modifiability,"isableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGTable; void DoRedraw () override;  Redraw the TGTable. ;  ; virtual void Expand (UInt_t nrows, UInt_t ncolumns);  Expand a TGTable by nrows and ncolumns. ;  ; virtual void ExpandColumns (UInt_t ncolumns);  Expand the columns of a TGTable by ncolumns. ;  ; virtual void ExpandRows (UInt_t nrows);  Expand the rows of a TGTable by nrows. ;  ; virtual UInt_t GetCHdrWidth () const;  Get the current width of the column header frame. ;  ; virtual UInt_t GetRHdrHeight () const;  Get the current height of the row header frame. ;  ; virtual void Init ();  Initialise the TGTable. ;  ; virtual void ResizeTable (UInt_t nrows, UInt_t ncolumns);  Resize the table to newnrows and newncolumns and add all the frames to their parent frames. ;  ; virtual void SetInterface (TVirtualTableInterface *interface, UInt_t nrows=50, UInt_t ncolumns=20);  Set the interface that the TGTable uses to interface. ;  ; virtual void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSimpleTable.html:30836,inherit,inherited,30836,doc/master/classTGSimpleTable.html,https://root.cern,https://root.cern/doc/master/classTGSimpleTable.html,3,['inherit'],['inherited']
Modifiability,"isation called by all constructors. ~MethodCFMlpANN( void ); destructor. void Train( void ); training of the Clement-Ferrand NN classifier. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns CFMlpANN output (normalised within [0,1]). Double_t EvalANN(vector<Double_t>& , Bool_t& isOK); evaluates NN value as function of input variables. void NN_ava(Double_t* ); auxiliary functions. Double_t NN_fonc(Int_t , Double_t ) const; activation function. void ReadWeightsFromStream(istream& istr); read back the weight from the training from file (stream). Int_t DataInterface(Double_t* , Double_t* , Int_t* , Int_t* , Int_t* , Int_t* , Double_t* , Int_t* , Int_t* ); data interface function. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); read weights from xml file. void PrintWeights(ostream& o) const; write the weights of the neural net. TMVA::MethodCFMlpANN* This( void ); static pointer to this object (required for external functions. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void MakeClassSpecificHeader(ostream& , const TString& = """") const; write specific classifier response for header. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". Double_t GetData(Int_t isel, Int_t ivar) const; data accessors for external functions. { return (*fData)(isel, ivar); }. Int_t GetClass(Int_t ivar) const; { return (*fClass)[ivar]; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodCFMlpANN.h 39395 2011-05-26 10:05:54Z moneta $ » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html:24534,variab,variables,24534,root/html530/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html,1,['variab'],['variables']
Modifiability,"isation:␛[0m; : ; : Optimal performance for the linear discriminant is obtained for ; : linearly correlated Gaussian-distributed variables. Any deviation; : from this ideal reduces the achievable separation power. In ; : particular, no discrimination at all is achieved for a variable; : that has the same sample mean for signal and background, even if ; : the shapes of the distributions are very different. Thus, the linear ; : discriminant often benefits from a suitable transformation of the ; : input variables. For example, if a variable x in [-1,1] has a ; : a parabolic signal distributions, and a uniform background; : distributions, their mean value is zero in both cases, leading ; : to no separation. The simple transformation x -> |x| renders this ; : variable powerful for the use in a linear discriminant.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : <None>; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; LD : Results for LD coefficients:; : -----------------------; : Variable: Coefficient:; : -----------------------; : myvar1: -0.309; : myvar2: -0.102; : var3: -0.142; : var4: +0.705; : (offset): -0.055; : -----------------------; : Elapsed time for training with 2000 events: 0.00103 sec ; LD : [dataset] : Evaluation of LD on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.000394 sec ; : <CreateMVAPdfs> Separation from histogram (PDF): 0.540 (0.000); : Dataset[dataset] : Evaluation of LD on training sample; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_LD.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_LD.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: FDA_GA for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ FDA_GA ] :␛[0m; : ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:37177,config,configuration,37177,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['config'],['configuration']
Modifiability,"isconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void * GetSender () override;  ; const char * GetSenderClassName () const override;  . Protected Attributes; void * fSender;  ; TString fSenderClass;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TQObjSender (const TQObjSender &)=delete;  ; TQObjSender & operator= (const TQObjSender &)=delete;  . Additional Inherited Members;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQObject.h>. Inheritance diagram for TQObjSender:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQObjSender.html:4636,inherit,inherited,4636,doc/master/classTQObjSender.html,https://root.cern,https://root.cern/doc/master/classTQObjSender.html,1,['inherit'],['inherited']
Modifiability,"iscrDist(unsigned int npar, double* params); doubleSample(); intSampleDiscr(); boolSampleMulti(double* x); boolSetLogLevel(unsigned int iflag = 1); boolSetLogStream(); voidSetRandom(TRandom* r); voidSetSeed(unsigned int seed). protected:. boolSetContDistribution(const TUnuranContDist& dist); boolSetDiscreteDistribution(const TUnuranDiscrDist& dist); boolSetEmpiricalDistribution(const TUnuranEmpDist& dist); boolSetMethodAndInit(); boolSetMultiDistribution(const TUnuranMultiContDist& dist); boolSetRandomGenerator(). private:. TUnuran(const TUnuran&); TUnuran&operator=(const TUnuran& rhs). Data Members; protected:. auto_ptr<TUnuranBaseDist>fDistpointer for distribution wrapper; unur_gen*fGenpointer to the UnuRan C generator struct; stringfMethodstring representing the method; TRandom*fRngpointer to ROOT random number generator; unur_distr*fUdistrpointer to the UnuRan C distribution struct; unur_urng*fUrngpointer to Unuran C random generator struct . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TUnuran(TRandom* r = 0, unsigned int log = 0). Constructor with a generator instance and given level of log output. ~TUnuran(). Destructor. TUnuran(const TUnuran& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. bool Init(const std::string & distr, const std::string & method). initialize with Unuran string interface. bool Init(const TUnuranContDist& distr, const string& method = ""auto""). Initialize method for continuous one-dimensional distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; For the list of available method for 1D cont. distribution see the; <A href=""http://statmath.wu-wien.ac.at/unuran/doc/unuran.html#Methods_005ffor_005fCONT"">UnuRan doc</A>.; A re-initialization is needed whenever distribution parameters have been changed. bool Init(const TUnuranMultiContDist& distr, const string& method = ""hitro""). Initialize method for continuous m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUnuran.html:3351,Inherit,Inheritance,3351,root/html532/TUnuran.html,https://root.cern,https://root.cern/root/html532/TUnuran.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"iscrimination). More than 50% of neural networks are multilayer perceptrons. This; implementation of multilayer perceptrons is inspired from the; MLPfit; package originaly written by Jerome Schwindling. MLPfit remains; one of the fastest tool for neural networks studies, and this ROOT; add-on will not try to compete on that. A clear and flexible Object; Oriented implementation has been choosen over a faster but more; difficult to maintain code. Nevertheless, the time penalty does not; exceed a factor 2. The; MLP. The multilayer perceptron is a simple feed-forward network with; the following structure:. It is made of neurons characterized by a bias and weighted links; between them (let's call those links synapses). The input neurons; receive the inputs, normalize them and forward them to the first; hidden layer. Each neuron in any subsequent layer first computes a linear; combination of the outputs of the previous layer. The output of the; neuron is then function of that combination with f being; linear for output neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. A linear combination of sigmoids can approximate any; continuous function.; Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. Learning; methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, devided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especialy the; derivative of compound functions, one can write:. for a neuton: product of the local derivative with the; weighted sum on the outputs of the derivatives.; for a synapse: product of the input with the local derivative; of the output neuron. This computatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiLayerPerceptron.html:3240,layers,layers,3240,root/html528/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html528/TMultiLayerPerceptron.html,4,['layers'],['layers']
Modifiability,"iscussion of the effects of parameter limits may be found in the last chapter.; 2.4 M strategy; At many places in the analysis of the \(\mbox{FCN}\) (the user provided function), M must decide whether to be “safe” and waste a few function calls in order to know where it is, or to be “fast” and attempt to get the requested results with the fewest possible calls at a certain risk of not obtaining the precision desired by the user. In order to allow the user to influence these decisions, there is a M class MnStrategy (see [api:strategy]) which the user can use to put different settings. In the current release, this MnStrategy can be instantiated with three different minimization quality levels for low (0), medium (1) and high (2) quality. Default settings for iteration cycles and tolerances are initialized then. The default setting is set for medium quality. Value 0 (low) indicates to M that it should economize function calls; it is intended for cases where there are many variable parameters and/or the function takes a long time to calculate and/or the user is not interested in very precise values for parameter errors. On the other hand, value 2 (high) indicates that M is allowed to waste function calls in order to be sure that all values are precise; it is intended for cases where the function is evaluated in a relatively short time and/or where the parameter errors must be calculated reliably. In addition all constants set in MnStrategy can be changed individually by the user, e.g. the number of iteration cycles in the numerical gradient.; 2.5 Parameter errors; M is usually used to find the “best” values of a set of parameters, where “best” is defined as those values which minimize a given function, \(\mbox{FCN}\). The width of the function minimum, or more generally, the shape of the function in some neighbourhood of the minimum, gives information about the uncertainty in the best parameter values, often called by physicists the parameter errors. An important featur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:17297,variab,variable,17297,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,4,['variab'],['variable']
Modifiability,"ise) ;  ; void setMonitoring (std::shared_ptr< Monitoring > ptrMonitoring);  prepared for monitoring ;  ; virtual void setProgressLimits (double minProgress=0, double maxProgress=100);  ; virtual void startTraining ();  ; size_t testRepetitions () const;  how often is the test data tested ;  ; bool useMultithreading () const;  is multithreading turned on? ;  . Public Attributes; std::vector< double > m_ams;  ; double m_cutValue;  ; std::string m_fileNameNetConfig;  ; std::string m_fileNameResult;  ; std::vector< double > m_input;  ; std::vector< double > m_output;  ; std::vector< Pattern > * m_pResultPatternContainer;  ; size_t m_scaleToNumEvents;  ; std::vector< double > m_significances;  ; double m_sumOfBkgWeights;  ; double m_sumOfSigWeights;  ; std::vector< double > m_targets;  ; std::vector< double > m_weights;  ;  Public Attributes inherited from TMVA::DNN::Settings; size_t count_dE;  ; size_t count_E;  ; size_t count_mb_dE;  ; size_t count_mb_E;  ; double fLearningRate;  ; MinimizerType fMinimizerType;  ; double fMomentum;  ; int fRepetitions;  ; size_t m_batchSize;  mini-batch size ;  ; size_t m_convergenceCount;  ; size_t m_convergenceSteps;  number of steps without improvement to consider the DNN to have converged ;  ; std::vector< double > m_dropOut;  ; double m_dropRepetitions;  ; double m_factorWeightDecay;  ; size_t m_maxConvergenceCount;  ; double m_maxProgress;  current limits for the progress bar ;  ; double m_minError;  ; double m_minProgress;  current limits for the progress bar ;  ; EnumRegularization m_regularization;  ; size_t m_testRepetitions;  ; Timer m_timer;  timer for monitoring ;  . Additional Inherited Members;  Protected Attributes inherited from TMVA::DNN::Settings; std::shared_ptr< Monitoring > fMonitoring;  ; bool m_useMultithreading;  . #include <TMVA/NeuralNet.h>. Inheritance diagram for TMVA::DNN::ClassificationSettings:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html:5338,inherit,inherited,5338,doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,1,['inherit'],['inherited']
Modifiability,"isherCoeff ; (; void ; ). private . Fisher = Sum { [coeff]*[variables] }. ; let Xs be the array of the mean values of variables for signal evts let Xb be the array of the mean values of variables for backgd evts let InvWith be the inverse matrix of the 'within class' correlation matrix; then the array of Fisher coefficients is [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith ; Definition at line 457 of file MethodFisher.cxx. ◆ GetFisherMethod(). EFisherMethod TMVA::MethodFisher::GetFisherMethod ; (; void ; ). inline . Definition at line 87 of file MethodFisher.h. ◆ GetHelpMessage(). void TMVA::MethodFisher::GetHelpMessage ; (; ); const. protectedvirtual . get help message text ; typical length of text line: ""|--------------------------------------------------------------|"" ; Implements TMVA::IMethod.; Definition at line 702 of file MethodFisher.cxx. ◆ GetMean(). void TMVA::MethodFisher::GetMean ; (; void ; ). private . compute mean values of variables in each sample, and the overall means ; Definition at line 302 of file MethodFisher.cxx. ◆ GetMvaValue(). Double_t TMVA::MethodFisher::GetMvaValue ; (; Double_t * ; err = nullptr, . Double_t * ; errUpper = nullptr . ). virtual . returns the Fisher value (no fixed range) ; Implements TMVA::MethodBase.; Definition at line 268 of file MethodFisher.cxx. ◆ HasAnalysisType(). Bool_t TMVA::MethodFisher::HasAnalysisType ; (; Types::EAnalysisType ; type, . UInt_t ; numberClasses, . UInt_t ; numberTargets . ). virtual . Fisher can only handle classification with 2 classes. ; Implements TMVA::IMethod.; Definition at line 228 of file MethodFisher.cxx. ◆ Init(). void TMVA::MethodFisher::Init ; (; void ; ). privatevirtual . default initialization called by all constructors ; Implements TMVA::MethodBase.; Definition at line 177 of file MethodFisher.cxx. ◆ InitMatrices(). void TMVA::MethodFisher::InitMatrices ; (; void ; ). private . initialization method; creates global matrices and vectors ; Definition at line 285 of file M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:37126,variab,variables,37126,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,1,['variab'],['variables']
Modifiability,"ising the signal significance-; squared, S^2/(S+B), with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in general. Note also that; for rare signals, Poissonian statistics should be used, which modifies; the significance criterion.; . The rectangular cut of a volume in the variable space is performed using; a binary tree to sort the training events. This provides a significant; reduction in computing time (up to several orders of magnitudes, depending; on the complexity of the problem at hand).; ; Technically, optimisation is achieved in TMVA by two methods:; ; Monte Carlo generation using uniform priors for the lower cut value,; and the cut width, thrown within the variable ranges.; A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample.; The GA is configurable by many external settings through the option; string. For difficult cases (such as many variables), some tuning; may be necessary to achieve satisfying results; . Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown; superior results, and often failed due to convergence at local minima.; . The tests we have performed so far showed that in generic applications,; the GA is superior to MC sampling, and hence GA is the default method.; It is worthwhile trying both anyway.; Decorrelated (or ""diagonalized"") Cuts. See class description for Method Likelihood for a detailed explanation.; . Function Members (Methods); public:. virtual~MethodCuts(); voidTObject::AbstractMethod(const char* method) const; voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodBas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodCuts.html:1726,config,configurable,1726,root/html528/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodCuts.html,8,['config'],['configurable']
Modifiability,"ising the signal significance-; squared, S^2/(S+B), with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in general. Note also that; for rare signals, Poissonian statistics should be used, which modifies; the significance criterion.; . The rectangular cut of a volume in the variable space is performed using; a binary tree to sort the training events. This provides a significant; reduction in computing time (up to several orders of magnitudes, depending; on the complexity of the problem at hand).; ; Technically, optimisation is achieved in TMVA by two methods:; ; Monte Carlo generation using uniform priors for the lower cut value,; and the cut width, thrown within the variable ranges.; A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample.; The GA is configurable by many external settings through the option; string. For difficult cases (such as many variables), some tuning; may be necessary to achieve satisfying results; . Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown; superior results, and often failed due to convergence at local minima.; . The tests we have performed so far showed that in generic applications,; the GA is superior to MC sampling, and hence GA is the default method.; It is worthwhile trying both anyway.; Decorrelated (or ""diagonalized"") Cuts. See class description for Method Likelihood for a detailed explanation.; ; . Function Members (Methods); public:. virtual~MethodCuts(); voidTObject::AbstractMethod(const char* method) const; voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCuts.html:1726,config,configurable,1726,root/html534/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCuts.html,2,['config'],['configurable']
Modifiability,"isionTree.h. ◆ fNNodesBeforePruning. Int_t TMVA::DecisionTree::fNNodesBeforePruning. private . remember this one (in case of pruning, it allows to monitor the before/after ; Definition at line 222 of file DecisionTree.h. ◆ fNodePurityLimit. Double_t TMVA::DecisionTree::fNodePurityLimit. private . purity limit to decide whether a node is signal ; Definition at line 224 of file DecisionTree.h. ◆ fNvars. UInt_t TMVA::DecisionTree::fNvars. private . number of variables used to separate S and B ; Definition at line 205 of file DecisionTree.h. ◆ fPruneMethod. EPruneMethod TMVA::DecisionTree::fPruneMethod. private . method used for pruning ; Definition at line 221 of file DecisionTree.h. ◆ fPruneStrength. Double_t TMVA::DecisionTree::fPruneStrength. private . a parameter to set the ""amount"" of pruning..needs to be adjusted ; Definition at line 219 of file DecisionTree.h. ◆ fRandomisedTree. Bool_t TMVA::DecisionTree::fRandomisedTree. private . choose at each node splitting a random set of variables ; Definition at line 226 of file DecisionTree.h. ◆ fRegType. RegressionVariance* TMVA::DecisionTree::fRegType. private . the separation criteria used in Regression ; Definition at line 212 of file DecisionTree.h. ◆ fSepType. SeparationBase* TMVA::DecisionTree::fSepType. private . the separation criteria ; Definition at line 211 of file DecisionTree.h. ◆ fSigClass. UInt_t TMVA::DecisionTree::fSigClass. private . class which is treated as signal when building the tree ; Definition at line 235 of file DecisionTree.h. ◆ fTreeID. Int_t TMVA::DecisionTree::fTreeID. private . just an ID number given to the tree.. makes debugging easier as tree knows who he is. ; Definition at line 237 of file DecisionTree.h. ◆ fUseExclusiveVars. Bool_t TMVA::DecisionTree::fUseExclusiveVars. private . individual variables already used in fisher criterium are not anymore analysed individually for node splitting ; Definition at line 209 of file DecisionTree.h. ◆ fUseFisherCuts. Bool_t TMVA::DecisionTree::fU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:30089,variab,variables,30089,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variables']
Modifiability,"isionTree::SetTreeID ; (; Int_t ; treeID). inline . Definition at line 185 of file DecisionTree.h. ◆ SetUseExclusiveVars(). void TMVA::DecisionTree::SetUseExclusiveVars ; (; Bool_t ; t = kTRUE). inline . Definition at line 193 of file DecisionTree.h. ◆ SetUseFisherCuts(). void TMVA::DecisionTree::SetUseFisherCuts ; (; Bool_t ; t = kTRUE). inline . Definition at line 191 of file DecisionTree.h. ◆ Streamer(). virtual void TMVA::DecisionTree::Streamer ; (; TBuffer & ; ). virtual . Reimplemented from TMVA::BinaryTree. ◆ StreamerNVirtual(). void TMVA::DecisionTree::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 243 of file DecisionTree.h. ◆ TestPrunedTreeQuality(). Double_t TMVA::DecisionTree::TestPrunedTreeQuality ; (; const DecisionTreeNode * ; dt = nullptr, . Int_t ; mode = 0 . ); const. return the misclassification rate of a pruned tree a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at any node, hence this tree quality testing will stop there, hence test the pruned tree (while the full tree is still in place for normal/later use) ; Definition at line 1043 of file DecisionTree.cxx. ◆ TrainNode(). Double_t TMVA::DecisionTree::TrainNode ; (; const EventConstList & ; eventSample, . DecisionTreeNode * ; node . ). inline . Definition at line 108 of file DecisionTree.h. ◆ TrainNodeFast(). Double_t TMVA::DecisionTree::TrainNodeFast ; (; const EventConstList & ; eventSample, . TMVA::DecisionTreeNode * ; node . ). Decide how to split a node using one of the variables that gives the best separation of signal/background. ; In order to do this, for each variable a scan of the different cut values in a grid (grid = fNCuts) is performed and the resulting separation gains are compared. in addition to the individual variables, one can also ask for a fisher discriminant being built out of (some) of the variables and used as a possible multivariate split. ; Definition at line 1374 of file DecisionTree.cxx. ◆ TrainNodeFu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:25923,variab,variable,25923,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,"isk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TFile::SetCacheFileDirstatic Bool_t SetCacheFileDir(std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE)Sets the directory where to locally stage/cache remote files.Definition TFile.cxx:4626; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TMVA::ReaderThe Reader class serves to use the MVAs in a specific analysis context.Definition Reader.h:64; TMVA::Reader::BookMVAIMethod * BookMVA(const TString &methodTag, const TString &weightfile)read method name from weight fileDefinition Reader.cxx:368; TMVA::Reader::EvaluateMulticlassconst std::vector< Float_t > & EvaluateMulticlass(const TString &methodTag, Double_t aux=0)evaluates MVA for given set of input variablesDefinition Reader.cxx:630; TMVA::Reader::AddVariablevoid AddVariable(const TString &expression, Float_t *)Add a float variable or expression to the reader.Definition Reader.cxx:303; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Tools::SplitStringstd::vector< TString > SplitString(const TString &theOpt, const char separator) constsplits the option string at 'separator' and fills the list 'splitV' with the primitive stringsDefinition Tools.cxx:1199; TStopwatchStopwatch class.Definition TStopwatch.h:28; TStopwatch::Startvoid Start(Bool_t reset=kTRUE)Start the stopwatch.Definition TStopwatch.cxx:58; TStopwatch::Stopvoid Stop()Stop the stopwatch.Definition TStopwatch.cxx:77; TStopwatch::Printvoid Print(Option_t *option="""") const overridePrint the real and cpu time passed between the start and stop events.Definition TStopwatch.cxx:219; TStringBasic string class.Definition TString.h:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlassApplication_8C.html:11063,variab,variablesDefinition,11063,doc/master/TMVAMulticlassApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlassApplication_8C.html,2,['variab'],['variablesDefinition']
Modifiability,"ism is not allowed here.; 570 buf.WriteFastArray(pp[ndx], cl, vlen, nullptr);; 571 } else {; 572 // -- We are a varying-length array of pointers to objects.; 573 // Write the entire array of object pointers to the buffer.; 574 // Note: The object pointers are allowed to be polymorphic.; 575 buf.WriteFastArray((void **)pp[ndx], cl, vlen, kFALSE, nullptr);; 576 } // isPtrPtr; 577 } // ndx; 578 } else // vlen; 579 if (kIsTextT) {; 580 // special handling for the text-based streamers; 581 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx); 582 buf.WriteFastArray((void *)nullptr, cl, -1, nullptr);; 583 }; 584 //} // k; 585 }; 586 else {; 587 // -- Older versions do *not* allow polymorphic pointers to objects.; 588 // Loop over the entries in the clones array or the STL container.; 589 //for (int k = 0; k < narr; ++k) {; 590 // Get the counter for the varying length array.; 591 Int_t vlen = *((Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/));; 592 //b << vlen;; 593 if (vlen) {; 594 // Get a pointer to the array of pointers.; 595 char** pp = (char**) ((char *) addr /*entry pointer*/ + ioffset /*object offset*/);; 596 // -- Older versions do *not* allow polymorphic pointers to objects.; 597 // Loop over each element of the array of pointers to varying-length arrays.; 598 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx) {; 599 if (!pp[ndx]) {; 600 // -- We do not have a pointer to a varying-length array.; 601 //Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; 602 // ::ErrorHandler(kError, ""::WriteTextStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));; 603 printf(""WriteStreamerLoop - The pointer to element %s::%s type",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:24032,config,config,24032,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"isplacementVector3D< Cartesian3D<double>, DefaultCoordinateSystemTag > ROOT::Math::XYZVector. 3D Vector based on the cartesian coordinates x,y,z in double precision ; To use it add the line #include <Vector3D.h>; See the documentation on the DisplacementVector3D page. ; Definition at line 44 of file Vector3Dfwd.h. ◆ XYZVectorD. typedef XYZVector ROOT::Math::XYZVectorD. Definition at line 53 of file Vector3Dfwd.h. ◆ XYZVectorF. typedef DisplacementVector3D< Cartesian3D<float>, DefaultCoordinateSystemTag > ROOT::Math::XYZVectorF. 3D Vector based on the cartesian coordinates x,y,z in single precision ; To use it add the line #include <Vector3D.h>; See the documentation on the DisplacementVector3D page. ; Definition at line 52 of file Vector3Dfwd.h. Enumeration Type Documentation. ◆ EMinimVariableType. enum ROOT::Math::EMinimVariableType. Enumeration describing the status of the variable The enumeration are used in the minimizer classes to categorize the variables. . EnumeratorkDefault free variable (unlimited) . kFix fixed variable . kBounds variable has two bounds . kLowBound variable has a lower bound . kUpBound variable has an upper bounds . Definition at line 27 of file MinimTransformVariable.h. ◆ ERotation3DMatrixIndex. enum ROOT::Math::ERotation3DMatrixIndex. EnumeratorkXX ; kXY ; kXZ ; kYX ; kYY ; kYZ ; kZX ; kZY ; kZZ . Definition at line 64 of file AxisAngle.cxx. Function Documentation. ◆ adkTestStat(). void ROOT::Math::adkTestStat ; (; double * ; adk, . const std::vector< std::vector< double > > & ; samples, . const std::vector< double > & ; zstar . ). Definition at line 546 of file GoFTest.cxx. ◆ Chebyshev0(). double ROOT::Math::Chebyshev0 ; (; double ; , . double ; c0 . ). inline . Definition at line 57 of file ChebyshevPol.h. ◆ Chebyshev1(). double ROOT::Math::Chebyshev1 ; (; double ; x, . double ; c0, . double ; c1 . ). inline . Definition at line 60 of file ChebyshevPol.h. ◆ Chebyshev10(). double ROOT::Math::Chebyshev10 ; (; double ; x, . double ; c0, . d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:142544,variab,variable,142544,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,2,['variab'],['variable']
Modifiability,"isplacements ;  ; Double_t * fEXlow;  [fNpoints] array of X low errors ;  ; Double_t * fEXlowd;  [fNpoints] array of X low displacements ;  ; Double_t * fEYhigh;  [fNpoints] array of Y high errors ;  ; Double_t * fEYhighd;  [fNpoints] array of Y high displacements ;  ; Double_t * fEYlow;  [fNpoints] array of Y low errors ;  ; Double_t * fEYlowd;  [fNpoints] array of Y low displacements ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:32582,inherit,inherited,32582,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,2,['inherit'],['inherited']
Modifiability,"isplay server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGHSplitter (const TGHSplitter &)=delete;  ; TGHSplitter & operator= (const TGHSplitter &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHSplitter.html:25205,inherit,inherited,25205,doc/master/classTGHSplitter.html,https://root.cern,https://root.cern/doc/master/classTGHSplitter.html,1,['inherit'],['inherited']
Modifiability,"isplay server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGMainFrame (const TGMainFrame &)=delete;  ; TGMainFrame & operator= (const TGMainFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMainFrame.html:31885,inherit,inherited,31885,doc/master/classTGMainFrame.html,https://root.cern,https://root.cern/doc/master/classTGMainFrame.html,1,['inherit'],['inherited']
Modifiability,"isplay server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGVSplitter (const TGVSplitter &)=delete;  ; TGVSplitter & operator= (const TGVSplitter &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVSplitter.html:25080,inherit,inherited,25080,doc/master/classTGVSplitter.html,https://root.cern,https://root.cern/doc/master/classTGVSplitter.html,1,['inherit'],['inherited']
Modifiability,"isplay. ; Handle of created web-based display Depending from type of web display, holds handle of started browser process or other display-specific information to correctly stop and cleanup display. ; Definition at line 25 of file RWebDisplayHandle.hxx. Classes; class  BrowserCreator;  ; class  ChromeCreator;  ; class  Creator;  !< page content More...;  ; class  FirefoxCreator;  ; class  SafariCreator;  . Public Member Functions;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; virtual bool Resize (int, int);  resize web window - if possible ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static std::string GetImageFormat (const std::string &fname);  Detect image format There is special handling of "".screenshot.pdf"" and "".screenshot.png"" extensions Creation of such files relies on headless browser functionality and fully supported only by Chrome browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required for display. ;  ; static bool ProduceImage (const std::string &fname, const std::string &json, int width=800, int height=600, const char *batch_file=nullptr);  Produce image file using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Moz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebDisplayHandle.html:1427,config,configured,1427,doc/master/classROOT_1_1RWebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebDisplayHandle.html,1,['config'],['configured']
Modifiability,"ist (const RooArgSet *nset=nullptr) const;  Return pointer to RooDataHist cache histogram for given choice of observables. ;  ; RooAbsPdf * getCachePdf (const RooArgSet &nset) const;  ; RooAbsPdf * getCachePdf (const RooArgSet *nset=nullptr) const;  Return pointer to RooHistPdf cache pdf for given choice of observables. ;  ; Int_t getInterpolationOrder () const;  ; double getValV (const RooArgSet *set=nullptr) const override;  Implementation of getVal() overriding default implementation of RooAbsPdf. ;  ; TClass * IsA () const override;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setInterpolationOrder (int order);  Change the interpolation order that is used in RooHistPdf cache representation smoothing the RooDataHist shapes. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedPdf.html:5035,inherit,inherited,5035,doc/master/classRooAbsCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedPdf.html,1,['inherit'],['inherited']
Modifiability,"ist * fTitles;  list of menu titles ;  ; TList * fTrash;  garbage ;  ; Bool_t fWithExt;  indicates whether the >> menu is shown or not ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGMenuBar (const TGMenuBar &)=delete;  ; TGMenuBar & operator= (const TGMenuBar &)=delete;  . Friends; class TGPopupMenu;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMenuBar.html:31049,inherit,inherited,31049,doc/master/classTGMenuBar.html,https://root.cern,https://root.cern/doc/master/classTGMenuBar.html,1,['inherit'],['inherited']
Modifiability,"ist as structure definition.; The possible options are: (D)ebug, (Q)uiet.; Parameters. fileListMultiple file names, comma separated. Each file is optionally prefixed with 'commonPath' if such a path is provided; varListSpecify the dimensions of the dataset to be built. This list describes the order in which these dimensions appear in the ascii files to be read. Each line in the ascii file should contain N white-space separated tokens, with N the number of args in varList. Any text beyond N tokens will be ignored with a warning message. (NB: This is the default output of RooArgList::writeToStream()); verbOptQ be quiet, D debug mode (verbose); commonPathAll filenames in fileList will be prefixed with this optional path.; indexCatNameInterpret the data as belonging to category indexCatName. When multiple files are read, a RooCategory arg in varList can optionally be designated to hold information about the source file of each data point. This feature is enabled by giving the name of the (already existing) category variable in indexCatName. AttentionIf the value of any of the variables on a given line exceeds the fit range associated with that dimension, the entire line will be ignored. A warning message is printed in each case, unless the Q verbose option is given. The number of events read and skipped is always summarized at the end.; If no further information is given a label name 'fileNNN' will be assigned to each event, where NNN is the sequential number of the source file in fileList.; Alternatively, it is possible to override the default label names of the index category by specifying them in the fileList string: When instead of file1.txt,file2.txt the string file1.txt:FOO,file2.txt:BAR is specified, a state named ""FOO"" is assigned to the index category for each event originating from file1.txt. The labels FOO,BAR may be predefined in the index category via defineType(), but don't have to be.; Finally, one can also assign the same label to multiple files, either ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:54915,variab,variable,54915,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variable']
Modifiability,"ist of connections to this object ;  . Friends; class TGMdiMainFrame;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiDecorFrame.html:31054,inherit,inherited,31054,doc/master/classTGMdiDecorFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiDecorFrame.html,3,['inherit'],['inherited']
Modifiability,"ist of connections to this object ;  . Private Member Functions;  TXMLParser (const TXMLParser &)=delete;  ; TXMLParser & operator= (const TXMLParser &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TXMLParser.h>. Inheritance diagram for TXMLParser:. This browser is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLParser.html:15590,inherit,inherited,15590,doc/master/classTXMLParser.html,https://root.cern,https://root.cern/doc/master/classTXMLParser.html,2,['inherit'],['inherited']
Modifiability,"ist of currently supported types is given below:; C : a character string terminated by the 0 character; B : an 8 bit signed integer (Char_t); Treated as a character when in an array.; b : an 8 bit unsigned integer (UChar_t); S : a 16 bit signed integer (Short_t); s : a 16 bit unsigned integer (UShort_t); I : a 32 bit signed integer (Int_t); i : a 32 bit unsigned integer (UInt_t); F : a 32 bit floating point (Float_t); f : a 24 bit floating point with truncated mantissa (Float16_t); D : a 64 bit floating point (Double_t); d : a 24 bit truncated floating point (Double32_t); L : a 64 bit signed integer (Long64_t); l : a 64 bit unsigned integer (ULong64_t); G : a long signed integer, stored as 64 bit (Long_t); g : a long unsigned integer, stored as 64 bit (ULong_t); O : [the letter o, not a zero] a boolean (bool). Examples:; A int: ""myVar/I""; A float array with fixed size: ""myArrfloat[42]/F""; An double array with variable size, held by the myvar column: ""myArrdouble[myvar]/D""; An Double32_t array with variable size, held by the myvar column , with values between 0 and 16: ""myArr[myvar]/d[0,10]""; The myvar column, which holds the variable size, MUST be an Int_t (/I). If the address points to a single numerical variable, the leaflist is optional: int value;; tree->Branch(branchname, &value);; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142. If the address points to more than one numerical variable, we strongly recommend that the variable be sorted in decreasing order of size. Any other order will result in a non-portable TTree (i.e. you will not be able to read it back on a platform with a different padding strategy). We recommend to persistify objects rather than composite leaflists.; In case of the truncated floating point types (Float16_t and Double32_t) you can furthermore specify the range in the style [xmin,xma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:4037,variab,variable,4037,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,6,['variab'],['variable']
Modifiability,"ist of fixed parameters; vector<double>fGlobalCCglobal Correlation coefficient; stringfMinimTypestring indicating type of minimizer; shared_ptr<ROOT::Math::Minimizer>fMinimizer! minimizer object used for fitting; map<unsigned int,pair<double,double> >fMinosErrorsmap contains the two Minos errors; unsigned intfNCallsnumber of function calls; unsigned intfNFreenumber of fit free parameters (total parameters are in size of parameter vector); unsigned intfNdfnumber of degree of freedom; boolfNormalizedflag for indicating is errors are normalized; shared_ptr<ROOT::Math::IMultiGenFunction>fObjFunc! objective function used for fitting; vector<string>fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<pair<double,double> >fParamBoundsparameter bounds; vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(const FitConfig & fconfig). Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done). FitResult(const FitResult & rhs). Copy constructor. virtual ~FitResult(). Destructor. void FillResult(const shared_ptr<ROOT::Math::Minimizer>& min, const ROOT::Fit::FitConfig& fconfig, const shared_ptr<ROOT::Fit::FitResult::IModelFunction>& f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Fill the fit result from a Minimizer instance after fitting; Run also Minos if requested from the configuration. const std::string & MinimizerType() const. Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__FitResult.html:4975,Inherit,Inheritance,4975,root/html604/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__FitResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ist of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtuple.html:41780,variab,variables,41780,doc/master/classTNtuple.html,https://root.cern,https://root.cern/doc/master/classTNtuple.html,1,['variab'],['variables']
Modifiability,"ist of functions; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; TGraphAsymmErrors*fPaintGraph!temporary graph for painting; TH2*fPaintHisto!temporary histogram for painting; TH1*fPassedHistogramhistogram for events which passed certain criteria; TEfficiency::EStatOptionfStatisticOptiondefines how the confidence intervals are determined; TStringTNamed::fTitleobject title; TH1*fTotalHistogramhistogram for total number of events; Double_tfWeightweight for all events (default = 1); static TEfficiency::(anonymous)kIsBayesian; static TEfficiency::(anonymous)kPosteriorMode; static TEfficiency::(anonymous)kShortestInterval; static TEfficiency::(anonymous)kUseBinPrior; static TEfficiency::(anonymous)kUseWeights. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEfficiency(); default constructor. should not be used explicitly. TEfficiency(const TH1& passed, const TH1& total); constructor using two existing histograms as input. Input: passed - contains the events fullfilling some criteria; total - contains all investigated events. Notes: - both histograms have to fullfill the conditions of CheckConsistency (with option 'w'); - dimension of the resulating efficiency object depends; on the dimension of the given histograms; - Clones of both histograms are stored internally; - The function SetName(total.GetName() + ""_clone"") is called to set; the names of the new object and the internal histograms..; - The created TEfficiency object is NOT appended to a directory. It; will not be written to disk during the next TFile::Write() command; in order to prevent duplication of data. If you want to save this; TEfficiency object anyway, you can either append it to a; directory by calling SetDirectory(TDire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEfficiency.html:35038,Inherit,Inheritance,35038,root/html602/TEfficiency.html,https://root.cern,https://root.cern/root/html602/TEfficiency.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ist of handlers. If there is already a; handler defined for the same base and regexp it will be replaced. void RemoveHandler(const char* base, const char* regexp = 0); Remove handler for the specified base class and the specified; regexp. If regexp=0 remove all handlers for the specified base. TPluginHandler * FindHandler(const char* base, const char* uri = 0); Returns the handler if there exists a handler for the specified URI.; The uri can be 0 in which case the first matching plugin handler; will be returned. Returns 0 in case handler is not found. void Print(Option_t* opt = """") const; Print list of registered plugin handlers. If option is ""a"" print; also the ctor's that will be used. Int_t WritePluginMacros(const char* dir, const char* plugin = 0) const; Write in the specified directory the plugin macros. If plugin is specified; and if it is a base class all macros for that base will be written. If it; is a plugin class name, only that one macro will be written. If plugin; is 0 all macros are written. Returns -1 if dir does not exist, 0 otherwise. Int_t WritePluginRecords(const char* envFile, const char* plugin = 0) const; Write in the specified environment config file the plugin records. If; plugin is specified and if it is a base class all records for that; base will be written. If it is a plugin class name, only that one; record will be written. If plugin is 0 all macros are written.; If envFile is 0 or """" the records are written to stdout.; Returns -1 if envFile cannot be created or opened, 0 otherwise. TPluginHandler& operator=(const TPluginManager& pm). TPluginManager(const TPluginManager& pm). TPluginManager(); { }. » Author: Fons Rademakers 26/1/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TPluginManager.h 37497 2010-12-10 12:22:54Z rdm $ » Last generated: 2010-12-10 14:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginManager.html:11874,plugin,plugin,11874,root/html528/TPluginManager.html,https://root.cern,https://root.cern/root/html528/TPluginManager.html,1,['plugin'],['plugin']
Modifiability,"ist of handlers. If there is already a; handler defined for the same base and regexp it will be replaced. void RemoveHandler(const char* base, const char* regexp = 0); Remove handler for the specified base class and the specified; regexp. If regexp=0 remove all handlers for the specified base. TPluginHandler * FindHandler(const char* base, const char* uri = 0); Returns the handler if there exists a handler for the specified URI.; The uri can be 0 in which case the first matching plugin handler; will be returned. Returns 0 in case handler is not found. void Print(Option_t* opt = """") const; Print list of registered plugin handlers. If option is ""a"" print; also the ctor's that will be used. Int_t WritePluginMacros(const char* dir, const char* plugin = 0) const; Write in the specified directory the plugin macros. If plugin is specified; and if it is a base class all macros for that base will be written. If it; is a plugin class name, only that one macro will be written. If plugin; is 0 all macros are written. Returns -1 if dir does not exist, 0 otherwise. Int_t WritePluginRecords(const char* envFile, const char* plugin = 0) const; Write in the specified environment config file the plugin records. If; plugin is specified and if it is a base class all records for that; base will be written. If it is a plugin class name, only that one; record will be written. If plugin is 0 all macros are written.; If envFile is 0 or """" the records are written to stdout.; Returns -1 if envFile cannot be created or opened, 0 otherwise. TPluginHandler& operator=(const TPluginManager& pm). TPluginManager(const TPluginManager& pm). TPluginManager(); { }. » Author: Fons Rademakers 26/1/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TPluginManager.h 37497 2010-12-10 12:22:54Z rdm $ » Last generated: 2011-07-04 15:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPluginManager.html:11943,plugin,plugin,11943,root/html530/TPluginManager.html,https://root.cern,https://root.cern/root/html530/TPluginManager.html,1,['plugin'],['plugin']
Modifiability,"ist of handlers. If there is already a; handler defined for the same base and regexp it will be replaced. void RemoveHandler(const char* base, const char* regexp = 0); Remove handler for the specified base class and the specified; regexp. If regexp=0 remove all handlers for the specified base. TPluginHandler * FindHandler(const char* base, const char* uri = 0); Returns the handler if there exists a handler for the specified URI.; The uri can be 0 in which case the first matching plugin handler; will be returned. Returns 0 in case handler is not found. void Print(Option_t* opt = """") const; Print list of registered plugin handlers. If option is ""a"" print; also the ctor's that will be used. Int_t WritePluginMacros(const char* dir, const char* plugin = 0) const; Write in the specified directory the plugin macros. If plugin is specified; and if it is a base class all macros for that base will be written. If it; is a plugin class name, only that one macro will be written. If plugin; is 0 all macros are written. Returns -1 if dir does not exist, 0 otherwise. Int_t WritePluginRecords(const char* envFile, const char* plugin = 0) const; Write in the specified environment config file the plugin records. If; plugin is specified and if it is a base class all records for that; base will be written. If it is a plugin class name, only that one; record will be written. If plugin is 0 all macros are written.; If envFile is 0 or """" the records are written to stdout.; Returns -1 if envFile cannot be created or opened, 0 otherwise. TPluginHandler& operator=(const TPluginManager& pm). TPluginManager(const TPluginManager& pm). TPluginManager(); { }. » Author: Fons Rademakers 26/1/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TPluginManager.h 37497 2010-12-10 12:22:54Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPluginManager.html:11943,plugin,plugin,11943,root/html532/TPluginManager.html,https://root.cern,https://root.cern/root/html532/TPluginManager.html,2,['plugin'],['plugin']
Modifiability,"ist of possible option that can be set are:. Minimizer type (MinimizerOptions::SetMinimizerType(const char *)) .; Minimizer algorithm (MinimizerOptions::SetMinimizerAlgorithm(const char *)).; Print Level (MinimizerOptions::SetPrintLevel(int )) to set the verbose printing level (default is 0).; Tolerance (MinimizerOptions::SetTolerance(double )) tolerance used to control the iterations.; Maximum number of function calls (MinimizerOptions::SetMaxFunctionCalls(int )).; Maximum number of iterations (MinimizerOptions::SetMaxIterations(int )). Note that this is not used by Minuit; FCN Upper value for Error Definition (MinimizerOptions::SetErrorDef(double )). Value in the minimization function used to compute the parameter errors. The default is to get the uncertainties at the 68% CL is a value of 1 for a chi-squared function minimization and 0.5 for a log-likelihood function.; Strategy (MinimizerOptions::SetStrategy(int )), minimization strategy used. For each minimization strategy Minuit uses different configuration parameters (e.g. different requirements in computing derivatives, computing full Hessian (strategy = 2) or an approximate version. The default is a value of 1. In this case the full Hessian matrix is computed only after the minimization.; Precision (MinimizerOptions::SetPrecision(double )). Precision value in the evaluation of the minimization function. Default is numerical double precision. Note that not all the options are implemented by all the minimizers. For example in Minuit is possible to set the maximum number of function calls, but not the maximum number of iterations. The Strategy and the Precision options apply instead only for Minuit (and Minuit2).; The class supports also setting global default values for the options, by using the static functions MinimizerOptions::SetDefault... (for example MinimizerOptions::SetDefaultPrintLevel(int )). The static functions can be also used to set the minimizer options when using TH1::Fit or TGraph::Fit. The lis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:205010,config,configuration,205010,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['config'],['configuration']
Modifiability,"ist of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint.html:22531,inherit,inheritance,22531,doc/master/classTRint.html,https://root.cern,https://root.cern/doc/master/classTRint.html,1,['inherit'],['inheritance']
Modifiability,ist va) const; voidTObject::MakeZombie(). private:. voidPrintBanner() const; voidPrintStepHeader() const; voidPrintTrackInfo() const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Int_tfLevelverbose level; Int_tfStepNumbercurrent step number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMCVerbose(Int_t level); Standard constructor. TMCVerbose(); Default constructor. ~TMCVerbose(); Destructor. void PrintBanner() const; Prints banner for track information. void PrintTrackInfo() const; Prints track information. void PrintStepHeader() const; Prints the header for stepping information. void InitMC(); Initialize MC info. void RunMC(Int_t nofEvents); MC run info. void FinishRun(); Finish MC run info. void ConstructGeometry(); Construct geometry info. void ConstructOpGeometry(); Construct geometry for optical physics info. void InitGeometry(); Initialize geometry info. void AddParticles(); Add particles info. void AddIons(); Add ions info. void GeneratePrimaries(); Generate primaries info. void BeginEvent(); Begin event info. void BeginPrimary(); Begin of a primary track info. void PreTrack(); Begin of each track info. void Stepping(); Stepping info. void PostTrack(); Finish of each track info. void FinishPrimary(); Finish o,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMCVerbose.html:6386,Inherit,Inheritance,6386,root/html602/TMCVerbose.html,https://root.cern,https://root.cern/root/html602/TMCVerbose.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ist va) const; voidTObject::MakeZombie(); RooNumIntFactory(); RooNumIntFactory(const RooNumIntFactory& other). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static RooNumIntFactory*_instance; map<string,pair<RooAbsIntegrator*,string> >_map. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumIntFactory(); Constructor. Register all known integrators by calling; their static registration functions. ~RooNumIntFactory(); Destructor. RooNumIntFactory(const RooNumIntFactory& other); Copy constructor. RooNumIntFactory& instance(); Static method returning reference to singleton instance of factory. void cleanup(); Cleanup routine called by atexit() handler installed by RooSentinel. Bool_t storeProtoIntegrator(RooAbsIntegrator* proto, const RooArgSet& defConfig, const char* depName = """"); Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; default configuration options and an optional list of names of other numeric integrators; on which this integrator depends. Returns true if integrator was previously registered. const RooAbsIntegrator* getProtoIntegrator(const char* name); Return prototype integrator with given (class) name. const char* getDepIntegratorName(const char* name); Get l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumIntFactory.html:6581,Inherit,Inheritance,6581,root/html602/RooNumIntFactory.html,https://root.cern,https://root.cern/root/html602/RooNumIntFactory.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ist va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooSetProxy _catSet;  Set of input category. ;  ;  Protected Attributes inherited from RooAbsCategory; value_type _currentIndex {std::numeric_limits<int>::min()};  Current category state. ;  ; std::vector< std::string > _insertionOrder;  Keeps track in which order state numbers have been inserted. Make sure this is updated in recomputeShape(). ;  ; std::map< value_type, std::unique_ptr< RooCatType, std::function< void(RooCatType *)> > > _legacyStates;  ! Map holding pointers to RooCatType instances. Only for legacy interface. Don't use if possible. ;  ; std::map< std::string, value_type > _stateNames;  Map state names to index numbers. Make sure state names are updated in recomputeShape(). ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiCategory.html:40777,inherit,inherited,40777,doc/master/classRooMultiCategory.html,https://root.cern,https://root.cern/doc/master/classRooMultiCategory.html,1,['inherit'],['inherited']
Modifiability,"ist& eventSample, TMVA::DecisionTreeNode* node). protected:. voidTMVA::BinaryTree::DeleteNode(TMVA::Node*); TMVA::MsgLogger&TMVA::BinaryTree::Log() const. private:. Double_tSamplePurity(TMVA::DecisionTree::EventList eventSample). Data Members; public:. enum EPruneMethod { kExpectedErrorPruning; kCostComplexityPruning; kNoPruning; };. protected:. UInt_tTMVA::BinaryTree::fDepthmaximal depth in tree reached; UInt_tTMVA::BinaryTree::fNNodestotal number of nodes in the tree (counted); TMVA::Node*TMVA::BinaryTree::fRootthe root node of the tree; static TMVA::MsgLogger*TMVA::BinaryTree::fgLoggermessage logger, static to save resources . private:. TMVA::Types::EAnalysisTypefAnalysisTypekClassification(=0=false) or kRegression(=1=true); UInt_tfMaxDepthmax depth; Double_tfMinLinCorrForFisherthe minimum linear correlation between two variables demanded for use in fisher criterium in node splitting; Double_tfMinSepGainmin number of separation gain to perform node splitting; Double_tfMinSizemin number of events in node; TRandom3*fMyTrandomrandom number generator for randomised trees; Int_tfNCutsnumber of grid point in variable cut scans; UInt_tfNNodesMaxmax # of nodes; Double_tfNodePurityLimitpurity limit to decide whether a node is signal; UInt_tfNvarsnumber of variables used to separate S and B; Bool_tfPairNegWeightsInNoderandomly pair miscl. ev. with neg. and pos. weights in node and don't boost them; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig ; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted ; Bool_tfRandomisedTreechoose at each node splitting a random set of variables ; TMVA::RegressionVariance*fRegTypethe separation crition used in Regression; TMVA::SeparationBase*fSepTypethe separation crition; UInt_tfSigClassclass which is treated as signal when building the tree; Int_tfTreeIDjust an ID number given to the tree.. makes debugging easier as tree knows who he is.; Bool_tfUseExclusiveVarsindividual variables alre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__DecisionTree.html:6529,variab,variables,6529,root/html530/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html530/TMVA__DecisionTree.html,9,['variab'],"['variable', 'variables']"
Modifiability,"ist*GetEntryList(Bool_t sel = kTRUE); Bool_tGetGlobalLogScale(); Double_tGetGlobalMax(); Double_tGetGlobalMin(); Bool_tGetGlobalScale(); virtual const char*TObject::GetIconName() const; Color_tGetLineColor(); Width_tGetLineWidth(); virtual const char*TNamed::GetName() const; Int_tGetNbins(); Long64_tGetNentries(); UInt_tGetNvar(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TParallelCoordSelect*GetSelection(const char* title); TList*GetSelectList(); virtual const char*TNamed::GetTitle() const; TTree*GetTree(); virtual UInt_tTObject::GetUniqueID() const; Double_t*GetVariable(const char* var); Double_t*GetVariable(Int_t i); TList*GetVarList(); Bool_tGetVertDisplay() const; Int_tGetWeightCut() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParallelCoord.html:7420,Inherit,InheritsFrom,7420,root/html532/TParallelCoord.html,https://root.cern,https://root.cern/root/html532/TParallelCoord.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ist*GetEntryList(Bool_t sel = kTRUE); Bool_tGetGlobalLogScale(); Double_tGetGlobalMax(); Double_tGetGlobalMin(); Bool_tGetGlobalScale(); virtual const char*TObject::GetIconName() const; Color_tGetLineColor(); Width_tGetLineWidth(); virtual const char*TNamed::GetName() const; Int_tGetNbins(); Long64_tGetNentries(); UInt_tGetNvar(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TParallelCoordSelect*GetSelection(const char* title); TList*GetSelectList(); virtual const char*TNamed::GetTitle() const; TTree*GetTree(); virtual UInt_tTObject::GetUniqueID() const; Double_t*GetVariable(const char* var); Double_t*GetVariable(Int_t i); TList*GetVarList(); Bool_tGetVertDisplay() const; Int_tGetWeightCut() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParallelCoord.html:7256,Inherit,InheritsFrom,7256,root/html602/TParallelCoord.html,https://root.cern,https://root.cern/root/html602/TParallelCoord.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ist*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGApplication.html:5910,Inherit,InheritsFrom,5910,root/html532/TGApplication.html,https://root.cern,https://root.cern/root/html532/TGApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ist*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGApplication.html:5803,Inherit,InheritsFrom,5803,root/html602/TGApplication.html,https://root.cern,https://root.cern/root/html602/TGApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,ist*fEnabledPackageslist of enabled packages; Bool_tfEndMastertrue for a master in direct contact only with workers; THashList*fGlobalPackageDirListlist of directories containing global packages libs; TStringfGroupgroup the user belongs to; Int_tfGroupIdslave unique id in the active slave group; Int_tfGroupPrioritypriority of group the user belongs to (0 - 100); Int_tfGroupSizesize of the active slave group; Long64_tfHWMBoxSizeHigh-Water-Mark on the sandbox size; Bool_tfIdleTRUE if idle; TIdleTOTimer*fIdleTOTimerTimer used to control children state; TStringfImageimage name of the session; Int_tfInflateFactorFactor in 1/1000 to inflate the CPU time; TFileHandler*fInputHandlerInput socket handler; Bool_tfInterruptif true macro execution will be stopped; TStopwatchfLatencymeasures latency of packet requests; FILE*fLogFilelog file; Int_tfLogFileDeslog file descriptor; Int_tfLogLeveldebug logging level; Bool_tfMasterServtrue if we are a master server; Long64_tfMaxBoxSizeMax size of the sandbox; Int_tfMaxQueriesMax number of queries fully kept; Int_tfMergedWorkersNumber of workers merged; TMonitor*fMergingMonitorMonitor for merging sockets; TServerSocket*fMergingSocketSocket used for merging outputs if submerger; Long64_tfMsgSizeHWMHigh-Water-Mark on the size of messages with results; Int_tfNcmdcommand history number; TStringfOrdinalslave ordinal number; TStringfPackageDirdirectory containing packages and user libs; TProofLockPath*fPackageLockpackage dir locker; TVirtualProofPlayer*fPlayeractual player; TStringfPrefixPrefix identifying the node; TProof*fProofPROOF talking to slave servers; Int_tfProtocolprotocol version number; TQueryResultManager*fQMgrQuery-result manager; TMutex*fQMtxTo protect async msg queue; TStringfQueryDirdirectory containing query results and status; TProofLockPath*fQueryLockquery dir locker; Int_tfQuerySeqNumsequential number of the current or last query; TList*fQueuedMsglist of messages waiting to be processed; Float_tfRealTimereal time spent ex,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofServ.html:18040,sandbox,sandbox,18040,root/html528/TProofServ.html,https://root.cern,https://root.cern/root/html528/TProofServ.html,1,['sandbox'],['sandbox']
Modifiability,"ist, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Mon Jul 4 15:24:00 2011 » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSimWSTool__BuildConfig.html:5672,config,configuration,5672,root/html530/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html530/RooSimWSTool__BuildConfig.html,1,['config'],['configuration']
Modifiability,"ist, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Sat Oct 9 22:38:49 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimWSTool__BuildConfig.html:5672,config,configuration,5672,root/html528/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html528/RooSimWSTool__BuildConfig.html,1,['config'],['configuration']
Modifiability,"ist, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Thu Nov 3 20:09:16 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimWSTool__BuildConfig.html:5672,config,configuration,5672,root/html532/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html532/RooSimWSTool__BuildConfig.html,2,['config'],['configuration']
Modifiability,"ist, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Tue Mar 10 17:19:10 2015 » Last generated: 2015-03-10 17:19; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimWSTool__BuildConfig.html:5688,config,configuration,5688,root/html534/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html534/RooSimWSTool__BuildConfig.html,2,['config'],['configuration']
Modifiability,"ist->weight()*corr)) ;; 1787 }; 1788 ; 1789 }; 1790 ; 1791 return RooFit::makeOwningPtr(std::move(hist));; 1792}; 1793 ; 1794 ; 1795 ; 1796////////////////////////////////////////////////////////////////////////////////; 1797/// Special generator interface for generation of 'global observables' -- for RooStats tools; 1798 ; 1799RooFit::OwningPtr<RooDataSet> RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); 1800{; 1801 return generate(whatVars,nEvents) ;; 1802}; 1803 ; 1804namespace {; 1805void removeRangeOverlap(std::vector<std::pair<double, double>>& ranges) {; 1806 //Sort from left to right; 1807 std::sort(ranges.begin(), ranges.end());; 1808 ; 1809 for (auto it = ranges.begin(); it != ranges.end(); ++it) {; 1810 double& startL = it->first;; 1811 double& endL = it->second;; 1812 ; 1813 for (auto innerIt = it+1; innerIt != ranges.end(); ++innerIt) {; 1814 const double startR = innerIt->first;; 1815 const double endR = innerIt->second;; 1816 ; 1817 if (startL <= startR && startR <= endL) {; 1818 //Overlapping ranges, extend left one; 1819 endL = std::max(endL, endR);; 1820 *innerIt = make_pair(0., 0.);; 1821 }; 1822 }; 1823 }; 1824 ; 1825 auto newEnd = std::remove_if(ranges.begin(), ranges.end(),; 1826 [](const std::pair<double,double>& input){; 1827 return input.first == input.second;; 1828 });; 1829 ranges.erase(newEnd, ranges.end());; 1830}; 1831}; 1832 ; 1833 ; 1834////////////////////////////////////////////////////////////////////////////////; 1835/// Plot (project) PDF on specified frame.; 1836/// - If a PDF is plotted in an empty frame, it; 1837/// will show a unit-normalized curve in the frame variable. When projecting a multi-; 1838/// dimensional PDF onto the frame axis, hidden parameters are taken are taken at; 1839/// their current value.; 1840/// - If a PDF is plotted in a frame in which a dataset has already been plotted, it will; 1841/// show a projection integrated over all variables that were present in the shown; 1842/// data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:87007,extend,extend,87007,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extend']
Modifiability,"ist. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TH2 * _callHist;  ! Histogram recording number of calls per convolution integral calculation ;  ; RooAbsReal * _cloneModel;  Pointer to cloned model. ;  ; RooAbsReal * _clonePdf;  Pointer to cloned PDF. ;  ; RooAbsReal * _cloneVar;  Pointer to cloned convolution variable. ;  ; RooNumIntConfig _convIntConfig;  Configuration of numeric convolution integral ;. ;  ; bool _doProf;  Switch to activate profiling option. ;  ; bool _init;  ; RooConvIntegrandBinding * _integrand;  ! Binding of Convolution Integrand function ;  ; std::unique_ptr< RooAbsIntegrator > _integrator;  ! Numeric integrator of convolution integrand ;  ; RooRealProxy _origModel;  Original resolution model. ;  ; RooRealProxy _origPdf;  Original input PDF. ;  ; RooRealProxy _origVar;  Original convolution variable. ;  ; RooArgSet _ownedClonedModelSet;  Owning set of cloned model components. ;  ; RooArgSet _ownedClonedPdfSet;  Owning set of cloned PDF components. ;  ; bool _useWindow;  Switch to activate window convolution. ;  ; Int_t _verboseThresh;  Call count threshold for verbose printing. ;  ; RooListProxy _windowParam;  Holder for optional convolution integration window scaling parameter. ;  ; double _windowScale;  Scale factor for window parameter. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:58781,variab,variable,58781,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['variab'],['variable']
Modifiability,"ist::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Float_tTEveTrackList::fLimPHighest track p in the container.; Float_tTEveTrackList::fLimPtHighest track pT in the container.; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Float_tTEveTrackList::fMaxPMaximum track p for display selection.; Float_tTEveTrackList::fMaxPtMaximum track pT for display selection.; Float_tTEveTrackList::fMinPMinimum track p for display selection.; Float_tTEveTrackList::fMinPtMinimum track pT for display selection.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveTrackPropagator*TEveTrackList::fPropagatorBasic track rendering parameters, not enforced to e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrackListProjected.html:22201,variab,variable,22201,root/html528/TEveTrackListProjected.html,https://root.cern,https://root.cern/root/html528/TEveTrackListProjected.html,1,['variab'],['variable']
Modifiability,"istOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGGroupFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefault",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButtonGroup.html:27711,inherit,inherited,27711,doc/master/classTGButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html,1,['inherit'],['inherited']
Modifiability,"istOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileHandler.html:12561,inherit,inherited,12561,doc/master/classTFileHandler.html,https://root.cern,https://root.cern/doc/master/classTFileHandler.html,6,['inherit'],['inherited']
Modifiability,"istRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyrho1; RooRealProxyrho2; RooRealProxysigp; RooRealProxyx; RooRealProxyxi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBukinPdf(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _Xp, RooAbsReal& _sigp, RooAbsReal& _xi, RooAbsReal& _rho1, RooAbsReal& _rho2); The two addresses refer to our first dependent variable and; parameter, respectively, as declared in the rdl file; Constructor. RooBukinPdf(const RooBukinPdf& other, const char* name = 0); Copy constructor. Double_t evaluate() const; Implementation. RooBukinPdf(); {}. TObject* clone(const char* newname) const; { return new RooBukinPdf(*this,newname);	}. virtual ~RooBukinPdf(); { }. » Last changed: Tue Mar 10 17:14:42 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBukinPdf.html:43431,variab,variable,43431,root/html534/RooBukinPdf.html,https://root.cern,https://root.cern/root/html534/RooBukinPdf.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable']"
Modifiability,"istRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const TVectorD& mrefpoints, const Roo1DMomentMorphFunction::Setting& setting = Linear); CTOR. Roo1DMomentMorphFunction(const Roo1DMomentMorphFunction& other, const char* name = 0). ~Roo1DMomentMorphFunction(). void initialize(). Double_t evaluate() const. void calculateFractions() const. int idxmin(const double& m) const. int idxmax(const double& m) const. TObject* clone(const char* newname) const; { return new Roo1DMomentMorphFunction(*this,newname); }. void setMode(const Roo1DMomentMorphFunction::Setting& setting); { _setting = setting; }. Int_t ij(const Int_t& i, const Int_t& j) const; { return (i*_varList.getSize()+j); }. » Last changed: Tue Mar 10 17:13:43 2015 » Last generated: 2015-03-10 17:13; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/Roo1DMomentMorphFunction.html:36053,Inherit,Inheritance,36053,root/html534/Roo1DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"istSamplerOptions& opt); ROOT::Math::IOptions*ExtraOptions() const; static ROOT::Math::IOptions*FindDefault(const char* name); ROOT::Math::DistSamplerOptions&operator=(const ROOT::Math::DistSamplerOptions& opt); voidPrint(ostream& os = std::cout) const; static voidPrintDefault(const char* name, ostream& os = std::cout); intPrintLevel() const; const string&Sampler() const; voidSetAlgorithm(const char* type); static voidSetDefaultAlgorithm1D(const char* algo); static voidSetDefaultAlgorithmND(const char* algo); static voidSetDefaultPrintLevel(int level); static voidSetDefaultSampler(const char* type); voidSetExtraOptions(const ROOT::Math::IOptions& opt); voidSetPrintLevel(int level); voidSetSampler(const char* type). Data Members; private:. stringfAlgoTypeDistSampler algorithmic specification (for Unuran only); ROOT::Math::IOptions*fExtraOptionsextra options ; intfLeveldebug print level ; stringfSamplerTypeDistSampler type (Unuran, Foam, etc...)xs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetDefaultSampler(const char* type); static methods for setting and retrieving the default options. void SetDefaultAlgorithm1D(const char* algo). void SetDefaultAlgorithmND(const char* algo). void SetDefaultPrintLevel(int level). const std::string & DefaultSampler(). const std::string & DefaultAlgorithm1D(). const std::string & DefaultAlgorithmND(). int DefaultPrintLevel(). ROOT::Math::IOptions & Default(const char* name); retrieve extra options - if not existing create a IOptions. ROOT::Math::IOptions * FindDefault(const char* name); find extra options - return 0 if not existing. void PrintDefault(const char* name, ostream& os = std::cout); print all the default options for the name given. DistSamplerOptions(int dim = 0); constructor using the default options; pass optionally a pointer to the additional options; otherwise look if they exist for this default minimizer; and in that case they are copied in the constructed instance; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__DistSamplerOptions.html:1766,Inherit,Inheritance,1766,root/html534/ROOT__Math__DistSamplerOptions.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__DistSamplerOptions.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"istSize() const; virtual voidGetLocalRange(Float_t* min, Float_t* max); static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; virtual TVolume*GetNode() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TObjectSet::GetObject() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual TVolumePosition*GetPosition() const; virtual TShape*GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tTObjectSet::HasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TObjectSet::Instance() const; static TObjectSet*TObjectSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual Bool_tIs3D() const; virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDataSet::IsFolder() const; virtual Bool_tIsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObjectSet::IsOwner() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual TVolumePosition*Local2Master(const TVolumeView* localNode, const TVolumeView* masterNode = 0); virtual TVolumePosition*Local2Master(const Char_t* localName, const Char_t* masterName = 0); virtual Float_t*Local2Master(const Float_t* local, Fl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVolumeView.html:5131,Inherit,InheritsFrom,5131,root/html532/TVolumeView.html,https://root.cern,https://root.cern/root/html532/TVolumeView.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ist_configSetsList of configuration sets for individual integration methods; static RooNumIntConfig*_default; Double_t_epsAbsAbsolute precision; Double_t_epsRelRelative precision; RooCategory_method1DSelects integration method for 1D integrals; RooCategory_method1DOpenSelects integration method for open ended 1D integrals; RooCategory_method2DSelects integration method for 2D integrals; RooCategory_method2DOpenSelects integration method for open ended 2D integrals; RooCategory_methodNDSelects integration method for ND integrals; RooCategory_methodNDOpenSelects integration method for open ended ND integrals; static Int_tRooPrintable::_nameLength; Bool_t_printEvalCounterFlag to control printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name) const; Retrieve configuration information specific to integrator with given name. void setEpsAbs(Double_t newEpsAbs); Set absolute convergence criteria (convergence if abs(Err)<newEpsAbs). RooP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumIntConfig.html:8353,config,configuration,8353,root/html528/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html528/RooNumIntConfig.html,10,['config'],['configuration']
Modifiability,"ist_configSetsList of configuration sets for individual integration methods; static RooNumIntConfig*_default; Double_t_epsAbsAbsolute precision; Double_t_epsRelRelative precision; RooCategory_method1DSelects integration method for 1D integrals; RooCategory_method1DOpenSelects integration method for open ended 1D integrals; RooCategory_method2DSelects integration method for 2D integrals; RooCategory_method2DOpenSelects integration method for open ended 2D integrals; RooCategory_methodNDSelects integration method for ND integrals; RooCategory_methodNDOpenSelects integration method for open ended ND integrals; static Int_tRooPrintable::_nameLength; Bool_t_printEvalCounterFlag to control printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name); Retrieve configuration information specific to integrator with given name. void setEpsAbs(Double_t newEpsAbs); Set absolute convergence criteria (convergence if abs(Err)<newEpsAbs). RooPrintab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumIntConfig.html:8367,config,configuration,8367,root/html526/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html526/RooNumIntConfig.html,1,['config'],['configuration']
Modifiability,"istance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPARA.h>. Inheritance diagram for TPARA:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPARA() [1/2]. TPARA::TPARA ; (; ). PARA shape default constructor. ; Definition at line 42 of file TPARA.cxx. ◆ TPARA() [2/2]. TPARA::TPARA ; (; const char * ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPARA.html:17550,inherit,inherited,17550,doc/master/classTPARA.html,https://root.cern,https://root.cern/doc/master/classTPARA.html,1,['inherit'],['inherited']
Modifiability,"isted.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . END_HTMLEND_HTML. Function Members (Methods); public:. RooSimPdfBuilder(const RooArgSet& pdfProtoList); virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSimultaneous*b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:13191,config,configA,13191,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,3,['config'],['configA']
Modifiability,"isted.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . Function Members (Methods); public:. RooSimPdfBuilder(const RooArgSet& pdfProtoList); virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimPdfBuilder.html:13172,config,configA,13172,root/html528/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html528/RooSimPdfBuilder.html,18,['config'],['configA']
Modifiability,"isted.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . Function Members (Methods); public:. virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimPdfBuilder.html:13172,config,configA,13172,root/html602/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html602/RooSimPdfBuilder.html,12,['config'],['configA']
Modifiability,"ister an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Friends; class RooSimGenContext;  ; class RooSimSplitGenContext;  . Additional Inherited Members;  Public Types inherited from RooAbsCategory; using value_type = int;  The type used to denote a specific category state. ;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategoryLValue.html:42055,inherit,inherited,42055,doc/master/classRooAbsCategoryLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategoryLValue.html,1,['inherit'],['inherited']
Modifiability,"ister clang modules for headers.Definition TROOT.cxx:2535; TROOT::FindObjectTObject * FindObject(const char *name) const overrideReturns address of a ROOT object if it exists.Definition TROOT.cxx:1313; TROOT::fClassesTCollection * fClassesList of classes definition.Definition TROOT.h:140; TROOT::SetInterruptvoid SetInterrupt(Bool_t flag=kTRUE)Definition TROOT.h:326; TROOT::fEditHistogramsBool_t fEditHistogramsTrue if histograms can be edited with the mouse.Definition TROOT.h:130; TROOT::fGlobalsTListOfDataMembers * fGlobalsList of global variables.Definition TROOT.h:143; TROOT::fFuncTemplateTListOfFunctionTemplates * fFuncTemplateList of global function templates.Definition TROOT.h:142; TROOT::GetClipboardTSeqCollection * GetClipboard() constDefinition TROOT.h:254; TROOT::fTimerInt_t fTimerTimer flag.Definition TROOT.h:123; TROOT::fDataSetsTSeqCollection * fDataSetsList of data sets (TDSet or TChain)Definition TROOT.h:164; TROOT::fConfigOptionsTString fConfigOptionsROOT ./configure set build options.Definition TROOT.h:111; TROOT::GetStyleTStyle * GetStyle(const char *name) constReturn pointer to style with name.Definition TROOT.cxx:1579; TROOT::GetListOfEnumsTCollection * GetListOfEnums(Bool_t load=kFALSE)Definition TROOT.cxx:1754; TROOT::ProcessLineSyncLongptr_t ProcessLineSync(const char *line, Int_t *error=nullptr)Process interpreter command via TApplication::ProcessLine().Definition TROOT.cxx:2390; TROOT::InitInterpretervoid InitInterpreter()Initialize interpreter (cling)Definition TROOT.cxx:2064; TROOT::GetListOfGlobalsTCollection * GetListOfGlobals(Bool_t load=kFALSE)Return list containing the TGlobals currently defined.Definition TROOT.cxx:1788; TROOT::GetSelectedPadTVirtualPad * GetSelectedPad() constDefinition TROOT.h:271; TROOT::SetDirLevelstatic void SetDirLevel(Int_t level=0)Return Indentation level for ls().Definition TROOT.cxx:2914; TROOT::fSecContextsTSeqCollection * fSecContextsList of security contexts (TSecContext)Definition TROOT.h:161; TROOT::fWeb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8h_source.html:36736,config,configure,36736,doc/v632/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8h_source.html,1,['config'],['configure']
Modifiability,"ister clang modules for headers.Definition TROOT.cxx:2535; TROOT::FindObjectTObject * FindObject(const char *name) const overrideReturns address of a ROOT object if it exists.Definition TROOT.cxx:1313; TROOT::fClassesTCollection * fClassesList of classes definition.Definition TROOT.h:140; TROOT::SetInterruptvoid SetInterrupt(Bool_t flag=kTRUE)Definition TROOT.h:326; TROOT::fEditHistogramsBool_t fEditHistogramsTrue if histograms can be edited with the mouse.Definition TROOT.h:130; TROOT::fGlobalsTListOfDataMembers * fGlobalsList of global variables.Definition TROOT.h:143; TROOT::fFuncTemplateTListOfFunctionTemplates * fFuncTemplateList of global function templates.Definition TROOT.h:142; TROOT::GetClipboardTSeqCollection * GetClipboard() constDefinition TROOT.h:254; TROOT::fTimerInt_t fTimerTimer flag.Definition TROOT.h:123; TROOT::fDataSetsTSeqCollection * fDataSetsList of data sets (TDSet or TChain)Definition TROOT.h:164; TROOT::fConfigOptionsTString fConfigOptionsROOT ./configure set build options.Definition TROOT.h:111; TROOT::GetStyleTStyle * GetStyle(const char *name) constReturn pointer to style with name.Definition TROOT.cxx:1579; TROOT::GetListOfEnumsTCollection * GetListOfEnums(Bool_t load=kFALSE)Definition TROOT.cxx:1754; TROOT::ProcessLineSyncLongptr_t ProcessLineSync(const char *line, Int_t *error=nullptr)Process interpreter command via TApplication::ProcessLine().Definition TROOT.cxx:2390; TROOT::InitInterpretervoid InitInterpreter()Initialize interpreter (cling)Definition TROOT.cxx:2064; TROOT::GetListOfGlobalsTCollection * GetListOfGlobals(Bool_t load=kFALSE)Return list containing the TGlobals currently defined.Definition TROOT.cxx:1788; TROOT::GetSelectedPadTVirtualPad * GetSelectedPad() constDefinition TROOT.h:271; TROOT::SetDirLevelstatic void SetDirLevel(Int_t level=0)Return Indentation level for ls().Definition TROOT.cxx:2918; TROOT::fSecContextsTSeqCollection * fSecContextsList of security contexts (TSecContext)Definition TROOT.h:161; TROOT::fWeb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:36735,config,configure,36735,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,1,['config'],['configure']
Modifiability,"isterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:75573,config,configuration,75573,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['config'],['configuration']
Modifiability,"isterProxy (RooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _ctheta;  ; int _l1;  ; int _l2;  ; int _m1;  ; int _m2;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegendre.html:55018,inherit,inherited,55018,doc/master/classRooLegendre.html,https://root.cern,https://root.cern/doc/master/classRooLegendre.html,1,['inherit'],['inherited']
Modifiability,"istered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooObjCacheManager _cacheMgr;  ! Transient cache manager ;  ; RooArgSet * _curNormSet = nullptr;  ! Transient cache manager ;  ; bool _isPdfMode = false;  ; std::unique_ptr< TMatrixD > _M;  ; std::unique_ptr< TMatrixD > _MSqr;  ; RooSetProxy _obsList;  ; RooListProxy _parList;  ; RooListProxy _pdfList;  ; Grid2 _referenceGrid;  ; Setting _setting;  ; std::vector< int > _squareIdx;  ; std::vector< std::vector< double > > _squareVec;  ; bool _useHorizMorph;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFuncND.html:57843,inherit,inherited,57843,doc/master/classRooMomentMorphFuncND.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFuncND.html,1,['inherit'],['inherited']
Modifiability,"ister . ). inlineprotected . Definition at line 3312 of file RInterface.hxx. Member Function Documentation. ◆ Aggregate() [1/2]. template<typename Proxied , typename DataSource = void> . template<typename AccFun , typename MergeFun , typename R = typename TTraits::CallableTraits<AccFun>::ret_type, typename ArgTypes = typename TTraits::CallableTraits<AccFun>::arg_types, typename ArgTypesNoDecay = typename TTraits::CallableTraits<AccFun>::arg_types_nodecay, typename U = TTraits::TakeFirstParameter_t<ArgTypes>, typename T = TTraits::TakeFirstParameter_t<TTraits::RemoveFirstParameter_t<ArgTypes>>> . RResultPtr< U > ROOT::RDF::RInterface< Proxied, DataSource >::Aggregate ; (; AccFun ; aggregator, . MergeFun ; merger, . std::string_view ; columnName, . const U & ; aggIdentity . ). inline . Execute a user-defined accumulation operation on the processed column values in each processing slot. ; Template Parameters. FThe type of the aggregator callable. Automatically deduced. ; UThe type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced. ; TThe type of the column to apply the reduction to. Automatically deduced. . Parameters. [in]aggregatorA callable with signature U(U,T) or void(U&,T), where T is the type of the column, U is the type of the aggregator variable ; [in]mergerA callable with signature U(U,U) or void(std::vector<U>&) used to merge the results of the accumulations of each thread ; [in]columnNameThe column to be aggregated. If omitted, the first default column is used instead. ; [in]aggIdentityThe aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted) . Returnsthe result of the aggregation wrapped in a RResultPtr.; An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is initialized to aggIdentity or default-constructed if aggIdentity is omitted. This action calls the aggregator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:31363,variab,variable,31363,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['variab'],['variable']
Modifiability,"istlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:14:50 20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2Binding_double_double_double_.html:36404,Inherit,Inheritance,36404,root/html534/RooCFunction2Binding_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2Binding_double_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"istogram Window. void DoCancel(); Slot connected to the Cancel Button in the Rebinned histogram Window. void DoBinReleased1(); Slot connected to the BinNumber Slider in case of a 'ntuple histogram'.; It does the rebin. void DoBinMoved1(); Slot connected to the rebin slider in case of an ntuple histogram.; Updates the BinNumberEntryField during the BinSlider movement. void DoBinLabel1(); Slot connected to the Bin Number Entry for the Rebin. void DoOffsetPressed(); Slot connected to the OffSetSlider. It saves the OldBinOffset; (nessesary for delay draw mode). void DoOffsetReleased(); Slot connected to the OffSetSlider that; changes the origin of the histogram inbetween a binwidth;; rebin the histogram with the new Offset given by the slider.; problem: histogram with variable binwidth??. void DoOffsetMoved(); Slot connected to the OffSetSlider.; It changes the origin of the histogram inbetween a binwidth;; rebin the histogram with the new offset given by the slider.; problem: histogram with variable binwidth??. void DoBinOffset(); Slot connected to the OffSetNumberEntry, related to the OffSetSlider; changes the origin of the histogram inbetween a binwidth. void DoSliderXMoved(); Slot connected to the x-Slider that redraws the histogram; with the new slider range. void DoSliderXPressed(); Slot connected to the x axis range slider that initialises; the ""virtual"" box which is drawn in delay draw mode. void DoSliderXReleased(); Slot connected to the x-axis slider finalizing values after; the slider movement. void DoXAxisRange(); Slot connected to the Max/Min number entry fields showing x-axis range. void DoSliderYMoved(); Slot connected to the x-slider for redrawing the; histogram with the new slider Range (immediately). void DoSliderYPressed(); Slot connected to y-axis slider which initialises; the ""virtual"" box which is drawn in delay draw mode. void DoSliderYReleased(); Slot connected to the y-axis slider finalizing values after; the slider movement. void DoYAxisRange()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2Editor.html:32460,variab,variable,32460,root/html528/TH2Editor.html,https://root.cern,https://root.cern/root/html528/TH2Editor.html,10,['variab'],['variable']
Modifiability,"istogram is not filled. In general, the expression is:; Selection = ""weight *(boolean expression)""; If the Boolean expression evaluates to true, the histogram is filled with a weight. If the weight is not explicitly specified it is assumed to be 1.; For example, this selection will add 1 to the histogram if x is less than y and the square root of z is less than 3.2.; ""x<y && sqrt(z)>3.2""; On the other hand, this selection will add x+y to the histogram if the square root of z is larger than 3.2.; ""(x+y)*(sqrt(z)>3.2)""; The Draw method has its own parser, and it only looks in the current tree for variables. This means that any variable used in the selection must be defined in the tree. You cannot use an arbitrary global variable in the TTree::Draw method.; 12.20.2 Using TCut Objects in TTree::Draw; The TTree::Draw method also accepts TCutG objects. A TCut is a specialized string object used for TTree selections. A TCut object has a name and a title. It does not have any data members in addition to what it inherits from TNamed. It only adds a set of operators to do logical string concatenation. For example, assume:; TCut cut1 = ""x<1""; TCut cut2 = ""y>2""; then; cut1 && cut2; //result is the string ""(x<1)&&(y>2)""; Operators =, +=, +, *, !, &&, || are overloaded, here are some examples:; root[] TCut c1 = ""x < 1""; root[] TCut c2 = ""y < 0""; root[] TCut c3 = c1 && c2; root[] MyTree.Draw(""x"", c1); root[] MyTree.Draw(""x"", c1 || ""x>0""); root[] MyTree.Draw(""x"", c1 && c2); root[] MyTree.Draw(""x"", ""(x + y)"" * (c1 && c2)); 12.20.3 Accessing the Histogram in Batch Mode; The TTree::Draw method creates a histogram called htemp and puts it on the active pad. In a batch program, the histogram htemp created by default, is reachable from the current pad.; // draw the histogram; nt->Draw(""x"", ""cuts"");; // get the histogram from the current pad; TH1F *htemp = (TH1F*)gPad->GetPrimitive(""htemp"");; // now we have full use of the histogram; htemp->GetEntries();; If you pipe the result of the TTre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:588739,inherit,inherits,588739,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"istogram used to draw the map frame. ;  ; TString fKeys;  List of keys. ;  ; TString fOption;  Drawing options. ;  ; Int_t fXsize;  Size in bytes of X axis. ;  ; Int_t fYsize;  Size in K/Mbytes of Y axis. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFileDrawMap.h>. Inheritance diagram for TFileDrawMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileDrawMap() [1/2]. TFileDrawMap::TFileDrawMap ; (; ). Default TreeFileMap constructor. ; Definition at line 81 of file TFileDrawMap.cxx. ◆ TFileDrawMap() [2/2]. TFileDrawMap::TFileDrawMap ; (; const TFile * ; file, . const char * ; keys, . Option_t * ; option . ). TFileDrawMap normal constructor. ; see descriptions of arguments above ; Definition at line 93 of file TFileDrawMap.cxx. ◆ ~TFileDrawMap(). TFileDrawMap::~TFileDrawMap ; (; ). override . Tree destructor. ; Definition at line 139 of file TFileDrawMap.cxx. Member Function Documentation. ◆ AnimateTree(). void TFileDrawMap::AnimateTree ; (; const char * ; branches = """"). virtual . Show sequence of baskets reads for the list of baskets involved in the list of branches (separated b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileDrawMap.html:14380,inherit,inherited,14380,doc/master/classTFileDrawMap.html,https://root.cern,https://root.cern/doc/master/classTFileDrawMap.html,1,['inherit'],['inherited']
Modifiability,"istogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Terminate(void); See TProofDraw::Terminate(). TProofDrawHist(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-04 16:54; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawHist.html:8221,variab,variables,8221,root/html534/TProofDrawHist.html,https://root.cern,https://root.cern/root/html534/TProofDrawHist.html,6,['variab'],['variables']
Modifiability,"istograms with range in y. ; The first five parameters are similar to TH1D::TH1D. Only the values of Y between ylow and yup will be considered at filling time. ylow and yup will also be the maximum and minimum values on the y scale when drawing the profile.; See TProfile::BuildOptions for more explanations on errors; see also comments in the TH1 base class constructors ; Definition at line 180 of file TProfile.cxx. ◆ TProfile() [4/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Float_t * ; xbins, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions() for more explanations on errors see also comments in the TH1 base class constructors ; Definition at line 138 of file TProfile.cxx. ◆ TProfile() [5/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions for more explanations on errors see also comments in the TH1 base class constructors ; Definition at line 150 of file TProfile.cxx. ◆ TProfile() [6/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins, . Double_t ; ylow, . Double_t ; yup, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions for more explanations on errors; see also comments in the TH1 base class constructors ; Definition at line 162 of file TProfile.cxx. ◆ TProfile() [7/7]. TProfile::TProfile ; (; const TProfile & ; profile). Copy constructor. ; Definition at line 244 of file TProfile.cxx. ◆ ~TProfile(). TProfile::~TProfile ; (; ). override . Default destructor for Profile histograms. ; Definition at line 100 of file TProfile.cxx. Member Function Documentation. ◆ Add() [1/3]. Bool_t TProfile::Add ; (; const TH1 * ; h1, . const TH1 *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:60291,variab,variable,60291,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['variab'],['variable']
Modifiability,"istograms; 593 Int_t fNbinsH; // number of bins in evaluation histograms; 594 ; 595 Types::EAnalysisType fAnalysisType; // method-mode : true --> regression, false --> classification; 596 ; 597 std::vector<Float_t>* fRegressionReturnVal; // holds the return-values for the regression; 598 std::vector<Float_t>* fMulticlassReturnVal; // holds the return-values for the multiclass classification; 599 ; 600 private:; 601 ; 602 // MethodCuts redefines some of the evaluation variables and histograms -> must access private members; 603 friend class MethodCuts;; 604 ; 605 ; 606 // data sets; 607 DataSetInfo& fDataSetInfo; //! the data set information (sometimes needed); 608 ; 609 Double_t fSignalReferenceCut; // minimum requirement on the MVA output to declare an event signal-like; 610 Double_t fSignalReferenceCutOrientation; // minimum requirement on the MVA output to declare an event signal-like; 611 Types::ESBType fVariableTransformType; // this is the event type (sig or bgd) assumed for variable transform; 612 ; 613 // naming and versioning; 614 TString fJobName; // name of job -> user defined, appears in weight files; 615 TString fMethodName; // name of the method (set in derived class); 616 Types::EMVA fMethodType; // type of method (set in derived class); 617 TString fTestvar; // variable used in evaluation, etc (mostly the MVA); 618 UInt_t fTMVATrainingVersion; // TMVA version used for training; 619 UInt_t fROOTTrainingVersion; // ROOT version used for training; 620 Bool_t fConstructedFromWeightFile; // is it obtained from weight file?; 621 ; 622 // Directory structure: dataloader/fMethodBaseDir/fBaseDir; 623 // where the first directory name is defined by the method type; 624 // and the second is user supplied (the title given in Factory::BookMethod()); 625 TDirectory* fBaseDir; // base directory for the instance, needed to know where to jump back from localDir; 626 mutable TDirectory* fMethodBaseDir; // base directory for the method; 627 //this will be the next way t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:26589,variab,variable,26589,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['variab'],['variable']
Modifiability,"istograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Int_tfAverageEvtPerBinaverage events per bin; used to calculate fNbins; Int_t*fAverageEvtPerBinVarBaverage events per bin; used to calculate fNbins; Int_t*fAverageEvtPerBinVarSaverage events per bin; used to calculate fNbins; TStringfBorderMethodStringthe method to take care about ""border"" effects (string); TMVA::PDF*fDefaultPDFLikpdf that contains default definitions; Int_tfDropVariablefor ranking test; Double_tfEpsilonminimum number of likelihood (to avoid zero); vector<TH1*>*fHistBgdbackground PDFs (histograms); vector<TH1*>*fHistBgd_smoothbackground PDFs (smoothed histograms); vector<TH1*>*fHistSigsignal PDFs (histograms); vector<TH1*>*fHistSig_smoothsignal PDFs (smoothed histograms); TString*fInterpolateStringwhich interpolation method used for reference histograms (individual for each variable); Float_tfKDEfineFactorfine tuning factor for Adaptive KDE; TStringfKDEiterStringNumber of iterations (string); TStringfKDEtypeStringKernel type to use for KDE (string); Int_tfNsmoothnumber of smooth passes; Int_t*fNsmoothVarBnumber of smooth passes; Int_t*fNsmoothVarSnumber of smooth passes; vector<TMVA::PDF*>*fPDFBgdlist of PDFs (background); vector<TMVA::PDF*>*fPDFSiglist of PDFs (signal); Bool_tfTransformLikelihoodOutputlikelihood output is sigmoid-transformed. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodLikelihood(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodLikelihood(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodLikelihood.html:20459,variab,variable,20459,root/html602/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodLikelihood.html,6,"['Adapt', 'variab']","['Adaptive', 'variable']"
Modifiability,istr; }. void SetnCells(Long_t nCells); {fNCells =nCells;}. void SetnSampl(Long_t nSampl); {fNSampl =nSampl;}. void SetnBin(Int_t nBin); {fNBin = nBin;}. void SetEvPerBin(Int_t EvPerBin); {fEvPerBin =EvPerBin;}. void SetNElements(UInt_t numb); {fNElements = numb;}. void SetVolumeFraction(Float_t vfr); {fVolFrac = vfr;}. void SetFillFoamWithOrigWeights(Bool_t new_val); {fFillFoamWithOrigWeights=new_val;}. void SetDTSeparation(TMVA::EDTSeparation new_val); {fDTSeparation=new_val;}. void SetPeekMax(Bool_t new_val); { fPeekMax = new_val; }. Int_t GetTotDim() const; coverity[ -tainted_data_return ]. {return fDim; }. TString GetFoamName() const; {return fName; }. UInt_t GetNElements() const; {return fNElements; }. Float_t GetVolumeFraction() const; {return fVolFrac;}. EFoamType GetFoamType() const; {return fFoamType;}. UInt_t GetNActiveCells() const; {return fNoAct;}. UInt_t GetNInActiveCells() const; {return GetNCells()-GetNActiveCells();}. UInt_t GetNCells() const; {return fNCells;}. PDEFoamCell* GetRootCell() const; {return fCells[0];}. void SetNmin(UInt_t val); Getters and Setters for user cut options. { fNmin=val; }. UInt_t GetNmin(); { return fNmin; }. Bool_t GetFillFoamWithOrigWeights() const; { return fFillFoamWithOrigWeights; }. void SetMaxDepth(UInt_t maxdepth); { fMaxDepth = maxdepth; }. UInt_t GetMaxDepth() const; { return fMaxDepth; }. Double_t GetXmin(Int_t idim) const; {return fXmin[idim];}. Double_t GetXmax(Int_t idim) const; {return fXmax[idim];}. void AddVariableName(const char* s); Getters and Setters for variable names. { AddVariableName(new TObjString(s)); }. void AddVariableName(TObjString* s); { fVariableNames->Add(s); }. TObjString* GetVariableName(Int_t idx); {return dynamic_cast<TObjString*>(fVariableNames->At(idx));}. » Last changed: Wed Dec 8 16:56:54 2010 » Last generated: 2010-12-08 16:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__PDEFoam.html:30426,variab,variable,30426,root/html528/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html528/TMVA__PDEFoam.html,1,['variab'],['variable']
Modifiability,"istribution. ;  ; double tDist (double nu) const;  t student distribution ;  ; double Rayleigh (double sigma) const;  Rayleigh distribution. ;  ; double Logistic (double a) const;  Logistic distribution. ;  ; double Pareto (double a, double b) const;  Pareto distribution. ;  ; void Dir2D (double &x, double &y) const;  generate random numbers in a 2D circle of radious 1 ;  ; void Dir3D (double &x, double &y, double &z) const;  generate random numbers in a 3D sphere of radious 1 ;  ; unsigned int Poisson (double mu) const;  Poisson distribution. ;  ; unsigned int Binomial (double p, unsigned int n) const;  Binomial distribution. ;  ; unsigned int NegativeBinomial (double p, double n) const;  Negative Binomial distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p) const;  Multinomial distribution. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLRandomEngine; void SetType (GSLRngWrapper *r);  internal method used by the derived class to set the type of generators ;  ; GSLRngWrapper * Engine ();  internal method to return the engine Used by class like GSLMCIntegrator to set the engine ;  . #include <Math/GSLRndmEngines.h>. Inheritance diagram for ROOT::Math::GSLRngMRG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef GSLRandomEngine ROOT::Math::GSLRngMRG::BaseType. Definition at line 469 of file GSLRndmEngines.h. Constructor & Destructor Documentation. ◆ GSLRngMRG(). ROOT::Math::GSLRngMRG::GSLRngMRG ; (; ). Definition at line 463 of file GSLRndmEngines.cxx. Libraries for ROOT::Math::GSLRngMRG:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLRndmEngines.h; math/mathmore/src/GSLRndmEngines.cxx. ROOTMathGSLRngMRG. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMRG.html:4648,inherit,inherited,4648,doc/master/classROOT_1_1Math_1_1GSLRngMRG.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMRG.html,1,['inherit'],['inherited']
Modifiability,"ists. ;  ; const std::shared_ptr< RFrame > GetFrame () const;  Get a frame object if exists. ;  ; std::shared_ptr< RDrawable > GetPrimitive (unsigned num) const;  returns primitive of given number ;  ; auto GetPrimitives () const;  Get all primitives contained in the pad. ;  ; unsigned NumPrimitives () const;  returns number of primitives in the pad ;  ; bool Remove (const std::shared_ptr< RDrawable > &drawable);  Remove drawable from list of primitives. ;  ; bool Remove (const std::string &id);  Remove an object from the list of primitives. ;  ; bool RemoveAt (unsigned indx);  Remove drawable at specified position. ;  ; void UseStyle (const std::shared_ptr< RStyle > &style) override;  Use provided style for pad and all primitives inside. ;  ; void Wipe ();  Wipe the pad by clearing the list of primitives. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const char *csstype);  ; virtual ~RDrawable ();  ; void ClearStyle ();  ; const std::string & GetCssClass () const;  ; const char * GetCssType () const;  ; const std::string & GetId () const;  ; void SetCssClass (const std::string &cl);  ; void SetId (const std::string &id);  . Protected Member Functions;  RPadBase (const char *csstype);  Allow derived classes to default construct a RPadBase. ;  ; void CollectShared (Internal::RIOSharedVector_t &) override;  Collect all shared items to resolve shared_ptr after IO. ;  ; void DisplayPrimitives (RPadBaseDisplayItem &paditem, RDisplayContext &ctxt);  Create display items for all primitives in the pad Each display item gets its special id, which used later for client-server communication Second parameter is version id which already delivered to the client. ;  ; void SetDrawableVersion (Version_t vers) override;  Assign drawable version - for pad itself and all primitives. ;  ;  Protected Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const RDrawable &)=delete;  ; virtual std::unique_ptr< RDisplayItem > Dis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBase.html:3438,inherit,inherited,3438,doc/master/classROOT_1_1Experimental_1_1RPadBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBase.html,1,['inherit'],['inherited']
Modifiability,"ists. ;  ; const std::shared_ptr< RFrame > GetFrame () const;  Get a frame object if exists. ;  ; std::shared_ptr< RDrawable > GetPrimitive (unsigned num) const;  returns primitive of given number ;  ; auto GetPrimitives () const;  Get all primitives contained in the pad. ;  ; unsigned NumPrimitives () const;  returns number of primitives in the pad ;  ; bool Remove (const std::shared_ptr< RDrawable > &drawable);  Remove drawable from list of primitives. ;  ; bool Remove (const std::string &id);  Remove an object from the list of primitives. ;  ; bool RemoveAt (unsigned indx);  Remove drawable at specified position. ;  ; void UseStyle (const std::shared_ptr< RStyle > &style) override;  Use provided style for pad and all primitives inside. ;  ; void Wipe ();  Wipe the pad by clearing the list of primitives. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const char *csstype);  ; virtual ~RDrawable ();  ; void ClearStyle ();  ; const std::string & GetCssClass () const;  ; const char * GetCssType () const;  ; const std::string & GetId () const;  ; void SetCssClass (const std::string &cl);  ; void SetId (const std::string &id);  . Public Attributes; RAttrBorder border {this, ""border""};  ! border attributes ;  . Protected Member Functions; std::unique_ptr< RDisplayItem > Display (const RDisplayContext &) final;  Create pad display item. ;  ;  Protected Member Functions inherited from ROOT::Experimental::RPadBase;  RPadBase (const char *csstype);  Allow derived classes to default construct a RPadBase. ;  ; void CollectShared (Internal::RIOSharedVector_t &) override;  Collect all shared items to resolve shared_ptr after IO. ;  ; void DisplayPrimitives (RPadBaseDisplayItem &paditem, RDisplayContext &ctxt);  Create display items for all primitives in the pad Each display item gets its special id, which used later for client-server communication Second parameter is version id which already delivered to the client. ;  ; void SetDrawableVe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPad.html:3897,inherit,inherited,3897,doc/master/classROOT_1_1Experimental_1_1RPad.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPad.html,1,['inherit'],['inherited']
Modifiability,"ists. ;  ; const std::shared_ptr< RFrame > GetFrame () const;  Get a frame object if exists. ;  ; std::shared_ptr< RDrawable > GetPrimitive (unsigned num) const;  returns primitive of given number ;  ; auto GetPrimitives () const;  Get all primitives contained in the pad. ;  ; unsigned NumPrimitives () const;  returns number of primitives in the pad ;  ; bool Remove (const std::shared_ptr< RDrawable > &drawable);  Remove drawable from list of primitives. ;  ; bool Remove (const std::string &id);  Remove an object from the list of primitives. ;  ; bool RemoveAt (unsigned indx);  Remove drawable at specified position. ;  ; void UseStyle (const std::shared_ptr< RStyle > &style) override;  Use provided style for pad and all primitives inside. ;  ; void Wipe ();  Wipe the pad by clearing the list of primitives. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const char *csstype);  ; virtual ~RDrawable ();  ; void ClearStyle ();  ; const std::string & GetCssClass () const;  ; const char * GetCssType () const;  ; const std::string & GetId () const;  ; void SetCssClass (const std::string &cl);  ; void SetId (const std::string &id);  . Static Public Member Functions; static std::shared_ptr< RCanvas > Create (const std::string &title);  Create new canvas instance. ;  ; static const std::vector< std::shared_ptr< RCanvas > > GetCanvases ();  Returns list of created canvases. ;  ; static void ReleaseHeldCanvases ();  Release list of held canvases pointers If no other shared pointers exists on the canvas, object will be destroyed. ;  . Private Member Functions;  RCanvas (const RCanvas &)=delete;  Disable copy construction for now. ;  ; uint64_t IncModified ();  ; RCanvas & operator= (const RCanvas &)=delete;  Disable assignment for now. ;  . Private Attributes; int fHeight {0};  Height of the canvas in pixels. ;  ; Version_t fModified {1};  Modify counter, incremented every time canvas is changed. ;  ; std::unique_ptr< Internal::RVirtualCanv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html:5650,inherit,inherited,5650,doc/master/classROOT_1_1Experimental_1_1RCanvas.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html,1,['inherit'],['inherited']
Modifiability,"it (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCollection.html:12746,inherit,inherited,12746,doc/v632/classTCollection.html,https://root.cern,https://root.cern/doc/v632/classTCollection.html,2,['inherit'],['inherited']
Modifiability,"it for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealSumPdf(); Default constructor; coverity[UNINIT_CTOR]. RooRealSumPdf(const char* name, const char* title); Constructor with name and title. RooRealSumPdf(const char* name, const char* title, RooAbsReal& func1, RooAbsReal& func2, RooAbsReal& coef1); Construct p.d.f consisting of coef1*func1 + (1-coef1)*func2; The input coefficients and functions are allowed to be negative; but the resulting sum is not, which is enforced at runtime. RooRealSumPdf(const char* name, const char* title, const RooArgList& funcList, const RooArgList& coefList, Bool_t extended = kFALSE); Constructor p.d.f implementing sum_i [ coef_i * func_i ], if N_coef==N_func; or sum_i [ coef_i * func_i ] + (1 - sum_i [ coef_i ] )* func_N if Ncoef==N_func-1. All coefficients and functions are allowed to be negative; but the sum is not, which is enforced at runtime. RooRealSumPdf(const RooRealSumPdf& other, const char* name = 0); Copy constructor. ~RooRealSumPdf(); Destructor. RooAbsPdf::ExtendMode extendMode() const. Double_t evaluate() const; Calculate the current value. Bool_t checkObservables(const RooArgSet* nset) const; Check if FUNC is valid for given normalization set.; Coeffient and FUNC must be non-overlapping, but func-coefficient; pairs may overlap each other. In the present implementation, coefficients may not be observables or derive; from observables. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; cout << ""RooRealSumPdf::getAnal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealSumPdf.html:44764,extend,extended,44764,root/html534/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html534/RooRealSumPdf.html,6,['extend'],['extended']
Modifiability,"it method functions (chi2, likelihood, etc..) given the data and the model function ;  ; namespace  HFitInterface;  . Classes; class  AreaComparer;  ; class  BasicFCN;  BasicFCN class: base class for the objective functions used in the fits It has a reference to the data and the model function used in the fit. More...;  ; class  BinData;  Class describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: More...;  ; class  Box;  ; class  BoxContainer;  ; class  Chi2FCN;  Chi2FCN class for binned fits using the least square methods. More...;  ; struct  DataOptions;  DataOptions : simple structure holding the options on how the data are filled. More...;  ; class  DataRange;  class describing the range in the coordinates it supports multiple range in a coordinate. More...;  ; class  FcnAdapter;  ; class  FitConfig;  Class describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class. More...;  ; class  FitData;  Base class for all the fit data types: Stores the coordinates and the DataOptions. More...;  ; class  FitResult;  class containing the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values. More...;  ; class  Fitter;  Fitter class, entry point for performing all type of fits. More...;  ; class  LogLikelihoodFCN;  LogLikelihoodFCN class for likelihood fits. More...;  ; struct  ObjFuncTrait;  ; struct  ObjFuncTrait< ROOT::Math::FitMethodFunction >;  ; struct  ObjFuncTrait< ROOT::Math::FitMethodGradFunction >;  ; class  ParameterSettings;  Class, describing value, limits and step size of the parameters Provides functionality also to set/retrieve values, step sizes, limits and fix the parameters. More...;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Fit.html:1423,config,configuration,1423,doc/master/namespaceROOT_1_1Fit.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Fit.html,2,['config'],['configuration']
Modifiability,"it normalized (for use as pdf cache) ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:58060,inherit,inherited,58060,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,1,['inherit'],['inherited']
Modifiability,"it only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define conditional observables; Verbose() -- Verbose output of GOF framework classes; CloneData() -- Clone input dataset for internal use (default is kTRUE). RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, Bool_t extended, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE, Bool_t binnedL = kFALSE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, const RooArgSet& projDeps, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE, Bool_t binnedL = kFALSE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const RooNLLVar& other, const char* name = 0); Copy constructor. ~RooNLLVar(); Destructor. void applyWeightSquared(Bool_t flag). Double_t evaluatePartition(Int_t firstEvent, Int_t lastEvent, Int_t stepSize) const; Calculate and return likelihood on subset of data from firstEvent to lastEvent; processed with a step size of 'stepSize'. If this an extended likelihood and; and the zero event is processed the extended term is added to the return; likelihood. RooNLLVar(); Constructors, assignment etc. { _first = kTRUE ; }. TObject* clone(const char* newname) const; { return new RooNLLVar(*this,newname); }. RooAbsTestStatistic* create(const char* name, const char* title, RooAbsReal& pdf, RooAbsData& adata, const RooArgSet& projDep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNLLVar.html:44457,extend,extended,44457,root/html534/RooNLLVar.html,https://root.cern,https://root.cern/root/html534/RooNLLVar.html,6,['extend'],['extended']
Modifiability,"it output objects; RooAbsGenContext*_genContextGenerator context ; TList_genDataListList of generated data sample; RooArgSet*_genInitParamsList of originalgenerator parameters; RooAbsPdf*_genModelGenerator model ; RooDataSet*_genParDataList of of generated parameters of each sample; RooArgSet*_genParamsList of actual generator parameters; const RooDataSet*_genProtoDataGenerator prototype data set; RooAbsData*_genSampleCurrently generated sample ; list<RooAbsMCStudyModule*>_modListList of additional study modules ;; Double_t_nExpGenNumber of expected events to generate in extended mode; RooRealVar*_ngenVar; RooRealVar*_nllVar; Bool_t_perExptGenParamsDo generation parameter change per event?; RooArgSet_projDepsList of projected dependents in fit; Bool_t_randProtoRandomize order of prototype data access; Bool_t_silenceSilent running mode?; Bool_t_verboseGenVerbose generation?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMCStudy(const RooAbsPdf& model, const RooArgSet& observables, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to that data and accumulating the fit statistics. The constructor accepts the following arguments. model -- The PDF to be studied; observables -- The variables of the PDF to be considered the observables. Silence() -- Suppress all RooFit messages during running below PROGRESS level; FitModel(const RooAbsPdf&) -- The PDF for fitting, if it is different from the PDF for generating; ConditionalObservables; (const RooArgSet& set) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMCStudy.html:12184,Inherit,Inheritance,12184,root/html532/RooMCStudy.html,https://root.cern,https://root.cern/root/html532/RooMCStudy.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it restrictions, use default; 1 - read-only access; 2 - full access. void ScanObjectMemebers(TRootSnifferScanRec& rec, TClass* cl, char* ptr, unsigned long cloffset); scan object data members; some members like enum or static members will be excluded. void ScanObjectProperties(TRootSnifferScanRec& rec, TObject* obj); scans object properties; here such fields as _autoload or _icon properties depending on class or object name could be assigned. void ScanObjectChilds(TRootSnifferScanRec& rec, TObject* obj); scans object childs (if any); here one scans collection, branches, trees and so on. void ScanCollection(TRootSnifferScanRec& rec, TCollection* lst, const char* foldername = 0, TCollection* keys_lst = 0); scan collection content. void ScanRoot(TRootSnifferScanRec& rec); scan complete ROOT objects hierarchy; For the moment it includes objects in gROOT directory; and list of canvases and files; Also all registered objects are included.; One could reimplement this method to provide alternative; scan methods or to extend some collection kinds. Bool_t IsDrawableClass(TClass* cl); return true if object can be drawn. void ScanHierarchy(const char* topname, const char* path, TRootSnifferStore* store, Bool_t only_fields = kFALSE); scan ROOT hierarchy with provided store object. void * FindInHierarchy(const char* path, TClass** cl = 0, TDataMember** member = 0, Int_t* chld = 0); Search element with specified path; Returns pointer on element; Optionally one could obtain element class, member description; and number of childs. When chld!=0, not only element is searched,; but also number of childs are counted. When member!=0, any object; will be scanned for its data members (disregard of extra options). TObject * FindTObjectInHierarchy(const char* path); Search element in hierarchy, derived from TObject. ULong_t GetStreamerInfoHash(); Returns hash value for streamer infos; At the moment - just number of items in streamer infos list. ULong_t GetItemHash(const char* itemname); Get ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSniffer.html:12709,extend,extend,12709,root/html604/TRootSniffer.html,https://root.cern,https://root.cern/root/html604/TRootSniffer.html,2,['extend'],['extend']
Modifiability,"it server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooCategorySharedProperties*_sharedProp! Shared properties associated with this instance; static RooSharedPropertiesList_sharedPropListList of properties shared among clone sets ; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsCategory::_treeVar! do not persist; TIterator*RooAbsCategory::_typeIter!; TObjArrayRooAbsCategory::_typesArray of allowed values; RooCatTypeRooAbsCategory::_valueCurrent value; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategory(). RooCategory(const char* name, const char* title); Constructor. Types must be defined using defineType() before variable can be used. RooCategory(const RooCategory& other, const char* name = 0); Copy constructor. ~RooCategory(); Destructor. Bool_t setIndex(Int_t index, Bool_t printError = kTRUE); Set value by specifying the index code of the desired state.; If printError is set, a message will be printed if; the specified index does not represent a valid state. Bool_t setLabel(const char* label, Bool_t printError = kTRUE); Set value by specifying the name of the desired state; If printError is set, a message will be printed if; the specified label does not represent a valid state. Bool_t defineType(const char* label); Define a state with given name, the lowest available; positive integer is assigned as index. Category; state labels may not contain semicolons.; Error status is return if state with given name; is already de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCategory.html:24143,Inherit,Inheritance,24143,root/html534/RooCategory.html,https://root.cern,https://root.cern/root/html534/RooCategory.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t * fA;  [fMaxParam] Fit parameter array ;  ; Double_t fAKAPPA;  ; Double_t * fAMN;  [fMaxParam] Minimum param value ;  ; Double_t * fAMX;  [fMaxParam] Maximum param value ;  ; TString * fANames;  [fMaxParam] Parameter names ;  ; Double_t * fCmPar;  [fMaxParam] parameters of commands ;  ; TString fCword;  Command string. ;  ; Double_t * fDA;  [fMaxParam] Parameter step ;  ; Bool_t fDEBUG;  debug info ;  ; Double_t * fDF;  [fMaxParam] First derivatives of theoretical function ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumili.html:20076,inherit,inherited,20076,doc/master/classTFumili.html,https://root.cern,https://root.cern/doc/master/classTFumili.html,2,['inherit'],['inherited']
Modifiability,"it this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddToDesign (Double_t *x, Double_t y, Double_t e);  Add a point to the AtA matrix and to the Atb vector. ;  ; void ComputeTValues ();  Computes parameters' t-values and significance. ;  ; void CreateSubset (Int_t ntotal, Int_t h, Int_t *index);  Creates a p-subset to start ntotal - total number of points from which the subset is chosen. ;  ; Double_t CStep (Int_t step, Int_t h, Double_t *residuals, Int_t *index, Int_t *subdat, Int_t start, Int_t end);  The CStep procedure,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearFitter.html:25972,inherit,inherited,25972,doc/master/classTLinearFitter.html,https://root.cern,https://root.cern/doc/master/classTLinearFitter.html,2,['inherit'],['inherited']
Modifiability,"it this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TFitter (const TFitter &);  ; TFitter & operator= (const TFitter &);  . Private Attributes; Double_t * fCovar;  ; TMinuit * fMinuit;  ; Int_t fNlog;  ; Double_t * fSumLog;  . Additional Inherited Members;  Public Types inherited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kIncon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitter.html:15419,inherit,inherited,15419,doc/master/classTFitter.html,https://root.cern,https://root.cern/doc/master/classTFitter.html,2,['inherit'],['inherited']
Modifiability,"it this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DoSetDimension ();  Private method to set dimension in objective function. ;  ; bool ValidParameterIndex (int ipar) const;  Check if ipar is a valid parameter index. ;  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBackCompFitter.html:20174,inherit,inherited,20174,doc/master/classTBackCompFitter.html,https://root.cern,https://root.cern/doc/master/classTBackCompFitter.html,2,['inherit'],['inherited']
Modifiability,"it this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fCache;  [fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words) ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualFitter.html:14632,inherit,inherited,14632,doc/master/classTVirtualFitter.html,https://root.cern,https://root.cern/doc/master/classTVirtualFitter.html,2,['inherit'],['inherited']
Modifiability,"it will not be done.; For keeping a minimizer pointer the method ReCreateMinimizer() could eventually be used. bool Scan(unsigned int ipar, TGraph* gr, double xmin = 0, double xmax = 0); scan parameter ipar between value of xmin and xmax; a graph must be given which will be on return filled with the scan resul; If the graph size is zero, a default size n = 40 will be used; *. bool Contour(unsigned int ipar, unsigned int jpar, TGraph* gr, double confLevel = 0.683); create a 2D contour around the minimum for the parameter ipar and jpar; if a minimum does not exist or is invalid it will return false; on exit a TGraph is filled with the contour points; the number of contur points is determined by the size of the TGraph.; if the size is zero a default number of points = 20 is used; pass optionally the confidence level, default is 0.683; it is assumed that ErrorDef() defines the right error definition; (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level. TBackCompFitter(). void SetMethodCall(TMethodCall* m); for using interpreted function passed by the user. { fMethodCall = m; }. ROOT::Fit::FitConfig & GetFitConfig(); !!!! new method (of this interface); get reference to Fit configuration (NOTE: it will be invalid when class is deleted). { return fFitter->Config(); }. const ROOT::Fit::FitResult & GetFitResult() const; get reference to Fit Result object (NOTE: it will be invalid when class is deleted). { return fFitter->Result(); }. const ROOT::Fit::FitData & GetFitData() const; get reference to Fit Data object (NOTE: it will be invalid when class is deleted). { return *fFitData; }. » Author: L. Moneta 08/2008 » Copyright (c) 2008 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/minuit2:$Id: TBackCompFitter.h 31873 2009-12-14 10:05:39Z brun $ » Last generated: 2009-12-14 11:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBackCompFitter.html:18918,config,configuration,18918,root/html526/TBackCompFitter.html,https://root.cern,https://root.cern/root/html526/TBackCompFitter.html,1,['config'],['configuration']
Modifiability,"it's more than a little unlikely that will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error ; (TMultiDimFit::SetMinRelativeError), and ; will be considered minimized when; . Optionally, the user may impose a functional expression by specifying; the powers of each variable in specified functions ; (TMultiDimFit::SetPowers). In that case, only the; coefficients is calculated by the class.; . Limiting the Number of Terms; . As always when dealing with fits, there's a real chance of; over fitting. As is well-known, it's always possible to fit an; polynomial in to points with ; , but; the polynomial is not likely to fit new data at all; [1]. Therefore, the user is asked to provide an upper; limit, to the number of terms in ; (TMultiDimFit::SetMaxTerms).; ; However, since there's an infinite number of to choose from, the; user is asked to give the maximum power. , of each variable; to be considered in the minimization of ; (TMultiDimFit::SetMaxPowers).; ; One way of obtaining values for the maximum power in variable , is; to perform a regular fit to the dependent quantity , using a; polynomial only in . The maximum power is is then the; power that does not significantly improve the one-dimensional; least-square fit over to [5].; ; There are still a huge amount of possible choices for ; in fact; there are ; possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a power control limit, ; (TMultiDimFit::SetPowerLimit), and a function; is only accepted if; . where is the leading power of variable in function; . (TMultiDimFit::MakeCandidates). So the number of; functions increase with (1, 2 is fine, 5 is way out).; . Gram-Schmidt Orthogonalisation. To further reduce the number of functions in the final expression,; only those functions that significantly reduce is chosen. What; `significant' means, is chosen by the user, and will be; discussed below (see 2.3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:3921,variab,variable,3921,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,6,['variab'],['variable']
Modifiability,"it() const; boolAtUpperMaxFcn() const; boolIsValid() const; doubleLower() const; boolLowerNewMin() const; const ROOT::Minuit2::MnUserParameterState&LowerState() const; boolLowerValid() const; doubleMin() const; ROOT::Minuit2::MinosErrorMinosError(); ROOT::Minuit2::MinosErrorMinosError(const ROOT::Minuit2::MinosError& err); ROOT::Minuit2::MinosErrorMinosError(unsigned int par, double min, const ROOT::Minuit2::MnCross& low, const ROOT::Minuit2::MnCross& up); unsigned intNFcn() const; pair<double,double>operator()() const; ROOT::Minuit2::MinosError&operator()(const ROOT::Minuit2::MinosError& err); ROOT::Minuit2::MinosError&operator=(const ROOT::Minuit2::MinosError&); unsigned intParameter() const; doubleUpper() const; boolUpperNewMin() const; const ROOT::Minuit2::MnUserParameterState&UpperState() const; boolUpperValid() const. Data Members; private:. ROOT::Minuit2::MnCrossfLower; doublefMinValue; unsigned intfParameter; ROOT::Minuit2::MnCrossfUpper. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinosError(); {}. MinosError(unsigned int par, double min, const ROOT::Minuit2::MnCross& low, const ROOT::Minuit2::MnCross& up); {}. ~MinosError(); {}. MinosError(const ROOT::Minuit2::MinosError& err); {}. MinosError& operator()(const ROOT::Minuit2::MinosError& err). std::pair<double,double> operator()() const. double Lower() const. return -1.* LowerState(). double Upper() const. return UpperState(). unsigned int Parameter() const; {return fParameter;}. bool IsValid() const; {return fLower.IsValid() && fUpper.IsValid();}. bool LowerValid() const; {return fLower.IsValid();}. bool UpperValid() const; {return fUpper.IsValid();}. bool AtLowerLimit() const; {return fLower.AtLimit();}. bool AtUpperLimit() const; {return fUpper.AtLimit();}. bool AtLowerMaxFcn() const; {return fLower.AtMaxFcn();}. bool AtUpperMaxFcn() const; {return fUpper.AtMaxFcn();}. bool LowerNewMin() const; {return fLower.NewMinimum();}. bool UpperNewMin() const; {return ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MinosError.html:1478,Inherit,Inheritance,1478,root/html532/ROOT__Minuit2__MinosError.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MinosError.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariablePCATransformVariablePCATransform(TMVA::DataSetInfo& dsi); TMVA::VariablePCATransformVariablePCATransform(const TMVA::VariablePCATransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariablePCATransform.html:6337,Variab,VariableInfo,6337,root/html532/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariablePCATransform.html,10,['Variab'],"['VariableInfo', 'VariablePCATransform', 'VariablePCATransformVariablePCATransform', 'VariableTransformBase', 'Variables']"
Modifiability,"it(ULong_t secs, ULong_t nanoSecs = 0); virtual voidTObject::UseCurrentStyle(); virtual Int_tWait(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. pthread_cond_tfCondthe pthread condition variable; TPosixMutex*fMutexmutex used around Wait() and TimedWait(). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPosixCondition(TMutexImp* m); Create Condition variable. Ctor must be given a pointer to an; existing mutex. The condition variable is then linked to the mutex,; so that there is an implicit unlock and lock around Wait() and; TimedWait(). ~TPosixCondition(); TCondition dtor. Int_t Wait(); Wait for the condition variable to be signalled. The mutex is; implicitely released before waiting and locked again after waking up.; If Wait() is called by multiple threads, a signal may wake up more; than one thread. See POSIX threads documentation for details. Int_t TimedWait(ULong_t secs, ULong_t nanoSecs = 0); TimedWait() is given an absolute time to wait until. To wait for a; relative time from now, use TThread::GetTime(). See POSIX threads; documentation for why absolute times are better than relative.; Returns 0 if successfully signalled, 1 if time expired. Int_t Signal(); If one or more threads have called Wait(), Signal() wakes up at least; one of them, possibly more. See POSIX threads documentation for de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPosixCondition.html:5532,variab,variable,5532,root/html528/TPosixCondition.html,https://root.cern,https://root.cern/root/html528/TPosixCondition.html,6,['variab'],['variable']
Modifiability,"it) function with fitted parameter values. { return fFitFunc; }. double Chi2() const; Chi2 fit value; in case of likelihood must be computed ?. { return fChi2; }. unsigned int Ndf() const; Number of degree of freedom. { return fNdf; }. double Prob() const; p value of the fit (chi2 probability). const std::vector<double> & Errors() const; parameter errors (return st::vector). { return fErrors; }. const double * GetErrors() const; parameter errors (return const pointer). { return (fErrors.empty()) ? 0 : &fErrors.front(); }. const std::vector<double> & Parameters() const; parameter values (return std::vector). { return fParams; }. const double * GetParams() const; parameter values (return const pointer). { return &fParams.front(); }. double Value(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Parameter(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Error(unsigned int i) const; parameter error by index; (NOTE: this due to conflict with TObject::Error cannot used in derived class which; inherits from TObject. Use instead ParError (or Errors()[i] ). double ParError(unsigned int i) const; parameter error by index. std::string ParName(unsigned int i) const; name of the parameter. void SetMinosError(unsigned int i, double elow, double eup); set the Minos errors for parameter i (called by the Fitter class when running Minos). bool HasMinosError(unsigned int i) const; query if parameter i has the Minos error. double LowerError(unsigned int i) const; lower Minos error. If Minos has not run for parameter i return the parabolic error. double UpperError(unsigned int i) const; upper Minos error. If Minos has not run for parameter i return the parabolic error. double GlobalCC(unsigned int i) const; parameter global correlation coefficient. double CovMatrix(unsigned int i, unsigned int j) const; retrieve covariance matrix element. double Correlation(unsigned int i, unsigned int j) const; retrieve correlation elements. v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Fit__FitResult.html:7994,inherit,inherits,7994,root/html530/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html530/ROOT__Fit__FitResult.html,7,['inherit'],['inherits']
Modifiability,"it) function with fitted parameter values. { return fFitFunc; }. double Chi2() const; Chi2 fit value; in case of likelihood must be computed ?. { return fChi2; }. unsigned int Ndf() const; Number of degree of freedom. { return fNdf; }. double Prob() const; p value of the fit (chi2 probability). const std::vector<double> & Errors() const; parameter errors (return st::vector). { return fErrors; }. const double * GetErrors() const; parameter errors (return const pointer). { return (fErrors.empty()) ? 0 : &fErrors.front(); }. const std::vector<double> & Parameters() const; parameter values (return std::vector). { return fParams; }. const double * GetParams() const; parameter values (return const pointer). { return &fParams.front(); }. double Value(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Parameter(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Error(unsigned int i) const; parameter error by index; (NOTE: this due to conflict with TObject::Error cannot used in derived class which; inherits from TObject. Use instead ParError (or Errors()[i] ). double ParError(unsigned int i) const; parameter error by index. std::string ParName(unsigned int i) const; name of the parameter. void SetMinosError(unsigned int i, double elow, double eup); set the Minos errors for parameter i (called by the Fitter class when running Minos). double LowerError(unsigned int i) const; lower Minos error. If Minos has not run for parameter i return the parabolic error. double UpperError(unsigned int i) const; upper Minos error. If Minos has not run for parameter i return the parabolic error. double GlobalCC(unsigned int i) const; parameter global correlation coefficient. double CovMatrix(unsigned int i, unsigned int j) const; retrieve covariance matrix element. double Correlation(unsigned int i, unsigned int j) const; retrieve correlation elements. void GetCovarianceMatrix(TMatrixTSym<double>& mat) const; fill covariance matrix elem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Fit__FitResult.html:7758,inherit,inherits,7758,root/html528/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html528/ROOT__Fit__FitResult.html,1,['inherit'],['inherits']
Modifiability,it. private . Memory of the minimum when first initialized. ; Definition at line 40 of file TParallelCoordVar.h. ◆ fNbins. Int_t TParallelCoordVar::fNbins. private . Number of bins in fHistogram. ; Definition at line 32 of file TParallelCoordVar.h. ◆ fNentries. Long64_t TParallelCoordVar::fNentries. private . Number of stored entries values. ; Definition at line 35 of file TParallelCoordVar.h. ◆ fParallel. TParallelCoord* TParallelCoordVar::fParallel. private . Pointer to the TParallelCoord which owns the TParallelCoordVar. ; Definition at line 51 of file TParallelCoordVar.h. ◆ fQua1. Double_t TParallelCoordVar::fQua1. private . First quantile (Q1). ; Definition at line 46 of file TParallelCoordVar.h. ◆ fQua3. Double_t TParallelCoordVar::fQua3. private . Third quantile (Q3). ; Definition at line 47 of file TParallelCoordVar.h. ◆ fRanges. TList* TParallelCoordVar::fRanges. private . List of the TParallelRange owned by TParallelCoordVar. ; Definition at line 50 of file TParallelCoordVar.h. ◆ fVal. Double_t* TParallelCoordVar::fVal. private . ![fNentries] Entries values for the variable. ; Definition at line 49 of file TParallelCoordVar.h. ◆ fX1. Double_t TParallelCoordVar::fX1. private . x1 coordinate of the axis. ; Definition at line 36 of file TParallelCoordVar.h. ◆ fX2. Double_t TParallelCoordVar::fX2. private . x2 coordinate of the axis. ; Definition at line 37 of file TParallelCoordVar.h. ◆ fY1. Double_t TParallelCoordVar::fY1. private . y1 coordinate of the axis. ; Definition at line 38 of file TParallelCoordVar.h. ◆ fY2. Double_t TParallelCoordVar::fY2. private . y2 coordinate of the axis. ; Definition at line 39 of file TParallelCoordVar.h. Libraries for TParallelCoordVar:. [legend]; The documentation for this class was generated from the following files:; tree/treeviewer/inc/TParallelCoordVar.h; tree/treeviewer/src/TParallelCoordVar.cxx. TParallelCoordVar. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:07 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:33783,variab,variable,33783,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,1,['variab'],['variable']
Modifiability,"it2::FCNBase& fcn, const vector<double>& par, unsigned int nrow, const vector<double>& cov, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNGradientBase& fcn, const vector<double>& par, unsigned int nrow, const vector<double>& cov, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(); ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(const ROOT::Minuit2::ModularFunctionMinimizer&); ROOT::Minuit2::FumiliMinimizer&operator=(const ROOT::Minuit2::FumiliMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const. Data Members; private:. ROOT::Minuit2::FumiliBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FumiliMinimizer(). Constructor initializing the FumiliMinimizer by instantiatiating; the SeedGenerator and MinimumBuilder for the Fumili minimization method. @see MnSeedGenerator. @see FumiliBuilder. {}. ~FumiliMinimizer(); {}. FunctionMinimum Minimize(const FCNBase&, const MnUserParameterState&, const MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1); for Fumili. FunctionMinimum Minimize(const FCNGradientBase&, const MnUserParameterState&, const MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1). FunctionMinimum Minimize(const FCNBase& fcn, const std::vector<double>& par, const std::vector<double>& err, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1); need to re-implement all function in ModularFuncitionMinimizer otherwise they will be hided. FunctionMinimum Minimize(const FCNGradientBase&fcn, const std::vector<double>&par, const std::vector<double>&err, unsigned int stra=1, unsigned int maxfcn = 0, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__FumiliMinimizer.html:4385,Inherit,Inheritance,4385,root/html602/ROOT__Minuit2__FumiliMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__FumiliMinimizer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(); ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(const ROOT::Minuit2::ModularFunctionMinimizer&); ROOT::Minuit2::CombinedMinimizer&operator=(const ROOT::Minuit2::CombinedMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const. Data Members; private:. ROOT::Minuit2::CombinedMinimumBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CombinedMinimizer(); {}. ~CombinedMinimizer(); {}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-06-30 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__CombinedMinimizer.html:4628,Inherit,Inheritance,4628,root/html602/ROOT__Minuit2__CombinedMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__CombinedMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(); ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(const ROOT::Minuit2::ModularFunctionMinimizer&); ROOT::Minuit2::CombinedMinimizer&operator=(const ROOT::Minuit2::CombinedMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const. Data Members; private:. ROOT::Minuit2::CombinedMinimumBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CombinedMinimizer(); {}. ~CombinedMinimizer(); {}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Minuit2__CombinedMinimizer.html:4628,Inherit,Inheritance,4628,root/html604/ROOT__Minuit2__CombinedMinimizer.html,https://root.cern,https://root.cern/root/html604/ROOT__Minuit2__CombinedMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it2::MinuitParameterMinuitParameter(const ROOT::Minuit2::MinuitParameter& par); ROOT::Minuit2::MinuitParameterMinuitParameter(unsigned int num, const string& name, double val); ROOT::Minuit2::MinuitParameterMinuitParameter(unsigned int num, const string& name, double val, double err); ROOT::Minuit2::MinuitParameterMinuitParameter(unsigned int num, const string& name, double val, double err, double min, double max); const char*Name() const; unsigned intNumber() const; ROOT::Minuit2::MinuitParameter&operator=(const ROOT::Minuit2::MinuitParameter& par); voidRelease(); voidRemoveLimits(); voidSetError(double err); voidSetLimits(double low, double up); voidSetLowerLimit(double low); voidSetUpperLimit(double up); voidSetValue(double val); doubleUpperLimit() const; doubleValue() const. Data Members; private:. boolfConst; doublefError; boolfFix; boolfLoLimValid; doublefLoLimit; stringfName; unsigned intfNum; boolfUpLimValid; doublefUpLimit; doublefValue. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinuitParameter(); default constructor standard with value/error = 0. {}. MinuitParameter(unsigned int num, const string& name, double val); constructor for constant Parameter. {}. MinuitParameter(unsigned int num, const string& name, double val, double err); constructor for standard Parameter. {}. MinuitParameter(unsigned int num, const string& name, double val, double err, double min, double max); constructor for limited Parameter. ~MinuitParameter(); {}. MinuitParameter(const ROOT::Minuit2::MinuitParameter& par); {}. MinuitParameter& operator=(const ROOT::Minuit2::MinuitParameter& par). unsigned int Number() const; access methods. {return fNum;}. const std::string & GetName() const; new API returning a string. { return fName; }. const char * Name() const; return const char * for mantaining backward compatibility. {return fName.c_str();}. double Value() const; {return fValue;}. double Error() const; {return fError;}. void SetValue(do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MinuitParameter.html:2089,Inherit,Inheritance,2089,root/html532/ROOT__Minuit2__MinuitParameter.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MinuitParameter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it2Minimizer::SetVariableStepSize ; (; unsigned int ; ivar, . double ; step . ). overridevirtual . set the step size of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 299 of file Minuit2Minimizer.cxx. ◆ SetVariableUpperLimit(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableUpperLimit ; (; unsigned int ; ivar, . double ; upper . ). overridevirtual . set the upper-limit of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 318 of file Minuit2Minimizer.cxx. ◆ SetVariableValue(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; val . ). overridevirtual . set variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 279 of file Minuit2Minimizer.cxx. ◆ SetVariableValues(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableValues ; (; const double * ; x). overridevirtual . set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 288 of file Minuit2Minimizer.cxx. ◆ State(). const ROOT::Minuit2::MnUserParameterState & ROOT::Minuit2::Minuit2Minimizer::State ; (; ). inline . return the minimizer state (containing values, step size , etc..) ; Definition at line 276 of file Minuit2Minimizer.h. ◆ VariableIndex(). int ROOT::Minuit2::Minuit2Minimizer::VariableIndex ; (; const std::string & ; name); const. overridevirtual . get index of variable given a variable given a name return -1 if variable is not found ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 272 of file Minuit2Minimizer.cxx. ◆ VariableName(). std::string ROOT::Minuit2::Minuit2Minimizer::VariableName ; (; unsigned int ; ivar); const. overridevirtual . get name of variables (override if minimizer support storing of variable names) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 264 of file Minuit2Minimizer.cxx. ◆ X(). const double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:29403,variab,variables,29403,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variables']
Modifiability,"it::Detail::CompileContext::compileServersvoid compileServers(RooAbsArg &arg, RooArgSet const &normSet)Definition NormalizationHelpers.cxx:39; RooGenContextImplements a universal generator context for all RooAbsPdf classes that do not have or need a special...Definition RooGenContext.h:29; RooHelpers::LocalChangeMsgLevelSwitches the message service to a different level while the instance is alive.Definition RooHelpers.h:37; RooLinkedListCollection class for internal use, storing a collection of RooAbsArg pointers in a doubly linked list...Definition RooLinkedList.h:44; RooLinkedList::Addvirtual void Add(TObject *arg)Definition RooLinkedList.h:73; RooLinkedList::FindObjectTObject * FindObject(const char *name) const overrideReturn pointer to object with given name.Definition RooLinkedList.cxx:534; RooNameReg::strstatic const char * str(const TNamed *ptr)Return C++ string corresponding to given TNamed pointer.Definition RooNameReg.h:39; RooNumGenConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumGenConfig.h:25; RooNumGenConfig::defaultConfigstatic RooNumGenConfig & defaultConfig()Return reference to instance of default numeric integrator configuration object.Definition RooNumGenConfig.cxx:44; RooObjCacheManagerImplementation of a RooCacheManager<RooAbsCacheElement> that specializes in the storage of cache elem...Definition RooObjCacheManager.h:29; RooObjCacheManager::sterilizevoid sterilize() overrideClear the cache payload but retain slot mapping w.r.t to normalization and integration sets.Definition RooObjCacheManager.cxx:152; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::addObjectvoid addObject(TObject *obj, Option_t *drawOptions="""", bool invisible=false)Add a generic object to this plot.Definition RooPlot.cxx:366; RooPlot::getFitRangeNEvtdouble getFitRangeNEvt() constReturn the number of events in the fit range.Definition RooPlot.h:145; Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:165583,config,configuration,165583,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['config'],['configuration']
Modifiability,"it::FitConfig class and its contained ROOT::Fit::ParameterSettings class. These are the possible allowed fit configurations:. setting the initial values of the parameters;; setting the parameter step sizes;; setting eventual parameter bounds;; setting the minimizer library and the particular algorithm to use;; setting different minimization options (print level, tolerance, max iterations, etc…); setting the type of parameter errors to compute (parabolic error, Minos errors, re-normalize errors using fitted chi2 values). The initial parameter values can be set directly in the input model function object. However, for setting parameter bounds and step sizes to values different than the automatically computed ones, one needs to use the ROOT::Fit::ParameterSetting class. This example code will set the lower/upper bounds for the first parameter and a lower bound for the second parameter; fitter.SetFunction( fitFunction, false);; fitter.Config().ParSettings(0).SetLimits(0,1.E6);; fitter.Config().ParSettings(2).SetLowerLimit(0);; Note that a ROOT::Fit::ParameterSettings objects exists for each fit parameter and it created by the ROOT::Fit::FitConfig class, after the model function has been set in the Fitter. Only when the function is set, the number of parameter is known and automatically the FitConfig creates the corresponding ParameterSetting objects.; When fitting, different minimizer can be used. The can be implemented in different libraries and loaded ar run time by the plug-in manager system of ROOT. Each different minimizer (e.g. Minuit, Minuit2, Fumili, etc.) consists of a different implementation of the ROOT::Math::Minimizer interface. Within the same minimizer, thus within the same class implementing the Minimizer interface, different algorithms can exist. For example in the case of Minuit, we have Migrad, Simplex or Minimize. The minimizer and its corresponding algorithm, when available, can be set by using the function FitConfig::SetMinimizer(""minimizerName"") or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:200807,Config,Config,200807,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Config'],['Config']
Modifiability,"it::FitResult::IModelFunction*fFitFunc! model function resulting from the fit. It is given by Fitter but it is managed by FitResult; map<unsigned int,bool>fFixedParamslist of fixed parameters; vector<double>fGlobalCCglobal Correlation coefficient; stringfMinimTypestring indicating type of minimizer; map<unsigned int,pair<double,double> >fMinosErrorsmap contains the two Minos errors; unsigned intfNCallsnumber of function calls; unsigned intfNFreenumber of fit free parameters (total parameters are in size of parameter vector); unsigned intfNdfnumber of degree of freedom; boolfNormalizedflag for indicating is errors are normalized; vector<string>fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<pair<double,double> >fParamBoundsparameter bounds; vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(const FitConfig & fconfig). Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done). FitResult(ROOT::Math::Minimizer& min, const ROOT::Fit::FitConfig& fconfig, const ROOT::Fit::FitResult::IModelFunction* f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Construct from a Minimizer instance after fitting; Run also Minos if requested from the configuration. FitResult(const FitResult &). Copy constructor. virtual ~FitResult(). Destructor. bool Update(const ROOT::Math::Minimizer& min, bool isValid, unsigned int ncalls = 0). Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__FitResult.html:4580,Inherit,Inheritance,4580,root/html602/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__FitResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it::ParameterSettingsParameterSettings(const string& name, double val, double err, double min, double max); voidRelease(); voidRemoveLimits(); voidSet(const string& name, double value); voidSet(const string& name, double value, double step); voidSet(const string& name, double value, double step, double lower, double upper); voidSetLimits(double low, double up); voidSetLowerLimit(double low); voidSetName(const string& name); voidSetStepSize(double err); voidSetUpperLimit(double up); voidSetValue(double val); doubleStepSize() const; doubleUpperLimit() const; doubleValue() const. Data Members; private:. boolfFixflag to control if parameter is fixed; boolfHasLowerLimitflag to control lower parameter limit; boolfHasUpperLimitflag to control upper parameter limit; doublefLowerLimitlower parameter limit; stringfNameparameter name; doublefStepSizeparameter step size (used by minimizer); doublefUpperLimitupper parameter limit; doublefValueparameter value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParameterSettings(). Default constructor. {}. ParameterSettings(const string& name, double val, double err); constructor for unlimited named Parameter. {}. ParameterSettings(const string& name, double val, double err, double min, double max); constructor for double limited Parameter. SetLimits(double low, double up). ParameterSettings(const string& name, double val); constructor for fixed Parameter. {}. void Set(const string& name, double value, double step); set value and name (unlimited parameter). SetName(const string& name). SetValue(double val). SetStepSize(double err). void Set(const string& name, double value, double step, double lower, double upper); set a limited parameter. void Set(const string& name, double value); set a fixed parameter. Fix(). ~ParameterSettings(). Destructor (no operations). {}. double Value() const; copy constructor and assignment operators (leave them to the compiler); return parameter value. { return fV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__ParameterSettings.html:2182,Inherit,Inheritance,2182,root/html602/ROOT__Fit__ParameterSettings.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__ParameterSettings.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"it::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::IModelFunction. Definition at line 55 of file PoissonLikelihoodFCN.h. ◆ T. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef ModelFunType::BackendType ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::T. Definition at line 49 of file PoissonLikelihoodFCN.h. ◆ Type_t. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef BaseObjFunction::Type_t ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::Type_t. Definition at line 56 of file PoissonLikelihoodFCN.h. Constructor & Destructor Documentation. ◆ PoissonLikelihoodFCN() [1/3]. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::PoissonLikelihoodFCN ; (; const std::shared_ptr< BinData > & ; data, . const std::shared_ptr< IModelFunction > & ; func, . int ; weight = 0, . bool ; extended = true, . const ::ROOT::EExecutionPolicy & ; executionPolicy = ::ROOT::EExecutionPolicy::kSequential . ). inline . Constructor from unbin data set and model function (pdf) ; Definition at line 61 of file PoissonLikelihoodFCN.h. ◆ PoissonLikelihoodFCN() [2/3]. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::PoissonLikelihoodFCN ; (; const BinData & ; data, . const IModelFunction & ; func, . int ; weight = 0, . bool ; extended = true, . const ::ROOT::EExecutionPolicy & ; executionPolicy = ::ROOT::EExecutionPolicy::kSequential . ). inline . Constructor from unbin data set and model function (pdf) managed by the users. ; Definition at line 73 of file PoissonLikelihoodFCN.h. ◆ ~PoissonLikelihoodFCN(). template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . virtual ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::~PoissonLikelihoodFCN ; (; ). in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html:8423,extend,extended,8423,doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html,1,['extend'],['extended']
