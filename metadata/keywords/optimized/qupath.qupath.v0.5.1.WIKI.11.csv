quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Security,". TMAMenuActions.Actions.AddActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.AddActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.AddActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ADD_COLUMN_AFTER;  ; final org.controlsfx.control.action.Action; ADD_COLUMN_BEFORE;  ; final org.controlsfx.control.action.Action; ADD_ROW_AFTER;  ; final org.controlsfx.control.action.Action; ADD_ROW_BEFORE;  . Constructor Summary; Constructors. Constructor; Description; AddActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ADD_ROW_BEFORE; @ActionConfig(""Action.TMA.addRowAbove""); public final org.controlsfx.control.action.Action ADD_ROW_BEFORE. ADD_ROW_AFTER; @ActionConfig(""Action.TMA.addRowBelow""); public final org.controlsfx.control.action.Action ADD_ROW_AFTER. ADD_COLUMN_BEFORE; @ActionConfig(""Action.TMA.addColumnBefore""); public final org.controlsfx.control.action.Action ADD_COLUMN_BEFORE. ADD_COLUMN_AFTER; @ActionConfig(""Action.TMA.addColumnAfter""); public final org.controlsfx.control.action.Action ADD_COLUMN_AFTER. Constructor Details. AddActions; public AddActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html:1109,hash,hashCode,1109,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html,1,['hash'],['hashCode']
Security,". TMAMenuActions.Actions.RemoveActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.RemoveActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.RemoveActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; REMOVE_ROW;  . Constructor Summary; Constructors. Constructor; Description; RemoveActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. REMOVE_ROW; @ActionConfig(""Action.TMA.removeRow""); public final org.controlsfx.control.action.Action REMOVE_ROW. REMOVE_COLUMN; @ActionConfig(""Action.TMA.removeColumn""); public final org.controlsfx.control.action.Action REMOVE_COLUMN. Constructor Details. RemoveActions; public RemoveActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html:989,hash,hashCode,989,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html,1,['hash'],['hashCode']
Security,". TileExporter; region(ImageRegion region). Define the region to be processed. TileExporter; region(RegionRequest region). Define the region to be processed, including downsample. TileExporter; requestedPixelSize(double pixelSize). Define resolution as a pixel size in calibrated units. TileExporter; tileSize(int tileSize). Define the tile size in pixel units at the export resolution. TileExporter; tileSize(int tileWidth,; int tileHeight). Define the horizontal and vertical tile size in pixel units at the export resolution. TileExporter; tRange(int minT,; int maxT). Define the range of timepoints to process. TileExporter; useROIBounds(boolean fullROIs). Optionally use the full ROI for parent objects, rather than tileSize(int, int). void; writeTiles(String dirOutput). Export the image tiles to the specified directory. TileExporter; zRange(int minZ,; int maxZ). Define the range of Z-slices to process. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TileExporter; public TileExporter(ImageData<BufferedImage> imageData); Create a builder to export tiles. Parameters:; imageData - . Method Details. parentObjects; public TileExporter parentObjects(Predicate<PathObject> filter); Specify a filter to extract parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; filter - ; Returns:; this exporter; See Also:. parentObjects(Collection); useROIBounds(boolean); includePartialTiles(boolean). parentObjects; public TileExporter parentObjects(Collection<? extends PathObject> parentObjects); Specify parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:4029,hash,hashCode,4029,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['hash'],['hashCode']
Security,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:910,hash,hashCode,910,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,1,['hash'],['hashCode']
Security,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1205,hash,hashCode,1205,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,1,['hash'],['hashCode']
Security,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1208,hash,hashCode,1208,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,1,['hash'],['hashCode']
Security,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:818,access,access,818,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['access'],['access']
Security,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:596,access,access,596,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,5,"['access', 'hash']","['access', 'hashCode']"
Security,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:803,access,accessible,803,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,1,['access'],['accessible']
Security,". ViewMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions. All Implemented Interfaces:; MenuActions. public class ViewMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ViewMenuActions.Actions;  ; class ; ViewMenuActions.CellDisplayActions;  ; class ; ViewMenuActions.MultitouchActions;  ; class ; ViewMenuActions.MultiviewActions;  ; class ; ViewMenuActions.MultiviewGridActions;  ; class ; ViewMenuActions.ZoomActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html:1247,hash,hashCode,1247,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,1,['hash'],['hashCode']
Security,". ViewMenuActions.CellDisplayActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.CellDisplayActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.CellDisplayActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  . Constructor Summary; Constructors. Constructor; Description; CellDisplayActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_CELL_BOUNDARIES; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES_AND_NUCLEI. SHOW_CELL_CENTROIDS; public final org.controlsfx.control.action.Action SHOW_CELL_CENTROIDS. Constructor Details. CellDisplayActions; public CellDisplayActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html:1140,hash,hashCode,1140,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html,1,['hash'],['hashCode']
Security,". ViewTrackerControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerControlPane. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerControlPane. All Implemented Interfaces:; Runnable. public class ViewTrackerControlPane; extends Object; implements Runnable; Panel for viewing ViewTracker controls.; ; This add buttons to start/stop recording and playback and view/export recorded data. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ViewTrackerControlPane(QuPathGUI qupath). Create a ViewTrackerControlPane. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewTrackerControlPane; public ViewTrackerControlPane(QuPathGUI qupath); Create a ViewTrackerControlPane. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html:1098,hash,hashCode,1098,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,1,['hash'],['hashCode']
Security,". ViewTrackerDataMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerDataMap. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerDataMap. public class ViewTrackerDataMap; extends Object; Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. Author:; Melvin Gelbard. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html:763,hash,hashCode,763,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html,1,['hash'],['hashCode']
Security,". WandToolEventHandler.WandPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler.WandPreferences. java.lang.Object; qupath.process.gui.WandToolEventHandler.WandPreferences. Enclosing class:; WandToolEventHandler. @PrefCategory(""Prefs.Drawing""); public static class WandToolEventHandler.WandPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; useOverlays;  ; final DoubleProperty; wandSensitivity;  ; final DoubleProperty; wandSigma;  ; final ObjectProperty<WandToolEventHandler.WandType>; wandType;  . Constructor Summary; Constructors. Constructor; Description; WandPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. wandType; @Pref(value=""Prefs.Drawing.wandType"",; type=WandType.class); public final ObjectProperty<WandToolEventHandler.WandType> wandType. wandSigma; @DoublePref(""Prefs.Drawing.wandSigma""); public final DoubleProperty wandSigma. wandSensitivity; @DoublePref(""Prefs.Drawing.wandSensivity""); public final DoubleProperty wandSensitivity. useOverlays; @BooleanPref(""Prefs.Drawing.wandUseOverlays""); public final BooleanProperty useOverlays. Constructor Details. WandPreferences; public WandPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html:1070,hash,hashCode,1070,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,1,['hash'],['hashCode']
Security,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html:1067,hash,hashCode,1067,javadoc/docs/qupath/lib/gui/tools/WebViews.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html,1,['hash'],['hashCode']
Security,". WelcomeStage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class WelcomeStage. java.lang.Object; qupath.lib.gui.WelcomeStage. public class WelcomeStage; extends Object; Welcome page when launching QuPath.; ; Currently this is undecorated; it can be closed by pressing 'Get started' ; (either with mouse or spacebar), double-clicking in the dialog, or pressing escape. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WelcomeStage();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stage; getInstance(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WelcomeStage; public WelcomeStage(). Method Details. getInstance; public static Stage getInstance(QuPathGUI qupath). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html:1009,hash,hashCode,1009,javadoc/docs/qupath/lib/gui/WelcomeStage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html,1,['hash'],['hashCode']
Security,". boolean; isDerivedClass(). Returns true if #getParentClass() != null. boolean; isDerivedFrom(PathClass parentClass). Returns true if this class, or any ancestor class, is equal to the specified parent class. boolean; isValid(). A PathClass is valid if its name is not null. protected Object; readResolve(). Called during deserialization to ensure that only a single instance of each PathClass exists. void; setColor(int red,; int green,; int blue). Set the color as 8-bit RGB values. void; setColor(Integer colorRGB). Set the color that should be used to display objects with this classification. Set<String>; toSet(). Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names. String; toString();  ; String; toString(String delimiter). Create a string representation, using the specified delimiter between ; elements of derived PathClasses. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. NAME_POSITIVE; public static final String NAME_POSITIVE; Default name for a class representing ""Positive"" staining intensity. See Also:. Constant Field Values. NAME_NEGATIVE; public static final String NAME_NEGATIVE; Default name for a class representing ""Negative"" staining intensity. See Also:. Constant Field Values. NAME_ONE_PLUS; public static final String NAME_ONE_PLUS; Default name for a class representing ""1+"" staining intensity (i.e. weakly positive). See Also:. Constant Field Values. NAME_TWO_PLUS; public static final String NAME_TWO_PLUS; Default name for a class representing ""2+"" staining intensity (i.e. moderately positive). See Also:. Constant Field Values. NAME_THREE_PLUS; public static final String NAME_THREE_PLUS; Default name for a class representing ""3+"" staining intensity (i.e. strongly positive). See Also:. Constant Field Values. DELIMITER; public static final String DELIMITER; Get the delimiter to use betwe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:6022,hash,hashCode,6022,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['hash'],['hashCode']
Security,". boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary sele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:2620,hash,hashCode,2620,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['hash'],['hashCode']
Security,. qupath.imagej.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.tools. package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. Classes. Class; Description; IJTools. Collection of static methods to help with using ImageJ with QuPath. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html:628,access,access,628,javadoc/docs/qupath/imagej/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html,1,['access'],['access']
Security,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:1211,access,accessing,1211,javadoc/docs/qupath/lib/analysis/images/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html,2,['access'],"['access', 'accessing']"
Security,". qupath.lib.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.gui.TaskRunnerFX. javafx.application.Application. qupath.lib.gui.QuPathApp. qupath.lib.gui.BuildInfo; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.ExtensionManager; qupath.lib.gui.FileCopier; qupath.lib.gui.JavadocViewer; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.layout.Pane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.lib.gui.QuPathGUI; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.gui.ToolManager; qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.Urls; qupath.lib.gui.UserDirectoryManager; qupath.lib.gui.WelcomeStage. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html:514,secur,security,514,javadoc/docs/qupath/lib/gui/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html,2,"['Secur', 'secur']","['SecureClassLoader', 'security']"
Security,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:1278,access,access,1278,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html,1,['access'],['access']
Security,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:804,access,access,804,javadoc/docs/qupath/lib/gui/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html,1,['access'],['access']
Security,. qupath.lib.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images. package qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-summary.html:525,access,accessing,525,javadoc/docs/qupath/lib/images/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-summary.html,1,['access'],['accessing']
Security,". qupath.lib.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers. package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath.; ; ImageServer is the key interface for ; requesting pixels and metadata.; Implementations may be backed by specific image reading libraries, or optionally wrap around other ; ImageServers to perform additional transforms. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:393,access,accessing,393,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,1,['access'],['accessing']
Security,. qupath.lib.images.servers.bioformats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.bioformats. package qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). Classes. Class; Description; BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html:570,access,accessing,570,javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html,1,['access'],['accessing']
Security,. qupath.lib.images.servers.openslide (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.openslide. package qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). Classes. Class; Description; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenslideServerBuilder. Builder for Openslide ImageServer. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html:544,access,accessing,544,javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html,1,['access'],['accessing']
Security,". qupath.lib.images.writers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.writers. package qupath.lib.images.writers. Supports for writing images of various kinds in various ways. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. PngWriter. ImageWriter implementation to write PNG images using ImageIO. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/package-summary.html:684,access,accessing,684,javadoc/docs/qupath/lib/images/writers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/package-summary.html,2,['access'],"['access', 'accessing']"
Security,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:1425,access,access,1425,javadoc/docs/qupath/lib/io/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html,1,['access'],['access']
Security,".LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1694,hash,hashCode,1694,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['hash'],['hashCode']
Security,".Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:1676,hash,hashCode,1676,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,1,['hash'],['hashCode']
Security,".action.Action; OBJECT_IMPORT;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE_OR_URL;  ; final FileMenuActions.ProjectActions; projectActions;  ; final org.controlsfx.control.action.Action; QUIT;  ; final org.controlsfx.control.action.Action; RELOAD_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA_AS;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final FileMenuActions.TmaActions; tmaActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. projectActions; @ActionMenu(""Menu.File.Project""); public final FileMenuActions.ProjectActions projectActions. SEP_3; public final org.controlsfx.control.action.Action SEP_3. OPEN_IMAGE; @ActionConfig(""Action.File.open""); @ActionAccelerator(""shortcut+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE. OPEN_IMAGE_OR_URL; @ActionConfig(""Action.File.openUri""); @ActionAccelerator(""shortcut+shift+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE_OR_URL. RELOAD_DATA; @ActionConfig(""Action.File.reloadData""); @ActionAccelerator(""shortcut+r""); public final org.controlsfx.control.action.Action RELOAD_DATA. SEP_4; public final org.controlsfx.control.action.Action SEP_4. SAVE_DATA_AS; @ActionConfig(""Action.File.saveAs""); @ActionAccelerator(""shortcut+shift+s""); public final org.controlsfx.control.action.Action SAVE_DATA_AS. SAVE_DATA; @ActionConfig(""Action.File.save""); @ActionAccelerator(""shortcut+s""); pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html:1877,hash,hashCode,1877,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,1,['hash'],['hashCode']
Security,".actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:1530,hash,hashCode,1530,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,1,['hash'],['hashCode']
Security,".ml.OpenCVClassifiers.BoostClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Train the classifier using data in an appropriate format. train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; TRAIN_VALIDATION_TEST_METADATA_KEY - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata key for the flag indicating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1047064,Validat,Validation,1047064,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Validat'],['Validation']
Security,".parameters.DoubleParameter. All Implemented Interfaces:; Serializable, Parameter<Double>. public class DoubleParameter; extends NumericParameter<Double>; Parameter to represent a floating point numeric value.; ; May be bounded. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Double; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Double>; duplicate(). Create a new Parameter with the same text and value. Double; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Double; getValue(). Get the current set value (may be null). Double; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:1482,hasH,hasHelpText,1482,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,1,['hasH'],['hasHelpText']
Security,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1235,hash,hashCode,1235,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,1,['hash'],['hashCode']
Security,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriterCommand. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriterCommand. All Implemented Interfaces:; Runnable. public class OMEPyramidWriterCommand; extends Object; implements Runnable; OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers.; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMEPyramidWriterCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; getDefaultPyramidCompression(). Query the default compression type when writing OME-TIFF images. static int; getDefaultTileSize(). Query the default tile size when writing OME-TIFF images. static int; getMinSizeForTiling(). Query the default minimum image size when writing OME-TIFF images. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OMEPyramidWriterCommand; public OMEPyramidWriterCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. getDefaultPyramidCompression; public static OMEPyramidWriter.CompressionType getDefaultPyramidCompression(); Query the default compression type when writing OME-TIFF images. Returns:. getDefaultTileSize; public static int getDefaultTileSize(); Query the default tile size when writing OME-TIFF images. Returns:. getMinSizeForTiling; public static int getMinSizeForTiling(); Query the default minimum image size when writing OME-TIFF images.; This is used as a hint to disable tiling for images with widths and heights smaller than this value. Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html:1422,hash,hashCode,1422,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,1,['hash'],['hashCode']
Security,"; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class JsonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler. All Implemented Interfaces:; ScriptStyler. public class JsonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on JSON syntax. Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html:1133,hash,hashCode,1133,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,1,['hash'],['hashCode']
Security,"; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1983,hash,hashCode,1983,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['hash'],['hashCode']
Security,"; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3526,hash,hashCode,3526,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['hash'],['hashCode']
Security,"; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:1687,hash,hashCode,1687,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,1,['hash'],['hashCode']
Security,"; Serializable, ScriptableWorkflowStep, WorkflowStep. public class DefaultScriptableWorkflowStep; extends Object; implements ScriptableWorkflowStep; A scriptable workflow step where the script is provided directly as an argument. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; DefaultScriptableWorkflowStep(String name,; String script). Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script). Constructor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html:1507,hash,hashCode,1507,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,1,['hash'],['hashCode']
Security,"; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3384,hash,hashCode,3384,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['hash'],['hashCode']
Security,"; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (normalized) stain vector. boolean; isResidual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vecto",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:2481,hash,hashCode,2481,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['hash'],['hashCode']
Security,"; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; QuPathGUI; getQuPath(). Get the QuPath instance associated with these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_ADD_IMAGES; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_ADD_IMAGES. BRIGHTNESS_CONTRAST; @ActionIcon(CONTRAST); @ActionAccelerator(""shift+c""); @ActionConfig(""CommonActions.showBrightnessContrast""); public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SHOW_POINTS_DIALOG; @ActionIcon(POINTS_TOOL); @ActionConfig(""CommonActions.showCountingTool""); public final org.controlsfx.control.action.Action SHOW_POINTS_DIALOG. TMA_ADD_NOTE; @ActionConfig(""CommonActions.addTMANote""); public final org.controlsfx.control.action.Action TMA_ADD_NOTE. CONVEX_POINTS; @ActionConfig(""CommonActions.showPoin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html:2219,hash,hashCode,2219,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html,1,['hash'],['hashCode']
Security,"; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3155,hash,hashCode,3155,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['hash'],['hashCode']
Security,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:2322,hash,hashCode,2322,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,1,['hash'],['hashCode']
Security,"; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian sigma value used to smooth the image when applying the wand. See Also:. getWandSigmaPixels(); setWandSigmaPixels(double); wandSigmaPixelsProperty(). wandSensitivity; public static DoubleProperty wandSensitivityProperty; Property representing the wand sensitivity value, which influences how similar local intensity values must be for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:5486,hash,hashCode,5486,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,1,['hash'],['hashCode']
Security,">; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. static Mat; readMat(Path path). Read an OpenCV Mat from a Numpy .npy file. static Mat; readMat(Path path,; boolean squeezeDimensions). Read an OpenCV Mat from a Numpy .npy file, optionally squeezing singleton dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. NumpyTools; public NumpyTools(). Method Details. readMat; public static Mat readMat(String path); throws IOException; Read a single Mat from an .npy or .npz file. Parameters:; path - ; Returns:; Throws:; IOException. readMat; public static Mat readMat(String path,; boolean squeezeDimensions); throws IOException; Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. Parameters:; path - path to the .npy file; squeezeDimensions - if true, squeeze singleton dimensions; Returns:; Throws:; IOException. readAllMats; public static Map<String,Mat> readAllMats(String path); throws IOException; Read a all Mats from an .npy or .npz file.; This will be a single Mat for .npy but may be multiple for .npz. Parameters:; path - path to the file; Returns:; a map with mat names (from file/entry names) and their corresponding Mats; Throws:; IOException. readAllMats; public static Map<String,Mat> readAll",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html:2340,hash,hashCode,2340,javadoc/docs/qupath/opencv/tools/NumpyTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html,1,['hash'],['hashCode']
Security,"All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static PathPrefs.FontSize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.FontSize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:1545,hash,hashCode,1545,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,1,['hash'],['hashCode']
Security,"AreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Colle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5776,hash,hashCode,5776,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['hash'],['hashCode']
Security,"BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  . Constructor Summary; Constructors. Constructor; Description; OverlayActions(OverlayOptions overlayOptions);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OverlayOptions; getOverlayOptions(). Get the overlay options controlled by these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_GRID; @ActionIcon(GRID); @ActionAccelerator(""shift+g""); @ActionConfig(""OverlayActions.showCountingGrid""); public final org.controlsfx.control.action.Action SHOW_GRID. GRID_SPACING; @ActionConfig(""OverlayActions.setCountingGridSpacing""); public final org.controlsfx.control.action.Action GRID_SPACING. SHOW_PIXEL_CLASSIFICATION; @ActionIcon(PIXEL_CLASSIFICATION); @ActionAccelerator(""c""); @ActionConfig(""OverlayActions.showPixelOverlay""); public final org.controlsfx.control.action.Action SHOW_PIXEL_CLASSIFICATION. SHOW_CELL_BOUNDARIES; @ActionIcon(CELL_ONLY); @ActionConfig(""OverlayActions.showCellBoundaries""); public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; @ActionIcon(NUCLEI_ONLY); @ActionConfig(""OverlayActions.showCellNuclei""); public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; @ActionIcon(CELL_NUCLEI_BOTH); @ActionConfig(""Overla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html:2091,hash,hashCode,2091,javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,1,['hash'],['hashCode']
Security,"BatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:2402,hash,hashCode,2402,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['hash'],['hashCode']
Security,"Bounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html:2648,hash,hashCode,2648,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,1,['hash'],['hashCode']
Security,"Builder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; ImageJServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJServerBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:1926,hash,hashCode,1926,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,1,['hash'],['hashCode']
Security,"Cell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectLabels; public PathObjectLabels(). Method Details. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(); Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. Returns:. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(Function<PathObject,String> stringExtractor); Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. Parameters:; stringExtractor - ; Returns:. createListCell; public static ListCell<PathObject> createListCell(); Create a ListCell for displaying a PathObject using the default PathObject.toString() method. Returns:. createListCell; public static ListCell<PathObject> createListCell(Function<PathObject,String> stringExtractor); Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. Parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html:2168,hash,hashCode,2168,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,1,['hash'],['hashCode']
Security,"Classifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:3886,hash,hashCode,3886,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,1,['hash'],['hashCode']
Security,"Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Acc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2272,hash,hashCode,2272,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['hash'],['hashCode']
Security,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html:1296,hash,hashCode,1296,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,1,['hash'],['hashCode']
Security,"Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j); Record coocurrence for a (binned) value pair with 45 degree rotation. Parameters:; i - ; j - . put90; public void put90(int i,; int j); Record coocurrence for a (binned) value pair with 90 degree rotation. Parameters:; i - ; j - . put135; public void put135(int i,; int j); Record coocurrence for a (binned) value pair with 135 degree rotation. Parameters:; i - ; j - . computeFeatures; public void computeFeatures(); Compute features. getMeanFeatures; public HaralickFeatures getMeanFeatures(); Compute averaged features over all four rotations. Returns:. getMinFeatures; public HaralickFeatures getMinFeatures(); Compute ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html:1618,hash,hashCode,1618,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,1,['hash'],['hashCode']
Security,"DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. Constructor Details. GroovyLanguage; public GroovyLanguage(); Constructor for Groovy Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static GroovyLanguage getInstance(); Get the static instance of this class. Returns:; instance. getImportStatementGenerator; protected DefaultScriptLanguage.ImportStatementGenerator getImportStatementGenerator(); Description copied from class: DefaultScriptLanguage; Get an DefaultScriptLanguage.ImportStatementGenerator.; This attempts to make an educated guess, returning JAVA_IMPORTER or PYTHON_IMPORTER based on the ; name. Overrides:; getImportStatementGenerator in class DefaultScriptLanguage; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html:2130,hash,hashCode,2130,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,1,['hash'],['hashCode']
Security,"Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. static final String; NAME_POSITIVE. Default name for a class representing ""Positive"" staining intensity. static final String; NAME_TH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:1160,access,access,1160,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['access'],['access']
Security,"DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html:1222,hash,hashCode,1222,javadoc/docs/qupath/opencv/dnn/DnnModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html,1,['hash'],['hashCode']
Security,"DocsUrl(String) - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). getView() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the main JavaFX component representing this viewer. getViewer() - Method in class qupath.lib.gui.QuPathGUI. Get the currently active viewer. getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; getViewer() - Method in class qupath.process.gui.WandToolEventHandler;  ; getViewerActions() - Method in class qupath.lib.gui.QuPathGUI. Get the associations associated with QuPath image viewers. getViewerManager() - Method in class qupath.lib.gui.actions.ViewerActions;  ; getViewerManager() - Method in class qupath.lib.gui.QuPathGUI. Get the viewer manager, which gives access to all the viewers available within this QuPath instance. getVoronoiFaces() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces as JTS Geometry objects. getVoronoiROIs(Geometry) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces, convered to ROI objects. getWandSensitivity() - Static method in class qupath.process.gui.WandToolEventHandler. Query the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. getWandSigmaPixels() - Static method in class qupath.process.gui.WandToolEventHandler. Query the Gaussian sigma value used to smooth the image when applying the wand. getWandUseOverlays() - Static method in class qupath.process.gui.WandToolEventHandler. Query whether the wand tool should be influenced by pixel values painted on image overlays. getWidth() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getWidth() - Method in interface qupath.lib.analy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:551653,access,access,551653,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TUMOR; public static final PathClassFactory.StandardPathClasses TUMOR; Tumor classification. STROMA; public static final PathClassFactory.StandardPathClasses STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClassFactory.StandardPathClasses IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClassFactory.StandardPathClasses IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClassFactory.StandardPathClasses IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClassFactory.StandardPathClasses NECROSIS; Necrosis classification. OTHER; public static final PathClassFactory.StandardPathClasses OTHER; Other classification. REGION; public static final PathClassFact",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:2086,hash,hashCode,2086,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,1,['hash'],['hashCode']
Security,"Event e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected boolean; preferReturnToMove(). Returns false. protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrushToolEventHandler; public BrushToolEventHandler(). Method Details. preferReturnToMove; protected boolean preferReturnToMove(); Returns false. Returns:. getRequestedCursor; protected Cursor getRequestedCursor(). mouseExited; public void mouseExited(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). isSubtractMode; protected boolean isSubtractMode(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). getBrushDiameter; protected double getBrushDiameter(). createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape); Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. Parameters:; e - ; x - ; y - ; useTiles - I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html:3163,hash,hashCode,3163,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,1,['hash'],['hashCode']
Security,"ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions director",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1406,hash,hashCode,1406,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,1,['hash'],['hashCode']
Security,"Features(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2521,hash,hashCode,2521,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['hash'],['hashCode']
Security,"ForLocale(String, Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569087,hash,hashCode,569087,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"Format; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataFormat(); Get a DataFormat suitable for storing GeoJSON data on a clipboard. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read objects from the system clipboard. Parameters:; imageData - the image to w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1865,hash,hashCode,1865,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,1,['hash'],['hashCode']
Security,"Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custom function to calculate a location string for the overlay. void; setOpacity(double opacity). Set opacity between 0 (completely transparent) and 1 (completely opaque). void; setPreferredOverlayColor(Color color). Set a preferred overlay color, which the overlay may or may not make use of. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.overlays.PathOverlay; paintOverlay. Constructor Details. AbstractOverlay; protected AbstractOverlay(OverlayOptions options). Method Details. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options, which may influence the display of this overlay. Returns:. getAlphaComposite; protected AlphaComposite getAlphaComposite(). setAlphaComposite; protected void setAlphaComposite(Graphics2D g2d). isVisible; public boolean isVisible(); Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Returns:. setPreferredOverlayColor; public void setPreferredOverlayColor(Color color); Set a preferred overlay color, which the overlay may or may not make use of.; The aim is to provide a means to suggest drawing with a light color on a dark image, ; or a dark color on a light image. Parameters:; color - . getPreferre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:2372,hash,hashCode,2372,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,1,['hash'],['hashCode']
Security,"HT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING ; IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; . Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html:2727,hash,hashCode,2727,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,1,['hash'],['hashCode']
Security,"I. boolean; equals(Object obj);  ; int; getHeight(). Get the height of the region bounding box. ImagePlane; getImagePlane(). Get the z-slice and time point for this region as an ImagePlane. int; getMaxX(). Get the x coordinate of the bottom right of the region bounding box. int; getMaxY(). Get the y coordinate of the bottom right of the region bounding box. int; getMinX(). Get the x coordinate of the top left of the region bounding box. int; getMinY(). Get the y coordinate of the top left of the region bounding box. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). int; getT(). Get the time point index for the region. int; getWidth(). Get the width of the region bounding box. int; getX(). Get the x coordinate of the region bounding box (top left). int; getY(). Get the y coordinate of the region bounding box (top left). int; getZ(). Get the z-slice index for the region. int; hashCode();  ; boolean; intersects(double x2,; double y2,; double w2,; double h2). Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. boolean; intersects(ImageRegion request). Returns true if the region specified by this region overlaps with another. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static ImageRegion createInstance(int x,; int y,; int width,; int height,; int z,; int t); Create a region based on its bounding box coordinates, z-slice index and time point index. Parameters:; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static ImageRegion createInstance(ROI pathROI); Create the smallest region that completely contains a specified ROI. Parameters:; pathROI - ; Returns:. createInstance; public static ImageRegion createInstance(C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html:2293,hash,hashCode,2293,javadoc/docs/qupath/lib/regions/ImageRegion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html,1,['hash'],['hashCode']
Security,"IO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:1679,hash,hashCode,1679,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,1,['hash'],['hashCode']
Security,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2352,hash,hashCode,2352,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['hash'],['hashCode']
Security,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2557,hash,hashCode,2557,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['hash'],['hashCode']
Security,"Measurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name); Returns the enum constant of this class with the specified name.; The string must",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:1668,hash,hashCode,1668,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,1,['hash'],['hashCode']
Security,"Metadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public Buff",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:2693,hash,hashCode,2693,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['hash'],['hashCode']
Security,"Metadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:2209,hash,hashCode,2209,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['hash'],['hashCode']
Security,"Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1310,hash,hashCode,1310,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,1,['hash'],['hashCode']
Security,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluorescence image look more like a brightfield image,; and vice versa. Returns:. getChannels; public List<ChannelSettings> getChannels(); Get all the available channels. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:1351,hash,hashCode,1351,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,1,['hash'],['hashCode']
Security,"Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1782,hash,hashCode,1782,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,1,['hash'],['hashCode']
Security,"Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the text. Returns:. getText; public String getText(); Get the name of the comma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:2077,hash,hashCode,2077,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,1,['hash'],['hashCode']
Security,"Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3832,hash,hashCode,3832,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['hash'],['hashCode']
Security,"OException; Save the ImageData for this entry using the default storage location for the project. Parameters:; imageData - ; Throws:; IOException. readHierarchy; PathObjectHierarchy readHierarchy(); throws IOException; Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. Returns:; Throws:; IOException; See Also:. readImageData(); hasImageData(). hasImageData; boolean hasImageData(); Check if this entry has saved ImageData already available. Returns:. getSummary; String getSummary(); Get a summary string representing this image entry. Returns:. getThumbnail; T getThumbnail(); throws IOException; Request a thumbnail for the image. Returns:; a thumbnail if one has already been set, otherwise null.; Throws:; IOException. setThumbnail; void setThumbnail(T img); throws IOException; Set a thumbnail for the image. This will replace any existing thumbnail. Parameters:; img - ; Throws:; IOException. getServerURIs; @Deprecated; default Collection<URI> getServerURIs(); throws IOException; Deprecated.; use instead UriResource.getURIs(). Get a collection of the URIs required by this project's ImageServer.; ; The purpose of this is to help query if they can be found. They might not be ; e.g. if the images have been moved. Returns:; Throws:; IOException. updateServerURIs; @Deprecated; default boolean updateServerURIs(Map<URI,URI> replacements); throws IOException; Deprecated.; use instead UriResource.updateURIs(Map). Update the URIs for the server (optional operation). Parameters:; replacements - a map with current URIs as keys, and desired URIs as values.; Returns:; true if changes were made; Throws:; IOException. getMetadataSummaryString; default String getMetadataSummaryString(); Get a formatted string representation of the metadata map's contents. Returns:. getImages; ResourceManager.Manager<ImageServer<T>> getImages(); Access additional images associated with the project entry, e.g. pixel classifications or; aligned slides. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:8115,Access,Access,8115,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['Access'],['Access']
Security,"Object,; BiPredicate<PathObject,PathObject> predicate). Get a list of neighbors for a specified object, filtering out objects that do not meet specified criteria. ImagePlane; getImagePlane(). Get the ImagePlane for this subdivision. PathObject; getNearestNeighbor(PathObject pathObject). Get the nearest neighbor for the specified object. PathObject; getNearestNeighbor(PathObject pathObject,; BiPredicate<PathObject,PathObject> predicate). Get the nearest neighbor for the specified object, filtered by a predicate. List<PathObject>; getNeighbors(PathObject pathObject). Get all neighbors for a specified object. Collection<PathObject>; getPathObjects(). Get all the objects associated with this subdivision. Map<PathObject,Geometry>; getVoronoiFaces(). Get a map of Voronoi faces as JTS Geometry objects. Map<PathObject,ROI>; getVoronoiROIs(Geometry clip). Get a map of Voronoi faces, convered to ROI objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImagePlane; public ImagePlane getImagePlane(); Get the ImagePlane for this subdivision.; Because the subdivision is 2D, all object ROIs are expected to belong to the same plane. Returns:. getVoronoiFaces; public Map<PathObject,Geometry> getVoronoiFaces(); Get a map of Voronoi faces as JTS Geometry objects. Returns:; See Also:. getVoronoiROIs(Geometry). getVoronoiROIs; public Map<PathObject,ROI> getVoronoiROIs(Geometry clip); Get a map of Voronoi faces, convered to ROI objects. Parameters:; clip - optional region used to clip the total extent of the ROIs; Returns:; See Also:. getVoronoiFaces(). getPathObjects; public Collection<PathObject> getPathObjects(); Get all the objects associated with this subdivision. Returns:. getNearestNeighbor; public PathObject getNearestNeighbor(PathObject pathObject); Get the nearest neighbor for the specified object. Parameters:; pathObject - the object whose neighbor is requested; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html:2319,hash,hashCode,2319,javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,1,['hash'],['hashCode']
Security,"Object; Builder to help define how ROIs and Geometry objects should be converted. Constructor Summary; Constructors. Constructor; Description; Builder(). Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; GeometryTools.GeometryConverter; build(). Build a new converter with the specified parameters. GeometryTools.GeometryConverter.Builder; factory(GeometryFactory factory). Specify the GeometryFactory, which can define a precision model in JTS. GeometryTools.GeometryConverter.Builder; flatness(double flatness). Specify the flatness for any operation where a PathIterator is required. GeometryTools.GeometryConverter.Builder; pixelSize(double pixelWidth,; double pixelHeight). Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Details. pixelSize; public GeometryTools.GeometryConverter.Builder pixelSize(double pixelWidth,; double pixelHeight); Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Parameters:; pixelWidth - ; pixelHeight - ; Returns:. flatness; public GeometryTools.GeometryConverter.Builder flatness(double flatness); Specify the flatness for any operation where a PathIterator is required. Parameters:; flatness - ; Returns:. factory; public GeometryTools.GeometryConverter.Builder factory(GeometryFactory factory); Specify the GeometryFactory, which can define a precision model in JTS. Parameters:; factory - ; Returns:. build; public GeometryTools.GeometryConverter build(); Build a new converter with the specified parameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html:1629,hash,hashCode,1629,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,1,['hash'],['hashCode']
Security,"Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1375,Secur,SecureClassLoader,1375,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['Secur'],['SecureClassLoader']
Security,"ObjectConnectionGroup(). Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections). Create a connections group, copying the connections from an existing group. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:2056,hash,hashCode,2056,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,1,['hash'],['hashCode']
Security,"ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3101,hash,hashCode,3101,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['hash'],['hashCode']
Security,"Optionally request that instance labels are shuffled. sigmaX(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the horizontal filter. sigmaXY(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values (x, y) to the same value. sigmaY(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the vertical filter. sigmaZ(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, require",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975249,access,accessing,975249,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessing']
Security,"Overview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. Constructor Summary; Constructors. Constructor; Description; ViewerPlusDisplayOptions();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getShowLocation(). Get the value of showLocationProperty(). boolean; getShowOverview(). Get the value of showOverviewProperty(). boolean; getShowScalebar(). Get the value of showScalebarProperty(). void; setShowLocation(boolean show). Set the value of showLocationProperty(). void; setShowOverview(boolean show). Set the value of showOverviewProperty(). void; setShowScalebar(boolean show). Set the value of showScalebarProperty(). BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. getShowOverview(); setShowOverview(boolean); showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. getShowLocation(); setShowLocation(boolean); showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. getShowScalebar(); setShowScalebar(boolean); showScalebarProperty(). Constructor Details. ViewerPlusDisplayOptions; public ViewerPlusDisplayOptions(). Method Details. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:; See Also:. getShowOverview(); setShowOverview(boolean). showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:; See Also:. getShowLocation(); setShowLocation(boolean). showScalebarProperty; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html:1754,hash,hashCode,1754,javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,1,['hash'],['hashCode']
Security,"PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally chan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2461,hash,hashCode,2461,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,1,['hash'],['hashCode']
Security,"Path objects. String; getDescription(). A short description of the extension for displaying in the main GUI. static Image; getImageJIcon(int width,; int height). Try to read the ImageJ icon from its jar. static ImageJ; getImageJInstance(). Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). static String; getImageJPath(). Get the path for a local ImageJ installation, if set. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. static StringProperty; imageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:3227,hash,hashCode,3227,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['hash'],['hashCode']
Security,"PathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOEx",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:2523,hash,hashCode,2523,javadoc/docs/qupath/lib/objects/PathCellObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html,1,['hash'],['hashCode']
Security,"Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2128,hash,hashCode,2128,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,2,['hash'],['hashCode']
Security,"PreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3053,hash,hashCode,3053,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['hash'],['hashCode']
Security,"PreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2919,hash,hashCode,2919,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['hash'],['hashCode']
Security,"QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; Since:; v0.5.0. manageMainMenuBar; public static void manageMainMenuBar(MenuBar menuBar); Request that a menubar is managed as a main menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS or MAIN_WINDOW. Parameters:; menuBar - . manageChildMenuBar; public static void manageChildMenuBar(MenuBar menuBar); Request that a menubar is managed as a child menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS only. Parameters:; menuBar - . unmanageMenuBar; public static void unmanageMenuBar(MenuBar menuBar); Do not manage the system menubar status for the given menubar. Parameters:; menuBar - . overrideSystemMenuBarProperty; public static BooleanProperty overrideSystemMenuBarProperty(); Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. Returns:; See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean). getOverrideSystemMenuBar; public static boolean getOverrideSystemMenuBar(); Get the current value of the override property, which specifies whether the system menubar should not be used; by any window - no matter what the value of systemMenubarProperty(). Returns:; See Also:. overrideSystemMenuBarProperty(). setOverrideSystemMenuBar; public static void setOverrideSystemMenuBar(boolean doOverride); Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). Parameters:; doOverride - ; See Also:. overrideSystemMenuBarProperty(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:5286,access,access,5286,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,1,['access'],['access']
Security,"RCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions.Actions. Enclosing class:; MeasureMenuActions. @ActionMenu(""Menu.Measure""); public class MeasureMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ANNOTATIONS;  ; final org.controlsfx.control.action.Action; DETECTIONS;  ; final org.controlsfx.control.action.Action; EXPORT;  ; final org.controlsfx.control.action.Action; GRID_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; GRID_TMA;  ; final org.controlsfx.control.action.Action; MANAGER;  ; final org.controlsfx.control.action.Action; MAPS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; TMA;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MAPS; @ActionAccelerator(""shortcut+shift+m""); @ActionConfig(""Action.Measure.maps""); public final org.controlsfx.control.action.Action MAPS. MANAGER; @ActionConfig(""Action.Measure.manager""); public final org.controlsfx.control.action.Action MANAGER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. TMA; public final org.controlsfx.control.action.Action TMA. ANNOTATIONS; public final org.controlsfx.control.action.Action ANNOTATIONS. DETECTIONS; public final org.controlsfx.control.action.Action DETECTIONS. GRID_ANNOTATIONS; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_ANNOTATIONS. GRID_TMA; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_TMA. SEP_2; public final org.controlsfx.control.action.Action SEP_2. EXPORT; @ActionConfig(""Action.Measure.export""); public final org.controlsfx.control.action.Action EXPORT. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html:1337,hash,hashCode,1337,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"RGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supports",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2545,hash,hashCode,2545,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['hash'],['hashCode']
Security,"ROI; createPolygonROI(double x,; double y,; ImagePlane plane). Create an empty, closed polygon ROI consisting of a single point. static PolygonROI; createPolygonROI(List<Point2> points,; ImagePlane plane). Create a closed polygon ROI from a list of points. static ROI; createPolylineROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolylineROI; createPolylineROI(double x,; double y,; ImagePlane plane). Create an empty polyline ROI consisting of a single point. static PolylineROI; createPolylineROI(List<Point2> points,; ImagePlane plane). Create a polyline ROI from a list of points. static ROI; createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create a rectangle ROI defined by its bounding box. static ROI; createRectangleROI(ImageRegion region). Create a rectangle ROI that matches an ImageRegion. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ROIs; public ROIs(). Method Details. createEmptyROI; public static ROI createEmptyROI(); Create an 'empty' ROI with no length or area.; ; The only guarantee is that it will return isEmpty() == true. Returns:. createRectangleROI; public static ROI createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create a rectangle ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createRectangleROI; public static ROI createRectangleROI(ImageRegion region); Create a rectangle ROI that matches an ImageRegion. Parameters:; region - ; Returns:. createEllipseROI; public static ROI createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create an ellipse ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createLineROI; public static ROI createLineROI(double x,; double y,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:2986,hash,hashCode,2986,javadoc/docs/qupath/lib/roi/ROIs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html,1,['hash'],['hashCode']
Security,"Read a single image tile. static List<SparseImageServer>; splitConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:3329,hash,hashCode,3329,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,1,['hash'],['hashCode']
Security,"S extends Number>; extends Object; Abstract parameter to represent a numeric value. Author:; Pete Bankhead; See Also:. DoubleParameter; IntParameter; Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. double; getLowerBound(). Retrieve the lower bound. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getUnit(). Get the unit to display for this parameter (may be null if no unit is available). double; getUpperBound(). Retrieve the upper bound. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; hasLowerAndUpperBounds(). Returns true if this parameter has both lower and upper bounds constraining valid values. boolean; hasLowerBound(). Returns true if the parameter has a valid lower bound. boolean; hasUpperBound(). Returns true if the parameter has a valid upper bound. boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isUnbounded(). Returns true if this neither a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:1656,hasH,hasHelpText,1656,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['hasH'],['hasHelpText']
Security,"Server<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:4858,hash,hashCode,4858,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['hash'],['hashCode']
Security,"Spec.BioimageIoModel spec). Attempt to build a DnnModel that follows this spec as closely as possible. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static ImageOp; transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms). Create an ImageOp that applies the specified transforms sequentially. static ImageOp; transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform). Create an ImageOp that applies the specified transforms, if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioimageIoTools; public BioimageIoTools(). Method Details. buildDnnModel; public static DnnModel buildDnnModel(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel spec); Attempt to build a DnnModel that follows this spec as closely as possible.; ; In some instances, the processing steps requires by the spec might not currently be ; supported by QuPath - see transformToOp(Processing) for more information. Parameters:; spec - ; Returns:. buildPatchClassifierParams; public static PatchClassifierParams buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; model - the model spec to initialize the parameters; inputOps - optional additional pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html:1881,hash,hashCode,1881,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,1,['hash'],['hashCode']
Security,"StringParameter. java.lang.Object; qupath.lib.plugins.parameters.StringParameter. All Implemented Interfaces:; Serializable, Parameter<String>. public class StringParameter; extends Object; Parameter to represent a String value. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected String; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<String>; duplicate(). Create a new Parameter with the same text and value. String; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be vali",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:1373,hasH,hasHelpText,1373,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['hasH'],['hasHelpText']
Security,"Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public final org.controlsfx.control.action.Action actionIntensity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:1273,hash,hashCode,1273,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,1,['hash'],['hashCode']
Security,"TION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; valueOf(String name). Returns the enum constant of this class with the specified name. static IconFactory.PathIcons[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ACTIVE_SERVER; public static final IconFactory.PathIcons ACTIVE_SERVER. ANNOTATIONS; public static final IconFactory.PathIcons ANNOTATIONS. ANNOTATIONS_FILL; public static final IconFactory.PathIcons ANNOTATIONS_FILL. ARROW_START_TOOL; public static final IconFactory.PathIcons ARROW_START_TOOL. ARROW_END_TOOL; public static final IconFactory.PathIcons ARROW_END_TOOL. ARROW_DOUBLE_TOOL; public static final IconFactory.PathIcons ARROW_DOUBLE_TOOL. BRUSH_TOOL; public static final IconFactory.PathIcons BRUSH_TOOL. CELL_NUCLEI_BOTH; public static final IconFactory.PathIcons CELL_NUCLEI_BOTH. CELL_ONLY; public static final IconFactory.PathIcons CELL_ONLY. CENTROIDS_ONLY; public static final IconFactory.PathIcons CENTROIDS_ONLY. COG; public static final IconFactory.PathIcons COG. CONTRAST; public static final IconFac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:2339,hash,hashCode,2339,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,1,['hash'],['hashCode']
Security,"TMA""); public class TMAMenuActions.Actions; extends Object. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions.AddActions;  ; class ; TMAMenuActions.Actions.RemoveActions;  . Field Summary; Fields. Modifier and Type; Field; Description; final TMAMenuActions.Actions.AddActions; addActions;  ; final org.controlsfx.control.action.Action; CLEAR_CORES;  ; final org.controlsfx.control.action.Action; CONVEX_HULL;  ; final org.controlsfx.control.action.Action; CREATE_MANUAL;  ; final org.controlsfx.control.action.Action; RELABEL;  ; final TMAMenuActions.Actions.RemoveActions; removeActions;  ; final org.controlsfx.control.action.Action; RESET_METADATA;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CREATE_MANUAL; @ActionConfig(""Action.TMA.specifyGrid""); public final org.controlsfx.control.action.Action CREATE_MANUAL. SEP_0; public final org.controlsfx.control.action.Action SEP_0. addActions; @ActionMenu(""Menu.TMA.add""); public final TMAMenuActions.Actions.AddActions addActions. removeActions; @ActionMenu(""Menu.TMA.remove""); public final TMAMenuActions.Actions.RemoveActions removeActions. RELABEL; @ActionConfig(""Action.TMA.relabel""); public final org.controlsfx.control.action.Action RELABEL. RESET_METADATA; @ActionConfig(""Action.TMA.resetMetadata""); public final org.controlsfx.control.action.Action RESET_METADATA. CLEAR_CORES; @ActionConfig(""Action.TMA.deleteGrid""); public final org.controlsfx.control.action.Action CLEAR_CORES. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CONVEX_HULL; @ActionConfig(""Action.TMA.findHull""); public final org.controlsfx.control.action.Action CONVEX_HULL. Constructor De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html:1522,hash,hashCode,1522,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"TaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1652,hash,hashCode,1652,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['hash'],['hashCode']
Security,"Tools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> List<ImageWriter<T>>; getCompatibleWriters(Class<T> imageClass,; String ext). Get a list of compatible ImageWriters for a specific image class. static <T> List<ImageWriter<T>>; getCompatibleWriters(ImageServer<T> server,; String ext). Get a list of compatible ImageWriters compatible with a specific server. static boolean; writeImage(BufferedImage img,; String path). Write a 2D image using the default writer based on the file path. static boolean; writeImage(ImageServer<BufferedImage> server,; String path). Write a (possibly multidimensional) image region using the default writer based on the file path. static boolean; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write a 2D image region using the default writer based on the file path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageWriterTools; public ImageWriterTools(). Method Details. getCompatibleWriters; public static <T> List<ImageWriter<T>> getCompatibleWriters(ImageServer<T> server,; String ext); Get a list of compatible ImageWriters compatible with a specific server. Type Parameters:; T - ; Parameters:; server - ; ext - ; Returns:; getCompatibleWriters(Class, String). getCompatibleWriters; public static <T> List<ImageWriter<T>> getCompatibleWriters(Class<T> imageClass,; String ext); Get a list of compatible ImageWriters for a specific image class.; ; The returned list is sorted, with the 'preferred' server coming first. ; This decision is made based upon whether the writer supports pixel calibration information and. Type Parameters:; T - ; Parameters:; imageClass - the image class (e.g. BufferedImage.class); ext - the desired output file extension (e.g. "".jpg"", "".tif"").; Returns:; getCompatibleWriters(ImageServer, String). writeIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html:1652,hash,hashCode,1652,javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,1,['hash'],['hashCode']
Security,"URIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3140,hash,hashCode,3140,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['hash'],['hashCode']
Security,"UpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1762,hash,hashCode,1762,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,1,['hash'],['hashCode']
Security,"VDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:2612,hash,hashCode,2612,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['hash'],['hashCode']
Security,"[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been start",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3622,hash,hashCode,3622,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['hash'],['hashCode']
Security,"_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MIDD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:3002,hash,hashCode,3002,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,1,['hash'],['hashCode']
Security,"_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public final org.controlsfx.control.action.Action VIEWER_GRID_1x1. VIEWER_GRID_",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:1887,hash,hashCode,1887,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,1,['hash'],['hashCode']
Security,"a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:2206,hash,hashCode,2206,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['hash'],['hashCode']
Security,"a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. See Also:. getRenderer(); setRenderer(ImageRenderer); rendererProperty(). Method Details. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier); Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. Parameters:; options - the options controlling the overlay display; classifier - the classifier; Returns:. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier,; int nThreads); Create an overlay to display the live application of a PixelClassifier to an image. Parameters:; options - the options controlling the overlay display; classifier - the classifier; nThreads - number of parallel threads to use for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:4546,hash,hashCode,4546,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['hash'],['hashCode']
Security,"a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:2532,hash,hashCode,2532,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,1,['hash'],['hashCode']
Security,"a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Parameters:; channel - the channel to threshold; minThreshold - the minimum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:1884,hash,hashCode,1884,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,1,['hash'],['hashCode']
Security,"aCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:13256,hash,hashCode,13256,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['hash'],['hashCode']
Security,"aScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class CssLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.CssLanguage. public class CssLanguage; extends ScriptLanguage; Class for representing CSS in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CssLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static CssLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. CssLanguage; public CssLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static CssLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html:1246,hash,hashCode,1246,javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,1,['hash'],['hashCode']
Security,"aY). Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). static ImageOp; filter2D(Mat kernel). Apply a 2D filter. static ImageOp; gaussianBlur(double sigma). Apply a 2D Gaussian filter. static ImageOp; gaussianBlur(double sigmaX,; double sigmaY). Apply a (possibly anisotropic) 2D Gaussian filter. static ImageOp; maximum(int radius). Apply a 2D maximum filter. static ImageOp; mean(int radius). Apply a 2D circular mean filter. static ImageOp; median(int radius). Apply a 2D median filter. static ImageOp; minimum(int radius). Apply a 2D minimum filter. static ImageOp; opening(int radius). Apply a 2D morphological opening filter. static ImageOp; stdDev(int radius). Apply a 2D circular standard deviation filter. static ImageOp; sum(int radius). Apply a 2D circular sum filter. static ImageOp; variance(int radius). Apply a 2D circular variance filter. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Filters; public Filters(). Method Details. gaussianBlur; public static ImageOp gaussianBlur(double sigmaX,; double sigmaY); Apply a (possibly anisotropic) 2D Gaussian filter. Parameters:; sigmaX - ; sigmaY - ; Returns:. gaussianBlur; public static ImageOp gaussianBlur(double sigma); Apply a 2D Gaussian filter. Parameters:; sigma - ; Returns:. filter2D; public static ImageOp filter2D(Mat kernel); Apply a 2D filter. Parameters:; kernel - ; Returns:. mean; public static ImageOp mean(int radius); Apply a 2D circular mean filter. Parameters:; radius - filter radius; Returns:. sum; public static ImageOp sum(int radius); Apply a 2D circular sum filter. Parameters:; radius - filter radius; Returns:. variance; public static ImageOp variance(int radius); Apply a 2D circular variance filter. Parameters:; radius - filter radius; Returns:. stdDev; public static ImageOp stdDev(int radius); Apply a 2D circular standard deviation f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html:1898,hash,hashCode,1898,javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,1,['hash'],['hashCode']
Security,"able, Comparable<StainVector.DefaultStains>, Constable. Enclosing class:; StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public static StainVector.DefaultStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static StainVector.DefaultStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html:1602,hash,hashCode,1602,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,1,['hash'],['hashCode']
Security,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10903,hash,hashCode,10903,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['hash'],['hashCode']
Security,"ackage qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools - package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer - package qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays - package qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording - package qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools - package qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers - package qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images - package qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers - package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats - package qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide - package qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna - package qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers - package qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome - package qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io - package qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:812507,access,accessing,812507,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessing']
Security,"ad-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the nam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3832,hash,hashCode,3832,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['hash'],['hashCode']
Security,"adata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for al",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:2642,hash,hashCode,2642,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['hash'],['hashCode']
Security,"ageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:2288,hash,hashCode,2288,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['hash'],['hashCode']
Security,"ageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2865,hash,hashCode,2865,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['hash'],['hashCode']
Security,"ail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1196,hash,hashCode,1196,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,1,['hash'],['hashCode']
Security,"ail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class MarkdownStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. All Implemented Interfaces:; ScriptStyler. public class MarkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Specified by:; getBaseStyle in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptSty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html:1279,hash,hashCode,1279,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,1,['hash'],['hashCode']
Security,"alignCenterRight(). Match tiles to the center left of the ROI bounding box. Tiler.Builder; alignment(Tiler.TileAlignment alignment). Set the tile alignment. Tiler.Builder; alignTopCenter(). Start tiles at the top center of the ROI bounding box. Tiler.Builder; alignTopLeft(). Start tiles at the top left of the ROI bounding box. Tiler.Builder; alignTopRight(). Match tiles to the top right of the ROI bounding box. Tiler; build(). Build a tiler object with the current settings. Tiler.Builder; cropTiles(boolean cropToParent). Set whether the tiler is set to crop the output to the input parent. Tiler.Builder; filterByCentroid(boolean filterByCentroid). Set if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Tiler.Builder; tileHeight(int tileHeight). Change the height of output tiles. Tiler.Builder; tileWidth(int tileWidth). Change the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. tileHeight; public Tiler.Builder tileHeight(int tileHeight); Change the height of output tiles. Parameters:; tileHeight - the new height in pixels; Returns:; this builder. tileWidth; public Tiler.Builder tileWidth(int tileWidth); Change the width of output tiles. Parameters:; tileWidth - the new width in pixels; Returns:; this builder. cropTiles; public Tiler.Builder cropTiles(boolean cropToParent); Set whether the tiler is set to crop the output to the input parent.; Using this option can result in smaller and non-rectangular tiles. Parameters:; cropToParent - the new setting; Returns:; this builder. alignment; public Tiler.Builder alignment(Tiler.TileAlignment alignment); Set the tile alignment. Parameters:; alignment - the new setting; Returns:; this builder. alignTopLeft; public Tiler.Builder alignTopLeft(); Start tiles at the top left of the ROI bounding box. Returns:; this builder. alignTopCenter; public Tiler.Buil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html:2065,hash,hashCode,2065,javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,1,['hash'],['hashCode']
Security,"alogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:1494,hash,hashCode,1494,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,1,['hash'],['hashCode']
Security,"alues. static String; getParameterListJSON(Map<String,?> map,; String delimiter). Deprecated.; use convertToJson(Map) instead. static String; getParameterListJSON(ParameterList params,; String delimiter). Deprecated.; use convertToJson(ParameterList) instead. Map<String,Parameter<?>>; getParameters(). Returns a map of keys and their corresponding parameters. String; getStringParameterValue(String key). Get a String parameter value (or its default) for the specified key. boolean; removeEmptyParameters(). Remove all empty parameters from this list. Parameter<?>; removeParameter(String key). Remove a parameter from this list. void; setHiddenParameters(boolean hidden,; String... keys). Set the 'hidden' flag for parameters with the specified keys. static void; updateParameterList(ParameterList params,; Map<String,String> mapNew,; Locale locale). Update a ParameterList with the values specified in a map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterList; public ParameterList(). Method Details. setHiddenParameters; public void setHiddenParameters(boolean hidden,; String... keys); Set the 'hidden' flag for parameters with the specified keys.; This can be used to notify any consumer that certain parameters are not required, ; or otherwise should not be presented to the user. Parameters:; hidden - ; keys - . duplicate; public ParameterList duplicate(); Create a deep copy of this parameter list. Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue); Add a double parameter to this list. Parameters:; key - ; prompt - ; defaultValue - ; Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue,; String unit,; String helpText); Add a double parameter to this list, optionally including a unit and help text. Parameters:; key - ; prompt -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html:5279,hash,hashCode,5279,javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,1,['hash'],['hashCode']
Security,"amework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3300,hash,hashCode,3300,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['hash'],['hashCode']
Security,"an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one does not already exist. Returns:. outputPath; public FileCopier outputPath(String name); Name of the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(Path). outputPath; public FileCopier outputPath(Path name); Path representing the output directory.; If relativeToUserDirectory() is selected, thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:1461,hash,hashCode,1461,javadoc/docs/qupath/lib/gui/FileCopier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html,1,['hash'],['hashCode']
Security,"ankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform alread",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:1659,hash,hashCode,1659,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['hash'],['hashCode']
Security,"arkdownLanguage; extends ScriptLanguage; implements HtmlRenderer; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html:1593,hash,hashCode,1593,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,1,['hash'],['hashCode']
Security,"ary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class JsonLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.JsonLanguage. public class JsonLanguage; extends ScriptLanguage; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of JSON syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; JsonLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static JsonLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. JsonLanguage; public JsonLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static JsonLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html:1370,hash,hashCode,1370,javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,1,['hash'],['hashCode']
Security,"ary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2328,hash,hashCode,2328,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,1,['hash'],['hashCode']
Security,ashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570019,hash,hashCode,570019,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"asing factor each time (e.g. OMEPyramidWriter.Builder; scaledDownsampling(double minDownsample,; double scale). Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. OMEPyramidWriter.Builder; tileSize(int tileSize). Define the requested tile size (width == height). OMEPyramidWriter.Builder; tileSize(int tileWidth,; int tileHeight). Define the requested tile width and height. OMEPyramidWriter.Builder; timePoint(int t). Specify a single timepoint to be written from a time series. OMEPyramidWriter.Builder; timePoints(int tStart,; int tEnd). Specify a range of timepoints to be written from a time series. OMEPyramidWriter.Builder; uncompressed(). Request no compression. OMEPyramidWriter.Builder; zSlice(int z). Specify the z-slice to export. OMEPyramidWriter.Builder; zSlices(int zStart,; int zEnd). Specify the start (inclusive) and end (exclusive) z-slices. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServer<BufferedImage> server); Constructor. Parameters:; server - the ImageServer from which pixels will be requested and written to the OME-TIFF. Method Details. channelsPlanar; public OMEPyramidWriter.Builder channelsPlanar(); Request that channels are written as separate image planes. Returns:; this builder. channelsInterleaved; public OMEPyramidWriter.Builder channelsInterleaved(); Request that channels are written interleaved within a single image plane. Returns:; this builder. channelsImages; public OMEPyramidWriter.Builder channelsImages(); Request that channels are written as separate images. Returns:; this builder. bigTiff; public OMEPyramidWriter.Builder bigTiff(); Request that the image is written in BigTIFF format. Returns:; this builder. bigTiff; public OMEPyramidWriter.Builder bigTiff(boolean doBigTiff); Specify whether the image should be written in BigTIFF format. Paramet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:4454,hash,hashCode,4454,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['hash'],['hashCode']
Security,"ass PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:1380,hash,hashCode,1380,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['hash'],['hashCode']
Security,"asurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:1683,hash,hashCode,1683,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,1,['hash'],['hashCode']
Security,"ata() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569482,hash,hashCode,569482,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"ata<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; img - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; map - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options); Create an empty overlay without any images to display. Parameters:; options - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img); Create an overlay to display one specified image region. Parameters:; options - ; region - ; img - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; Map<? e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:3584,hash,hashCode,3584,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['hash'],['hashCode']
Security,"ate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectPredicates; public PathObjectPredicates(). Method Details. positiveClassification; public static PathObjectPredicates.PathObjectPredicate positiveClassification(boolean allowGradedIntensity); Predicate that returns true of an object has a positive classification. Parameters:; allowGradedIntensity - if true, 1+, 2+ and 3+ are also interpreted as positive; ; otherwise, only a final class component of ""Positive"" returns true.; Returns:; See Also:. PathClassTools.isPositiveClass(PathClass); PathClassTools.isGradedIntensityClass(PathClass); PathClassTools.isPositiveOrGradedIntensityClass(PathClass). filter; public static PathObjectPredicates.PathObjectPredicate filter(PathObjectFilter filter); Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. Parameters:; filter - ; Returns:. exactClassification; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:2065,hash,hashCode,2065,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,1,['hash'],['hashCode']
Security,"ated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. Jav",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:47061,access,access,47061,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.BioFormatsPreferences. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences. Enclosing class:; BioFormatsOptionsExtension. @PrefCategory(""Prefs.BioFormats""); public static class BioFormatsOptionsExtension.BioFormatsPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; enableBioformats;  ; final BooleanProperty; filesOnly;  ; final IntegerProperty; memoizationTimeMillis;  ; final StringProperty; pathMemoization;  ; final StringProperty; skipExtensions;  ; final StringProperty; useExtensions;  ; final BooleanProperty; useParallelization;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. enableBioformats; @BooleanPref(""Prefs.BioFormats.enable""); public final BooleanProperty enableBioformats. filesOnly; @BooleanPref(""Prefs.BioFormats.localOnly""); public final BooleanProperty filesOnly. useParallelization; @BooleanPref(""Prefs.BioFormats.useParallelization""); public final BooleanProperty useParallelization. memoizationTimeMillis; @IntegerPref(""Prefs.BioFormats.memoizationTimeMillis""); public final IntegerProperty memoizationTimeMillis. pathMemoization; @DirectoryPref(""Prefs.BioFormats.pathMemoization""); public final StringProperty pathMemoization. useExtensions; @StringPref(""Prefs.BioFormats.alwaysUseExtensions""); public final StringProperty useExtensions. skipExtensions; @StringPref(""Prefs.BioFormats.skipExtensions""); public final StringProperty skipExtensions. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html:1196,hash,hashCode,1196,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,1,['hash'],['hashCode']
Security,"ath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.Bounda",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569227,hash,hashCode,569227,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"athExtension; A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:1615,hash,hashCode,1615,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,1,['hash'],['hashCode']
Security,"athStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2456,hash,hashCode,2456,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['hash'],['hashCode']
Security,"atic BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4156,hash,hashCode,4156,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['hash'],['hashCode']
Security,"ation needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns:. getMinDisplay; public float getMinDisplay(); Get the requested minimum display value for the channel.; This should be used with the first entry in any lookup table. Returns:. getMaxDisplay; public float getMaxDisplay(); Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. Returns:. getColor; public ChannelColor getColor(); Get the color used to display the channel, or null if a color is not relevant. Returns:. isShowing; public boolean isShowing(); Get whether the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html:1532,hash,hashCode,1532,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,1,['hash'],['hashCode']
Security,"aultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. H_E; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_E; Hematoxylin and eosin. H_DAB; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_DAB; Hematoxylin and DAB. Method Details. values; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html:1904,hash,hashCode,1904,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,1,['hash'],['hashCode']
Security,"automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate features. void; setResolution(PixelCalibration cal). Set the resolution at which the training should occur. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTraining; public PixelClassifierTraining(ImageDataOp featureCalculator); Create a new pixel classifier helper, to support generating training data. Parameters:; featureCalculator - . Method Details. getFeatureOp; public ImageDataOp getFeatureOp(); Get an ImageDataOp used for feature calculation. Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public Boundar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:2421,hash,hashCode,2421,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,1,['hash'],['hashCode']
Security,"avaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class XmlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.XmlLanguage. public class XmlLanguage; extends ScriptLanguage; Class for representing XML in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; XmlLanguage(). Constructor for XML Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static XmlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. XmlLanguage; public XmlLanguage(); Constructor for XML Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static XmlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html:1245,hash,hashCode,1245,javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,1,['hash'],['hashCode']
Security,"ayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get direct access to the custom overlay list. getCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the custom pixel layer overlay, or null if it has not be set. getDataMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the maximum measurement value from the objects passed to the constructor of this mapper. getDataMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the minimum measurement value from the objects passed to the constructor of this mapper. getDebugMode() - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Get whether debug mode is on or off. getDefaultAutoCompletor(String) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Default method to get a suitable auto completor for the given language name. getDefaultBuilder() - Static method in class qupath.lib.io.GsonTools. Access the builder used with GsonTools.getInstance(). getDefaultChannelColor(int) - Static method in class qupath.lib.images.servers.ImageChannel. Get the default color for a specified channel, for use when no channel colors are already known. getDefaultChannelList(int) - Static method in class qupath.lib.images.servers.ImageChannel. Get default channel list for an image with a specified number of channels. getDefaultColorMap() - Static method in class qupath.lib.color.ColorMaps. Get a default, general-purpose ColorMaps.ColorMap. getDefaultColorModel() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getDefaultColorModel() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get an appropriate colormodel that may be used. getDefaultColorModel() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getDefaultColorModel(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. This does not guarantee a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:367787,Access,Access,367787,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Access'],['Access']
Security,"b.gui.images.servers.RenderedImageServer;  ; hasBundleForLocale(String, Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569028,hash,hashCode,569028,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"bject; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has been selected (which may or may not be the same as getItem()). Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:1489,hash,hashCode,1489,javadoc/docs/qupath/lib/gui/SelectableItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html,1,['hash'],['hashCode']
Security,"bjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. setROI; public void setROI(ROI roi); Set the ROI for this object. If this is called, one should remember to update any associated ; hierarchy to notify it of the change. Parameters:; roi - . setLocked; public void setLocked(boolean locked); Set locked flag, indicating that the object ROI should not be modified.; It directly impacts on isEditable(). Note that this is only a hint that other code should pay attention to - it is not; enforced locally.; ; TODO: Consider shifting this method into PathObject rather than PathROIObject (even; if it doesn't really do anything there). Overrides:; setLocked in class PathObject; Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEditable(); Deprecated.; since v0.4.0. Return true if isLocked() is fal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:2768,hash,hashCode,2768,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,1,['hash'],['hashCode']
Security,"bjects. static void; unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'unlocked'. static void; unlockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. static PathObject; updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject - ; Returns:. countObjectsWithClass; public static int countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass); Count the number of PathObjects in a collection with a specified class or base class. Parameters:; pathObjects - ; pathClass - ; useBaseClass - ; Returns:. getObjectsOfClass; public static List<PathObject> getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> createImageRegionPredicate(ImageRegion region); Create a predicate that only ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:15317,hash,hashCode,15317,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['hash'],['hashCode']
Security,"ble for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; public static String getDefaultShortServerName(URI uri); Get the default shortened server name given the server's path. Parameters:; uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredDownsampleFactor(ImageServer, double). getPreferredDownsamp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:2274,hash,hashCode,2274,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,1,['hash'],['hashCode']
Security,"ble, Comparable<Normalization>, Constable. public enum Normalization; extends Enum<Normalization>; Methods for normalizing features. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MEAN_VARIANCE. Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX. Normalize into the range 0-1 using min and max values. NONE. Do not normalize features. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static Normalization; valueOf(String name). Returns the enum constant of this class with the specified name. static Normalization[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final Normalization NONE; Do not normalize features. MEAN_VARIANCE; public static final Normalization MEAN_VARIANCE; Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX; public static final Normalization MIN_MAX; Normalize into the range 0-1 using min and max values. Method Details. values; public static Normalization[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Normalization valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html:1567,hash,hashCode,1567,javadoc/docs/qupath/lib/classifiers/Normalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html,1,['hash'],['hashCode']
Security,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:906,access,accessibleHelp,906,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"ble. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:1716,hash,hashCode,1716,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,1,['hash'],['hashCode']
Security,"bration. public static class PixelCalibration.Builder; extends Object; Builder class for PixelCalibration objects. Constructor Summary; Constructors. Constructor; Description; Builder(). Create a new builder with default (uncalibrated) values. Builder(PixelCalibration cal). Create a new builder, initialized values of an existing PixelCalibration. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; build(). Build PixelCalibration object. PixelCalibration.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel width and height in microns (the most common calibration value). PixelCalibration.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify timepoints and units. PixelCalibration.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Create a new builder with default (uncalibrated) values. Builder; public Builder(PixelCalibration cal); Create a new builder, initialized values of an existing PixelCalibration. Parameters:; cal - . Method Details. pixelSizeMicrons; public PixelCalibration.Builder pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons); Specify the pixel width and height in microns (the most common calibration value). Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; Returns:. timepoints; public PixelCalibration.Builder timepoints(TimeUnit timeUnit,; double... timepoints); Specify timepoints and units. Parameters:; timeUnit - ; timepoints - ; Returns:. zSpacingMicrons; public PixelCalibration.Builder zSpacingMicrons(Number zSpacingMicrons); Specify spacing between z-slices, in microns. Parameters:; zSpacingMicrons - ; Returns:. build; public PixelCalibration build(); Build PixelCalib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html:1497,hash,hashCode,1497,javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,1,['hash'],['hashCode']
Security,"by checking the names of the first two stains and confirming that the third stain is a residual. static boolean; isHematoxylin(StainVector stain). Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). static ColorDeconvolutionStains; makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains stains). Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). static ColorDeconvolutionStains; parseColorDeconvolutionStainsArg(String s). Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. static double[]; parseStainValues(Locale locale,; String s). Parses 3 values, suitable for use as a stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HEMATOXYLIN; public static final String HEMATOXYLIN; Default name (and spelling) for hematoxylin stain. See Also:. Constant Field Values. EOSIN; public static final String EOSIN; Default name for eosin stain. See Also:. Constant Field Values. DAB; public static final String DAB; Default name for DAB stain. See Also:. Constant Field Values. Constructor Details. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; StainVector stain3,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with three stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; stain3 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:4901,hash,hashCode,4901,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['hash'],['hashCode']
Security,"cal normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details. gaussianNormalize; public static void gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:1860,hash,hashCode,1860,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html,1,['hash'],['hashCode']
Security,"caleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1676,hash,hashCode,1676,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['hash'],['hashCode']
Security,"cally generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException. buildServer; public static ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws IOException; Build a ImageServer for the specified URI and optional args.; This differs from ImageServerProvider.buildServer(String, Class, String...) in two main ways:; ; it always u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:4041,access,accessed,4041,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['access'],['accessed']
Security,"cated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.Bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569403,hash,hashCode,569403,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"cation. PixelClassifierTools() - Constructor for class qupath.opencv.ml.pixel.PixelClassifierTools;  ; PixelClassifierTools.CreateObjectOptions - Enum Class in qupath.opencv.ml.pixel. Options when creating objects from a pixel classifier. PixelClassifierTraining - Class in qupath.process.gui.commands.ml. Helper class for training a pixel classifier. PixelClassifierTraining(ImageDataOp) - Constructor for class qupath.process.gui.commands.ml.PixelClassifierTraining. Create a new pixel classifier helper, to support generating training data. PixelClassifierTraining.ClassifierTrainingData - Class in qupath.process.gui.commands.ml. Wrapper for training data. PixelClassifierUI - Class in qupath.process.gui.commands.ml. Helper class for generating standardized UI components for pixel classification. PixelClassifierUI() - Constructor for class qupath.process.gui.commands.ml.PixelClassifierUI;  ; PixelImageIJ - Class in qupath.imagej.tools. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelImageIJ(ImageProcessor) - Constructor for class qupath.imagej.tools.PixelImageIJ. Constructor. PixelProcessor<S,T,U> - Class in qupath.lib.experimental.pixels. A class for tiled image processing. PixelProcessor.Builder<S,T,U> - Class in qupath.lib.experimental.pixels. Builder class for a PixelProcessor. PixelProcessorUtils - Class in qupath.lib.experimental.pixels. Utility functions to help with the PixelProcessor class. PixelProcessorUtils() - Constructor for class qupath.lib.experimental.pixels.PixelProcessorUtils;  ; pixelSize(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the requested pixel size to use with requesting image regions. pixelSize(double, double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). pixelSize(PixelCalibration) - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:766251,access,access,766251,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"ces:; Serializable, Parameter<S>. public class ChoiceParameter<S>; extends Object; Parameter that supports a list of choices.; ; May be displayed as a drop-down list. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected List<S>; choices;  ; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. List<S>; getChoices(). Get a list of available choices. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:1508,hasH,hasHelpText,1508,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['hasH'],['hasHelpText']
Security,"closing class:; RotatedImageServer. public static enum RotatedImageServer.Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotate 90 degrees clockwise. ROTATE_180; public static final RotatedImageServer.Rotation ROTATE_180; Rotate 180 degrees. ROTATE_270; public static final RotatedImageServer.Rotation ROTATE_270; Rotate 270 degrees clockwise. Method Details. values; public static RotatedImageServer.Rotation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RotatedImageServer.Rotation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an ident",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html:1688,hash,hashCode,1688,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,1,['hash'],['hashCode']
Security,"columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:1735,hash,hashCode,1735,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,1,['hash'],['hashCode']
Security,"compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; Paramet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:2937,hash,hashCode,2937,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['hash'],['hashCode']
Security,"criptLanguages. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ScriptLanguageProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Parameters:; name - ; Returns:. fromString; public static ScriptLanguage fromString(String languageString); Get the ScriptLanguage object corresponding to the specified String. ; If the string cannot be matched, PlainLanguage is returned. Parameters:; languageString - ; Returns:; corresponding script language, or PlainLanguage if no match. getLanguageFromExtension; public static ScriptLanguage getLanguageFromExtension(String ext); Return the first ScriptLanguage compatible with the specified extension (can be runnable ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html:1589,hash,hashCode,1589,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,1,['hash'],['hashCode']
Security,"crons(); Get the pixel height in microns, or Double.NaN if this is unknown. Returns:. getPixelWidthUnit; public String getPixelWidthUnit(); Get a String representation of the preferred pixel width unit. Returns:; See Also:. getPixelWidthMicrons(); PIXEL; MICROMETER. unitsMatch2D; public boolean unitsMatch2D(); Returns true if the units for pixel width and height are the same. Returns:. unitsMatch3D; public boolean unitsMatch3D(); Returns true if the units for pixel width, height and z-spacing are the same. Returns:. getPixelHeightUnit; public String getPixelHeightUnit(); Get a String representation of the preferred pixel height unit. Returns:; See Also:. getPixelHeightMicrons(); PIXEL; MICROMETER. getZSpacingUnit; public String getZSpacingUnit(); Get a String representation of the preferred z-spacing unit. Returns:; See Also:. getZSpacing(); PIXEL; MICROMETER. getAveragedPixelSize; public Number getAveragedPixelSize(); Get an average of getPixelWidth() and getPixelHeight().; No check is made to ensure that these are returned in the same units; rather, the numbers are simply averaged. Returns:. getPixelWidth; public Number getPixelWidth(); Get the numeric value representing the pixel width, in the stored units. Returns:; See Also:. getPixelWidthUnit(). getPixelHeight; public Number getPixelHeight(); Get the numeric value representing the pixel height, in the stored units. Returns:; See Also:. getPixelHeightUnit(). getZSpacing; public Number getZSpacing(); Get the numeric value representing the z-spacing, in the stored units. Returns:; See Also:. getZSpacingUnit(). toString; public String toString(). Overrides:; toString in class Object. getDefaultInstance; public static PixelCalibration getDefaultInstance(); Get the default PixelCalibration.; This isn't terribly informative, giving pixel sizes in pixel units. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:7514,hash,hashCode,7514,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,3,['hash'],['hashCode']
Security,"ct; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1489,hash,hashCode,1489,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,1,['hash'],['hashCode']
Security,"ct; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultiviewActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ATTACH_VIEWER;  ; final org.controlsfx.control.action.Action; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MULTIVIEW_CLOSE_VIEWER;  ; final ViewMenuActions.MultiviewGridActions; MULTIVIEW_GRID_ACTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_MATCH_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_ACTIONS; @ActionMenu(""Action.View.Multiview.gridMenu""); public final ViewMenuActions.MultiviewGridActions MULTIVIEW_GRID_ACTIONS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_SYNCHRONIZE_VIEWERS; public final org.controlsfx.control.action.Action MULTIVIEW_SYNCHRONIZE_VIEWERS. MULTIVIEW_MATCH_RESOLUTIONS; public final org.controlsfx.control.action.Action MULTIVIEW_MATCH_RESOLUTIONS. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MULTIVIEW_CLOSE_VIEWER; @ActionConfig(""Action.View.Multiview.closeViewer""); public final org.controlsfx.control.action.Action MULTIVIEW_CLOSE_VIEWER. SEP_02; public final org.controlsfx.control.action.Action SEP_02. DETACH_VIEWER; @ActionConfig(""ViewerActions.detachViewer""); public final org.controlsfx.control.action.Action DETACH_VIEWER. ATTACH_VIEWER; @ActionConfig(""ViewerActions.attachViewer""); public final org.controlsfx.control.a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html:1433,hash,hashCode,1433,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,1,['hash'],['hashCode']
Security,"ct; qupath.lib.gui.viewer.tools.ExtendedPathTool. All Implemented Interfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:1400,hash,hashCode,1400,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['hash'],['hashCode']
Security,"ction; MULTIVIEW_ADD_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_ADD_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_3x3;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_RESET_GRID;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewGridActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_1x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x1. MULTIVIEW_GRID_1x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x2. MULTIVIEW_GRID_2x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x1. MULTIVIEW_GRID_2x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x2. MULTIVIEW_GRID_3x3; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_3x3. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_ADD_ROW; @ActionConfig(""Action.View.Multiview.addRow""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_ROW. MULTIVIEW_ADD_COLUMN; @ActionConfig(""Action.View.Multiview.addColumn""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_COLUMN. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MULTIVIEW_REMOVE_ROW; @ActionConfig(""Action.View.Multiview.removeRow""); pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html:1713,hash,hashCode,1713,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,1,['hash'],['hashCode']
Security,"ctor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html:2952,hash,hashCode,2952,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,3,['hash'],['hashCode']
Security,"ctor(int channel). Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). static ColorTransforms.ColorTransform; createChannelExtractor(String channelName). Create ColorTransform to extract a channel based on its name. static ColorTransforms.ColorTransform; createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber). Create a ColorTransform that applies color deconvolution. static ColorTransforms.ColorTransform; createMaximumChannelTransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform that calculates the mean of all channels. static ColorTransforms.ColorTransform; createMinimumChannelTransform(). Create a ColorTransform that calculates the minimum of all channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransforms; public ColorTransforms(). Method Details. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(int channel); Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). Parameters:; channel - ; Returns:. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(String channelName); Create ColorTransform to extract a channel based on its name. Parameters:; channelName - ; Returns:. createMeanChannelTransform; public static ColorTransforms.ColorTransform createMeanChannelTransform(); Create a ColorTransform that calculates the mean of all channels. Returns:. createColorDeconvolvedChannel; public static ColorTransforms.ColorTransform createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber); Create a ColorTransform th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html:2266,hash,hashCode,2266,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,1,['hash'],['hashCode']
Security,"d Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFuncti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2657,hash,hashCode,2657,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['hash'],['hashCode']
Security,"d Type; Constant Field; Value; public static final String; DEFAULT_PROJECT_EXTENSION; ""qpproj""; public static final String; DEFAULT_PROJECT_NAME; ""project"". qupath.lib.scripting.QP. Modifier and Type; Constant Field; Value; public static final String; PROJECT_BASE_DIR; ""{%PROJECT}"". qupath.lib.scripting.ScriptAttributes. Modifier and Type; Constant Field; Value; public static final String; ARGS; ""args""; public static final String; BATCH_INDEX; ""qupath.script.batchIndex""; public static final String; BATCH_LAST; ""qupath.script.batchLast""; public static final String; BATCH_SAVE; ""qupath.script.batchSave""; public static final String; BATCH_SIZE; ""qupath.script.batchSize""; public static final String; FILE_PATH; ""qupath.script.file"". qupath.opencv.*. qupath.opencv.dnn.DnnModel. Modifier and Type; Constant Field; Value; public static final String; DEFAULT_INPUT_NAME; ""input""; public static final String; DEFAULT_OUTPUT_NAME; ""output"". qupath.opencv.dnn.DnnModelParams. Modifier and Type; Constant Field; Value; public static final String; FRAMEWORK_MXNET; ""MxNet""; public static final String; FRAMEWORK_ONNX_RUNTIME; ""OnnxRuntime""; public static final String; FRAMEWORK_OPENCV_DNN; ""OpenCV DNN""; public static final String; FRAMEWORK_PYTORCH; ""PyTorch""; public static final String; FRAMEWORK_TENSORFLOW; ""TensorFlow""; public static final String; FRAMEWORK_TF_LITE; ""TFLite"". qupath.opencv.dnn.PredictionFunction<T>. Modifier and Type; Constant Field; Value; public static final String; DEFAULT_INPUT_NAME; ""input""; public static final String; DEFAULT_OUTPUT_NAME; ""output"". qupath.process.*. qupath.process.gui.commands.SplitProjectTrainingCommand. Modifier and Type; Constant Field; Value; public static final String; TRAIN_VALIDATION_TEST_METADATA_KEY; ""Train/Validation/Test type""; public static final String; VALUE_NONE; ""None""; public static final String; VALUE_TEST; ""Test""; public static final String; VALUE_TRAINING; ""Train""; public static final String; VALUE_VALIDATION; ""Validation"". ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/constant-values.html:6425,Validat,Validation,6425,javadoc/docs/constant-values.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html,2,['Validat'],['Validation']
Security,"d by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getSeries; public int getSeries(); Get the series index, as used by Bio-Formats. Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class Abstrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:6380,access,accessible,6380,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['access'],['accessible']
Security,"d for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageDat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:1681,hash,hashCode,1681,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,1,['hash'],['hashCode']
Security,"d in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.projects.Projects. Get the base directory of a project stored on the local file system. getBasePathClass(PathObject) - Static method in class qupath.lib.scripting.QP. Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null. getBaseStyle() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. getBaseStyle() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Optionally return a base style for the code area. getBatchIndex() - Method in class qupath.lib.scripting.ScriptParameters. Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:334127,Access,Access,334127,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Access'],['Access']
Security,"d is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?> param,; boolean enabled). Set the enabled status of a parameter, to determine if it can be edited. protected static void; setTextFieldFromNumber(TextField text,; Number value,; String unit);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterPanelFX; public ParameterPanelFX(ParameterList params); Create a ParameterPanelFX. Parameters:; params - . Method Details. getParameters; public ParameterList getParameters(); Get the ParameterList displayed in this panel. Returns:. getPane; public Pane getPane(); Get the Pane that can be displayed. Returns:. addParameterChangeListener; public void addParameterChangeListener(ParameterChangeListener listener); Add a ParameterChangeListener to be notified as parameters are modified by the user. Parameters:; listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; protected static void setTextFieldFromNumber(TextField text,; Number valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:2279,hash,hashCode,2279,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,1,['hash'],['hashCode']
Security,"d on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of pixels. Parameters:; width - ; height - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html:1207,hash,hashCode,1207,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,1,['hash'],['hashCode']
Security,"d; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1224,hash,hashCode,1224,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,1,['hash'],['hashCode']
Security,"d; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class YamlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler. All Implemented Interfaces:; ScriptStyler. public class YamlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on YAML syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html:1132,hash,hashCode,1132,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,1,['hash'],['hashCode']
Security,daryStrategy; qupath.lib.gui.commands.BrightnessContrastCommand (implements java.lang.Runnable); qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. qupath.process.gui.WandToolEventHandler. qupath.lib.awt.common.BufferedImageTools; qupath.lib.gui.BuildInfo; qupath.process.gui.commands.CellIntensityClassificationCommand (implements java.lang.Runnable); qupath.lib.objects.CellTools; qupath.lib.display.settings.ChannelColor; qupath.lib.display.settings.ChannelSettings; qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.plugins.parameters.ChoiceParameter<S>; qupath.process.gui.commands.ml.ClassificationResolution; qupath.lib.gui.actions.menus.ClassifyMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.scripting.richtextfx.CodeAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.lib.color.ColorDeconvMatrix3x3; qupath.lib.color.ColorDeconvolutionHelper; qupath.lib.color.ColorDeconvolutionStains (implements java.io.Externalizable); qupath.lib.color.ColorMaps; qupath.lib.color.ColorModelFactory; qupath.lib.gui.images.stores.ColorModelRenderer (implements qupath.lib.gui.images.stores.ImageRenderer); qupath.lib.analysis.heatmaps.ColorModels; qupath.lib.color.ColorModels; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; qupath.lib.color.ColorModels.DisplayBand; qupath.lib.common.ColorTools; qupath.lib.color.ColorToolsAwt; qupath.lib.gui.tools.ColorToolsFX; qupath.lib.color.ColorTransformer; qupath.lib.images.servers.ColorTransforms; qupath.lib.gui.tools.CommandFinderTools; qupath.lib.gui.tools.CommandFinderTools.CommandEntry; qupath.lib.plug,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:9981,Secur,SecureClassLoader,9981,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Secur'],['SecureClassLoader']
Security,"dd the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutionLevel>; build(). Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsample; public ImageServerMetadata.ImageResolutionLevel.Builder addLevelByDownsample(double downsample); Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. Parameters:; downsample - ; Returns:. addFullResolutionLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addFullResolutionLevel(); Add the full-resolution image as a level of the pyramid.; It is not required that this form part of the pyramid in cases where this image pyramid might ; be used to provide a smaller overlay of a larger image, and not itself contain ; pixels at the highest resolution. Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html:2194,hash,hashCode,2194,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,1,['hash'],['hashCode']
Security,"de.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load Ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1447,hash,hashCode,1447,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['hash'],['hashCode']
Security,"define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropImportListener.DropHandler<File> handler); Remove a File DropHandler. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:1892,hash,hashCode,1892,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,1,['hash'],['hashCode']
Security,"der.ServerBuilder<BufferedImage>; getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:2670,hash,hashCode,2670,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['hash'],['hashCode']
Security,"der.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; BioFormatsServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:1972,hash,hashCode,1972,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,1,['hash'],['hashCode']
Security,"displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2115,hash,hashCode,2115,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['hash'],['hashCode']
Security,"ds inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isLocked, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, readExternal, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setLocked, setName, setPathClass, storeMetadataValue, writeExternal. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathRootObject; public PathRootObject(). Method Details. isRootObject; public boolean isRootObject(); Description copied from class: PathObject; Returns true if the object is the 'root' of an object hierarchy. Overrides:; isRootObject in class PathObject; Returns:; See Also:. PathObjectHierarchy. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of the object. Specified by:; getPathClass in class PathObject; Returns:. setPathClass; public void setPathClass(PathClass pathClass,; double classProbability); Description copied from class: PathObject; Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Specified by:; setPathClass in class PathObject; Parameters:; pathClass - ; classProbability - . getClassProbability; public double getClas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html:2492,hash,hashCode,2492,javadoc/docs/qupath/lib/objects/PathRootObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html,1,['hash'],['hashCode']
Security,"ds upon the project used; typically BufferedImage for QuPath. All Superinterfaces:; UriResource. public interface ProjectImageEntry<T>; extends UriResource; Class to represent an image entry within a project.; ; This stores the path to the image, and some optional metadata. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearMetadata(). Remove all metadata. boolean; containsMetadata(String key). Check if a metadata value is present for a specified key. String; getDescription(). Get a description; this is free text describing the image. Path; getEntryPath(). Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. String; getID(). Get a unique ID to represent this entry. String; getImageName(). Get a name that may be used for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.ServerBuilder that can be used to open this image. default Collection<URI>; getServerURIs(). Deprecated.; use instead UriResource.getURIs(). String; getSummary(). Get a summary string representing this image entry. T; getThumbnail(). Request a thumbnail for the image. boolean; hasImageData(). Check if this entry has saved ImageData already available. String; putMetadataValue(String key,; String value). Store a metadata va",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:1390,Access,Access,1390,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['Access'],['Access']
Security,"ds. Modifier and Type; Field; Description; static long; UNKNOWN_LENGTH. Constant to represent an unknown dimension length. static DnnShape; UNKNOWN_SHAPE. Constant to represent an unknown shape. static long; UNKNOWN_SIZE. Constant to represent an unknown size (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final long; get(int i). Get the length of the specified dimension. final long[]; getShape(). Get a copy of the internal dimensions array. final boolean; isUnknown(). Returns true if the shape is unknown. final int; numDimensions(). The total number of dimensions, i.e. static DnnShape; of(long... shape). Create a new DnnShape with the specified dimension lengths. final long; size(). Total number of elements in a blob with this shape; This is the product of the lengths returned by getShape() or UNKNOWN_SHAPE. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. UNKNOWN_SHAPE; public static DnnShape UNKNOWN_SHAPE; Constant to represent an unknown shape. UNKNOWN_LENGTH; public static long UNKNOWN_LENGTH; Constant to represent an unknown dimension length. UNKNOWN_SIZE; public static long UNKNOWN_SIZE; Constant to represent an unknown size (i.e. number of elements within a blob, mat or tensor). Method Details. getShape; public final long[] getShape(); Get a copy of the internal dimensions array. Returns:. get; public final long get(int i); Get the length of the specified dimension. Parameters:; i - ; Returns:. of; public static DnnShape of(long... shape); Create a new DnnShape with the specified dimension lengths. Parameters:; shape - ; Returns:. numDimensions; public final int numDimensions(); The total number of dimensions, i.e. the length of the array returned by getShape(). Returns:. isUnknown; public final boolean isUnknown(); Returns true if the shape is unknown. Returns:. size; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html:1892,hash,hashCode,1892,javadoc/docs/qupath/opencv/dnn/DnnShape.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html,1,['hash'],['hashCode']
Security,"e & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2574,hash,hashCode,2574,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['hash'],['hashCode']
Security,"e 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. boolean; removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, without firing a remove event. void; removePathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). void; resolveHierarchy(). Attempt to resolve the parent-child relationships between all objects within the hierarchy. void; setHierarchy(PathObjectHierarchy hierarchy). Set the contents of this hierarchy to be the same as that of another hierarchy. void; setTMAGrid(TMAGrid tmaGrid). Set the tma grid for this hierarchy. String; toString();  ; void; updateObject(PathObject pathObject,; boolean isChanging). Update an object that is already in the hierarchy (e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HIERARCHY_COMPARATOR; public static final Comparator<PathObject> HIERARCHY_COMPARATOR; Comparator to use when looking for a parent annotation in the hierarchy.; The logic is:; ; Sort by area (smallest first); Sort by hierarchy level (deepest first); Sort by DefaultPathObjectComparator. In practice, one expects an object to be placed inside the smallest containing annotation - ; identical areas are likely to be rare, unless obtained by duplication. Constructor Details. PathObjectHierarchy; public PathObjectHierarchy(); Default constructor, creates an empty hierarchy. Method Details. isEmpty; public boolean isEmpty(); Check if the hierarchy is empty (i.e. no objects apart from the root object, no feature maps). Returns:. addListener; public void addListener(PathObjectHierarchyListener listener); Add a hierarchy change listener. Parameters:; listener - ; Since:; v0.4.0; replaced addPathObjectListener(PathObjectHierarchyListener).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:8280,hash,hashCode,8280,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['hash'],['hashCode']
Security,"e ip1 < threshold. static ByteProcessor; thresholdBelowEquals(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1 <= threshold. static ByteProcessor; thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold). Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. static ROI; thresholdToROI(ImageProcessor ip,; RegionRequest request). Generate a QuPath ROI from an ImageProcessor. static ROI; thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request). Generate a QuPath ROI by thresholding an image channel image. static ROI; thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request). Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholding; public SimpleThresholding(). Method Details. greaterThanOrEqual; public static ByteProcessor greaterThanOrEqual(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 >= ip2. Parameters:; ip1 - ; ip2 - ; Returns:. greaterThan; public static ByteProcessor greaterThan(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 > ip2. Parameters:; ip1 - ; ip2 - ; Returns:. thresholdBelow; public static ByteProcessor thresholdBelow(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 < threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBelowEquals; public static ByteProcessor thresholdBelowEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 <= threshold. Parameters:; ip - ; threshold - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html:2832,hash,hashCode,2832,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,1,['hash'],['hashCode']
Security,"e of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:3699,hash,hashCode,3699,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['hash'],['hashCode']
Security,e() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method i,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570085,hash,hashCode,570085,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"e(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6121,access,access,6121,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['access'],['access']
Security,"e. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice currently visible in the viewer. See Also:. getZPosition(); setZPosition(int); zPositionProperty(). tPosition; public IntegerProperty tPositionProperty; Current t-position for the timepoint currently visible in the viewer. See Also:. getTPosition();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13697,hash,hashCode,13697,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['hash'],['hashCode']
Security,"e; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:1566,hash,hashCode,1566,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,1,['hash'],['hashCode']
Security,"e; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:1806,hash,hashCode,1806,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['hash'],['hashCode']
Security,"eChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5809,hash,hashCode,5809,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['hash'],['hashCode']
Security,"eData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2846,hash,hashCode,2846,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['hash'],['hashCode']
Security,"eFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975840,access,access,975840,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"ePixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:6316,hash,hashCode,6316,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['hash'],['hashCode']
Security,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1125,hash,hashCode,1125,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['hash'],['hashCode']
Security,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; imageData - . setInputFile; public void setInputFile(File file); Deprecated.; Set the input file for the summary viewer. Parameters:; file - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html:1422,hash,hashCode,1422,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,1,['hash'],['hashCode']
Security,"ectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllTimes() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing all times where 'something happened' (observed or censored). getAllViewers() - Method in class qupath.lib.gui.QuPathGUI. Get an unmodifiable observable list of all viewers. getAllViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Get an observable list of viewers. getAlphaComposite() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getAnalysisTabPane() - Method in class qupath.lib.gui.QuPathGUI. Access the main tab pane shown in the QuPath window. getAncestorList(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). getAncestorTMACore(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. getAnnotatedActions(Object) - Static method in class qupath.lib.gui.actions.ActionTools. Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. getAnnotationObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all annotation objects in the hierarchy. getAnnotationObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current annotation objects. getArea() - Method in class qupath.lib.roi.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:327913,Access,Access,327913,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Access'],['Access']
Security,"ectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1827,hash,hashCode,1827,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['hash'],['hashCode']
Security,"ed Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image with any stains. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image. OTHER; public static final ImageData.ImageType OTHER; Other image type, not covered by any of the alternatives above. UNSET; public static final ImageData.ImageType UNSET; Image type has not been set. Method Details. values; public static ImageData.ImageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:1876,hash,hashCode,1876,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html,1,['hash'],['hashCode']
Security,"ed, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; The image display to which the sliders are applied. See Also:. imageDisplayProperty(). disableMinMaxAdjustment; public BooleanProperty disableMinMaxAdjustmentProperty; Prevent the min and max sliders from being adjusted. See Also:. disableMinMaxAdjustmentProperty(). disableGammaAdjustment; public BooleanProperty disableGammaAdjustmentProperty; Prevent gamma from being adjusted. See Also:. disableGammaAdjustmentProperty(). selectedChannel; public ObjectProperty<ChannelDisplayInfo> selectedChannelProperty; The channel to which the sliders are applied.; This should be a channel found within #imageDisplayProperty(). See Also:. selectedChannelProperty(). maxValue; public DoubleProperty maxValueProperty; Value of the maximum slider. See Also:. maxValueProperty(). minValue; public DoubleP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:12784,hash,hashCode,12784,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['hash'],['hashCode']
Security,"edServerBuilder; deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers). Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. TransformedServerBuilder; extractChannels(int... channels). Extract specified channels for an image. TransformedServerBuilder; extractChannels(String... names). Extract specified channels for an image. TransformedServerBuilder; maxChannelProject(). Perform a maximum projection of the channels. TransformedServerBuilder; minChannelProject(). Perform a minimum projection of the channels. TransformedServerBuilder; reorderRGB(String order). Rearrange the channel order of an RGB image. TransformedServerBuilder; rotate(RotatedImageServer.Rotation rotation). Rotate the image, using an increment of 90 degrees. TransformedServerBuilder; transform(AffineTransform transform). Apply an AffineTransform to the server. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TransformedServerBuilder; public TransformedServerBuilder(ImageServer<BufferedImage> baseServer); Create a transformed ImageServer. Parameters:; baseServer - the initial server that will be transformed. Method Details. crop; public TransformedServerBuilder crop(ImageRegion region); Crop an specified region based on a bounding box. Parameters:; region - ; Returns:. transform; public TransformedServerBuilder transform(AffineTransform transform); Apply an AffineTransform to the server. ; Note that the transform must be invertible, otherwise and IllegalArgumentException will be thrown. Parameters:; transform - ; Returns:. deconvolveStains; public TransformedServerBuilder deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers); Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. Parameters:; stains - the stains to apply for color deconvolution; stai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html:2674,hash,hashCode,2674,javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,1,['hash'],['hashCode']
Security,"eded to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2552,hash,hashCode,2552,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['hash'],['hashCode']
Security,"eded to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2609,hash,hashCode,2609,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['hash'],['hashCode']
Security,"el for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may differ in future releases, and it is not guaranteed that all colors ; will be unique. If the colors must be exactly reproducible then it is better to specify them rather than to; depend on this method. Parameters:; channel - ; Returns:. getDefaultRGBChannels; public static List<ImageChannel> getDefaultRGBChannels(); Get default channel list for RGB images. Returns:. getDefaultChannelList; public static List<ImageChannel> getDefaultChannelList(int nChannels); Get default channel list for an image with a specified number of channels.; This is useful whenever no further channel name or color information is available. Parameters:; nChannels - ; Returns:. isTransparent; public boolean isTransparent(); Check if the color is 'transparent'; this is used for background/ignored channels. Returns:. getName; public String getName(); Name of the output channel. Returns:. getColor; public Integer getColor(); Color used to display the output channel. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html:4353,hash,hashCode,4353,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html,3,['hash'],['hashCode']
Security,"eleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSize. Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeight. Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidth. Preferred line width for the scalebar. static StringProperty; scriptsPath. Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeed. Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:6691,access,access,6691,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['access']
Security,"elerationProperty; public static BooleanProperty navigationAccelerationProperty(); Apply acceleration/deceleration effects when holding and releasing navigation key. Returns:; navigationAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:48831,access,access,48831,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['access']
Security,"elerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBooleanProperty readOnlyProperty; Property indicating whether QuPath is in 'read-only' mode. See Also:. isReadOnly(); setReadOnly(boolean); readOnlyProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. getImageData(); imageDataProperty(). project; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty; Read-only property representing the currently-open project. See Also:. getProject(); setProject(Project); projectProperty(). viewer; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty; Property representing the viewer currently active. See Also:. getViewer(); v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:10748,hash,hashCode,10748,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['hash'],['hashCode']
Security,"ementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:31023,access,access,31023,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1549,access,accessibleHelp,1549,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSliderPane();  . Method Summary. All MethodsInstance MethodsC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:1912,access,accessibleHelp,1912,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No local normalization. GAUSSIAN_MEAN_ONLY; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_ONLY; Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_VARIANCE; Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. Method Details. values; public static LocalNormalization.NormalizationType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LocalNormalization.NormalizationType valueOf(String name); Returns the enum constant of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:1766,hash,hashCode,1766,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,1,['hash'],['hashCode']
Security,"epresenting a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52987,access,access,52987,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"er; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:1844,hash,hashCode,1844,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['hash'],['hashCode']
Security,"er<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN; public static final UriUpdater.UriStatus UNKNOWN; URI status is unclear, e.g. because it does not refer to a file. Method Details. values; public static UriUpdater.UriStatus[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static UriUpdater.UriStatus valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:1648,hash,hashCode,1648,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,1,['hash'],['hashCode']
Security,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1510,hash,hashCode,1510,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['hash'],['hashCode']
Security,"erived 2+ classification, indicating moderate positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getThreePlus; public static PathClass getThreePlus(PathClass parentClass); Get a standalone or derived 3+ classification, indicating strong positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getNegative; public static PathClass getNegative(PathClass parentClass); Get a standalone or derived Negative classification. Parameters:; parentClass - parent classification (may be null); Returns:. getPositive; public static PathClass getPositive(PathClass parentClass); Get a standalone or derived Positive classification. Parameters:; parentClass - parent classification (may be null); Returns:. getSingleton; public static PathClass getSingleton(PathClass pathClass); Get the singleton PathClass that is equivalent to the PathClass provided.; ; This is important because there should only ever be one PathClass instance for ; any classification - and accessing PathClasses only via the getInstance() ; methods here should ensure that.; ; However, if receiving a PathClass from some other source then it is possible ; that the PathClass was created some other way and duplicates could emerge. ; Calling this method returns resolves that problem by returning the single instance ; that should be used.; ; This is significant if the PathClass has been created via Java deserialization, ; which skips the required use of getInstance() by default. Parameters:; pathClass - ; Returns:; either the input PathClass, or an equivalent that should be used. fromArray; public static PathClass fromArray(String... names); Get a PathClass from an array of individual names. Parameters:; names - ; Returns:; See Also:. fromCollection(Collection); getInstance(PathClass, String, Integer). readResolve; protected Object readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:16105,access,accessing,16105,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['access'],['accessing']
Security,"ers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. ImageServerMetadata. Class for storing primary ImageServer metadata fields. ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:25348,access,access,25348,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"ers. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1934,access,accessed,1934,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['access'],['accessed']
Security,"ers.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current batch processing batch.; Running a single script in isolation should be seen as batch processing ; with a batch size of 1. See Also:. Constant Field Values. BATCH_INDEX; public static final String BATCH_INDEX; Index of the current run when batch processing (starting at 0). See Also:. Constant Field Values. BATCH_LAST; public static final String BATCH_LAST; Boolean flag to indicate if the current script is the last in a batch. See Also:. Constant Field Values. BATCH_SAVE; public static final String BATCH_SAVE; Boolean flag to indicate whether changes to the image data should automatically be saved. See Also:. Constant Fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:1622,hash,hashCode,1622,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,1,['hash'],['hashCode']
Security,"ers.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2681,hash,hashCode,2681,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['hash'],['hashCode']
Security,"erver, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:2758,hash,hashCode,2758,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['hash'],['hashCode']
Security,ervers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570342,hasH,hasHelpText,570342,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hasH'],['hasHelpText']
Security,"es for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:6618,hash,hashCode,6618,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['hash'],['hashCode']
Security,"es. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1923,hash,hashCode,1923,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['hash'],['hashCode']
Security,"esents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final ImageServerMetadata.ChannelType DEFAULT; Default channel interpretation. This is true for most 'normal' images. FEATURE; public static final ImageServerMetadata.ChannelType FEATURE; Each channel represents a feature for a pixel classifier. PROBABILITY; public static final ImageServerMetadata.ChannelType PROBABILITY; Each channel represents a probability value, where it is assumed that there is only one true class per pixel. MULTICLASS_PROBABILITY; public static final ImageServerMetadata.ChannelType MULTICLASS_PROBABILITY; Each channel represents a probability value, where each pixel is potentially part of multiple classes. CLASSIFICATION; public static final ImageServerMetadata.ChannelType CLASSIFICATION; Each channel represents a classification, such as in a labelled image. DENSITY; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html:2258,hash,hashCode,2258,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,1,['hash'],['hashCode']
Security,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1513,hash,hashCode,1513,javadoc/docs/qupath/opencv/tools/Thinning.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html,1,['hash'],['hashCode']
Security,"eter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:4997,hasH,hasHelpText,4997,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,3,['hasH'],['hasHelpText']
Security,"eterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2494,hash,hashCode,2494,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['hash'],['hashCode']
Security,"ethod in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntPara",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569729,hash,hashCode,569729,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PropertiesLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage. public class PropertiesLanguage; extends ScriptLanguage; Class for the representation of properties and config files in QuPath.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PropertiesLanguage(). Constructor for a Java properties as a script editor language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PropertiesLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PropertiesLanguage; public PropertiesLanguage(); Constructor for a Java properties as a script editor language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PropertiesLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html:1356,hash,hashCode,1356,javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,1,['hash'],['hashCode']
Security,"ethods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAScoreImporter; public TMAScoreImporter(). Method Details. importFromCSV; public static int importFromCSV(File file,; PathObjectHierarchy hierarchy); throws IOException; Import TMA scores from a file into the TMAGrid of an object hierarchy. Parameters:; file - ; hierarchy - ; Returns:; Throws:; IOException. importFromCSV; public static int importFromCSV(String text,; PathObjectHierarchy hierarchy); Import TMA scores from a String into the TMAGrid of an object hierarchy. Parameters:; text - ; hierarchy - ; Returns:. parseNumeric; public static double[] parseNumeric(List<String> list,; boolean allOrNothing); Parse numeric values from a list of strings.; . Parameters:; list - list of strings containing the input text. Empty or null strings are treated as missing and returned as NaN.; allOrNothing - is true, the assumption is made that all values will be numeric or none of them will.; Consequently, if any non-missing,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:1960,hash,hashCode,1960,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html,1,['hash'],['hashCode']
Security,"ettings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:2280,Access,Access,2280,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['Access'],['Access']
Security,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:1757,hash,hashCode,1757,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,1,['hash'],['hashCode']
Security,"ex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nuc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1927,hash,hashCode,1927,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['hash'],['hashCode']
Security,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PlainStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler. All Implemented Interfaces:; ScriptStyler. public class PlainStyler; extends Object; implements ScriptStyler; Styling for plain text (which really means no styling). Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html:1139,hash,hashCode,1139,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,1,['hash'],['hashCode']
Security,"example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:3294,hash,hashCode,3294,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['hash'],['hashCode']
Security,"e opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:3153,hash,hashCode,3153,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,1,['hash'],['hashCode']
Security,"f the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:2502,access,accessible,2502,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['access'],['accessible']
Security,"fferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:2198,hash,hashCode,2198,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['hash'],['hashCode']
Security,"fs. Create multiple points within the same annotation when using the counting tool. MultiscaleFeatures - Class in qupath.opencv.tools. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures() - Constructor for class qupath.opencv.tools.MultiscaleFeatures;  ; MultiscaleFeatures.Hessian - Interface in qupath.opencv.tools. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D - Class in qupath.opencv.tools. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D - Class in qupath.opencv.tools. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature - Enum Class in qupath.opencv.tools. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder - Class in qupath.opencv.tools. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap - Class in qupath.opencv.tools. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. MultiscaleResultsBuilder() - Constructor for class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature>) - Constructor for class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Constructor prepared to calculate specified features. multitouchActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; MultitouchActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; MULTIVIEW_ADD_COLUMN - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions;  ; MULTIVIEW_ADD_ROW - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions;  ; MULTIVIEW_CLOSE_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; MULTIVIEW_GRID_1x1 - Variable in class qupath.lib.gui.act",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:702812,access,access,702812,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"g morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask); Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Parameters:; ipM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:2465,hash,hashCode,2465,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['hash'],['hashCode']
Security,"g the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle used to draw individual points in a point annotation (in pixels). static void; resetPreferences(). Reset the preferences to their defaults. static BooleanProperty; returnToMoveModeProperty(). Request that the GUI returns to using the PAN tool after a ROI is drawn. static boolean; savePreferences(). Save the preferences. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSizeProperty(). Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeightProperty(). Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidthProperty(). Preferred line width for the scalebar. static StringProperty; scriptsPathProperty(). Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeedProperty(). Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionModeProperty(). Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptionsProperty(). Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitleProperty(). Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptionsProperty(). Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDsProperty(). Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static Boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:20228,access,access,20228,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['access']
Security,"g; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. miss",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1478,hash,hashCode,1478,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,1,['hash'],['hashCode']
Security,"ge, PropertiesLanguage, XmlLanguage, YamlLanguage. public abstract class ScriptLanguage; extends Object; Abstract class to represent languages supported by the script editor. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; ScriptLanguage(String name,; String ext). Default constructor for a ScriptLanguage. protected ; ScriptLanguage(String name,; Collection<String> exts). Default constructor for a ScriptLanguage. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. Set<String>; getExtensions(). Get an unmodifiable set containing the possible extensions for this language. String; getName(). Get the name of this language. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ScriptLanguage; protected ScriptLanguage(String name,; Collection<String> exts); Default constructor for a ScriptLanguage. Parameters:; name - the language name; exts - all supported file extensions for this language, in the form .ext (lowercase). ScriptLanguage; protected ScriptLanguage(String name,; String ext); Default constructor for a ScriptLanguage. Parameters:; name - the language name; ext - the file extensions for this language, in the form .ext (lowercase). Method Details. getName; public String getName(); Get the name of this language. Returns:; name. getExtensions; public Set<String> getExtensions(); Get an unmodifiable set containing the possible extensions for this language. Returns:; extension array. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html:1560,hash,hashCode,1560,javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,1,['hash'],['hashCode']
Security,"geServerBuilder. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:1996,hash,hashCode,1996,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['hash'],['hashCode']
Security,"getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:5052,hash,hashCode,5052,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['hash'],['hashCode']
Security,"getZPosition, hasServer, hierarchyChanged, imageDataProperty, imagePointToComponentPoint, isImageDataChanging, isRotated, isShowing, isSpaceDown, paintComponent, paintViewer, removeViewerListener, repaint, repaintTimestamp, requestCancelDirection, requestDecelerate, requestStartMoving, requestStopMoving, requiresTileRegion, resetCustomPixelLayerOverlay, resetImageData, resetMinimumRepaintSpacingMillis, rotationProperty, selectedPathObjectChanged, setActiveTool, setBorderColor, setCenterPixelLocation, setCursor, setCustomPixelLayerOverlay, setDoFasterRepaint, setDownsampleFactor, setDownsampleFactor, setDownsampleFactor, setGamma, setImageData, setMagnification, setMinimumRepaintSpacingMillis, setRotation, setSelectedObject, setSelectedObject, setSpaceDown, setTPosition, setZPosition, tileAvailable, toString, tPositionProperty, updateCursor, zoomIn, zoomIn, zoomOut, zoomOut, zoomToFit, zPositionProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:4085,hash,hashCode,4085,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,1,['hash'],['hashCode']
Security,"gin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.LineCap FLAT; Flat cap. SQUARE; public static final DilateAnnotationPlugin.LineCap SQUARE; Square cap. Method Details. values; public static DilateAnnotationPlugin.LineCap[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static DilateAnnotationPlugin.LineCap valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html:1740,hash,hashCode,1740,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,1,['hash'],['hashCode']
Security,"gion,; ImageData<BufferedImage> imageData). Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. static void; quickShowImage(String name,; Roi roi,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static void; quickShowImage(String name,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static List<Roi>; readImageJRois(File file). Read ImageJ Rois from a .roi or a RoiSet.zip file. static void; setMemoryThreshold(double threshold);  ; static void; setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject). Set the name of an image based on a PathObject. static double; tryToParseMicrons(double value,; String unit). Based on a value and its units, try to get something suitable in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IJTools; public IJTools(). Method Details. setMemoryThreshold; public static void setMemoryThreshold(double threshold). Parameters:; threshold - - value in the interval ]0;1] defining the maximum remaining memory fraction an image can have ; when importing an image to ImageJ. isMemorySufficient; public static boolean isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData); throws Exception; Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. Parameters:; region - the requested region coming from; imageData - this BufferedImage; Returns:; true if the memory is sufficient; Throws:; Exception - either the fact that ImageJ cannot handle the image size or that the memory is insufficient. extractHyperstack; public static ImagePlus extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:8111,hash,hashCode,8111,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['hash'],['hashCode']
Security,"gui.actions.menus; Class ObjectsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions. Enclosing class:; ObjectsMenuActions. @ActionMenu(""Menu.Objects""); public class ObjectsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectsMenuActions.AnnotationActions; annotationActions;  ; final ObjectsMenuActions.DeleteActions; deleteActions;  ; final ObjectsMenuActions.LockActions; lockActions;  ; final org.controlsfx.control.action.Action; REFRESH_DUPLICATE_OBJECT_IDS;  ; final org.controlsfx.control.action.Action; REFRESH_OBJECT_IDS;  ; final ObjectsMenuActions.SelectActions; selectActions;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. deleteActions; @ActionMenu(""Menu.Objects.Delete""); public final ObjectsMenuActions.DeleteActions deleteActions. selectActions; @ActionMenu(""Menu.Objects.Select""); public final ObjectsMenuActions.SelectActions selectActions. lockActions; @ActionMenu(""Menu.Objects.Lock""); public final ObjectsMenuActions.LockActions lockActions. SHOW_OBJECT_DESCRIPTIONS; public final org.controlsfx.control.action.Action SHOW_OBJECT_DESCRIPTIONS. SEP_4; public final org.controlsfx.control.action.Action SEP_4. annotationActions; @ActionMenu(""Menu.Objects.Annotations""); public final ObjectsMenuActions.AnnotationActions annotationActions. REFRESH_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshIds""); public final org.controlsfx.control.action.Action REFRESH_OBJECT_IDS. REFRESH_DUPLICATE_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshDuplicateIds""); public final org.controlsfx.control.action.Action REFRESH_DUPLICATE_OBJECT_IDS. Constructor Det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html:1354,hash,hashCode,1354,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html:1340,hash,hashCode,1340,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,1,['hash'],['hashCode']
Security,"gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon depicting a ROI. Parameters:; roi - the region of interest; width - the preferred icon width; height - the preferred icon height; color - the icon (line) color; Returns:; a node that may be used as an icon resembling the shape of the ROI. createNode; public static Node createNode(int width,; int height,; IconFactory.PathIcons type); Create a node from a default icon glyph. Parameters:; width - preferred",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html:1398,hash,hashCode,1398,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html,1,['hash'],['hashCode']
Security,"g friendlyCompression). Get the CompressionType corresponding to the given input. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; supportsImage(PixelType pixelType,; int nChannels,; boolean isRGB). Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. String; toFriendlyString(). Get a friendlier string representation. static OMEPyramidWriter.CompressionType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.CompressionType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UNCOMPRESSED; public static final OMEPyramidWriter.CompressionType UNCOMPRESSED; No compression (faster to write, no loss of information, but large file sizes). DEFAULT; public static final OMEPyramidWriter.CompressionType DEFAULT; Default (QuPath will select compression option based on image size and type, may be lossless or lossy). JPEG; public static final OMEPyramidWriter.CompressionType JPEG; JPEG compression (only for single channel or RGB 8-bit images). J2K; public static final OMEPyramidWriter.CompressionType J2K; Lossless JPEG-2000 compression. J2K_LOSSY; public static final OMEPyramidWriter.CompressionType J2K_LOSSY; Lossy JPEG-2000 compression. LZW; public static final OMEPyramidWriter.CompressionType LZW; LZW compression. ZLIB; public static final OMEPyramidWriter.CompressionType ZLIB; ZLIB compres",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html:2668,hash,hashCode,2668,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,1,['hash'],['hashCode']
Security,"h.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.Smo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569143,hash,hashCode,569143,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,h.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has b,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570507,hasH,hasHelpText,570507,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hasH'],['hasHelpText']
Security,"h.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569892,hash,hashCode,569892,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"he control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3459,hash,hashCode,3459,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['hash'],['hashCode']
Security,"he measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of-range values should be excluded. Parameters:; excludeOutsideRange - . i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:2637,hash,hashCode,2637,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,1,['hash'],['hashCode']
Security,"he names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:2643,hash,hashCode,2643,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['hash'],['hashCode']
Security,"height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setMaxWidth; public static void setMaxWidth(double width",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:4011,hash,hashCode,4011,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['hash'],['hashCode']
Security,"height. LabeledImageServer.Builder; useAnnotations(). Use annotations for labels. LabeledImageServer.Builder; useCellNuclei(). Use cells rather than annotations for labels, requesting the nucleus ROI where available. LabeledImageServer.Builder; useCells(). Use cells rather than annotations for labels. LabeledImageServer.Builder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCells; public LabeledImageServer.Builder useCells(); Use cells rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCellNuclei; public LabeledImageServer.Builder useCellNuclei(); Use cells rather than annotations for labels, requesting the nucleus ROI where available.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useAnnotations; public LabeledImageServer.Builder useAnnotations(); Use annotations for labels. This is the default. Returns:; See Also:. useDetections().",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:5903,hash,hashCode,5903,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['hash'],['hashCode']
Security,"her this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569801,hash,hashCode,569801,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,hod in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570589,hasH,hasHelpText,570589,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hasH'],['hasHelpText']
Security,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1612,hash,hashCode,1612,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,1,['hash'],['hashCode']
Security,"hod; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion.; ; If no Rectangle is provided, a new one will be created. Parameters:; region - ; rect - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi); Create a Rectangle2D corresponding to bounding box of a ROI. Parameters:; roi - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi,; Rectangle2D rect); Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI.; ; If no Rectangle2D is provided, a new one will be created. Parameters:; roi - ; rect - ; Returns:. getBounds; public static Rectangle getBounds(ROI roi); Create a Rectangle corres",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html:1649,hash,hashCode,1649,javadoc/docs/qupath/lib/awt/common/AwtTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html,1,['hash'],['hashCode']
Security,"hodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition to a standard Menu. Parameters:; menuItems - existing list to which items",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:1645,hash,hashCode,1645,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html,1,['hash'],['hashCode']
Security,"hodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBitsPerPixel(). Number of bits per pixel. int; getBytesPerPixel(). Number of bytes per pixel. Number; getLowerBound(). Get a number representing the minimum value permitted by this type (may be negative). Number; getUpperBound(). Get a number representing the maximum value permitted by this type. boolean; isFloatingPoint(). Returns true if the type is a floating point representation. boolean; isSignedInteger(). Returns true if the type is a signed integer representation. boolean; isUnsignedInteger(). Returns true if the type is an unsigned integer representation. static PixelType; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UINT8; public static final PixelType UINT8; 8-bit unsigned integer. INT8; public static final PixelType INT8; 8-bit signed integer. UINT16; public static final PixelType UINT16; 16-bit unsigned integer. INT16; public static final PixelType INT16; 16-bit signed integer. UINT32; public static final PixelType UINT32; 32-bit unsigned integer (not supported by BufferedImage). INT32; public static final PixelType INT32; 32-bit signed integer. FLOAT32; public static final PixelType FLOAT32; 32-bit floating point. FLOAT64; public static final PixelType FLOAT64; 64-bit floating point. Method Details. values; public static PixelType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html:2279,hash,hashCode,2279,javadoc/docs/qupath/lib/images/servers/PixelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html,1,['hash'],['hashCode']
Security,"hrough this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:3458,hash,hashCode,3458,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['hash'],['hashCode']
Security,"htextfx.RichScriptEditorExtension. All Implemented Interfaces:; QuPathExtension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:1458,hash,hashCode,1458,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,1,['hash'],['hashCode']
Security,"ialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(). Deprecated.; Show the dialog. Optional<ButtonType>; showAndWait(). Deprecated.; Show the dialog. Dialogs.Builder; size(double width,; double height). Deprecated.; Specify the dialog height. Dialogs.Builder; title(String title). Deprecated.; Specify the dialog title. Dialogs.Builder; warning(). Deprecated.; Create a warning alert dialog. Dialogs.Builder; width(double width). Deprecated.; Specify the dialog width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Deprecated. Method Details. title; public Dialogs.Builder title(String title); Deprecated.; Specify the dialog title. Parameters:; title - dialog title; Returns:; this builder. headerText; public Dialogs.Builder headerText(String header); Deprecated.; Specify the dialog header text.; This is text that is displayed prominently within the dialog. Parameters:; header - dialog header; Returns:; this builder; See Also:. contentText(String). contentText; public Dialogs.Builder contentText(String content); Deprecated.; Specify the dialog content text.; This is text that is displayed within the dialog. Parameters:; content - dialog content text; Returns:; this builder; See Also:. headerText(String). content; public Dialogs.Builder content(Node content); Deprecated.; Specify a Node to display within the dialog. Parameters:; content - dialog content; Returns:; this builder; See Also:. contentText(St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:3017,hash,hashCode,3017,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['hash'],['hashCode']
Security,ib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageD,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570172,hash,hashCode,570172,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"ibration cal). Specify pixel calibration, which is used to calibrate the x and y coordinates. DelaunayTools.Builder; centroids(). Specify that the triangulation should be based on ROI centroids. DelaunayTools.Builder; coordinateExtractor(Function<PathObject,Collection<Coordinate>> coordinateExtractor). Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. DelaunayTools.Builder; preferNucleus(boolean prefer). Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). DelaunayTools.Builder; roiBounds(). Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. DelaunayTools.Builder; roiBounds(double densify,; double erosion). Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. calibration; public DelaunayTools.Builder calibration(PixelCalibration cal); Specify pixel calibration, which is used to calibrate the x and y coordinates. Parameters:; cal - the calibration to use; Returns:; this builder. centroids; public DelaunayTools.Builder centroids(); Specify that the triangulation should be based on ROI centroids. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(); Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(double densify,; double erosion); Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Parameters:; densify - how much to 'densify' the coordinates; recommended default value is 4.0 (assuming uncalibrated pixels).; Decreasing the value will give a denser (and slower) triangulati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html:1871,hash,hashCode,1871,javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,1,['hash'],['hashCode']
Security,"idScaleMicrons;  ; final DoubleProperty; gridSpacingX;  ; final DoubleProperty; gridSpacingY;  ; final BooleanProperty; interpolateBilinear;  ; final BooleanProperty; invertScrolling;  ; final BooleanProperty; invertZSlider;  ; final BooleanProperty; iseScrollGestures;  ; final BooleanProperty; keepDisplaySettings;  ; final ObjectProperty<PathPrefs.FontSize>; locationFontSize;  ; final BooleanProperty; navigationAcceleration;  ; final IntegerProperty; navigationSpeed;  ; final ObjectProperty<PathPrefs.FontSize>; scalebarFontSize;  ; final ObjectProperty<FontWeight>; scalebarFontWeight;  ; final DoubleProperty; scalebarLineWidth;  ; final IntegerProperty; scrollSpeed;  ; final BooleanProperty; skipMissingCores;  ; final BooleanProperty; useRotateGestures;  ; final BooleanProperty; useZoomGestures;  . Constructor Summary; Constructors. Constructor; Description; ViewerPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. backgroundColor; @ColorPref(""Prefs.Viewer.backgroundColor""); public final IntegerProperty backgroundColor. alwaysPaintSelected; @BooleanPref(""Prefs.Viewer.alwaysPaintSelected""); public final BooleanProperty alwaysPaintSelected. keepDisplaySettings; @BooleanPref(""Prefs.Viewer.keepDisplaySettings""); public final BooleanProperty keepDisplaySettings. interpolateBilinear; @BooleanPref(""Prefs.Viewer.interpolateBilinear""); public final BooleanProperty interpolateBilinear. autoSaturationPercent; @DoublePref(""Prefs.Viewer.autoSaturationPercent""); public final DoubleProperty autoSaturationPercent. invertZSlider; @BooleanPref(""Prefs.Viewer.invertZSlider""); public final BooleanProperty invertZSlider. scrollSpeed; @IntegerPref(""Prefs.Viewer.scrollSpeed""); public final IntegerProperty scrollSpeed. navigationSpeed; @IntegerPref(""Prefs.Viewer.navigationSpeed""); public final IntegerProperty navigationSpeed. navigationAcceleration; @Boolea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html:1983,hash,hashCode,1983,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,1,['hash'],['hashCode']
Security,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2383,hash,hashCode,2383,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,1,['hash'],['hashCode']
Security,"ied opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; scaleColor(Color color,; double factor). Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCach",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:2884,hash,hashCode,2884,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['hash'],['hashCode']
Security,"iew; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor.Builder. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor.Builder. Enclosing class:; FeaturePreprocessor. public static class FeaturePreprocessor.Builder; extends Object; Builder to create a custom FeaturePreprocessor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; FeaturePreprocessor; build(Mat trainingData,; boolean applyToTraining). Build a FeaturePreprocessor. FeaturePreprocessor.Builder; missingValue(double missingValue);  ; FeaturePreprocessor.Builder; normalize(Normalization normalization). Define normalization type. FeaturePreprocessor.Builder; pca(double retainedVariance,; boolean pcaNormalize). Perform PCA to reduce features. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. normalize; public FeaturePreprocessor.Builder normalize(Normalization normalization); Define normalization type. Parameters:; normalization - ; Returns:; this builder. missingValue; public FeaturePreprocessor.Builder missingValue(double missingValue). Parameters:; missingValue - ; Returns:; this builder. pca; public FeaturePreprocessor.Builder pca(double retainedVariance,; boolean pcaNormalize); Perform PCA to reduce features. Parameters:; retainedVariance - retained variance, used to determine how many features to keep; pcaNormalize - if true, normalize the projected features; Returns:; this builder. build; public FeaturePreprocessor build(Mat trainingData,; boolean applyToTraining); Build a FeaturePreprocessor.; The training data is expected to contain samples as rows and features as columns. Parameters:; trainingData - ; applyToTraining - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html:1180,hash,hashCode,1180,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,1,['hash'],['hashCode']
Security,"iewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:1521,hash,hashCode,1521,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,1,['hash'],['hashCode']
Security,"if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3489,hash,hashCode,3489,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['hash'],['hashCode']
Security,"ileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an ellipse ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjects; public PathObjects(). Method Details. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified annotation object with a specified measurement list.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; measurements - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass); Create a classified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi); Create an unclassified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:3113,hash,hashCode,3113,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['hash'],['hashCode']
Security,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsPro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:2379,hash,hashCode,2379,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['hash'],['hashCode']
Security,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2312,hash,hashCode,2312,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,2,['hash'],['hashCode']
Security,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:2314,hash,hashCode,2314,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,3,['hash'],['hashCode']
Security,"implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Details. getDefaultValue; S getDefaultValue(); Get a default value to use if the Parameter has not been otherwise set. Returns:. setValue; boolean setValue(S value); Set the Parameter to have a specified value. Parameters:; value - ; Returns:. setStringLastValue; boolean setStringLastValue(Locale locale,; String value); Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. resetValue; void resetValue(); Set last value to null (so default can be used). getValue; S getValue(); Get the current set value (may be null). Returns:; See Also:. setValue(S); getValueOrDefault(). getValueOrDefault; S getValueOrDefault(); Get the current set value, or any default if no value has been set. Returns:; See Also:. setValue(S); getValue(). getPrompt; String getPrompt(); Get some prompt text that may be displayed to a user. Returns:. isValidInput; boolean isValidInput(S value); Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setHidden; void setHidden(boolean hidden); Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Parameters:; hidden - . isHidden; boolean isHidden(); Test is the 'hidden' flag is set for the parameter. Returns:. duplicate; Parameter<S> duplicate(); Create a new Parameter with the same text and value. Returns:. hasHelpText; boolean hasHelpText(); Query whether getHelpText() returns a meaningful String (as opposed to null). Returns:. getHelpText; String getHelpText(); Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html:3616,hasH,hasHelpText,3616,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,2,['hasH'],['hasHelpText']
Security,"inderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1778,hash,hashCode,1778,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['hash'],['hashCode']
Security,"information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2413,hash,hashCode,2413,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['hash'],['hashCode']
Security,"ing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); Get the requested pixel size for the density map. This may be null if an appropriate resolution can be generated automatically. Returns:. getDensityType; public DensityMaps.DensityMapType getDensityType(); Get the normalization type of the density map. Returns:. getMainObjectFilter; public PathObjectPredicates.PathObjectPredicate getMainObjectFilter(); Get the primary object filter. Returns:. getSecondaryObjectFilters; public Map<String,PathObjectPredicates.PathObjectPredicate> getSecondaryObjectFilters(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html:1506,hash,hashCode,1506,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,1,['hash'],['hashCode']
Security,"ing the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3539,hash,hashCode,3539,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['hash'],['hashCode']
Security,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1770,Validat,Validation,1770,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,"input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB value from specified input values, clipping to the range 0-255. static int; packRGB(int r,; int g,; int b). Make a packed RGB value from specified input values. static int; red(int rgb). Extract the 8-bit red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green compo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:3900,hash,hashCode,3900,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['hash'],['hashCode']
Security,"ion; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public DisplaySettingUtils(). Method Details. displayToSettings; public static ImageDisplaySettings displayToSettings(ImageDisplay display,; String name); Create a new image display settings object from the image display.; This is typically used to save the settings to a file. Parameters:; display - ; name - ; Returns:. settingsCompatibleWithDisplay; public static boolean settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings); Check if the settings are compatible with the display.; This is true if the number and names of the channels match. Parameters:; display - ; settings - ; Returns:. applySettingsToDisplay; public static boolean applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings); Apply the settings to the display, if they are compatible. Parameters:; display - ; settings - ; Returns:; true if the settings were applied, false otherwise. p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html:1893,hash,hashCode,1893,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,1,['hash'],['hashCode']
Security,"ion<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupported",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2835,hash,hashCode,2835,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['hash'],['hashCode']
Security,"iption; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(). Get the width of the full-resolution image (level 0). int; getLevelCount(). Get the total number of pyramid levels. long; getLevelHeight(int level). Get the image height at the specified level. long; getLevelWidth(int level). Get the image width at the specified level. Map<String,String>; getProperties(). Get an unmodifiable map of all available properties. void; paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROPERTY_NAME_COMMENT; public static final String PROPERTY_NAME_COMMENT. See Also:. Constant Field Values. PROPERTY_NAME_VENDOR; public static final String PROPERTY_NAME_VENDOR. See Also:. Constant Field Values. PROPERTY_NAME_QUICKHASH1; public static final String PROPERTY_NAME_QUICKHASH1. See Also:. Constant Field Values. PROPERTY_NAME_BACKGROUND_COLOR; public static final String PROPERTY_NAME_BACKGROUND_COLOR. See Also:. Constant Field Values. PROPERTY_NAME_OBJECTIVE_POWER; public static final String PROPERTY_NAME_OBJECTIVE_POWER. See Also:. Constant Field Values. PROPERTY_NAME_MPP_X; public static final String PROPERTY_NAME_MPP_X. See Also:. Constant Field Values. PROPERTY_NAME_MPP_Y; public static final String PROPERTY_NAME_MPP_Y. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_X; public static final String PROPERTY_NAME_BOUNDS_X. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_Y; public static final Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:2530,hash,hashCode,2530,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,1,['hash'],['hashCode']
Security,"irect Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.Completion... completions). addCompletions; protected void addCompletions(Collection<? extends AutoCompletions.Completion> completions). getCompletions; public List<AutoCompletions.Completion> getCompletions(String text,; int pos); Description copied from interface: ScriptAutoCompletor; Get a list of possible auto-completions for the given text ; with the caret at the specified position. Specified by:; getCompletions in interface ScriptAutoCompletor; Parameters:; text - the full text; pos - the current caret position; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html:1567,hash,hashCode,1567,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,1,['hash'],['hashCode']
Security,"is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:5169,hasH,hasHelpText,5169,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,6,['hasH'],['hasHelpText']
Security,"isabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.MultitouchActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultitouchActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; GESTURES_ALL;  ; final org.controlsfx.control.action.Action; GESTURES_NONE;  ; final org.controlsfx.control.action.Action; GESTURES_ROTATE;  ; final org.controlsfx.control.action.Action; GESTURES_SCROLL;  ; final org.controlsfx.control.action.Action; GESTURES_ZOOM;  ; final org.controlsfx.control.action.Action; SEP_9;  . Constructor Summary; Constructors. Constructor; Description; MultitouchActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GESTURES_ALL; @ActionConfig(""Action.View.Multitouch.allOn""); public final org.controlsfx.control.action.Action GESTURES_ALL. GESTURES_NONE; @ActionConfig(""Action.View.Multitouch.allOff""); public final org.controlsfx.control.action.Action GESTURES_NONE. SEP_9; public final org.controlsfx.control.action.Action SEP_9. GESTURES_SCROLL; @ActionConfig(""Action.View.Multitouch.scroll""); public final org.controlsfx.control.action.Action GESTURES_SCROLL. GESTURES_ZOOM; @ActionConfig(""Action.View.Multitouch.zoom""); public final org.controlsfx.control.action.Action GESTURES_ZOOM. GESTURES_ROTATE; @ActionConfig(""Action.View.Multitouch.rotate""); public final org.controlsfx.control.action.Action GESTURES_ROTATE. Constructor Details. MultitouchActions; public MultitouchActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html:1220,hash,hashCode,1220,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html,1,['hash'],['hashCode']
Security,"ith 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static AffineTransform; fromScale(double scaleX,; double scaleY). Create an affine transform representing scaling, optionally using a different scale for x and y. static AffineTransform; identity(). Create an affine transform representing the identity transform. static AffineTransformation; toJTS(AffineTransform transform). Create a Java Topology Suite affine transformation from a Java affine transform. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AffineTransforms; public AffineTransforms(). Method Details. from2D; public static AffineTransform from2D(double[][] mat); throws IllegalArgumentException; Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong shape. fromRows; public static AffineTransform fromRows(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong length. fromColumns; public static AffineTransform fromColumns(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. Parameters:; mat - ; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:2478,hash,hashCode,2478,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,1,['hash'],['hashCode']
Security,"ithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public static ImagePlane getDefaultPlane(); Returns an ImagePlane with channel -1, z of 0 and t of 0.; ; Use of this method is discouraged; it is appropriate only for 2D images. Returns:. getPlaneWithChannel; public static ImagePlane getPlaneWithChannel(ROI roi); Returns an ImagePlane with channel, z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ROI roi); Returns an ImagePlane with channel -1, and z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ImageRegion region); Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:2708,hash,hashCode,2708,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,1,['hash'],['hashCode']
Security,"kage qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Other classes that make use of thread pools can use this to help balance mul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:1323,hash,hashCode,1323,javadoc/docs/qupath/lib/common/ThreadTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html,1,['hash'],['hashCode']
Security,"ks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class YamlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.YamlLanguage. public class YamlLanguage; extends ScriptLanguage; Class for the representation of YAML syntax in QuPath. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's classes). Constructor Summary; Constructors. Constructor; Description; YamlLanguage(). Constructor for YAML language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static YamlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. YamlLanguage; public YamlLanguage(); Constructor for YAML language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static YamlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html:1305,hash,hashCode,1305,javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,1,['hash'],['hashCode']
Security,"l ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. static Roi[]; labelsToConnectedROIs(ImageProcessor ipLabels,; int n). Create ROIs from labels in an image. static List<PolygonRoi>; labelsToFilledRoiList(ImageProcessor ipLabels,; boolean conn8). Convert a labelled image into a list of PolygonRois by tracing. static PolygonRoi[]; labelsToFilledROIs(ImageProcessor ipLabels,; int n). Convert a labelled image into a list of PolygonRois by tracing. static int; removeByAreas(ByteProcessor bp,; double minPixels,; double maxPixels,; boolean conn8). Remove objects containing < minPixels or > maxPixels. static void; removeSmallAreas(ByteProcessor bp,; double minPixels,; boolean conn8). Remove objects having small areas, defined in terms of pixels. static PolygonRoi; wandToRoi(Wand wand). Convert a traced outline from the ImageJ Wand into a PolygonRoi. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiLabeling; public RoiLabeling(). Method Details. findDirectionalMaxima; public static ByteProcessor findDirectionalMaxima(ImageProcessor ip); Create a binary image for pixels that have a higher value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. findDirectionalMinima; public static ByteProcessor findDirectionalMinima(ImageProcessor ip); Create a binary image for pixels that have a lower value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. getFilledPolygonROIsExperimental; public static List<PolygonRoi> getFilledPolygonROIsExperimental(ImageProcessor ip); Experimental 8-connected ROI creation; non-zero pixels considered within objects; ; TODO: I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:3306,hash,hashCode,3306,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,1,['hash'],['hashCode']
Security,"lass to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel); Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Parameters:; mainChannel - the main channel to display (colormap will be used); alphaChannel - an optional alpha channel (colormap will be ignored); Returns:; the ColorModels.ColorModelBuilder. createBand; public static ColorModels.DisplayBand createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay); Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). Parameters:; colorMapName - name of the ColorMaps.ColorMap; band - image band (the BufferedImage term - QuPath often refers to this as a channel); minDisplay - value associated with the first e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html:1769,hash,hashCode,1769,javadoc/docs/qupath/lib/color/ColorModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html,2,['hash'],['hashCode']
Security,"lass with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic glob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52709,access,accessing,52709,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['accessing']
Security,"lassification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:1769,hash,hashCode,1769,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,1,['hash'],['hashCode']
Security,"layed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Boolean; getValue(). Get the current set value (may be null). Boolean; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:2181,hash,hashCode,2181,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['hash'],['hashCode']
Security,"ld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; minThreshold - minimum threshold; labels will not expand into pixels with values below the threshold; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:1205,hash,hashCode,1205,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,1,['hash'],['hashCode']
Security,"lder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; OpenslideServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:1933,hash,hashCode,1933,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,1,['hash'],['hashCode']
Security,"le boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space).; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - The ImageServer from which the tiles would be requested; clipShape - The requested shape, defined in the full-resolution image space; downsampleFactor - The downsampleFactor determining the resolution at which tiles should be requested; zPosition - The zPosition from which to request tiles; tPosition - The tPosition from which to request tiles; regions - regions The ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:1746,hash,hashCode,1746,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,1,['hash'],['hashCode']
Security,"le in the full resolution image. int; getImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution image. int; getImageY(). Get the y-coordinate of the bounding box for this tile in the full resolution image. int; getLevel(). Get the resolution level. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). RegionRequest; getRegionRequest(). Get the RegionRequest that this tile represents. int; getT(). Get the time point index for this request. int; getTileHeight(). Get the height of the bounding box for this tile at the tile resolution. int; getTileWidth(). Get the width of the bounding box for this tile at the tile resolution. int; getTileX(). Get the x-coordinate of the bounding box for this tile at the tile resolution. int; getTileY(). Get the y-coordinate of the bounding box for this tile at the tile resolution. int; getZ(). Get the z-slice index for this request. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static TileRequest createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion); Create a new tile request for a specified region and resolution level of an image.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead ; to get the tiles that are actually available for an image. Parameters:; server - ; level - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). createInstance; public static TileRequest createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion); Create a new tile request for a specified region, downsample and resolution level.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead.; ; In cases where a new TileRequest is necessary, it is better to use ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:3068,hash,hashCode,3068,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['hash'],['hashCode']
Security,"le, Parameter<String>. public class EmptyParameter; extends Object; Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; isTitle;  ; protected String; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<String>; duplicate(). Create a new Parameter with the same text and value. String; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isTitle(). Returns true if the parameter should be considered a title. boolean; isValidInput(String value). Always returns false. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:1491,hasH,hasHelpText,1491,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['hasH'],['hasHelpText']
Security,"le; getMinValue(). Get the minimum of all the values being histogrammed. double; getNormalizedCountsForBin(int ind). Get the normalized histogram count for the specified bin. double; getStdDev(). Get the standard deviation of all the values being histogrammed. double; getSum(). Get the sum of all the values being histogrammed. double; getVariance(). Get the variance of all the values being histogrammed. boolean; isInteger(). Check if the histogram has been generated from integer values only. static Histogram; makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins). Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. int; nBins(). Total number of histogram bins. long; nMissingValues(). Number of NaNs in the input array. long; nValues(). Number of values represented in the histogram (i.e. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Histogram; public Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be computed; nBins - number of histogram bins (will be number of edges - 1); minEdge - the minimum (edge) value to include in the histogram, or Double.NaN (to use the data minimum); maxEdge - the maximum (edge) value to include in the histogram, or Double.NaN (to use the data maximum). Histogram; public Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be com",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:3956,hash,hashCode,3956,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html,1,['hash'],['hashCode']
Security,"lic class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1504,hash,hashCode,1504,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,1,['hash'],['hashCode']
Security,"lic class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1495,hash,hashCode,1495,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['hash'],['hashCode']
Security,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:6151,sanitiz,sanitize,6151,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['sanitiz'],['sanitize']
Security,"links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1121,access,accessed,1121,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,1,['access'],['accessed']
Security,"lizable, TMAGrid. public class DefaultTMAGrid; extends Object; implements TMAGrid; Default implementation of a TMAGrid. Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; create(List<TMACoreObject> cores,; int gridWidth). Create a new TMAGrid based on a list of cores and grid width. int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:1485,hash,hashCode,1485,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,1,['hash'],['hashCode']
Security,"lize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException. buildServer; public static ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws IOException; Build a ImageServer f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3941,access,accessed,3941,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['access'],['accessed']
Security,"ll Implemented Interfaces:; Serializable, ScriptableWorkflowStep, WorkflowStep. public class RunSavedClassifierWorkflowStep; extends Object; implements ScriptableWorkflowStep; WorkflowStep for running a saved PathObjectClassifier. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; RunSavedClassifierWorkflowStep(String classifierPath). Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String name,; String classifierPath). Create a workflow step to run a classifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String name,; String classifierPath); Create a workflow step to run a classifier. Parameters:; name - step name for display, to identify the purpose of the step (not the classifier); classifierPath - path to the serialized classifier. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String classifierPath); Constructor, taking the path to the serialized classifier. Parameters:; classifierPath - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html:1498,hash,hashCode,1498,javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,1,['hash'],['hashCode']
Security,"ll the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(); Get the static instance of the current QuPath GUI. Returns:. openSavedData; public boolean ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17258,Access,Access,17258,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['Access'],['Access']
Security,"losing class:; FileMenuActions. public class FileMenuActions.ProjectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CHECK_URIS;  ; final org.controlsfx.control.action.Action; EXPORT_IMAGE_LIST;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES_LEGACY;  ; final org.controlsfx.control.action.Action; METADATA;  ; final org.controlsfx.control.action.Action; PROJECT_CLOSE;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_22;  . Constructor Summary; Constructors. Constructor; Description; ProjectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_CLOSE; @ActionConfig(""Action.File.Project.closeProject""); public final org.controlsfx.control.action.Action PROJECT_CLOSE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. IMPORT_IMAGES; @ActionConfig(""Action.File.Project.addImages""); public final org.controlsfx.control.action.Action IMPORT_IMAGES. EXPORT_IMAGE_LIST; @ActionConfig(""Action.File.Project.exportImageList""); public final org.controlsfx.control.action.Action EXPORT_IMAGE_LIST. SEP_2; public final org.controlsfx.control.action.Action SEP_2. METADATA; @ActionConfig(""Action.File.Project.editMetadata""); public final org.controlsfx.control.action.Action METADATA. CHECK_URIS; @ActionConfig(""Ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html:1497,hash,hashCode,1497,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html,1,['hash'],['hashCode']
Security,"ls and classifications. int; getInputHeight(). Requested height of input image, or -1 if the classifier is not fussy. int; getInputNumChannels(). Requested number of channels in input image; default is 3 (consistent with assuming RGB). int; getInputPadding(). Requested input padding (above, below, left and right). PixelCalibration; getInputResolution(). Requested pixel size for input. int; getInputWidth(). Requested width of input image, or -1 if the classifier is not fussy. List<ImageChannel>; getOutputChannels(). List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. PixelType; getOutputPixelType(). Pixel type of output; default is null indicating the pixel type is unknown. ImageServerMetadata.ChannelType; getOutputType(). Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputResolution; public PixelCalibration getInputResolution(); Requested pixel size for input. Returns:. getInputPadding; public int getInputPadding(); Requested input padding (above, below, left and right). Returns:. getInputWidth; public int getInputWidth(); Requested width of input image, or -1 if the classifier is not fussy. Returns:. getInputHeight; public int getInputHeight(); Requested height of input image, or -1 if the classifier is not fussy. Returns:. getInputNumChannels; public int getInputNumChannels(); Requested number of channels in input image; default is 3 (consistent with assuming RGB). Returns:. getOutputType; public ImageServerMetadata.ChannelType getOutputType(); Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. getOutputPixelType; public PixelType getOutputPixelType(); Pixel type of output; default is null indicating the pixel type is unknown. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html:1959,hash,hashCode,1959,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,1,['hash'],['hashCode']
Security,"lter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is rec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:2301,hash,hashCode,2301,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['hash'],['hashCode']
Security,"lugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2681,hash,hashCode,2681,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['hash'],['hashCode']
Security,"m of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. Original; public static final ColorTransformer.ColorTransformMethod Original; Original image. Red; public static final ColorTransformer.ColorTransformMethod Red; Red channel only. Green; public static final ColorTransformer.ColorTransformMethod Green; Green channel only. Blue; public static final ColorTransformer.ColorTransformMethod Blue; Blue channel only. Red_OD; public static final ColorTransformer.ColorTransformMethod Red_OD; Red channel optical densities. Green_OD; public static final ColorTransformer.ColorTransformMethod Green_OD; Green channel optical densities. Blue_OD; public static final ColorTransformer.ColorTransformMethod Blue_OD; Blue channel optical densities. RGB_mean; public static final ColorTransformer.ColorTransformMethod RGB_mean; Mean of red, green and blue channels. Hue; public static final ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:3475,hash,hashCode,3475,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['hash'],['hashCode']
Security,"ma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:1397,hash,hashCode,1397,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,1,['hash'],['hashCode']
Security,"mage ; that should have opacity based upon pixel values. static DoubleToIntFunction; createLinearFunction(PixelType type). Create a linear function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. static ColorModel; getDummyColorModel(int bpp). Get a dummy ColorModel instance. static IndexColorModel; getIndexedClassificationColorModel(Map<Integer,PathClass> channels). Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. static ColorModel; getProbabilityColorModel32Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. static ColorModel; getProbabilityColorModel8Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIndexedClassificationColorModel; public static IndexColorModel getIndexedClassificationColorModel(Map<Integer,PathClass> channels); Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. Parameters:; channels - ; Returns:. createIndexedColorModel; public static ColorModel createIndexedColorModel(Map<Integer,Integer> labelColors,; boolean includeAlpha); Create an indexed colormap for a labelled (indexed color) image. Parameters:; labelColors - map with integer labels as keys and packed (A)RGB colors as values.; includeAlpha - if true, allow alpha values to be included in the colormap; Returns:. createIndexedColorModel8bit; public static IndexColorModel createIndexedColorModel8bit(ColorMaps.ColorMap map); Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. Parameters:; map - ; Returns:. createIndexedColorModel8bit; public static IndexColorModel createIndexedCol",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html:3752,hash,hashCode,3752,javadoc/docs/qupath/lib/color/ColorModelFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html,1,['hash'],['hashCode']
Security,"mageData, setDefaultProject, setDetectionIntensityClassifications, setDetectionIntensityClassifications, setImageType, setImageType, setIntensityClassifications, setIntensityClassifications, setIntensityClassifications, setIntensityClassificationsForSelected, setPixelSizeMicrons, setPixelSizeMicrons, setPixelSizeMicrons, setSelectedObject, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSpecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12074,hash,hashCode,12074,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['hash'],['hashCode']
Security,"mary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply normalization prior to returning the values. Parameters:; extractor - or",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:1638,hash,hashCode,1638,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,1,['hash'],['hashCode']
Security,"mber,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:1818,hash,hashCode,1818,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html,1,['hash'],['hashCode']
Security,"mbination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5043,access,accessible,5043,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['access'],['accessible']
Security,"meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:2524,hash,hashCode,2524,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,1,['hash'],['hashCode']
Security,"measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7544,Access,Access,7544,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['Access'],['Access']
Security,mmands.ml.BoundaryStrategy; qupath.lib.gui.commands.BrightnessContrastCommand (implements java.lang.Runnable); qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. qupath.process.gui.WandToolEventHandler. qupath.lib.awt.common.BufferedImageTools; qupath.lib.gui.BuildInfo; qupath.process.gui.commands.CellIntensityClassificationCommand (implements java.lang.Runnable); qupath.lib.objects.CellTools; qupath.lib.display.settings.ChannelColor; qupath.lib.display.settings.ChannelSettings; qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.plugins.parameters.ChoiceParameter<S>; qupath.process.gui.commands.ml.ClassificationResolution; qupath.lib.gui.actions.menus.ClassifyMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.scripting.richtextfx.CodeAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.lib.color.ColorDeconvMatrix3x3; qupath.lib.color.ColorDeconvolutionHelper; qupath.lib.color.ColorDeconvolutionStains (implements java.io.Externalizable); qupath.lib.color.ColorMaps; qupath.lib.color.ColorModelFactory; qupath.lib.gui.images.stores.ColorModelRenderer (implements qupath.lib.gui.images.stores.ImageRenderer); qupath.lib.analysis.heatmaps.ColorModels; qupath.lib.color.ColorModels; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; qupath.lib.color.ColorModels.DisplayBand; qupath.lib.common.ColorTools; qupath.lib.color.ColorToolsAwt; qupath.lib.gui.tools.ColorToolsFX; qupath.lib.color.ColorTransformer; qupath.lib.images.servers.ColorTransforms; qupath.lib.gui.tools.CommandFinderTools; qupath.lib.gui.tools.CommandFinderTools.CommandEntry; qu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:9972,secur,security,9972,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['secur'],['security']
Security,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1374,hash,hashCode,1374,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,1,['hash'],['hashCode']
Security,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.ZoomActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.ZoomActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; ZOOM_1;  ; final org.controlsfx.control.action.Action; ZOOM_10;  ; final org.controlsfx.control.action.Action; ZOOM_100;  ; final org.controlsfx.control.action.Action; ZOOM_400;  ; final org.controlsfx.control.action.Action; ZOOM_IN;  ; final org.controlsfx.control.action.Action; ZOOM_OUT;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_400; @ActionConfig(""Action.View.Zoom.400""); public final org.controlsfx.control.action.Action ZOOM_400. ZOOM_100; @ActionConfig(""Action.View.Zoom.100""); public final org.controlsfx.control.action.Action ZOOM_100. ZOOM_10; @ActionConfig(""Action.View.Zoom.10""); public final org.controlsfx.control.action.Action ZOOM_10. ZOOM_1; @ActionConfig(""Action.View.Zoom.1""); public final org.controlsfx.control.action.Action ZOOM_1. SEP_3; public final org.controlsfx.control.action.Action SEP_3. ZOOM_IN; @ActionConfig(""Action.View.Zoom.zoomIn""); @ActionIcon(ZOOM_IN); public final org.controlsfx.control.action.Action ZOOM_IN. ZOOM_OUT; @ActionConfig(""Action.View.Zoom.zoomOut""); @ActionIcon(ZOOM_OUT); @ActionAccelerator(""-""); public final org.controlsfx.control.action.Action ZOOM_OUT. ZOOM_TO_FIT; @ActionConfig(""Action.View.Zoom.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html:1196,hash,hashCode,1196,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,1,['hash'],['hashCode']
Security,"mon.GeneralTools. Split new lines (in a cross-platform way... splitMerge(Collection<? extends ImageOp>) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMerge(ImageOp...) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMultiply(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. splitNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Get a list containing the names of all constituent parts of a PathClass. SplitProjectTrainingCommand - Class in qupath.process.gui.commands. Divide a project into training, validation and test sets but flagging individual image entries. SplitProjectTrainingCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SplitProjectTrainingCommand. Constructor. splitROI(ROI) - Static method in class qupath.lib.roi.RoiTools. Split a multi-part ROI into separate pieces. splitSelectedAnnotationAreasByLines() - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitSelectedAnnotationAreasByLines(double, boolean) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSelectedAnnotationAreasByLines(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:991836,validat,validation,991836,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['validat'],['validation']
Security,"n of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:3124,hash,hashCode,3124,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['hash'],['hashCode']
Security,"n,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of the action with an optional base menu. Parameters:; action - the action to update; element - the annotated element (often a Field).; baseMenu - prepended to any ActionMenu actions. This makes it easier to insert items in sub-menus ; without needing to specify the full menu pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6684,access,accessible,6684,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['access'],['accessible']
Security,"n; requestParallelization(). Returns true if multiple readers may be created for different threads, to enable parallel image reading. void; setBioformatsEnabled(boolean bioformatsEnabled). Set whether Bio-Formats should be enabled or disabled (in favor of other readers). void; setFilesOnly(boolean filesOnly). Set whether Bio-Formats should support only local files (rather than any URL). void; setMemoizationTimeMillis(int memoizationTimeMillis). Set the number of milliseconds that must elapse when opening an image before a memoization file is generated. void; setPathMemoization(String pathMemoization). Set the directory where memoization files should be written. void; setReaderOptions(Map<String,String> options). Set additional arguments that should be passed to readers. void; setRequestParallelization(boolean requestParallelization). Optionally enable or disable parallelization when reading images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ALLOW_MEMOIZATION_PROPERTY; public static String ALLOW_MEMOIZATION_PROPERTY; System property controlling whether memoization is allowed or not.; If set to false, this is a hint that memoization should not be supported - but it is up to consumers to enforce that.; ; Default is to set status based upon Java version, with 17+ turning memoization off.; ; See https://github.com/qupath/qupath/issues/957. Method Details. getPathMemoization; public String getPathMemoization(); Get the path to the directory where memoization files should be written, or null if no path is set. Returns:. setPathMemoization; public void setPathMemoization(String pathMemoization); Set the directory where memoization files should be written.; This can be null, in which case memoization files may be written in the same directory as the original image. Parameters:; pathMemoization - . getReaderOptions; public Map<String,String> getReaderOptions(); Get a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:3108,hash,hashCode,3108,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,1,['hash'],['hashCode']
Security,"nDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:4042,hash,hashCode,4042,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['hash'],['hashCode']
Security,"nDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplayObject; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty; The current image display. See Also:. imageDisplayObjectProperty(). resourceManager; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty; The resource manager used to handle saving/loading. See Also:. resourceManagerProperty(). Constructor Details. BrightnessContrastSettingsPane; public BrightnessContrastSettingsPane(). Method Details. imageDisplayObjectProperty; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty(); The current image display. Returns:. resourceManagerProperty; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty(); The resource manager used to handle saving/loading. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:11891,hash,hashCode,11891,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['hash'],['hashCode']
Security,"nModelParams.Builder; layout(String layout). Specify a string representing the axes layout that the model expects as input. DnnModelParams.Builder; lazyInitialize(boolean lazyInitialize). Optionally request lazy initialization. DnnModelParams.Builder; output(String name,; long... shape). Specify the shape as a long array for a single named output. DnnModelParams.Builder; output(String name,; DnnShape shape). Specify the shape for a single named output. DnnModelParams.Builder; outputs(Map<String,DnnShape> outputs). Specify the shapes for one or more outputs. DnnModelParams.Builder; outputShape(long... shape). Specify the shape for a single output, with the default output name. DnnModelParams.Builder; paths(Path... paths). Specify the URIs as path objects. DnnModelParams.Builder; URIs(URI... uris). Specify the URIs. DnnModelParams.Builder; URIs(Collection<URI> uris). Specify the URIs as a collection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. files; public DnnModelParams.Builder files(File... files); Specify the URIs as files. These will be appended to any existing URIs. Parameters:; files - ; Returns:. paths; public DnnModelParams.Builder paths(Path... paths); Specify the URIs as path objects. These will be appended to any existing URIs. Parameters:; paths - ; Returns:. URIs; public DnnModelParams.Builder URIs(URI... uris); Specify the URIs. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. URIs; public DnnModelParams.Builder URIs(Collection<URI> uris); Specify the URIs as a collection. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. lazyInitialize; public DnnModelParams.Builder lazyInitialize(boolean lazyInitialize); Optionally request lazy initialization. Parameters:; lazyInitialize - ; Returns:. framework; public DnnModelParams.Builder framework(String framework); Specify the deep learning framework ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html:2381,hash,hashCode,2381,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,1,['hash'],['hashCode']
Security,"nRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equiv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:3090,hash,hashCode,3090,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['hash'],['hashCode']
Security,"nalMaxima(ImageProcessor ip,; float threshold,; boolean outputBinary). Find regional maxima using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:2182,validat,validateMarkerMask,2182,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['validat'],['validateMarkerMask']
Security,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4469,hash,hashCode,4469,javadoc/docs/qupath/lib/common/Version.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html,3,['hash'],['hashCode']
Security,"native script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:5170,access,accessing,5170,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['access'],['accessing']
Security,"nayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static DelaunayTools.Builder; newBuilder(Collection<PathObject> pathObjects). Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. static BiPredicate<PathObject,PathObject>; sameClassificationPredicate(). BiPredicate that returns true for objects that share the same classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DelaunayTools; public DelaunayTools(). Method Details. newBuilder; public static DelaunayTools.Builder newBuilder(Collection<PathObject> pathObjects); Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. Parameters:; pathObjects - ; Returns:. createFromCentroids; public static DelaunayTools.Subdivision createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI); Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs.; ; Note: centroids must be distinct. If multiple objects have identical centroids, one or more objects may be lost ; from the resulting DelaunayTools.Subdivision. Parameters:; pathObjects - collection of objects from which to construct the DelaunayTools.Subdivision; preferNucleusROI - if true, prefer the nucleus ROI when extracting the centroid from a cell; Returns:; a new DelaunayTools.Subdivision computed from the centroid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:3304,hash,hashCode,3304,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['hash'],['hashCode']
Security,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:2505,hash,hashCode,2505,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,3,['hash'],['hashCode']
Security,"nclude the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:1684,hash,hashCode,1684,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,1,['hash'],['hashCode']
Security,"ndaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries.; Note that if the pathClass is null or thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; pathClass - ; thickness - ; Returns:. getDerivedBoundaryStrategy; public static BoundaryStrategy getDerivedBoundaryStrategy(double thickness); Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries.; Note that if the thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; thickness - ; Returns:. getSkipBoundaryStrategy; public static BoundaryStrategy getSkipBoundaryStrategy(); Create a boundary strategy that ignores bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:2517,hash,hashCode,2517,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,2,['hash'],['hashCode']
Security,"nel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory to handle ObjectClassifier instances. static <T> ObjectClassifier<T>; readClassifier(Path path). Read the classifier from a file. static <T> void; writeClassifier(ObjectClassifier<T> classifier,; Path path). Write the classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifiers; public ObjectClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get a TypeAdapterFactory to handle ObjectClassifier instances. Returns:. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(ObjectClassifier<T>... classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.; This can be used for multiplexed images, where a single classifier may be trained for each marker. Type Parameters:; T - ; Parameters:; classifiers - an array of classifiers to combine; Returns:; the composite object classifier. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html:2324,hash,hashCode,2324,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,1,['hash'],['hashCode']
Security,"ner;  ; final org.controlsfx.control.action.Action; actionPixelCount. Deprecated. final org.controlsfx.control.action.Action; actionPlugins;  ; final org.controlsfx.control.action.Action; actionPositiveCellDetection;  ; final org.controlsfx.control.action.Action; actionSimpleTissueDetection. Deprecated. final org.controlsfx.control.action.Action; actionSLIC;  ; final org.controlsfx.control.action.Action; actionSnapshot;  ; final org.controlsfx.control.action.Action; actionSubcellularDetection. Deprecated. final org.controlsfx.control.action.Action; actionTiles;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_2B;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SEP_0; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_0. actionSLIC; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsSLIC""); public final org.controlsfx.control.action.Action actionSLIC. actionDoG; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsDoG""); public final org.controlsfx.control.action.Action actionDoG. SEP_1; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_1. actionTiles; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.tilesToAnnotations""); public final org.controlsfx.control.action.Action actionTiles. actionCellDetection; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.ImageJ.cellDetection""); public final org.controlsfx.control.action.Action ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html:2086,hash,hashCode,2086,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,1,['hash'],['hashCode']
Security,"nerate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Python. PYTHON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PYTHON_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Pythonic import statements. PythonAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Python. PythonAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.PythonAutoCompletor. Constructor. PythonStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Python syntax. Q. QP - Class in qupath.lib.scripting. Collection of static methods that are useful for scripting. QP() - Constructor for class qupath.lib.scripting.QP;  ; QPEx - Class in qupath.lib.gui.scripting. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QPEx() - Constructor for class qupath.lib.gui.scripting.QPEx;  ; quickShowImage(String, Roi, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). quickShowImage(String, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). QUIT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; qupath - package qupath. Package containing the main QuPath launcher. QuPath - Class in qupath. Main QuPath launcher. QuPath() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:803924,access,access,803924,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"ng ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public static ImagePlane getDefaultPlane(); Returns an ImagePlane with channel -1, z of 0 and t of 0.; ; Use of this method is discouraged; it is appropriate only for 2D images. Returns:. getPlaneWithChannel; public static ImagePlane getPlaneWithChannel(ROI roi); Returns an ImagePlane with channel, z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ROI roi); Returns an ImagePlane with channel -1, and z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ImageRegion region); Returns an ImagePlane with channel -1 and z and",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:2663,hash,hashCode,2663,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,2,['hash'],['hashCode']
Security,"ng all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; values - ; Returns:. computeRunningStatistics; public static void computeRu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:1906,hash,hashCode,1906,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,1,['hash'],['hashCode']
Security,"nnections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6267,hash,hashCode,6267,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['hash'],['hashCode']
Security,"nner; createHeadlessTaskRunner(int nThreads). Create a new headless TaskRunner instance with the specified number of threads. TaskRunner; createTaskRunner(). Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). TaskRunner; createTaskRunner(int nThreads). Create a new TaskRunner instance with the specified number of threads. static IntFunction<TaskRunner>; getDefaultCreateFunction(). Get the default function used to create TaskRunner instances. static TaskRunnerUtils; getDefaultInstance(). Get the default instance. static TaskRunnerUtils; newInstance(). Create a new instance. TaskRunnerUtils; setCreateFunction(IntFunction<TaskRunner> function). Set the function used to generate new headless TaskRunner instances. TaskRunnerUtils; setCreateHeadlessFunction(IntFunction<TaskRunner> function). Set the function used to generate new TaskRunner instances. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getDefaultInstance; public static TaskRunnerUtils getDefaultInstance(); Get the default instance. This is a singleton, shared across an application. Returns:. newInstance; public static TaskRunnerUtils newInstance(); Create a new instance. This may be used if part of an application requires its TaskRunner instances; to differ from those used elsewhere. Returns:. getDefaultCreateFunction; public static IntFunction<TaskRunner> getDefaultCreateFunction(); Get the default function used to create TaskRunner instances.; This is suitable for use in a headless environment. Returns:. setCreateHeadlessFunction; public TaskRunnerUtils setCreateHeadlessFunction(IntFunction<TaskRunner> function); Set the function used to generate new TaskRunner instances. Parameters:; function - a creator function that takes a requested number of threads as input; Returns:; this instance. setCreateFunction; public TaskRunnerUtils setCreateFunction(In",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html:1986,hash,hashCode,1986,javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,1,['hash'],['hashCode']
Security,"notations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1070407,access,access,1070407,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"ns for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum value of an array. Returns:. max; public static Function<double[],Double> max(); Create a function to calculate the maximum value of an array. Returns:. mean; public static Function<double[],Double> mean(); Create a function to calculate the mean (average) value of an array. Returns:. pearsonsCorrelation; public static Function<double[][],Double> pearsonsCorrelation(); Create a function to calculate Pearson's correlation coefficient.; This requires a double[2][n] input array, where n is the number of pixels. Returns:. spearmansCorrelation; public static Function<double[][],Double> spearmansCorrelation(); Create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html:1613,hash,hashCode,1613,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,1,['hash'],['hashCode']
Security,"ns installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnotation(QuPathViewer viewer); Create a full image annotation for the image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:10492,hash,hashCode,10492,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['hash'],['hashCode']
Security,"ns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:3122,hash,hashCode,3122,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['hash'],['hashCode']
Security,"ns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of lab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:3726,hash,hashCode,3726,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['hash'],['hashCode']
Security,"ns true if this class is equal to the specified child class, ; or an ancestor of that class. Parameters:; childClass - ; Returns:. getBaseClass; public PathClass getBaseClass(); Get the 'base' class, i.e. trace back through getParentClass() until no parent is available.; ; For a PathClass with no parent, this just returns itself. Returns:. setColor; public void setColor(Integer colorRGB); Set the color that should be used to display objects with this classification. Parameters:; colorRGB - color, as a packed (A)RGB value. setColor; public void setColor(int red,; int green,; int blue); Set the color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getColor; public Integer getColor(); Get the color that should be used to display objects with this classification. Returns:; packed (A)RGB value representing the classification color. getName; public String getName(); Get the name of this classification. ; Note that this does not incorporate information from any parent classifications; to access this, ; use toString() instead. Returns:. toString; public String toString(). Overrides:; toString in class Object. toString; public String toString(String delimiter); Create a string representation, using the specified delimiter between ; elements of derived PathClasses. Parameters:; delimiter - ; Returns:. isValid; public boolean isValid(); A PathClass is valid if its name is not null.; ; This should generally the case, but a single (invalid) PathClass with a null name ; can be used to indicate the absence of a classification; however, it should not be assigned ; to any object. Rather, objects should be assigned either a valid PathClass or null to indicate ; that they have no classification. Returns:. toSet; public Set<String> toSet(); Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names.; ; Important! If any path class component names are duplicates, these will ; (necessarily",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:8923,access,access,8923,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['access'],['access']
Security,"nsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.Builder downsamples(double... downsamples); Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. Parameters:; downsamples - ; Returns:. display; @Deprecated; public RenderedImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:2633,hash,hashCode,2633,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['hash'],['hashCode']
Security,"nsity map to the current image image. static void; writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path). Write the output of applying a density map to an image. static void; writeImage(BufferedImage img,; String path). Write an image to the specified path. static void; writeImage(ImageServer<BufferedImage> server,; String path). Write a full image to the specified path. static void; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write an image region image to the specified path. static void; writePredictionImage(String classifierName,; String path). Write the output of applying a pixel classifier to the current image image. static void; writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path). Write the output of applying a pixel classifier to an image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image type with hematoxylin and DAB staining. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image type with hematoxylin and eosin staining. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image type. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image type. OTHER; public static final ImageData.ImageType OTHER; Any other image type (neither brightfield nor fluorescence). PROJECT_BASE_DIR; public static final String PROJECT_BASE_DIR; Placeholder for the path to the current project.; May be used as follows:; ; var path = buildFilePath(PROJECT_BASE_DIR, 'subdir', 'name.txt'); . See Also:. Constant Field Values. VERSION; public static final Version VERSION; The current QuPath version, parsed according to semantic versioning",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:45083,hash,hashCode,45083,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['hash'],['hashCode']
Security,"nstr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1312,hash,hashCode,1312,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,1,['hash'],['hashCode']
Security,"nteger rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:2517,hash,hashCode,2517,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['hash'],['hashCode']
Security,"o.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4978,hash,hashCode,4978,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['hash'],['hashCode']
Security,"object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2293,hash,hashCode,2293,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['hash'],['hashCode']
Security,"object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2527,hash,hashCode,2527,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['hash'],['hashCode']
Security,"object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create a new object measurement that requires multiple channels as input, usin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:2128,hash,hashCode,2128,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,1,['hash'],['hashCode']
Security,"olean; isArea(). Returns true if this ROI encloses an area. boolean; isCircle(). Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:3969,hash,hashCode,3969,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['hash'],['hashCode']
Security,"olean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:2609,hash,hashCode,2609,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['hash'],['hashCode']
Security,"olean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:2611,hash,hashCode,2611,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['hash'],['hashCode']
Security,"ollection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip characters that would make a String invalid as a filename. static long; sum(long[] values). Compute the sum of elements in a long array (possibly representing a histogram). static URI; toEncodedURI(String path). Try to convert a path to an encoded URI. static Path; toPath(URI uri). Try to identify a Path from a URI, dropping any query or fragment elements. static URI; toURI(String path). Try to convert a path to a URI. static String; zapGremlins(String text). Remove non-printable characters from a String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SYMBOL_MU; public static final char SYMBOL_MU; Small Greek mu (useful for micrometers). See Also:. Constant Field Values. SYMBOL_SIGMA; public static final char SYMBOL_SIGMA; Small Greek sigma (useful for Gaussian filter sizes, standard deviations). See Also:. Constant Field Values. SYMBOL_MICROMETER; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be pars",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:6834,hash,hashCode,6834,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['hash'],['hashCode']
Security,"ols.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:1766,hash,hashCode,1766,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['hash'],['hashCode']
Security,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6757,sanitiz,sanitize,6757,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['sanitiz'],['sanitize']
Security,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2398,hash,hashCode,2398,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,1,['hash'],['hashCode']
Security,"onDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1788,hash,hashCode,1788,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['hash'],['hashCode']
Security,"onalClass). Merge two classifications together. static PathClass; removeNames(PathClass pathClass,; String... namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; removeNames(PathClass pathClass,; Collection<String> namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; sortNames(PathClass pathClass). Create a PathClass with name elements sorted alphabetically. static PathClass; sortNames(PathClass pathClass,; Comparator<String> comparator). Create a PathClass with name elements sorted using an arbitrary Comparator. static List<String>; splitNames(PathClass pathClass). Get a list containing the names of all constituent parts of a PathClass. static PathClass; uniqueNames(PathClass pathClass). Remove duplicate names from a derived PathClass. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. isGradedIntensityClass; public static boolean isGradedIntensityClass(PathClass pathClass); Return true if the PathClass represents a built-in intensity class.; Here, this means its name is equal to ""1+"", ""2+"" or ""3+"". Parameters:; pathClass - ; Returns:. isIgnoredClass; public static boolean isIgnoredClass(PathClass pathClass); Return true if the PathClass should be ignored from some operations, or is null. ; In practice, this checks if the PathClass is null or if the name is either null or ends with an asterisk.; It is useful to avoid generating objects for certain classes (e.g. Ignore*, Artefact*, Background*) ; where these would not be meaningful.; ; Warning: the 'ignored' status is ambiguous if the PathClass is null. ; In a future version this method may throw an exception rather than accepting null classifications. ; Code that calls this method therefore should explicitly handle cases where the PathClass is ; null (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html:3377,hash,hashCode,3377,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,1,['hash'],['hashCode']
Security,"ons.SelectActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.SelectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_SELECTION;  ; final org.controlsfx.control.action.Action; SELECT_ALL_DETECTIONS;  ; final org.controlsfx.control.action.Action; SELECT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SELECT_BY_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SELECT_BY_PLANE;  ; final org.controlsfx.control.action.Action; SELECT_CELLS;  ; final org.controlsfx.control.action.Action; SELECT_TILES;  ; final org.controlsfx.control.action.Action; SELECT_TMA_CORES;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  . Constructor Summary; Constructors. Constructor; Description; SelectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. RESET_SELECTION; @ActionConfig(""Action.Objects.Select.reset""); @ActionAccelerator(""shortcut+alt+r""); public final org.controlsfx.control.action.Action RESET_SELECTION. SEP_2; public final org.controlsfx.control.action.Action SEP_2. SELECT_TMA_CORES; @ActionConfig(""Action.Objects.Select.tmaCores""); @ActionAccelerator(""shortcut+alt+t""); public final org.controlsfx.control.action.Action SELECT_TMA_CORES. SELECT_ANNOTATIONS; @ActionConfig(""Action.Objects.Select.annotations""); @ActionAccelerator(""shortcut+alt+a""); public final org.controlsfx.control.action.Action SELECT_ANNOTATIONS. SELECT_ALL_DETECTIONS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.detections""); @ActionAccelerator(""shortcut+alt+d""); public final org.controlsfx.control.action.Action SELECT_ALL_DETECTIONS. SELECT_CELLS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.cells""); @ActionAcce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html:1481,hash,hashCode,1481,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,1,['hash'],['hashCode']
Security,"onstructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<String> tooltip); Text to include in any tooltip. Parameters:; tooltip - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:1790,hash,hashCode,1790,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,1,['hash'],['hashCode']
Security,"oolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; Color image (default behavior in v0.1.2 and before). LAB_DISTANCE; public static final WandToolEventHandler.WandType LAB_DISTANCE; Color image converted to CIELAB, Euclidean distance calculated. Method Details. values; public static WandToolEventHandler.WandType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static WandToolEventHandler.WandType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum consta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:1700,hash,hashCode,1700,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,1,['hash'],['hashCode']
Security,"oolEventHandler;  ; getCurrentROI() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current ROI, i.e. getCurrentScriptTab() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentServer() - Static method in class qupath.lib.scripting.QP. Get the ImageServer of the current ImageData. getCurrentServerPath() - Static method in class qupath.lib.scripting.QP. Get the path to the ImageServer of the current ImageData. getCurrentSyntax() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Gets the value of the currentSyntax property. getCurrentText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentViewer() - Static method in class qupath.lib.gui.scripting.QPEx. Get the active viewer in the current QuPath instance. getCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor for this viewer. getCustomOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get direct access to the custom overlay list. getCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the custom pixel layer overlay, or null if it has not be set. getDataMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the maximum measurement value from the objects passed to the constructor of this mapper. getDataMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the minimum measurement value from the objects passed to the constructor of this mapper. getDebugMode() - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Get whether debug mode is on or off. getDefaultAutoCompletor(String) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Default method to get a suitable auto completor for the given language name. getDefaultBuilder() - Static method in class qupath.lib.io.GsonTools. Access the builder used with GsonTools.getInstance(). getDefaultChannelColor(int) - Static method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:366882,access,access,366882,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"or message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5540,hash,hashCode,5540,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['hash'],['hashCode']
Security,"orm. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:2631,hash,hashCode,2631,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['hash'],['hashCode']
Security,"ouble, double, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects based upon an ImageServer that provides classification or probability output. createObjectsFromPredictions(ImageServer<BufferedImage>, PathObjectHierarchy, Collection<PathObject>, Function<ROI, ? extends PathObject>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. createObjectsFromROIs(ImagePlus, Collection<? extends Roi>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. createObjectTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a TreeTableView showing the names and values of object fields, accessed via reflection. createPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; createPane() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. createPane(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. createPane(ObservableValue<ImageData<T>>) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createPane(ObservableValue<ImageData<T>>, boolean) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createPathImage(ImageServer<BufferedImage>, ImagePlus, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Create a PathImage from an ImagePlus and region. createPathObjectIcon(PathObject, int, int) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:205540,access,accessed,205540,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessed']
Security,"ould return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2256,hash,hashCode,2256,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9542,hash,hashCode,9542,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. disableToggleMenuItems; public BooleanProperty disableToggleMenuItemsProperty; Property to disable options to toggle the visibility of channels. See Also:. disableToggleMenuItemsProperty(). currentChannel; public ReadOnlyObjectProperty<ChannelDisplayInfo> currentChannelProperty; Get the currently-selected channel.; This is not necessarily showing in the image; see #currentChannelVisible() for that. See Also:. currentChannelProperty(). imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; Property for the image display that should be shown and managed by this pane. See Also:. imageDisplayProperty(). Constructor Details. BrightnessContrastChannelPane; public BrightnessContrastChannelPane(). Method Details. disableToggleMenuItemsProperty; public BooleanProperty disableToggleMenuItemsProperty(); Property to disable options to toggle the v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:12416,hash,hashCode,12416,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11723,hash,hashCode,11723,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15757,hash,hashCode,15757,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['hash'],['hashCode']
Security,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12158,hash,hashCode,12158,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['hash'],['hashCode']
Security,"output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:2506,hash,hashCode,2506,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['hash'],['hashCode']
Security,"ove tool. static final PathTool; POINTS. Points annotation and counting tool. static final PathTool; POLYGON. Polygon drawing tool (closed). static final PathTool; POLYLINE. Polyline drawing tool (open). static final PathTool; RECTANGLE. Rectangle drawing tool. Constructor Summary; Constructors. Constructor; Description; PathTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathTool; createExtendedTool(PathTool... tools);  ; static PathTool; createTool(EventHandler<MouseEvent> handler,; String name,; Node icon). Create a tool from the specified MouseEvent handler. static <T extends Event>PathTool; createTool(EventType<T> type,; EventHandler<T> handler,; String name,; Node icon). Create a tool from the specified event handler. static PathTool; getTool(String pathToolString). Return the PathTool corresponding to the specified String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MOVE; public static final PathTool MOVE; Move tool. RECTANGLE; public static final PathTool RECTANGLE; Rectangle drawing tool. ELLIPSE; public static final PathTool ELLIPSE; Ellipse drawing tool. LINE; public static final PathTool LINE; Line drawing tool. ARROW_START; public static final PathTool ARROW_START; Arrow drawing tool, with arrowhead at the start. ARROW_END; public static final PathTool ARROW_END; Arrow drawing tool, with arrowhead at the end. ARROW_DOUBLE; public static final PathTool ARROW_DOUBLE; Arrow drawing tool, with arrowhead at both ends. LINE_OR_ARROW; public static final PathTool LINE_OR_ARROW; Extended PathTool that can switch between drawing lines or arrows. POLYGON; public static final PathTool POLYGON; Polygon drawing tool (closed). POLYLINE; public static final PathTool POLYLINE; Polyline drawing tool (open). BRUSH; public static final PathTool BRUSH; Brush drawing tool. POINTS; public static fin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html:2128,hash,hashCode,2128,javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,1,['hash'],['hashCode']
Security,"owStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the most recently added step with this one. int; size(). Total number of steps in the workflow. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Workflow; public Workflow(). Method Details. getSteps; public List<WorkflowStep> getSteps(); Get an unmodifiable list of the steps. Returns:. getLastStep; public WorkflowStep getLastStep(); Get the last WorkflowStep in the workflow, or null if no steps are available. Returns:. addStep; public void addStep(WorkflowStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; step - . removeSteps; public void removeSteps(Collection<WorkflowStep> ste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html:2597,hash,hashCode,2597,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,1,['hash'],['hashCode']
Security,"own in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:5560,hasH,hasHelpText,5560,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,3,['hasH'],['hasHelpText']
Security,"ows IOException; Write a JavaFX image to the specified path. Parameters:; image - the image to write; path - the path to write the image; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). setChannelDisplayRange; public static void setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by number. Parameters:; channel - channel number (0-based index); minDisplay - ; maxDisplay - . setChannelDisplayRange; public static boolean setChannelDisplayRange(ImageData<BufferedImage> imageData,; int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by number. Parameters:; imageData - ; channel - channel number (0-based index); minDisplay - ; maxDisplay - ; Returns:; true if it was possible to set the display range, false otherwise (e.g. if the image could not be accessed,; or the channel was out of range). setChannelDisplayRange; public static void setChannelDisplayRange(String channelName,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by name. Parameters:; channelName - ; minDisplay - ; maxDisplay - . setChannelDisplayRange; public static void setChannelDisplayRange(ImageData<BufferedImage> imageData,; String channelName,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by name. Parameters:; imageData - ; channelName - ; minDisplay - ; maxDisplay - . saveAnnotationMeasurements; public static void saveAnnotationMeasurements(String path,; String... includeColumns); Save annotation measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:18320,access,accessed,18320,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['access'],['accessed']
Security,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1246,access,accessibleHelp,1246,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"p; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Core; public Core(). Method Details. ensureType; public static ImageOp ensureType(PixelType type); Convert the Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:3636,hash,hashCode,3636,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['hash'],['hashCode']
Security,"padding on each side. int; getX1(). Get the first horizontal padding (left of the image), in pixels. int; getX2(). Get the second horizontal padding (right of the image), in pixels. int; getXSum(). Get the total horizontal padding (sum of x1 and x2). int; getY1(). Get the first vertical padding (top of the image), in pixels. int; getY2(). Get the second vertical padding (bottom of the image), in pixels. int; getYSum(). Get the total vertical padding (sum of x1 and x2). boolean; isEmpty(). Returns true of the padding is zero. boolean; isSymmetric(). Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). Padding; max(Padding padding). Compare two paddings, and take the larger padding value on all sides. Padding; subtract(Padding padding). Add another padding from this one. static Padding; symmetric(int pad). Get a padding object with 'pad' pixels on all sides. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getX1; public int getX1(); Get the first horizontal padding (left of the image), in pixels. Returns:. getX2; public int getX2(); Get the second horizontal padding (right of the image), in pixels. Returns:. getXSum; public int getXSum(); Get the total horizontal padding (sum of x1 and x2). Returns:. getY1; public int getY1(); Get the first vertical padding (top of the image), in pixels. Returns:. getY2; public int getY2(); Get the second vertical padding (bottom of the image), in pixels. Returns:. getYSum; public int getYSum(); Get the total vertical padding (sum of x1 and x2). Returns:. toString; public String toString(). Overrides:; toString in class Object. isSymmetric; public boolean isSymmetric(); Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). Returns:. isEmpty; public boolean isEmpty(); Returns true of the padding is zero. Returns:. add; public Padding add(Padding padding); Add this padding",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/Padding.html:1991,hash,hashCode,1991,javadoc/docs/qupath/lib/regions/Padding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/Padding.html,1,['hash'],['hashCode']
Security,path.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class q,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570425,hasH,hasHelpText,570425,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hasH'],['hasHelpText']
Security,"path.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1374,hash,hashCode,1374,javadoc/docs/qupath/lib/io/PointIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html,1,['hash'],['hashCode']
Security,"path.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570749,hasH,hasHelpText,570749,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hasH'],['hasHelpText']
Security,"path.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:1495,hash,hashCode,1495,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,1,['hash'],['hashCode']
Security,"pe>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType valueOf(String name); Returns the enum constant of this class with the specified name.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1858,hash,hashCode,1858,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,1,['hash'],['hashCode']
Security,"peSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1833,hash,hashCode,1833,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['hash'],['hashCode']
Security,"perty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemMenuBarProperty(). Constructor Details. SystemMenuBar; public SystemMenuBar(). Method Details. systemMenubarProperty; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty(); Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; Since:; v0.5.0. manageMainMenuBar; public static void manageMainMenuBar(MenuBar menuBar); Request that a menubar is managed as a main menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS or MAIN_WINDOW. Parameters:; menuBar - . manag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:3659,access,access,3659,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,1,['access'],['access']
Security,"plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570832,hasH,hasHelpText,570832,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hasH'],['hasHelpText']
Security,"plying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a packed RGB pixel. static float; saturation(int rgb). Extract saturation value from RGB-to-HSB transform. static void; transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMethod method,; float offset,; float scale,; boolean useColorLUT). Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformer; public ColorTransformer(). Method Details. getODNormalizedColor; public static int getODNormalizedColor(int rgb,; double minOD,; float offset,; float scale); Create a 'normalized' color for visualization.; ; This is achieved by converting RGB values to optical densities, putting the RGB ODs into; a 3x1 vector and normalizing this to unit length, then rescaling the result to give an RGB representation.; Because of the somewhat strange rescaling involved, the final RGB values produced should not be over-interpreted -; this is really intended for visualization, such as when interactively looking for regions of single stains; when selecting color deconvolution stain vectors. Parameters:; rgb - original 8-bit RGB values; minOD - the minimum OD; pixels with an OD less than this will be considered unstained, and shown as white; offset - brightness and contrast offset; scale - brightness and contrast scale",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:5911,hash,hashCode,5911,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['hash'],['hashCode']
Security,"predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OpenCVDnn.ModelType DEFAULT; Default Model class. DETECTION; public static final OpenCVDnn.ModelType DETECTION; Refers to DetectionModel. SEGMENTATION; public static final OpenCVDnn.ModelType SEGMENTATION; Refers to SegmentationModel. CLASSIFICATION; public static final OpenCVDnn.ModelType CLASSIFICATION; Refers to ClassificationModel. KEYPOINTS; public static final OpenCVDnn.ModelType KEYPOINTS; Refers to KeypointsModel. TEXT_RECOGNITION; public static final OpenCVDnn.ModelType TEXT_RECOGNITION; Refers to TextRecognitionModel. TEXT_DETECTION_DB; public static final OpenCVDnn.ModelType TEXT_DETECTION_DB; Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST; public static final OpenCVDnn.ModelType TEXT_DETECTION_EAST; Refers to TextDetectionModel_EAST. Method Details. values; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html:1846,hash,hashCode,1846,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,1,['hash'],['hashCode']
Security,"protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma property for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this view",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:3880,access,access,3880,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['access'],['access']
Security,"pting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:1348,hash,hashCode,1348,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,1,['hash'],['hashCode']
Security,"ptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:2025,hash,hashCode,2025,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['hash'],['hashCode']
Security,"public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainVectorFromPixels; public static StainVector generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax); Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. Parameters:; name - ; rgb - ; redMax - ; greenMax - ; blueMax - ; Returns:. getMedianRGB; public static int getMedianRGB(int[] rgb); Determine median of RGB values.; The median of each channel is computed separately. Parameters:; rgb - array of packed RGB values; Returns:. refineColorDeconvolutionStains; public static ColorDeconvolutionStains refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped); Attempt to automatically refine color deconvolution stains based upon pixel values.; ; Warning! This is really only for testing - it has not be very extensively validated.; ; The method used is based very loosely on that of Macenko et al. (2009), but avoids eigenvalue computations in favor of; determining an initial stain inputs.; ; TODO: Improve automatic stain vector refinement. Parameters:; rgb - ; stains - ; minStain - minimum optical density for each RGB channel (default 0.15); percentageClipped - ; Returns:. estimateWhiteValues; public static double[] estimateWhiteValues(int[] rgb); Estimate white (background) values for a brightfield image.; ; The algorithm computes histograms for each RGB channel, and takes the mode; of the histogram in the region of the histogram > the mean value for that channel. Parameters:; rgb - an array of packed RGB values; Returns:; an array containing estimated [red, green and blue] background values. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:6875,validat,validated,6875,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['validat'],['validated']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2596,hash,hashCode,2596,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['hash'],['hashCode']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2462,hash,hashCode,2462,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['hash'],['hashCode']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2436,hash,hashCode,2436,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['hash'],['hashCode']
Security,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2447,hash,hashCode,2447,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['hash'],['hashCode']
Security,"qupath.lib.gui.QuPathGUI. Get an unmodifiable observable list of all viewers. getAllViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Get an observable list of viewers. getAlphaComposite() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getAnalysisTabPane() - Method in class qupath.lib.gui.QuPathGUI. Access the main tab pane shown in the QuPath window. getAncestorList(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). getAncestorTMACore(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. getAnnotatedActions(Object) - Static method in class qupath.lib.gui.actions.ActionTools. Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. getAnnotationObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all annotation objects in the hierarchy. getAnnotationObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current annotation objects. getArea() - Method in class qupath.lib.roi.EllipseROI;  ; getArea() - Method in class qupath.lib.roi.RectangleROI;  ; getArea() - Method in class qupath.lib.roi.AreaROI;  ; getArea() - Method in class qupath.lib.roi.GeometryROI;  ; getArea() - Method in interface qupath.lib.roi.interfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:328543,access,accessible,328543,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessible']
Security,"qupath.lib.images.servers.bioformats; Class OMEPixelParser.Builder. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser.Builder. Enclosing class:; OMEPixelParser. public static class OMEPixelParser.Builder; extends Object; Builder for instances of OMEPixelParser. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OMEPixelParser; build(). Creates a new OMEPixelParser instance. OMEPixelParser.Builder; byteOrder(ByteOrder byteOrder);  ; OMEPixelParser.Builder; effectiveNChannels(int effectiveNChannels);  ; OMEPixelParser.Builder; isInterleaved(boolean isInterleaved);  ; OMEPixelParser.Builder; normalizeFloats(boolean normalizeFloats);  ; OMEPixelParser.Builder; pixelType(PixelType pixelType);  ; OMEPixelParser.Builder; samplesPerPixel(int[] samplesPerPixel);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. isInterleaved; public OMEPixelParser.Builder isInterleaved(boolean isInterleaved). Parameters:; isInterleaved - whether pixel values are interleaved; Returns:; the current builder. pixelType; public OMEPixelParser.Builder pixelType(PixelType pixelType). Parameters:; pixelType - the bit-depth of the image pixels; Returns:; the current builder. byteOrder; public OMEPixelParser.Builder byteOrder(ByteOrder byteOrder). Parameters:; byteOrder - the byte order of each pixel; Returns:; the current builder. effectiveNChannels; public OMEPixelParser.Builder effectiveNChannels(int effectiveNChannels). Parameters:; effectiveNChannels - the effective size of the C dimension of the image. This is not always; the number of channels, for example RGB values can be stored in one effective channel; Returns:; the current builder. normalizeFloats; public OMEPixelParser.Builder normalizeFloats(b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html:1339,hash,hashCode,1339,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,1,['hash'],['hashCode']
Security,"qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. static final String; NAME_POSITIVE. Default name for a class representing ""Positive"" staining intensity. static final String; NAME_THREE_PLUS. Default name for a class representing ""3+"" staining intensity (i.e. static final String; NAME_TWO_PLUS. Default name for a class representing ""2+"" staining intensity (i.e. static final PathClass",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:1332,validat,validation,1332,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['validat'],['validation']
Security,"qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; OpenCVTypeAdapters - Class in qupath.opencv.io. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters() - Constructor for class qupath.opencv.io.OpenCVTypeAdapters;  ; OpenCVTypeAdapters.OpenCVTypeAdapter<T> - Class in qupath.opencv.io. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory - Class in qupath.opencv.io. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenCVTypeAdaptorFactory() - Constructor for class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory;  ; openFile(File) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a file in the native application. openImage(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. openImage(QuPathViewer, String) - Method in class qupath.lib.gui.QuPathGUI;  ; openImage(QuPathViewer, String, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a new whole slide image server, or ImageData. openImageEntry(ProjectImageEntry<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Open the image represented by the specified ProjectImageEntry. openInBrowser(String) - Static method in class qupath.lib.gui.QuPathGUI. Try to launch a browser window for a specified URL. opening(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological opening filter. openingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply opening by reconstruction, with the specified minimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:726062,access,access,726062,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"r Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartYProperty(). getSpaceX; public double getSpaceX(); Horizontal spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingXProperty(). getSpaceY; public double getSpaceY(); Vertical spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingYProperty(). setSpaceX; public void setSpaceX(double spaceX); Set the horizontal spacing between lines for any counting grid. Parameters:; spaceX - ; See Also:. PathPrefs.gridSpacingXProperty(). setSpaceY; public void setSpaceY(double spaceY); Set the vertical spacing between lines for any counting gri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:1661,hash,hashCode,1661,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html,1,['hash'],['hashCode']
Security,"r and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. interpolation; public ObjectProperty<ImageInterpolation> interpolationProperty; The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:2338,hash,hashCode,2338,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['hash'],['hashCode']
Security,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1309,hash,hashCode,1309,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,1,['hash'],['hashCode']
Security,"r indicating pixel values for a channel indicate levels of transparency. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ImageChannel>; getChannelList(String... names). Convert an array of channel names into a list of ImageChannel using default colors. Integer; getColor(). Color used to display the output channel. static Integer; getDefaultChannelColor(int channel). Get the default color for a specified channel, for use when no channel colors are already known. static List<ImageChannel>; getDefaultChannelList(int nChannels). Get default channel list for an image with a specified number of channels. static List<ImageChannel>; getDefaultRGBChannels(). Get default channel list for RGB images. static ImageChannel; getInstance(String name,; Integer color). Get a channel instance with the specified name and color. String; getName(). Name of the output channel. int; hashCode();  ; boolean; isTransparent(). Check if the color is 'transparent'; this is used for background/ignored channels. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. TRANSPARENT; public static final Integer TRANSPARENT; Special color indicating pixel values for a channel indicate levels of transparency. RED; public static final ImageChannel RED; Default red channel for RGB images. GREEN; public static final ImageChannel GREEN; Default green channel for RGB images. BLUE; public static final ImageChannel BLUE; Default blue channel for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html:1864,hash,hashCode,1864,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html,1,['hash'],['hashCode']
Security,"r of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2206,hash,hashCode,2206,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['hash'],['hashCode']
Security,"r server. RotatedImageServer.Rotation; getRotation(). Get the rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guarantee",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:3077,hash,hashCode,3077,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['hash'],['hashCode']
Security,"r tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569582,hash,hashCode,569582,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"r. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:2806,hash,hashCode,2806,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['hash'],['hashCode']
Security,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1930,hash,hashCode,1930,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,3,['hash'],['hashCode']
Security,"r:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:1690,hash,hashCode,1690,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,1,['hash'],['hashCode']
Security,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html:1416,hash,hashCode,1416,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,1,['hash'],['hashCode']
Security,"r<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1552,hash,hashCode,1552,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,1,['hash'],['hashCode']
Security,"rStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2328,hash,hashCode,2328,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['hash'],['hashCode']
Security,"rain was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569955,hash,hashCode,569955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"raphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the action. ActionTools.ActionBuilder; selected(boolean value). Set the selected property of the action. ActionTools.ActionBuilder; selected(ObservableValue<Boolean> value). Bind the selected property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; text(String value). Set the text property of the action. ActionTools.ActionBuilder; text(ObservableValue<String> value). Bind the text property of the action to an ObservableValue, bidirectionally if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. text; public ActionTools.ActionBuilder text(String value); Set the text property of the action. Parameters:; value - ; Returns:; this builder. selectable; public ActionTools.ActionBuilder selectable(boolean isSelectable); Sets the selectable property of the action. Parameters:; isSelectable - ; Returns:; this builder. longText; public ActionTools.ActionBuilder longText(String value); Set the long text property of the action. Parameters:; value - ; Returns:; this builder. graphic; public ActionTools.ActionBuilder graphic(Node value); Set the graphic property of the action. Parameters:; value - ; Returns:; this builder. accelerator; public ActionTools.ActionBuilder accelerator(KeyCombination value); Set the accelerator property of the action. Parameters:; value - ; Returns:; this builder. selected; public ActionTools.ActionBuilder selected(boolean value); Set the selected property of the action. Parameters:; value - ; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html:2579,hash,hashCode,2579,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,1,['hash'],['hashCode']
Security,"rchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initia",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:3181,hash,hashCode,3181,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['hash'],['hashCode']
Security,"readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:2654,hash,hashCode,2654,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['hash'],['hashCode']
Security,"readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; public boolean suggestNeighbor(ParallelTileObject pto); Register a neighboring tile, if it intersects with the bounds of this one. Parameters:; pto - ; Returns:. updateStatus; public void updateStatus(ParallelTileObject.Status status); Notify the object if it is currently being processed.; ; This is used to update how it is displayed (here implemented using a classification). Parameters:; status - . getStatus; public ParallelTileObject.Status getStatus(); Get the current status (pending, processing or done). Returns:. isProcessing; public boolean isProcessing(); Returns true if setIsProcessing(true) has recently been called. Returns:. isComplete; public boolean isComplete(); Returns true if setComplete() has been called. Returns:. setComplete; public void setComplete(boolean wasCancelled); Notify the tile that its processing is done.; ; This both changes its display color, and triggers a check to see if overl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:3281,hash,hashCode,3281,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,1,['hash'],['hashCode']
Security,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2173,hash,hashCode,2173,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['hash'],['hashCode']
Security,"redImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:4101,hash,hashCode,4101,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['hash'],['hashCode']
Security,"referred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unli",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:5556,hash,hashCode,5556,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['hash'],['hashCode']
Security,"result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3978,hash,hashCode,3978,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['hash'],['hashCode']
Security,"rete Methods. Modifier and Type; Method; Description; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:2449,hash,hashCode,2449,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['hash'],['hashCode']
Security,"rfaces:; Serializable, Comparable<ParallelTileObject.Status>, Constable. Enclosing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Tile processing complete. Method Details. values; public static ParallelTileObject.Status[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ParallelTileObject.Status valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html:1584,hash,hashCode,1584,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,1,['hash'],['hashCode']
Security,"ription; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2090,hash,hashCode,2090,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,1,['hash'],['hashCode']
Security,"ription; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1677,hash,hashCode,1677,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['hash'],['hashCode']
Security,"rlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:1684,hash,hashCode,1684,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['hash'],['hashCode']
Security,"rm. ColorTransformTypeAdapter() - Constructor for class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; combineROIs(ROI, ROI, RoiTools.CombineOp) - Static method in class qupath.lib.roi.RoiTools. Combine two shape ROIs together. combineSelectedAnnotations(ImageData<?>, RoiTools.CombineOp) - Static method in class qupath.lib.gui.commands.Commands. Combine the selected annotations for the specified hierarchy. comboPasteEscape - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTask",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125390,access,access,125390,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"rned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1761,hash,hashCode,1761,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['hash'],['hashCode']
Security,"roviderClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. Type Parameters:; T - ; Parameters:; providerClass - ; uri - ; args - ; Returns:. getURI; public URI getURI(); Get the URI used by this builder. Returns:. getArgs; public String[] getArgs(); Get the args array. This returns a clone of any original array. Returns:. buildOriginal; protected ImageServer<T> buildOriginal(); throws Exception. Specified by:; buildOriginal in class ImageServerBuilder.AbstractServerBuilder<T>; Throws:; Exception. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServerBuilder.ServerBuilder; Get a list of URIs required by this builder.; The purpose is to identify resources that are required. Returns:; See Also:. ImageServerBuilder.ServerBuilder.updateURIs(Map). updateURIs; public ImageServerBuilder.ServerBuilder<T> updateURIs(Map<URI,URI> updateMap); Description copied from interface: ImageServerBuilder.ServerBuilder; Update the URIs required by this builder.; The purpose is to handle resources that may have moved (e.g. files).; Because ServerBuilder should be immutable, this returns a new builder. Parameters:; updateMap - ; Returns:; See Also:. ImageServerBuilder.ServerBuilder.getURIs(). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:4369,hash,hashCode,4369,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,3,['hash'],['hashCode']
Security,"rred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. detectVendor; public static String detectVendor(String path); Try to detect the vendor of the image at the specified path.; This will attempt to load OpenSlide if it has not already been loaded. Parameters:; path - the image path (usually an absolute file path); Returns:; a vendor string if available, or null if OpenSlide could not be loaded or does not recognize the file. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:3041,access,access,3041,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['access'],['access']
Security,"rs.BooleanParameter. All Implemented Interfaces:; Serializable, Parameter<Boolean>. public class BooleanParameter; extends Object; Parameter that can take on true of false value - or null.; ; May be displayed as a checkbox. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Boolean; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Boolean>; duplicate(). Create a new Parameter with the same text and value. Boolean; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Boolean; getValue(). Get the current set value (may be null). Boolean; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:1437,hasH,hasHelpText,1437,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['hasH'],['hasHelpText']
Security,"rtPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewConsole();  ; protected ScriptEditorControl<? extends Region>; getNewEditor();  . Methods inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; addNewScript, currentLanguageProperty, currentSyntaxProperty, getClipboardText, getCurrentConsoleControl, getCurrentEditorControl, getCurrentLanguage, getCurrentScriptTab, getCurrentSyntax, getCurrentText, getSelectedText, getStage, pasteFromClipboard, promptToSetFontSize, scriptRunning, sendLogToConsoleProperty, showEditor, showScript, showScript, supportsFile. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RichScriptEditor; public RichScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getNewEditor; protected ScriptEditorControl<? extends Region> getNewEditor(). Overrides:; getNewEditor in class DefaultScriptEditor. applyCompletion; protected void applyCompletion(EditableText control,; AutoCompletions.Completion completion); Insert the text from the completion to the editable text. Parameters:; control - ; completion - . getNewConsole; protected ScriptEditorControl<? extends Region> getNewConsole(). Overrides:; getNewConsole in class DefaultScriptEditor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html:2613,hash,hashCode,2613,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,1,['hash'],['hashCode']
Security,"ructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the standard deviation of all non-NaN values that were added. Returns:. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:2065,hash,hashCode,2065,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,1,['hash'],['hashCode']
Security,"rver. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:2794,hash,hashCode,2794,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['hash'],['hashCode']
Security,"r | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter.OMEPyramidSeries. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Enclosing class:; OMEPyramidWriter. public static class OMEPyramidWriter.OMEPyramidSeries; extends Object; Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; writePyramid(String path). Deprecated.; use writeSeries(String) instead. void; writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series). Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. void; writeSeries(String path). Write an image to the given file. void; writeSeries(IFormatWriter writer,; IMetadata meta,; int series). Append an image as a specific series. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writePyramid; @Deprecated; public void writePyramid(String path); throws FormatException,; IOException; Deprecated.; use writeSeries(String) instead. Write an OME-TIFF pyramidal image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writeSeries; public void writeSeries(String path); throws FormatException,; IOException; Write an image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writePyramid; @Deprecated; public void writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series); throws FormatException,; IOException; Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. Append an image as a specific series to a pyramidal OME TIFF. Parameters:; writer - the current writer; it should already be initialized, with metadata and ID set; meta - the metadata, which should already have been initialized",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html:1281,hash,hashCode,1281,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,1,['hash'],['hashCode']
Security,"s are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask); Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Parameters:; ipMarker - ; ipMask - ; Returns:. openingByReconstruction; public static ImageProcessor openingByReconstruction(ImageProcessor ip,; double radius); Apply opening by reconstruction, with the specified minimum filter radius. Parameters:; ip - ; radius - ; Returns:. closingByReconstruction; public static ImageProcessor closingByReconstruction(ImageProcessor ip,; double radius); Apply a morphological closing by reconstruction. Parameters:; ip - ImageProcessor to process; radius - minimum filter radius; Returns:; processed image. imposeMinima; public static void imposeMinima(FloatProcessor fp,; Roi roi); Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. Parameters:; fp - ; roi - . imposeMaxima; public static void imposeMaxima(FloatProcessor fp,; Roi roi); Ensure that a FloatProcessor only has regi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:3213,validat,validateMarkerMask,3213,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,2,['validat'],['validateMarkerMask']
Security,"s child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569299,hash,hashCode,569299,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"s in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OMEPyramidWriter.ChannelExportType DEFAULT; Leave it up to the writer to choose the appropriate method. INTERLEAVED; public static final OMEPyramidWriter.ChannelExportType INTERLEAVED; Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR; public static final OMEPyramidWriter.ChannelExportType PLANAR; Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). IMAGES; public static final OMEPyramidWriter.ChannelExportType IMAGES; Channels are stored as separate images (this is not yet supported!). Method Details. values; public static OMEPyramidWriter.ChannelExportType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html:1896,hash,hashCode,1896,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,1,['hash'],['hashCode']
Security,"s qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569658,hash,hashCode,569658,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"s. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:1933,hash,hashCode,1933,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,1,['hash'],['hashCode']
Security,"s. Static functions to help work with RGB(A) colors using packed ints. ColorToolsAwt. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:9786,access,access,9786,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"s. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:3233,hash,hashCode,3233,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['hash'],['hashCode']
Security,"s. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useSystemMenubar; @Deprecated; public static BooleanProperty useSystemMenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:23752,hash,hashCode,23752,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['hash'],['hashCode']
Security,"s.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify objects based on a single measurement. SingleMeasurementClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SingleMeasurementClassificationCommand. Constructor. singleSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if only one object has been selected, accessible by getSelectedObject();. size - Variable in class qupath.lib.analysis.stats.RunningStatistics;  ; size() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Number of entries in the array. size() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of non-NaN values added. size() - Method in interface qupath.lib.measurements.MeasurementList. Returns the number of measurements in the list. size() - Method in class qupath.lib.plugins.workflow.Workflow. Total number of steps in the workflow. size() - Method in class qupath.opencv.dnn.DnnShape. Total number of elements in a blob with this shape; This is the product of the lengths returned by DnnShape.getShape() or DnnShape.UNKNOWN_SHAPE. size(double, double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the preferred size ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:979960,access,accessible,979960,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessible']
Security,"s; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interface SimpleImage; Returns:. getHeight; public int getHeight(); Descriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1347,hash,hashCode,1347,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['hash'],['hashCode']
Security,"s<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2149,hash,hashCode,2149,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['hash'],['hashCode']
Security,"sFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkflow(); Get a workflow representing a history of the processing steps applied to the ImageData. Returns:. setColorDeconvolution",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:4172,hash,hashCode,4172,javadoc/docs/qupath/lib/images/ImageData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html,1,['hash'],['hashCode']
Security,"senting the pixel height, in the stored units. double; getPixelHeightMicrons(). Get the pixel height in microns, or Double.NaN if this is unknown. String; getPixelHeightUnit(). Get a String representation of the preferred pixel height unit. Number; getPixelWidth(). Get the numeric value representing the pixel width, in the stored units. double; getPixelWidthMicrons(). Get the pixel width in microns, or Double.NaN if this is unknown. String; getPixelWidthUnit(). Get a String representation of the preferred pixel width unit. double; getTimepoint(int ind). Get the time for the specified time point, or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. Number; getZSpacing(). Get the numeric value representing the z-spacing, in the stored units. double; getZSpacingMicrons(). Get the z-spacing in microns, or Double.NaN if this is unknown. String; getZSpacingUnit(). Get a String representation of the preferred z-spacing unit. int; hashCode();  ; boolean; hasPixelSizeMicrons(). Returns true if the pixel width and height information in microns is known. boolean; hasZSpacingMicrons(). Returns true if the z-spacing is known in microns. int; nTimepoints(). Get the number of known time points. String; toString();  ; boolean; unitsMatch2D(). Returns true if the units for pixel width and height are the same. boolean; unitsMatch3D(). Returns true if the units for pixel width, height and z-spacing are the same. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. PIXEL; public static final String PIXEL; String to represent 'pixel' units. This is the default when no pixel size calibration is known. See Also:. Constant Field Values. MICROMETER; public static final String MICROMETER; String to represent 'micrometer' units. Z_SLICE; public static final String Z_SLICE; String to represent 'z-slice' units. See Also:. Constant Field Values. Method Details. createScaledInstance",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:2942,hash,hashCode,2942,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,1,['hash'],['hashCode']
Security,"should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2642,hash,hashCode,2642,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['hash'],['hashCode']
Security,"sionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1366,secur,security,1366,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['secur'],['security']
Security,"some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isTitle(). Returns true if the parameter should be considered a title. boolean; isValidInput(String value). Always returns false. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:2273,hash,hashCode,2273,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['hash'],['hashCode']
Security,"splayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. values; public static HistogramChart.DisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.DisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:1512,hash,hashCode,1512,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,1,['hash'],['hashCode']
Security,"ss; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1144,access,access,1144,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['access'],['access']
Security,"ss qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get all selected objects that are instances of a supported class. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:2222,hash,hashCode,2222,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['hash'],['hashCode']
Security,"st<PathObject>; createAnnotations(ROI parent). Create a list of PathAnnotationObject tiles from the input. List<Geometry>; createGeometries(Geometry parent). Create a list of Geometry tiles from the input. List<PathObject>; createObjects(ROI parent,; Function<ROI,PathObject> creator). Create a list of PathObject tiles from the input. List<ROI>; createROIs(ROI parent). Create a list of ROI tiles from the input. List<PathObject>; createTiles(ROI parent). Create a list of PathTileObject tiles from the input. Tiler.TileAlignment; getAlignment(). Get the tiling alignment. boolean; getCropToParent(). Check if the tiler is set to crop the output to the input parent. boolean; getFilterByCentroid(). Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. int; getTileHeight(). Get the height of output tiles. int; getTileWidth(). Get the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getTileWidth; public int getTileWidth(); Get the width of output tiles. Returns:; the width in pixels. getTileHeight; public int getTileHeight(); Get the height of output tiles. Returns:; the height in pixels. getCropToParent; public boolean getCropToParent(); Check if the tiler is set to crop the output to the input parent. Returns:; whether the tiler is set to crop output to the parent object. getAlignment; public Tiler.TileAlignment getAlignment(); Get the tiling alignment. Returns:; The current setting. getFilterByCentroid; public boolean getFilterByCentroid(); Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Returns:; The current setting. createGeometries; public List<Geometry> createGeometries(Geometry parent); Create a list of Geometry tiles from the input. These may; not all be rectangular based on the settings used. Parameters:; parent - the object that wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html:2285,hash,hashCode,2285,javadoc/docs/qupath/lib/objects/utils/Tiler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html,1,['hash'],['hashCode']
Security,"stable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1700,hash,hashCode,1700,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['hash'],['hashCode']
Security,"str; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant F",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1200,validat,validation,1200,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['validat'],['validation']
Security,"systemMenubarProperty(). static void; manageChildMenuBar(MenuBar menuBar). Request that a menubar is managed as a child menubar. static void; manageMainMenuBar(MenuBar menuBar). Request that a menubar is managed as a main menubar. static BooleanProperty; overrideSystemMenuBarProperty(). Property requesting that the system menubar should never be used for managed menubars. static void; setOverrideSystemMenuBar(boolean doOverride). Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemMenuBarProperty(). Constructor Details. SystemMenuBar; public SystemMenuB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:3029,hash,hashCode,3029,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,1,['hash'],['hashCode']
Security,"t Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; public static final PathObjectHierarchyEvent.HierarchyEventType OTHER_STRUCTURE_CHANGE; A more complex structural change was made than simply either adding or removing objects. CHANGE_CLASSIFICATION; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_CLASSIFICATION; A change was made to one or more object classifications. CHANGE_MEASUREMENTS; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_MEASUREMENTS; A change was made to one or more object measurements. CHANGE_OTHER; public static final PathObjectHierarchyEvent.HierarchyEventType C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:2158,hash,hashCode,2158,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,1,['hash'],['hashCode']
Security,"t of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tiler.TileAlignment TOP_CENTER. TOP_RIGHT; public static final Tiler.TileAlignment TOP_RIGHT. CENTER_LEFT; public static final Tiler.TileAlignment CENTER_LEFT. CENTER; public static final Tiler.TileAlignment CENTER. CENTER_RIGHT; public static final Tiler.TileAlignment CENTER_RIGHT. BOTTOM_LEFT; public static final Tiler.TileAlignment BOTTOM_LEFT. BOTTOM_CENTER; public static final Tiler.TileAlignment BOTTOM_CENTER. BOTTOM_RIGHT; public static final Tiler.TileAlignment BOTTOM_RIGHT. Method Details. values; public static Tiler.TileAlignment[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html:1808,hash,hashCode,1808,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,1,['hash'],['hashCode']
Security,"t value will be ignored. Parameters:; request - ; Returns:. intersects; public boolean intersects(double x2,; double y2,; double w2,; double h2); Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. Parameters:; x2 - ; y2 - ; w2 - ; h2 - ; Returns:. contains; public boolean contains(int x,; int y,; int z,; int t); Check if this region contains a specified coordinate. Parameters:; x - ; y - ; z - ; t - ; Returns:. getX; public int getX(); Get the x coordinate of the region bounding box (top left). Returns:. getY; public int getY(); Get the y coordinate of the region bounding box (top left). Returns:. getWidth; public int getWidth(); Get the width of the region bounding box. Returns:. getHeight; public int getHeight(); Get the height of the region bounding box. Returns:. getZ; public int getZ(); Get the z-slice index for the region. Returns:. getT; public int getT(); Get the time point index for the region. Returns:. getMinX; public int getMinX(); Get the x coordinate of the top left of the region bounding box. Returns:. getMaxX; public int getMaxX(); Get the x coordinate of the bottom right of the region bounding box. Returns:. getMinY; public int getMinY(); Get the y coordinate of the top left of the region bounding box. Returns:. getMaxY; public int getMaxY(); Get the y coordinate of the bottom right of the region bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Get the z-slice and time point for this region as an ImagePlane. Returns:; Since:; v0.4.0 (replaces getPlane() for better consistency with other classes). getPlane; @Deprecated; public ImagePlane getPlane(); Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). Get the z-slice and time point for this region as an ImagePlane. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html:5487,hash,hashCode,5487,javadoc/docs/qupath/lib/regions/ImageRegion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html,3,['hash'],['hashCode']
Security,"t; qupath.imagej.processing.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform for ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static void; watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8). Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. watershedExpandLabels; public static void watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8); Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging.; The expansion is performed in-place. Parameters:; ipLabels - labeled image, where values ≤ 0 represent the background; maxDistance - maximum expansion distance, in pixels; conn8 - if true, use 8-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8); Apply a watershed transform. Parameters:; ip - intensity image; ipLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html:1384,hash,hashCode,1384,javadoc/docs/qupath/imagej/processing/Watershed.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html,1,['hash'],['hashCode']
Security,"tLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. LEGACY_KEY_UNIQUE_ID; @Deprecated; public static final String LEGACY_KEY_UNIQUE_ID; Deprecated.; The key used before v0.4.0 to represent a unique (usually patient) ID.; This was replaced by #KEY_CASE_ID. See Also:. Constant Field Values. KEY_CASE_ID; public static final String KEY_CASE_ID; Metadata key to store a case identify for the TMA core.; This can be used to group cores that belong to the same case. See Also:. Constant Field Values. KEY_OVERALL_SURVIVAL; public static final String KEY_OVERALL_SURVIVAL; Metadata key for an overall survival (temporal) value. See Also:. Constant Field Values. KEY_RECURRENCE_FREE_SURVIVAL; public static final String KEY_RECURRENCE_FREE_SURVIVAL; Metadata key for an recurrence-free survival (temporal) value. See Also:. Constant Field Values. KEY_OS_CENSORED; public static final String KEY_OS_CENSORED; Metadata key for an overall survival censored flag. See Also:. Constant Field Values. KEY_R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:3610,hash,hashCode,3610,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['hash'],['hashCode']
Security,"tProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1539,hash,hashCode,1539,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['hash'],['hashCode']
Security,"tSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries.; Note that if the pathClass is null or thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; pathClass - ; thickness - ; Returns:. getDerivedBoundaryStrategy; public static BoundaryStrategy getDerivedBoundaryStrategy(double thickness); Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries.; Note that if the thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; thickness - ; Returns:. getSkipBoundaryStrategy; public static BoundaryStrategy getSkipBoundaryStrategy(); Create a boundary strategy that ignores boundaries, not using them for classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:2562,hash,hashCode,2562,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,1,['hash'],['hashCode']
Security,"tail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElement, ; an attempt will be made to convert it using GsonTools.; Returns:; a view depicting element fields. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1228,hash,hashCode,1228,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,2,"['access', 'hash']","['accessed', 'hashCode']"
Security,"takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion text. static Comparator<AutoCompletions.Completion>; getComparator(). Get a comparator to order completions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SUBSTRING_TOKENIZER; public static final AutoCompletions.CompletionTokenizer SUBSTRING_TOKENIZER; A completion tokenizer that simply takes the first part of the text up to the caret position. JAVA_TOKENIZER; public static final AutoCompletions.CompletionTokenizer JAVA_TOKENIZER; A completion tokenizer that extracts a token used to determine Java completions. Constructor Details. AutoCompletions; public AutoCompletions(). Method Details. getComparator; public static Comparator<AutoCompletions.Completion> getComparator(); Get a comparator to order completions. Returns:. createJavaCompletion; public static AutoCompletions.Completion createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText); Create a new completion with fixed display and completion text. Parameters:; declaringClass - the declaring class; choose null for static imports; displayText - the text to display; completionText - the te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html:2189,hash,hashCode,2189,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,1,['hash'],['hashCode']
Security,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:5802,sanitiz,sanitize,5802,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,6,['sanitiz'],['sanitize']
Security,"tatic methods used by the TMA dearrayer plugin. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although this may be (slightly) rotated; and some cores may be missing (but at least a few should be present in all rows / columns of the grid). Parameters:; bp - - the TMA slide image, after thresholding.; coreDiameterPx - - approximate diameter of a single TMA core, in pixels; nHorizontal - - number of cores per row of the full grid; nVertical - - number of cores per column of the full grid; roi - - optional region of interest determining where cores should be found (may be useful if edge artifa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:1484,hash,hashCode,1484,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['hash'],['hashCode']
Security,"tatic void; writeImage(ImageServer<BufferedImage> server,; String path). Static helper method to write an image using Bio-Formats. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression). Static helper method to write an image using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region). Static helper method to write an image region using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region,; boolean allZ,; boolean allT). Static helper method to write an image using Bio-Formats for a defined region with the specified compression, optionally including all ; z-slices or timepoints. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writeImage; public void writeImage(String path); throws FormatException,; IOException; Write an image consisting of one or more series to the specified path. Parameters:; path - ; Throws:; FormatException; IOException; See Also:. createWriter(Collection); createWriter(OMEPyramidSeries...). createWriter; public static OMEPyramidWriter createWriter(OMEPyramidWriter.OMEPyramidSeries... series); Create a writer capable of writing an image with one or more series. Parameters:; series - ; Returns:. createWriter; public static OMEPyramidWriter createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries> series); Create a writer capable of writing an image with a collection of series. Parameters:; series - ; Returns:. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws FormatException,; IOException; Static helper method to write an image using Bio-Formats.; This is primarily intended ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html:3275,hash,hashCode,3275,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,1,['hash'],['hashCode']
Security,"tch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3591,hash,hashCode,3591,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['hash'],['hashCode']
Security,"tected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3305,hash,hashCode,3305,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['hash'],['hashCode']
Security,"tected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3800,hash,hashCode,3800,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['hash'],['hashCode']
Security,"ted Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:1581,hash,hashCode,1581,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,1,['hash'],['hashCode']
Security,"tem menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1875,hash,hashCode,1875,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['hash'],['hashCode']
Security,"tends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathTileObject; public PathTileObject(); Default constructor. Should not be used directly, instead use PathObjects.createTileObject(ROI). PathTileObject; protected PathTileObject(ROI pathROI). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html:2412,hash,hashCode,2412,javadoc/docs/qupath/lib/objects/PathTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html,1,['hash'],['hashCode']
Security,"tener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:1827,hash,hashCode,1827,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,1,['hash'],['hashCode']
Security,"ter can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:2481,hash,hashCode,2481,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['hash'],['hashCode']
Security,"ter can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOExc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:2475,hash,hashCode,2475,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['hash'],['hashCode']
Security,"terface Parameter<S>. Type Parameters:; S - . All Superinterfaces:; Serializable. All Known Implementing Classes:; BooleanParameter, ChoiceParameter, DoubleParameter, EmptyParameter, IntParameter, NumericParameter, StringParameter. public interface Parameter<S>; extends Serializable; Interface defining algorithm parameters, which need to be displayed to users somehow. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Details. getDefaultValue; S getDefaultValue(); Get a default value to use if the Parameter has not been otherwise set. Returns:. setValue; boolean setValue(S value); Set the Parameter to have a specified value. Parameters:; value - ; Returns:. setStringLastValue; boolean setStringLastValue(Locale locale,; String value); Set last value using a string; implementing cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html:1363,hasH,hasHelpText,1363,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,1,['hasH'],['hasHelpText']
Security,"th.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matric",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1344,hash,hashCode,1344,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,1,['hash'],['hashCode']
Security,th.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570253,hash,hashCode,570253,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"th.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570914,hasH,hasHelpText,570914,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hasH'],['hasHelpText']
Security,"th.lib.roi.interfaces.ROI.RoiType. All Implemented Interfaces:; Serializable, Comparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ROI.RoiType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html:1487,hash,hashCode,1487,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,1,['hash'],['hashCode']
Security,"th.opencv.tools.OpenCVTools. Convert a BufferedImage to an OpenCV Mat. imageToMatBGR(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. imageToMatRGB(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. imageTypeSettingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify how setting the image type should be handled for images when they are opened for the first time. imageUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). ImageWriter<T> - Interface in qupath.lib.images.writers. Interface for defining class that can write images. ImageWriterTools - Class in qupath.lib.images.writers. Static methods to access ImageWriter objects and write images. ImageWriterTools() - Constructor for class qupath.lib.images.writers.ImageWriterTools;  ; IMMUNE_CELLS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Immune cell classification. IMMUNE_CELLS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Immune cell classification. ImmutableDimension - Class in qupath.lib.geom. An immutable alternative to Java's AWT Dimension. IMPORT_IMAGES - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; IMPORT_IMAGES_LEGACY - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; importDearrayedTMAData(File) - Static method in class qupath.lib.gui.tma.TMADataIO. Import a TMA grid from an exported TMA analysis file, i.e. importFromCSV(File, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a file into the TMAGrid of an object hi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:597676,access,access,597676,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"thTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. See Also:. getSelectedTool(); setSelectedTool(PathTool); selectedToolProperty(). lockSelectedTool; public BooleanProperty lockSelectedToolProperty; Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. See Also:. lockSelectedToolProperty(). previousSelectedTool; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty; Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. See Also:. getPreviousSelectedTool(); previousSelectedToolProperty(). Field Details. MOVE_TOOL; @ActionAccelerator(""m""); @ActionConfig(""Tools.m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:3053,hash,hashCode,3053,javadoc/docs/qupath/lib/gui/ToolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html,1,['hash'],['hashCode']
Security,"ther a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:3156,hash,hashCode,3156,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['hash'],['hashCode']
Security,"this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:3027,hash,hashCode,3027,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['hash'],['hashCode']
Security,"thod Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMerger; createSharedClassificationMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold). Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance). Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. static ObjectMerger; createTouchingMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. List<PathObject>; merge(Collection<? extends PathObject> pathObjects). Calculate the result of applying the merging strategy to the input objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will be replaced by a new; objects with a new ROI.; ; New objects will be assigned new IDs.; Classifications will be preserved, but other measurements and properties will not be.; ; No guarantees are made about the mutability or ordering of the returned list. Parameters:; pathObjects - the input objects for which merges should be calculated; Returns:; a list of objects, with the same number or fewer than the input. createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold); Create an object merger that uses a shared boundary IoU criterion and defaul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:1652,hash,hashCode,1652,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['hash'],['hashCode']
Security,"thod. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1323,hash,hashCode,1323,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,1,['hash'],['hashCode']
Security,"ting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). Get the Preferences object for storing user preferences.; ; Note that the preferences object returned by this method must not be retained and reused,; because it may be invalidated by a call to resetPreferences().; Rather, as far as possible other methods of this class should be used rather than accessing the; Preferences directly.; . Returns:. savePreferences; public static boolean savePreferences(); Save the preferences. Returns:. resetPreferences; public static void resetPreferences(); Reset the preferences to their defaults. This requires QuPath to be restarted. scrollSpeedProperty; public static IntegerProperty scrollSpeedProperty(); Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. Returns:. getScaledScrollSpeed; public static double getScaledScrollSpeed(); Get scroll speed scaled as a proportion and forced to be in the range 0-1. For example, 100% becomes 1. Returns:. navigationSpeedProperty; public static IntegerProperty navigationSpeedProperty(); Percentage to scale navigation speed. Returns:; navigationSpeedProperty. getScaledNavigationSpeed; public static double getScaledNavigationSpeed(); Get navigation speed scaled as a proportion and forced to be in the range 0-",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:46748,access,accessing,46748,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['accessing']
Security,"tion of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:2616,hash,hashCode,2616,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['hash'],['hashCode']
Security,"tions. Exists mostly to ensure consisting naming (including capitalization). Field Summary; Fields. Modifier and Type; Field; Description; static final PathClass; IGNORE. Ignore classification, indicating what should not be further measured (e.g. static final PathClass; IMAGE_ROOT. Root object classification. static final PathClass; IMMUNE_CELLS. Immune cell classification. static final PathClass; NECROSIS. Necrosis classification. static final PathClass; NEGATIVE. General class to represent something 'negative'. static final PathClass; OTHER. Other classification. static final PathClass; POSITIVE. General class to represent something 'positive'. static final PathClass; REGION. Region class. static final PathClass; STROMA. Stroma classification. static final PathClass; TUMOR. Tumor classification. Constructor Summary; Constructors. Constructor; Description; StandardPathClasses();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TUMOR; public static final PathClass TUMOR; Tumor classification. STROMA; public static final PathClass STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClass IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClass IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClass IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClass NECROSIS; Necrosis classification. OTHER; public static final PathClass OTHER; Other classification. REGION; public static final PathClass REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further annotations inside. POSITIVE; public static final PathClass POSITIVE; Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html:1620,hash,hashCode,1620,javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,1,['hash'],['hashCode']
Security,"tions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:59765,access,access,59765,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"tiscaleFeatures.MultiscaleResultsBuilder; retainHessian(boolean retain). Optionally retain the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaX(double sigma). Set all Gaussian sigma values for the horizontal filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaXY(double sigma). Set all Gaussian sigma values (x, y) to the same value. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaY(double sigma). Set all Gaussian sigma values for the vertical filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaZ(double sigma). Set all Gaussian sigma values for the z-dimension filter. MultiscaleFeatures.MultiscaleResultsBuilder; structureTensorEigenvalues(boolean calculate). Calculate the eigenvalues of the structure tensor (not yet implemented!). MultiscaleFeatures.MultiscaleResultsBuilder; weightedStdDev(boolean calculate). Calculate a Gaussian-weighted standard deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(); Default constructor. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features); Constructor prepared to calculate specified features. Parameters:; features - . Method Details. gaussianSmoothed; public MultiscaleFeatures.MultiscaleResultsBuilder gaussianSmoothed(boolean calculate); Calculate the Gaussian-smoothed image. Parameters:; calculate - ; Returns:. paddingXY; public MultiscaleFeatures.MultiscaleResultsBuilder paddingXY(int padding); Specify the number of pixels that the input image is padded (left, right, above, below). ; This padding will be stripped prior to outputting the results. Default is 0. Parameters:; padding - ; Returns:. weightedStdDev; public MultiscaleFeatures.MultiscaleResultsBuilder weightedStdDev(boolean calculate); Calculate a Gaussian-weighted standard deviation. Parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:3711,hash,hashCode,3711,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,1,['hash'],['hashCode']
Security,"to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2276,hash,hashCode,2276,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['hash'],['hashCode']
Security,"tring form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.classifiers.Normalization. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Returns the enum const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1077461,validat,validation,1077461,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['validat'],['validation']
Security,"trol.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  ; final org.controlsfx.control.action.Action; SLIDE_LABEL;  ; final org.controlsfx.control.action.Action; VIEW_TRACKER;  ; final Object; zoomActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_ANALYSIS_PANEL; public final org.controlsfx.control.action.Action SHOW_ANALYSIS_PANEL. COMMAND_LIST; @ActionConfig(""Action.View.commandList""); @ActionAccelerator(""shortcut+l""); public final org.controlsfx.control.action.Action COMMAND_LIST. RECENT_COMMAND_LIST; @ActionConfig(""Action.View.recentCommands""); @ActionAccelerator(""shortcut+p""); public final org.controlsfx.control.action.Action RECENT_COMMAND_LIST. SEP_0; public final org.controlsfx.control.action.Action SEP_0. BRIGHTNESS_CONTRAST; public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SEP_1; public final org.controlsfx.control.action.Action SEP_1. multiviewActions; @ActionMenu(""Menu.View.Multiview""); public final ViewMenuActions.MultiviewActions multiviewActions. CHANNEL_VIEWER; @ActionConfig(""Action.View.channelViewer""); public final org.controlsfx.control.action.Action CHANNEL_VIEWER. MINI_VIEWER; @ActionConfig(""Action.View.miniViewer""); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html:3125,hash,hashCode,3125,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"trolsfx.control.action.Action; REMOVE_FRAGMENTS;  ; final org.controlsfx.control.action.Action; RESOLVE_HIERARCHY;  ; final org.controlsfx.control.action.Action; RIGID_OBJECT_EDITOR;  ; final org.controlsfx.control.action.Action; SELECT_ALL_ANNOTATION;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final org.controlsfx.control.action.Action; SIMPLIFY_SHAPE;  ; final org.controlsfx.control.action.Action; SPECIFY_ANNOTATION;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS_BY_LINES;  ; final org.controlsfx.control.action.Action; TRANSFER_ANNOTATION;  . Constructor Summary; Constructors. Constructor; Description; AnnotationActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SPECIFY_ANNOTATION; @ActionConfig(""Action.Objects.Annotation.specify""); public final org.controlsfx.control.action.Action SPECIFY_ANNOTATION. SELECT_ALL_ANNOTATION; @ActionAccelerator(""shortcut+shift+a""); @ActionConfig(""Action.Objects.Annotation.fullImage""); public final org.controlsfx.control.action.Action SELECT_ALL_ANNOTATION. SEP_5; public final org.controlsfx.control.action.Action SEP_5. INSERT_INTO_HIERARCHY; @ActionAccelerator(""shortcut+shift+i""); @ActionConfig(""Action.Objects.Annotation.hierarchyInsert""); public final org.controlsfx.control.action.Action INSERT_INTO_HIERARCHY. RESOLVE_HIERARCHY; @ActionAccelerator(""shortcut+shift+r""); @ActionConfig(""Action.Objects.Annotation.hierarchyResolve""); public final org.controlsfx.control.action.Action RESOLVE_HIERARCHY. SEP_6; public final org.controlsfx.control.action.Action SEP_6. RIGID_OBJECT_EDITOR; @ActionAccelerator(""shortcut+shift+t""); @ActionConfig(""Action.Objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html:2154,hash,hashCode,2154,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,1,['hash'],['hashCode']
Security,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:2459,hash,hashCode,2459,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,1,['hash'],['hashCode']
Security,"ts Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:1566,hash,hashCode,1566,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html,1,['hash'],['hashCode']
Security,"ts.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Class<T> cls); throws IOException; Load a project from a local file. Parameters:; fileProject - ; cls - ; Returns:; Throws:; IOException. getProjectExtension; public static String getProjectExtension(boolean includePeriod); Get the default exten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html:1471,hash,hashCode,1471,javadoc/docs/qupath/lib/projects/ProjectIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html,1,['hash'],['hashCode']
Security,"turns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3508,hash,hashCode,3508,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['hash'],['hashCode']
Security,"ty(). Return the String property of this ViewTracker. int; nFrames(). Return the number of recorded frames. BooleanProperty; recordingProperty(). Return the recording property of this ViewTracker. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setFile(File file). Set the file for this ViewTracker. void; setName(String name). Set the name of this ViewTracker. void; setOptionalParameters(boolean ZandT,; boolean cursorTracking,; boolean activeToolTracking,; boolean eyeTracking). Set optional parameters for this ViewTracker. void; setRecording(boolean recording). Set the recording property of this ViewTracker. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. recording; public BooleanProperty recordingProperty; Return the recording property of this ViewTracker. See Also:. isRecording(); setRecording(boolean); recordingProperty(). name; public StringProperty nameProperty; Return the String property of this ViewTracker. See Also:. getName(); setName(String); nameProperty(). cursorTracking; public BooleanProperty cursorTrackingProperty; Return the cursorTracking property of this tracker. See Also:. cursorTrackingProperty(). activeTool; public BooleanProperty activeToolProperty; Return the activeTool property of this tracker. See Also:. activeToolProperty(). eyeTracking; public BooleanProperty eyeTrackingProperty; Return the eyeTracking property of this tracker. See Also:. eyeTrackingProperty(). Field Details. df; protected static final DecimalFormat df. LOG_DELIMITER; protected static final String LOG_DELIMITER. See Also:. Constant Field Values. Method Details. nFrames; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:4857,hash,hashCode,4857,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['hash'],['hashCode']
Security,"uchscreens and trackpads. useSelectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; useSelectedColorProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.comman",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1076101,validat,validateMarkerMask,1076101,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['validat'],['validateMarkerMask']
Security,"uctor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been upda",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1788,hash,hashCode,1788,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,1,['hash'],['hashCode']
Security,"ufferedImage>; pyramidalize(ImageServer<BufferedImage> server,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid. static ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typicall",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3201,access,accessed,3201,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['access'],['accessed']
Security,"ugins.parameters.IntParameter. All Implemented Interfaces:; Serializable, Parameter<Integer>. public class IntParameter; extends NumericParameter<Integer>; Parameter to represent an integer numeric value.; ; May be bounded. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Integer; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Integer>; duplicate(). Create a new Parameter with the same text and value. Integer; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Integer; getValue(). Get the current set value (may be null). Integer; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class jav",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:1472,hasH,hasHelpText,1472,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,1,['hasH'],['hasHelpText']
Security,"ui.images.stores.ColorModelRenderer. All Implemented Interfaces:; ImageRenderer. public class ColorModelRenderer; extends Object; implements ImageRenderer; An ImageRenderer that uses a ColorModel. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorModelRenderer(ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. ColorModel; getColorModel(). Get the ColorModel for this renderer (may be null). long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. void; setColorModel(ColorModel model). Set the color model to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Specified by:; applyTransforms in interface ImageRenderer; Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. setColorModel; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html:1421,hash,hashCode,1421,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,1,['hash'],['hashCode']
Security,"ul 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6413,hash,hashCode,6413,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['hash'],['hashCode']
Security,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:2015,hash,hashCode,2015,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['hash'],['hashCode']
Security,"um and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat by subtracting the mean value and dividing by the standard deviation + eps. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Normalize; public Normalize(). Method Details. minMax; public static ImageOp minMax(double outputMin,; double outputMax); Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'.; ; This method is applied per-channel. Parameters:; outputMin - ; outputMax - ; Returns:. minMax; public static ImageOp minMax(); Normalize the minimum and maximum values of the image to fall into the range 0 - 1.; ; This method is applied per-channel. Returns:. percentile; public static ImageOp percentile(double percentileMin,; double percentileMax); Normalize the image, per channel, using low and high percentiles.; ; This is similar to minMax(), but using low and high percentiles rather than minimum and ; maximum respectively. Approximately 100-percentileMin-percentileMax % of the values then fall in the range 0-1.; ; This method is applied per-channel, with no eps added to the denominator if m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html:2159,hash,hashCode,2159,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,1,['hash'],['hashCode']
Security,"um; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:1993,hash,hashCode,1993,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,1,['hash'],['hashCode']
Security,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1396,hash,hashCode,1396,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,1,['hash'],['hashCode']
Security,"upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27175,access,access,27175,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['access'],['access']
Security,"us.AnalyzeMenuActions.Actions. Enclosing class:; AnalyzeMenuActions. @ActionMenu(""Menu.Analyze""); public class AnalyzeMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COLOR_DECONVOLUTION_REFINE;  ; final org.controlsfx.control.action.Action; CREATE_TILES;  ; final org.controlsfx.control.action.Action; DISTANCE_CENTROIDS;  ; final org.controlsfx.control.action.Action; DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; INTENSITY_FEATURES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SHAPE_FEATURES;  ; final org.controlsfx.control.action.Action; SIGNED_DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SMOOTHED_FEATURES;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COLOR_DECONVOLUTION_REFINE; @ActionConfig(""Action.Analyze.Preprocessing.estimateStainVectors""); public final org.controlsfx.control.action.Action COLOR_DECONVOLUTION_REFINE. CREATE_TILES; @ActionMenu(""Menu.Analyze.Tiles""); @ActionConfig(""Action.Analyze.Tiles.createTiles""); public final org.controlsfx.control.action.Action CREATE_TILES. SEP_0; @ActionMenu(""Menu.Analyze.CellDetection""); public final org.controlsfx.control.action.Action SEP_0. SMOOTHED_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.smoothedFeatures""); public final org.controlsfx.control.action.Action SMOOTHED_FEATURES. INTENSITY_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.intensityFeatures""); public final org.controlsfx.control.action.Action INTENSITY_FEATURES. SHAPE_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.shapeFeatures""); public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html:1451,hash,hashCode,1451,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2384,hash,hashCode,2384,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['hash'],['hashCode']
Security,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html:1435,hash,hashCode,1435,javadoc/docs/qupath/lib/gui/charts/Charts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html,1,['hash'],['hashCode']
Security,"ving relative paths to images in the event that ; both project and images have moved together. Returns:. getNameFromURI; static String getNameFromURI(URI uri); Extract a usable project name from a URI. Parameters:; uri - ; Returns:. getVersion; String getVersion(); The version string for this project, which can be used to distinguish new and older project ; (which may contain different information).; ; This may be null if the version information is not stored. Returns:. getPath; Path getPath(); Get a path to this project, or null if this project is not on a local file system.; ; If not null, the path may be a file or a directory. Returns:; See Also:. ProjectImageEntry.getEntryPath(). createSubProject; Project<T> createSubProject(String name,; Collection<ProjectImageEntry<T>> entries); Create a sub-project that provides a view on the specified entries.; ; The retains exactly the same references and data, i.e. it does not duplicate entries or data files - ; rather it is used to generate projects that provide access to a subset of the entries in the original project. Parameters:; name - the name of the sub-project; entries - the entries to retain within the sub-project; Returns:. isEmpty; boolean isEmpty(); Test if the project contains any images. Returns:. addImage; ProjectImageEntry<T> addImage(ImageServerBuilder.ServerBuilder<T> server); throws IOException; Add an image for a particular ImageServer. Parameters:; server - ; Returns:; Throws:; IOException. addDuplicate; ProjectImageEntry<T> addDuplicate(ProjectImageEntry<T> entry,; boolean copyData); throws IOException; Add an image by duplicating an existing entry.; This retains the same ImageServerBuilder.ServerBuilder, name, description and metadata, but assigns ; a new unique ID. Parameters:; entry - the entry that should be copied; copyData - if true, copy existing image data in addition to other properties; Returns:; the new entry that has been added to the project; Throws:; IOException. getEntry; ProjectImageEnt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:5540,access,access,5540,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['access'],['access']
Security,"w; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Threshold. java.lang.Object; qupath.opencv.ops.ImageOps.Threshold. Enclosing class:; ImageOps. public static class ImageOps.Threshold; extends Object; Thresholding operations. Constructor Summary; Constructors. Constructor; Description; Threshold();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; threshold(double... thresholds). Apply a fixed threshold. static ImageOp; thresholdMeanStd(double... k). Threshold each channel based upon the channel mean and standard deviation. static ImageOp; thresholdMedianAbsDev(double... k). Threshold each channel based upon the channel median and median absolute deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Threshold; public Threshold(). Method Details. threshold; public static ImageOp threshold(double... thresholds); Apply a fixed threshold. Parameters:; thresholds - either a single-element array (to set the same threshold everywhere), or an array with ; one element per channel.; Returns:. thresholdMeanStd; public static ImageOp thresholdMeanStd(double... k); Threshold each channel based upon the channel mean and standard deviation.; The threshold is mean + k * std.dev.. Parameters:; k - ; Returns:. thresholdMedianAbsDev; public static ImageOp thresholdMedianAbsDev(double... k); Threshold each channel based upon the channel median and median absolute deviation.; The threshold is median + k * MAD / 0.6750., where the normalizing factor enables ; k to be comparable to a scale factor applied to a standard deviation (assuming a roughly normal distribution). Parameters:; k - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html:1141,hash,hashCode,1141,javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,1,['hash'],['hashCode']
Security,"would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3247,hash,hashCode,3247,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['hash'],['hashCode']
Security,"xtends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. repeat; public static ImageOp repeat(int numRepeats); Repeat the channels a specified number of times.; This is useful when wishing to apply arithmetic between a single channel and a multi-channel image. Parameters:; numRepeats - ; Returns:. sum; public static ImageOp sum(); Add all channels together, to give a single-channel output. Returns:. mean; public static ImageOp mean(); Average all channels together using the mean, to give a single-channel output. Returns:. minimum; public static ImageOp minimum(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html:1501,hash,hashCode,1501,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,1,['hash'],['hashCode']
Security,"xtends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cach",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:3401,Access,Access,3401,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['Access'],['Access']
Security,"y to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the current image for objects of a fixed type. Parameters:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:22852,Access,Access,22852,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['Access'],['Access']
Security,"y whichever changes were made. PathObjectHierarchyEvent.HierarchyEventType; getEventType(). Get the hierarchy event type. PathObjectHierarchy; getHierarchy(). The hierarchy to which this event refers. Object; getSource(). Get the source that triggered the event. PathObject; getStructureChangeBase(). If this is a structure change event, return the base object, i.e. boolean; isAddedOrRemovedEvent(). Returns true if objects have been added or removed from the hierarchy. boolean; isChanging(). Returns true if changes are still being made, so more events will be fired. boolean; isObjectClassificationEvent(). Returns true if the event indicates that object classifications have changed. boolean; isObjectMeasurementEvent(). Returns true if the event indicates that object measurements have changed. boolean; isStructureChangeEvent(). Returns true if the hierarchy structure has changed, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createStructureChangeEvent; public static PathObjectHierarchyEvent createStructureChangeEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject); Create a hierarchy event indicating that the hierarchy structure has been changed. Parameters:; source - ; hierarchy - ; parentObject - ; Returns:. createObjectAddedEvent; public static PathObjectHierarchyEvent createObjectAddedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectAdded); Create a hierarchy event indicated objects were added. Parameters:; source - ; hierarchy - ; parentObject - ; pathObjectAdded - ; Returns:. createObjectRemovedEvent; public static PathObjectHierarchyEvent createObjectRemovedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectRemoved); Create a hierarchy event ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html:3049,hash,hashCode,3049,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,1,['hash'],['hashCode']
Security,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1283,hash,hashCode,1283,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,4,['hash'],['hashCode']
Security,"y; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BUGS;  ; final org.controlsfx.control.action.Action; CITE;  ; final org.controlsfx.control.action.Action; DEMOS;  ; final org.controlsfx.control.action.Action; DOCS;  ; final org.controlsfx.control.action.Action; FORUM;  ; final org.controlsfx.control.action.Action; HELP_VIEWER;  ; final org.controlsfx.control.action.Action; INFO;  ; final org.controlsfx.control.action.Action; LICENSE;  ; final org.controlsfx.control.action.Action; QUPATH_STARTUP;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SOURCE;  ; final org.controlsfx.control.action.Action; UPDATE;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. QUPATH_STARTUP; @ActionConfig(""Action.Help.welcome""); public final org.controlsfx.control.action.Action QUPATH_STARTUP. HELP_VIEWER; public final org.controlsfx.control.action.Action HELP_VIEWER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. DOCS; @ActionConfig(""Action.Help.docs""); public final org.controlsfx.control.action.Action DOCS. DEMOS; @ActionConfig(""Action.Help.video""); public final org.controlsfx.control.action.Action DEMOS. UPDATE; @ActionConfig(""Action.Help.updates""); public final org.controlsfx.control.action.Action UPDATE. SEP_2; public final org.controlsfx.control.action.Action SEP_2. CITE; @ActionConfig(""Action.Help.cite""); public final org.controlsfx.control.action.Action CITE. BUGS; @ActionConfig(""Action.Help.issues""); public final org.controlsfx.control.action.Action BUGS. FORUM; @ActionConfig(""Action.Help.forum""); public final org.controlsfx.control.action.Action FORUM. SOURCE; @Actio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html:1600,hash,hashCode,1600,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"y; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the exten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1642,hash,hashCode,1642,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,1,['hash'],['hashCode']
Security,"yItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; nam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2900,hash,hashCode,2900,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['hash'],['hashCode']
Security,"yMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percentage of the corresponding total object count.; ; This is useful, for example, to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:1743,hash,hashCode,1743,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,1,['hash'],['hashCode']
Security,"zeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnification; public double getMagnification(); Get the magnification value, or Double.NaN if this is unavailable. Returns:. getPreferredTileWidth; public int getPreferredTileWidth(); Get the preferred tile width, which can be used to optimize pixel requests for large images. Returns:. getPreferredTileHeight; public int getPreferredTileHeight(); Get the preferred tile height, which can be used to optimize pixel requests for large images. Returns:. duplicate; public ImageServerMetadata duplicate(); Duplicate this metatadata. Returns:. getName; public String getName(); Get the image name. Returns:. getChannel; public ImageChannel getChannel(int n); Get the specified channel. Parameters:; n - channel index, starting at 0.; Returns:. getChannels; public List<ImageChannel> getChannels(); Get an unmodifiable list of all channels. Returns:. getClassificationLabels; public Map<Integer,PathClass> getClassificationLabels(); Get map between labels and classification names. This is relevant only where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION, ; otherwise it returns an empty map. Returns:. getChannelType; public ImageServerMetadata.ChannelType getChannelType(); Get the channel type, which can be used to interpret the channels. Returns:. isCompatibleMetadata; public boolean isCompatibleMetadata(ImageServerMetadata metadata); Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). Parameters:; metadata - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:9877,hash,hashCode,9877,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,3,['hash'],['hashCode']
Security,"| ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.Actions. Enclosing class:; EditMenuActions. @ActionMenu(""Menu.Edit""); public class EditMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final EditMenuActions.CopyActions; copyActions;  ; final org.controlsfx.control.action.Action; PASTE;  ; final org.controlsfx.control.action.Action; PASTE_TO_PLANE;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; REDO;  ; final org.controlsfx.control.action.Action; RESET_PREFERENCES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; UNDO;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. UNDO; @ActionAccelerator(""shortcut+z""); @ActionConfig(""Action.Edit.undo""); public final org.controlsfx.control.action.Action UNDO. REDO; @ActionAccelerator(""shortcut+shift+z""); @ActionConfig(""Action.Edit.redo""); public final org.controlsfx.control.action.Action REDO. SEP_0; public final org.controlsfx.control.action.Action SEP_0. copyActions; @ActionMenu(""Menu.Edit.Copy""); public final EditMenuActions.CopyActions copyActions. PASTE; @ActionConfig(""Action.Edit.paste""); public final org.controlsfx.control.action.Action PASTE. PASTE_TO_PLANE; @ActionConfig(""Action.Edit.pasteToCurrentPlane""); public final org.controlsfx.control.action.Action PASTE_TO_PLANE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. PREFERENCES; public final org.controlsfx.control.action.Action PREFERENCES. RESET_PREFERENCES; @ActionConfig(""Action.Edit.resetPreferences""); public final org.controlsfx.control.action.Action RESET_PREFERENCES",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html:1262,hash,hashCode,1262,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"| ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSyntaxes(); Get the available script syntaxes. Returns:. getSyntaxFromName; public static ScriptSyntax getSyntaxFromName(String name); Get a script syntax from a specified language name.; If no specific syntax is found, then a general-purpose (plain) syntax will be returned. Parameters:; name - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html:1426,hash,hashCode,1426,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,1,['hash'],['hashCode']
Security,"| ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server); Add a region based on an existing ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; server - the server to i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html:1303,hash,hashCode,1303,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,1,['hash'],['hashCode']
Security," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:1264,hash,hashCode,1264,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,1,['hash'],['hashCode']
Security," ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; mat - intensity image; matLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, use 8-connectivity rather than 4-connectivity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html:1316,hash,hashCode,1316,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html,1,['hash'],['hashCode']
Security," ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.CopyActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.CopyActions. Enclosing class:; EditMenuActions. public class EditMenuActions.CopyActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COPY_ANNOTATION_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_FULL_SCREENSHOT;  ; final org.controlsfx.control.action.Action; COPY_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_VIEW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW_SCREENSHOT;  ; final org.controlsfx.control.action.Action; SEP_00;  . Constructor Summary; Constructors. Constructor; Description; CopyActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COPY_SELECTED_OBJECTS; @ActionConfig(""Action.Edit.Copy.selectedObjects""); public final org.controlsfx.control.action.Action COPY_SELECTED_OBJECTS. COPY_ANNOTATION_OBJECTS; @ActionConfig(""Action.Edit.Copy.annotationObjects""); public final org.controlsfx.control.action.Action COPY_ANNOTATION_OBJECTS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. COPY_VIEW; @ActionConfig(""Action.Edit.Copy.currentViewer""); public final org.controlsfx.control.action.Action COPY_VIEW. COPY_WINDOW; @ActionConfig(""Action.Edit.Copy.mainWindowContent""); public final org.controlsfx.control.action.Action COPY_WINDOW. COPY_WINDOW_SCREENSHOT; @ActionConfig(""Action.Edit.Copy.mainWindowScreenshot""); public final org.controlsfx.control.action.Action COPY_WINDOW_SCREENSHOT. COPY_FULL_SCREENSHOT; @ActionConfig(""Action.Edit.Copy.fullScreenshot""); public final org.controlsfx.control.action.Action COPY_FULL_SCREENSHOT. Constructor Details. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html:1278,hash,hashCode,1278,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html,1,['hash'],['hashCode']
Security," ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1304,hash,hashCode,1304,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,1,['hash'],['hashCode']
Security," ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:1284,Access,Access,1284,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['Access'],['Access']
Security," imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2383,hash,hashCode,2383,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['hash'],['hashCode']
Security," max). Convert a single pixel value to an optical density as max(0, -log10(val/max). static final double; makeODByLUT(float val,; double[] OD_LUT). Convert a float pixel to an optical density value using a pre-computed lookup table. static final double; makeODByLUT(int val,; double[] OD_LUT). Convert an int pixel to an optical density value using a pre-computed lookup table. static double[]; makeODLUT(double maxValue). Create an optical density lookup table with 256 entries, normalizing to the specified background value. static double[]; makeODLUT(double maxValue,; int nValues). Create an optical density lookup table, normalizing to the specified background value. static ColorDeconvolutionStains; refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped). Attempt to automatically refine color deconvolution stains based upon pixel values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorDeconvolutionHelper; public ColorDeconvolutionHelper(). Method Details. makeOD; public static final double makeOD(double val,; double max); Convert a single pixel value to an optical density as max(0, -log10(val/max). where val is clipped to be >= 1. Parameters:; val - ; max - ; Returns:. makeODByLUT; public static final double makeODByLUT(int val,; double[] OD_LUT); Convert an int pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double). Parameters:; val - ; OD_LUT - ; Returns:; See Also:. makeOD(double, double). makeODByLUT; public static final double makeODByLUT(float val,; double[] OD_LUT); Convert a float pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double), but involves ; rounding the float first. Parameters:; val - ; OD_LUT - ; Returns:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:3048,hash,hashCode,3048,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['hash'],['hashCode']
Security," p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2173,hash,hashCode,2173,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,1,['hash'],['hashCode']
Security," pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel sizes, in microns. ImageServerMetadata.Builder; pixelType(PixelType pixelType). Specify the bit-depth of the image. ImageServerMetadata.Builder; preferredTileSize(int tileWidth,; int tileHeight). Specify the preferred tile height and width. ImageServerMetadata.Builder; rgb(boolean isRGB). Specify that the image stores pixels in (A)RGB form. ImageServerMetadata.Builder; sizeT(int sizeT). Specify the number of time points. ImageServerMetadata.Builder; sizeZ(int sizeZ). Specify the number of z-slices. ImageServerMetadata.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify the time unit and individual time points. ImageServerMetadata.Builder; width(int width). Specify the full-resolution image width. ImageServerMetadata.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify the spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServerMetadata metadata); Builder for a new ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden.; ; The existing metadata will be duplicated, therefore later changes in one metadata object will not be ; reflected in the other. Parameters:; metadata - . Builder; public Builder(); Minimal builder for a new ImageServerMetadata; further properties must be set. Builder; public Builder(Class<? extends ImageServer<?>> serverClass,; String path,; int width,; int height); Builder for a new ImageServerMetadata; further properties must be set. Parameters:; serverClass - ; path - ; width - ; height - . Method Details. width; public ImageServerMetadata.Builder width(int width); Specify the full-resolution image width. Parameters:; width - ; Returns:. height; public ImageServerMetadata.Builder height(int height); Sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:3519,hash,hashCode,3519,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,1,['hash'],['hashCode']
Testability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1274,Log,LogViewerCommand,1274,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,7,"['Log', 'log']","['LogMessageCounts', 'LogViewerCommand', 'log', 'logged', 'logviewer']"
Testability," (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1989,Log,LogLevel,1989,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,2,"['Log', 'log']","['LogLevel', 'logging']"
Testability," (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TIL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1713,test,test,1713,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['test'],['test']
Testability," - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399709,Log,LogRankTest,399709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankTest']
Testability," 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1007,log,logging,1007,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability," ; qupath.imagej.superpixels, ; qupath.imagej.tools, ; qupath.lib.algorithms, ; qupath.lib.analysis, ; qupath.lib.analysis.algorithms, ; qupath.lib.analysis.features, ; qupath.lib.analysis.heatmaps, ; qupath.lib.analysis.images, ; qupath.lib.analysis.stats, ; qupath.lib.analysis.stats.survival, ; qupath.lib.awt.common, ; qupath.lib.classifiers, ; qupath.lib.classifiers.object, ; qupath.lib.classifiers.pixel, ; qupath.lib.color, ; qupath.lib.common, ; qupath.lib.display, ; qupath.lib.display.settings, ; qupath.lib.experimental.pixels, ; qupath.lib.extension.svg, ; qupath.lib.geom, ; qupath.lib.gui, ; qupath.lib.gui.actions, ; qupath.lib.gui.actions.annotations, ; qupath.lib.gui.actions.menus, ; qupath.lib.gui.charts, ; qupath.lib.gui.commands, ; qupath.lib.gui.commands.display, ; qupath.lib.gui.commands.objects, ; qupath.lib.gui.dialogs, ; qupath.lib.gui.extensions, ; qupath.lib.gui.images.servers, ; qupath.lib.gui.images.stores, ; qupath.lib.gui.localization, ; qupath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:1445,log,logging,1445,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability," Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAcceler",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659840,log,logging,659840,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.display.ChannelDisplayMode; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains; qupath.lib.color.ColorTransformer.ColorTransformMethod; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType; qupath.lib.gui.dialogs.Dialogs.DialogButton; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap; qupath.lib.gui.tools.GuiTools.SnapshotType; qupath.lib.gui.charts.HistogramChart.CountsTransformMode; qupath.lib.gui.charts.HistogramChart.DisplayMode; qupath.lib.gui.tools.IconFactory.PathIcons; qupath.lib.images.ImageData.ImageType; qupath.lib.gui.viewer.ImageInterpolation; qupath.lib.images.servers.ImageServerMetadata.ChannelType; qupath.lib.gui.actions.InfoMessage.MessageType; qupath.opencv.tools.LocalNormalization.NormalizationType; qupath.lib.gui.logging.LogManager.LogLevel; qupath.lib.measurements.MeasurementList.MeasurementListType; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature; qupath.lib.classifiers.Normalization; qupath.lib.analysis.features.ObjectMeasurements.Compartments; qupath.lib.analysis.features.ObjectMeasurements.Measurements; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType; qupath.opencv.dnn.OpenCVDnn.ModelType; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode; qupath.lib.plugins.ParallelTileObject.Status; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses; qupath.lib.io.PathIO.GeoJsonExportOptions; qupath.lib.objects.PathObjectFilter (implements java.util.function.Predicate<T>); qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType; qupath.lib.gui.prefs.PathP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:44703,log,logging,44703,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability," Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectFilter valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathObjectFilter>. test; public boolean test(PathObject p). Specified by:; test in interface Predicate<PathObject>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:4232,test,test,4232,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,3,['test'],['test']
Testability," Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if someth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1173,log,logging,1173,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability," Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMETiffWriter. java.lang.Object; qupath.lib.images.writers.ome.OMETiffWriter. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class OMETiffWriter; extends Object; implements ImageWriter<BufferedImage>; ImageWriter for writing OME-TIFF images. For greater control, see OMEPyramidWriter. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMETiffWriter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:1249,Test,Test,1249,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['Test'],['Test']
Testability," Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1900,log,log,1900,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability," Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1203,Log,LogTools,1203,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,2,['Log'],['LogTools']
Testability," Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2158,test,test,2158,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,1,['test'],['test']
Testability," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2405,test,test,2405,javadoc/docs/qupath/process/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html,1,['test'],['test']
Testability," PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Compone",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27640,Log,LogRankTest,27640,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['Log'],['LogRankTest']
Testability," Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1073416,log,logger,1073416,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability," ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Returns true if the event should be considered right-censored. isChanged() - Method in class qupath.lib.images.ImageData. Returns true if changes have been recorded since the last time this object was notified that it was saved. isChanging() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if changes are still being made, so more events will be fired. isCircle() - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. isCircle(double, double) - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. isCompatible(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Test if this completion is compatible with the provided text. isCompatible(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Check if an image display is 'compatible' with this one. isCompatibleMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). isComplete() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setComplete() has been called. isCudaAvailable() - Static method in class qupath.opencv.dnn.DnnTools. Query whether CUDA is reported as available by OpenCV. isDAB(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). isDefaultStyle() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Check if the default JavaFX style is used. isDerivedClass() - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:617145,Test,Test,617145,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability," Return true if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this neither a lower nor an upper bound constraining valid values. isUndoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isUndoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'undo' can be applied to the control. isUndoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isUnknown() - Method in class qupath.opencv.dnn.DnnShape. Returns true if the shape is unknown. isUnsignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is an unsigned integer representation. isURL() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:636998,Log,LogRankTest,636998,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankTest']
Testability," ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3314,Log,Logger,3314,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,3,"['Log', 'log']","['Logger', 'logger']"
Testability," Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. remove",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3119,Log,LogManager,3119,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogManager']
Testability," System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be written. allZSlices() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Test if two doubles are approximately equal, within a specified tolerance. alpha(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit alpha value from a packed ARGB value. ALWAYS - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:36225,Test,Test,36225,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability," all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:2148,LOG,LOGARITHM,2148,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,2,"['LOG', 'log']","['LOGARITHM', 'logarithm']"
Testability," and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package qupath.lib.gui.scripting.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810296,log,logging,810296,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in whic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:55061,test,test,55061,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['test'],['test']
Testability," class for interactively modifying existing ROIs. RoiLabeling - Class in qupath.imagej.processing. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. RoiLabeling() - Constructor for class qupath.imagej.processing.RoiLabeling;  ; ROIs - Class in qupath.lib.roi. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). ROIs() - Constructor for class qupath.lib.roi.ROIs;  ; roiToGeometry(ROI) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter. Convert a QuPath ROI to a JTS Geometry. roiToGeometry(ROI) - Static method in class qupath.lib.roi.GeometryTools. Convert to QuPath ROI to a JTS Geometry. RoiTools - Class in qupath.lib.roi. A collection of static methods for working with ROIs. RoiTools() - Constructor for class qupath.lib.roi.RoiTools;  ; RoiTools.CombineOp - Enum Class in qupath.lib.roi. Methods of combining two ROIs. rootLogLevelProperty() - Static method in class qupath.lib.gui.logging.LogManager. Property representing the current requested root log level. rotate(RotatedImageServer.Rotation) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rotate the image, using an increment of 90 degrees. ROTATE_180 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 180 degrees. ROTATE_270 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 270 degrees clockwise. ROTATE_90 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 90 degrees clockwise. ROTATE_IMAGE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ROTATE_NONE - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. No rotation. RotatedImageServer - Class in qupath.lib.images.servers. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. Rotated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:871263,log,logging,871263,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3490,Test,Test,3490,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['Test'],['Test']
Testability," creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138541,Log,Logger,138541,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,"['Log', 'log']","['Logger', 'logger']"
Testability," dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-proces",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1776,log,logs,1776,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['log'],['logs']
Testability," dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:3646,log,logging,3646,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['log'],['logging']
Testability," enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659544,log,log-rank,659544,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log-rank', 'test']"
Testability," for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:3613,log,logged,3613,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['log'],['logged']
Testability," hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a nucleus ROI is stored for this cell. hasObjectsForRegion(Class<? extends PathObject>, ImageRegion) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. hasPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the pixel width and height information in microns is known. hasPointROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Returns true if a PathObject has a Point ROI. hasROI() - Method in class qupath.lib.objects.PathObject. Returns true if this object has a ROI. hasROI() - Method in class qupath.lib.ro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:571793,Test,Test,571793,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability," if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3930,Test,Test,3930,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['Test'],['Test']
Testability," in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659114,log,logging,659114,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.Com",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659660,Log,LogRankResult,659660,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankResult']
Testability," in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolygonROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolylineROI. True if the bounding box has zero area. isEmpty() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if the ROI bounds have zero width and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsROI. A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... isEmptyRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns true if there are no objects to be painted within the requested region. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Always returns false. isEmptyRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Test whether a region is empty, i.e. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.LabeledImageServer. Returns true if there are no objects to be painted within the requested region. isEosin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). isEraser() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Query if there is a pen currently being used as an eraser. iseScrollGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; isFloat(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Returns true if a Mat is a floating point (rather than int) type. isFloatingPoint() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is a floating point representation. isFluorescence() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to fluorescen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:621449,Test,Test,621449,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability," in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified classifications. selectObjectsByMeasurement(ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Deprecated. selectObjectsByPathClass(PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. selectObjectsByPathClass(PathObjectHierarchy, PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified PathClass classifications assigned. selectObjectsByPlane(int, int) - Static method in class qupath.lib.scripting.QP. Selected objects in the current hierarchy occurring on the specified z-slice and timepoint. selectObjectsByPlane(PathObjectHierarchy, ImagePla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:900411,log,logging,900411,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1360,Log,Log,1360,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['Log'],['Log']
Testability," outputs for a single sample. supportsPixelSize() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPixelSize() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPixelSize() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPixelSize() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsPixelSize() - Method in interface qupath.lib.images.writers.ImageWriter. Returns true if the writer is capable of storing pixel size information. supportsPixelSize() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... supportsPyramidal() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPyramidal() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsPyramidal() - Method in interface qupath.lib.images.writers.Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1011462,Log,LogisticRegressionClassifier,1011462,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability, property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdirectory containing shared scripts. See Also:. Constant Field Values. DIR_COLORMAPS; public static final String DIR_COLORMAPS; Name of subdirectory containing colormaps. See Also:. Constant Field Values. DIR_LOGS; public static final String DIR_LOGS; Name of subdirectory containing log files. See Also:. Constant Field Values. DIR_LOCALIZATION; public static final String DIR_LOCALIZATION; Name of subdirectory containing properties files for localization. See Also:. Constant Field Values. Method Details. getInstance; public static UserDirectoryManager getInstance(); Get the singleton instance of the UserDirectoryManager. Returns:. createRelativePathProperty; public ReadOnlyObjectProperty<Path> createRelativePathProperty(String other); Create a read only property for a relative path of the user subdirectory.; This can be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directo,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:6376,log,log,6376,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability," qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package qupath.lib.gui.scripting.richtextfx.styl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810317,log,logging,810317,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103921,Log,Logger,1103921,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['Logger']
Testability," qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using the default PathObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:194749,Log,Logger,194749,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['Logger']
Testability, qupath.lib.images.writers.JpegWriter; qupath.lib.images.servers.JsonImageServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gui.actions.menus.Menus; qupath.lib.gui.tools.MenuTools; qupath.lib.gui.commands.MiniViewers; qupath.lib.gui.commands.MiniViewers,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19804,Log,LogRankTest,19804,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Log'],['LogRankTest']
Testability," root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2605,log,logToFile,2605,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,3,['log'],"['logToFile', 'logging']"
Testability," rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3291,Log,LogLevel,3291,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogLevel']
Testability," something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2153,Log,LogLevel,2153,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,2,"['Log', 'log']","['LogLevel', 'logging']"
Testability," static <T extends PathObject> List<T> getPointObjects(Collection<T> pathObjects); Get a list of objects with point ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getFlattenedObjectList; public static List<PathObject> getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent); Get all descendant objects as a flattened list. Parameters:; parentObject - the parent objects whose children and descendants should be added to the list; list - output list, optional; includeParent - if true, parentObject will be included in the output list; Returns:; either list, or a new list created if necessary. countDescendants; public static int countDescendants(PathObject pathObject); Count the descendants of a PathObject recursively. Parameters:; pathObject - ; Returns:. containsROI; @Deprecated; public static boolean containsROI(ROI parentROI,; ROI childROI); Deprecated.; Test whether one ROI is can completely contain a second ROI.; Returns false if either ROI is null.; ; Note: This is not a perfect test, since it really only checks if the vertices of the child ROI fall within the parent - it is possible; that connecting lines stray outside the parent, yet it still returns true. This behavior may change in later versions.; ; TODO: Consider improving 'containsROI' method accuracy. Parameters:; parentROI - ; childROI - ; Returns:. findObjectsOutsideImage; public static List<PathObject> findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting); Get all the objects with ROIs that are outside the bounds of an image. Parameters:; pathObjects - the input objects to check; server - the image to check; ignoreIntersecting - if true, consider objects that overlap the image boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:17932,Test,Test,17932,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['Test'],['Test']
Testability," status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659046,log,logging,659046,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. double; getLowerBound(). Retrieve the lower bound. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getUnit(). Get the unit to display for this parameter (may be null if no unit is available). double; getUpperBound(). Retrieve the upper bound. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; hasLowerAndUpperBounds(). Returns true if this parameter has both lower and upper bounds constraining valid values. boolean; hasLowerBound(). Returns true if the parameter has a valid lower bound. boolean; hasUpperBound(). Returns true if the parameter has a valid upper bound. boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isUnbounded(). Returns true if this neither a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:2057,Test,Test,2057,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['Test'],['Test']
Testability," the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283956,log,logging,283956,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability," the specified regions. setMissing(boolean) - Method in class qupath.lib.objects.TMACoreObject. Set the missing flag for this core, for example because insufficient tissue is present. setName(String) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the name of this ViewTracker. setName(String) - Method in class qupath.lib.objects.PathObject. Set the stored object name. setNumBins(int) - Method in class qupath.lib.gui.charts.HistogramDisplay. Set the number of bins for the histogram. setNumericParameterValue(String, Number) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set a numeric parameter value (either int or double). setNumericParameterValueRange(String, double, double) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the minimum and maximum value for a numeric parameter. setNumThreads(int) - Static method in class qupath.lib.common.Prefs. Set the requested number of threads. setOff() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.OFF. setOpacity(double) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set opacity between 0 (completely transparent) and 1 (completely opaque). setOpacity(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set global opacity for overlay drawing. setOptionalParameters(boolean, boolean, boolean, boolean) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set optional parameters for this ViewTracker. setOverrideSystemMenuBar(boolean) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of SystemMenuBar.systemMenubarProperty(). setParallelism(int) - Static method in class qupath.lib.common.ThreadTools. Set the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:938159,Log,LogManager,938159,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability," this as needed). Parameters:; val - ; Returns:. isValidInput; public boolean isValidInput(S value); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:6118,Test,Test,6118,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['Test'],['Test']
Testability, tiles to the bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:34980,Log,LogLevel,34980,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability," to add to a scene. getParallelism() - Static method in class qupath.lib.common.ThreadTools. Get the requested level of parallelism. getParameterEnabled(String) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter exists with the given key and is enabled (and is therefore editable). getParameterEnabled(Parameter<?>) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter is enabled (and is therefore editable). getParameterList() - Method in interface qupath.lib.plugins.parameters.Parameterizable. Get the parameter list associated with the class. getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:472531,Log,LogisticRegressionClassifier,472531,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability," to query or add specific numeric measurements. Returns:. getMeasurements; public Map<String,Number> getMeasurements(); Get a map-based view on getMeasurementList().; This is likely to be less efficient (because it does not support primitives), but has several advantages ; ; it uses a familiar and standard API; it is much more amenable for scripting, especially in Groovy; it is possible to return null for missing values, rather than only Double.NaN. The MeasurementList is retained for backwards-compatibility, particularly the ability to ; read older data files.; Changes made to the map are propagated through to the MeasurementList, so it should be possible to ; use them interchangeably - however note that there may be some loss of precision if the backing measurement ; list uses floats rather than doubles.; ; It is possible that a map implementation becomes the standard in the future and getMeasurementList(); may be deprecated; this is an experimental feature introduced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:9530,test,testing,9530,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['test'],['testing']
Testability," to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659148,Log,LogLevel,659148,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"  ; toString() - Method in class qupath.lib.roi.LineROI;  ; toString() - Method in class qupath.lib.roi.PolygonROI;  ; toString() - Method in class qupath.lib.roi.PolylineROI;  ; toString() - Method in class qupath.lib.roi.RectangleROI;  ; toString() - Method in class qupath.lib.roi.PointsROI;  ; toString() - Method in class qupath.lib.scripting.languages.ScriptLanguage;  ; toString() - Method in class qupath.opencv.dnn.DnnShape;  ; toString() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer;  ; toString() - Method in class qupath.opencv.ml.FeaturePreprocessor;  ; toString() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; toString() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel;  ; toString() - Method in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1043555,Log,LogisticRegressionClassifier,1043555,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1071,log,logging,1071,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability,""",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class); public final ObjectProperty<PathPrefs.DetectionTreeDisplayModes> hiera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:3041,Log,LogManager,3041,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['Log'],['LogManager']
Testability,"(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Title to use for the window, if the chart is shown. WITH_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections with ROI icons. WITHOUT_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections without ROI icons. workerComplete(TileWorker<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1108510,log,logged,1108510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logged']
Testability,"(an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified nam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2142,Log,LogManager,2142,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogManager']
Testability,") - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.sur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658616,log,logarithm,658616,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logarithm']
Testability,"). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1060,LOG,LOGARITHM,1060,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['LOG'],['LOGARITHM']
Testability,); ObjectMeasurements.ShapeFeatures (QuPath 0.5.0); qupath.lib.analysis.features (QuPath 0.5.0); qupath.lib.analysis.features Class Hierarchy (QuPath 0.5.0). /heatmaps; ; ColorModels.ColorModelBuilder (QuPath 0.5.0); ColorModels.DisplayBand (QuPath 0.5.0); ColorModels (QuPath 0.5.0); DensityMaps.DensityMapBuilder (QuPath 0.5.0); DensityMaps.DensityMapParameters (QuPath 0.5.0); DensityMaps.DensityMapType (QuPath 0.5.0); DensityMaps (QuPath 0.5.0); qupath.lib.analysis.heatmaps (QuPath 0.5.0); qupath.lib.analysis.heatmaps Class Hierarchy (QuPath 0.5.0). /images; ; ContourTracing.ChannelThreshold (QuPath 0.5.0); ContourTracing (QuPath 0.5.0); qupath.lib.analysis.images (QuPath 0.5.0); qupath.lib.analysis.images Class Hierarchy (QuPath 0.5.0); SimpleImage (QuPath 0.5.0); SimpleImages (QuPath 0.5.0); SimpleModifiableImage (QuPath 0.5.0). /stats; . /survival; ; KaplanMeierData (QuPath 0.5.0); KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0); LogRankTest (QuPath 0.5.0); LogRankTest.LogRankResult (QuPath 0.5.0); qupath.lib.analysis.stats.survival (QuPath 0.5.0); qupath.lib.analysis.stats.survival Class Hierarchy (QuPath 0.5.0). ArrayWrappers.ArrayWrapper (QuPath 0.5.0); ArrayWrappers (QuPath 0.5.0); Histogram (QuPath 0.5.0); qupath.lib.analysis.stats (QuPath 0.5.0); qupath.lib.analysis.stats Class Hierarchy (QuPath 0.5.0); RunningStatistics (QuPath 0.5.0); StatisticsHelper (QuPath 0.5.0). DelaunayTools.Builder (QuPath 0.5.0); DelaunayTools (QuPath 0.5.0); DelaunayTools.Subdivision (QuPath 0.5.0); DistanceTools (QuPath 0.5.0); qupath.lib.analysis (QuPath 0.5.0); qupath.lib.analysis Class Hierarchy (QuPath 0.5.0). /awt; . /common; ; AffineTransforms (QuPath 0.5.0); AwtTools (QuPath 0.5.0); BufferedImageTools (QuPath 0.5.0); qupath.lib.awt.common (QuPath 0.5.0); qupath.lib.awt.common Class Hierarchy (QuPath 0.5.0). /classifiers; . /object; ; AbstractObjectClassifier (QuPath 0.5.0); ObjectClassifier (QuPath 0.5.0); ObjectClassifiers.ClassifyByMeasurementBuilder (QuPath 0.5.0); Ob,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:4113,Log,LogRankResult,4113,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LogRankResult']
Testability,"); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2885,log,logFiles,2885,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['log'],['logFiles']
Testability,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1597,log,logger,1597,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,17,"['Log', 'log']","['Log', 'Logger', 'logOnce', 'logged', 'logger']"
Testability,");  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected String; getCurrentText();  ; protected ScriptEditorControl<?>; getNewConsole();  ; protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:4586,log,log,4586,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['log'],['log']
Testability,", ZipWriterIJ. public interface ImageWriter<T>; Interface for defining class that can write images.; ; This may not have been a particularly good idea and may change in the future... (e.g. using services?).; ; As it is, it's best to avoid using it because the design is rather clumsy (and goes back to a day whenever ; external dependencies were avoided with an enthusiasm that may have been a bit too much). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getDefaultExtension(). Get the default extension. String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<T>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<T> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImageServer<T> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<T> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<T> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<T> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. void; writeImage(T img,; OutputStream stream). Write a full imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html:1453,Test,Test,1453,javadoc/docs/qupath/lib/images/writers/ImageWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html,1,['Test'],['Test']
Testability,", nothing will happen.; Otherwise, if null then any existing TMA grid will be removed. Parameters:; tmaGrid - . insertPathObject; public boolean insertPathObject(PathObject pathObject,; boolean fireChangeEvents); Insert an object into the hierarchy. This differs from addObject(PathObject, boolean) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObject - the object to add; fireChangeEvents - if true, an event will be added after adding the object. Choose false if a single event should be added after making multiple changes.; Returns:; true if the hierarchy changed as a result of this call, false otherwise. insertPathObjects; public boolean insertPathObjects(Collection<? extends PathObject> pathObjects); Insert a collection of objects into the hierarchy, firing a change event on completion.; This differs from addObjects(Collection) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObjects - the objects to add; Returns:; true if the hierarchy changed as a result of this call, false otherwise. resolveHierarchy; public void resolveHierarchy(); Attempt to resolve the parent-child relationships between all objects within the hierarchy. removeObject; public boolean removeObject(PathObject pathObject,; boolean keepChildren); Remove a single object from the hierarchy, firing a remove event. Parameters:; pathObject - the object to remove; keepChildren - if true, retain all children and descendants of the object being removed; if false, remove these also; Returns:. removeObjectWithoutUpdate; public boolean removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren); Remove a single object from the hierarchy, without firing a remove event. Parameters:; pathObject - the object to remove; keepChildren - if true, retain all children and descendants of the o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:11897,log,logic,11897,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['log'],['logic']
Testability,". CYTOPLASM - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:240346,Log,LogManager,240346,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,". CommandLineTaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:624,log,logs,624,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,2,['log'],"['log', 'logs']"
Testability,". CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:796,log,log,796,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['log'],['log']
Testability,". Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1435,log,logarithm,1435,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['log'],['logarithm']
Testability,". Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class PngWriter. java.lang.Object; qupath.lib.images.writers.PngWriter. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class PngWriter; extends Object; ImageWriter implementation to write PNG images using ImageIO. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PngWriter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). W",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:1160,Test,Test,1160,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['Test'],['Test']
Testability,". GroovyStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:893,log,logConsole,893,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,1,['log'],['logConsole']
Testability,". INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2066,Log,LogManager,2066,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogManager']
Testability,". LineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class LineROI. java.lang.Object; qupath.lib.roi.LineROI. All Implemented Interfaces:; Serializable, ROI. public class LineROI; extends Object; implements Serializable; ROI representing a straight line, defined by its end points. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 2 (since the line is define",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:903,Test,Test,903,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['Test'],['Test']
Testability,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:525,test,test,525,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,2,['test'],"['test', 'testing']"
Testability,". LocalBinaryPatternsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class LocalBinaryPatternsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.LocalBinaryPatternsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class LocalBinaryPatternsPlugin; extends AbstractInteractivePlugin<BufferedImage>; Calculate local binary pattern features.; ; TODO: This plugin has not been extensively tested and may be of limited use. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatternsPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:853,test,tested,853,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['test'],['tested']
Testability,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2,Log,LogManager,2,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,14,"['Log', 'log']","['LogLevel', 'LogManager', 'log', 'logging']"
Testability,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2,Log,LogManager,2,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,20,"['Log', 'log']","['LogLevel', 'LogManager', 'log', 'logging']"
Testability,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:2,Log,LogRankTest,2,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,21,"['Log', 'log', 'test']","['LogRankResult', 'LogRankTest', 'log', 'log-rank', 'test']"
Testability,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:2,Log,LogRankTest,2,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,11,"['Log', 'log', 'test']","['LogRankResult', 'LogRankTest', 'log', 'test']"
Testability,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2,Log,LogTools,2,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,16,"['Log', 'log']","['Log', 'LogTools', 'Logger', 'logOnce', 'logger', 'logging']"
Testability,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:2,Log,LogViewerCommand,2,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,10,"['Log', 'log']","['LogMessageCounts', 'LogViewerCommand', 'log', 'logged', 'logviewer']"
Testability,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:2,Log,LoggingTools,2,javadoc/docs/qupath/lib/scripting/LoggingTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html,17,"['Log', 'log']","['Logger', 'LoggingTools', 'log', 'logger', 'logging']"
Testability,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html:917,log,logged,917,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html,2,['log'],['logged']
Testability,". ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. Menu; getMenu(String name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:4536,Log,LogViewerCommand,4536,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['Log'],['LogViewerCommand']
Testability,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:20,Log,LogisticRegressionClassifier,20,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,5,['Log'],"['LogisticRegression', 'LogisticRegressionClassifier']"
Testability,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:631,Log,LogisticRegressionClassifier,631,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['Log'],['LogisticRegressionClassifier']
Testability,". Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3613,Test,Test,3613,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['Test'],['Test']
Testability,". PointsROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PointsROI. java.lang.Object; qupath.lib.roi.PointsROI. All Implemented Interfaces:; Serializable, ROI. public class PointsROI; extends Object; implements Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:921,Test,Test,921,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['Test'],['Test']
Testability,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:913,Test,Test,913,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['Test'],['Test']
Testability,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:915,Test,Test,915,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['Test'],['Test']
Testability,". PreferencePane.GeneralPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Pref",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:984,Log,LogManager,984,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['Log'],['LogManager']
Testability,". PropertiesStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:925,log,logConsole,925,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['log'],['logConsole']
Testability,". PythonStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html:885,log,logConsole,885,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,1,['log'],['logConsole']
Testability,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:1048,test,test,1048,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,1,['test'],['test']
Testability,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:912,log,logged,912,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,1,['log'],['logged']
Testability,". ScriptStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Interface ScriptStyler. All Known Implementing Classes:; GroovyStyler, JsonStyler, MarkdownStyler, PlainStyler, PropertiesStyler, PythonStyler, XmlStyler, YamlStyler. public interface ScriptStyler; Interface for classes that apply some styling to a RichTextFX's CodeArea. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. default String; getBaseStyle(). Optionally return a base style for the code area. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Method Details. getLanguageNames; Set<String> getLanguageNames(); Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Returns:. computeEditorStyles; org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Compute styling for the specified text, considering it will be used in the main editor. Parameters:; text - the text to process styling for; Returns:; sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html:933,log,logConsole,933,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,1,['log'],['logConsole']
Testability,. Search (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Search. Additional resources. The help page provides an introduction to the scope and syntax of JavaDoc search.; You can use the <ctrl> or <cmd> keys in combination with the left and right arrow keys to switch between result tabs in this page.; The URL template below may be used to configure this page as a search engine in browsers that support this feature. It has been tested to work in Google Chrome and Mozilla Firefox. Note that other browsers may not support this feature or require a different URL format.; linkCopy. Redirect to first result. Loading search index... ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/search.html:523,test,tested,523,javadoc/docs/search.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/search.html,1,['test'],['tested']
Testability,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:777,log,logging,777,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['log'],['logging']
Testability,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:654,test,test,654,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,2,"['Test', 'test']","['Test', 'test']"
Testability,". TextAppendable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Interface TextAppendable. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface TextAppendable; Interface to indicate anything for which text can be appended. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. Method Details. appendText; void appendText(String text); Append the specified text to the appendable. Parameters:; text - the text to be appended. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html:352,log,logging,352,javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,1,['log'],['logging']
Testability,". WandToolEventHandler.WandPreferences - Class in qupath.process.gui;  ; WandToolEventHandler.WandType - Enum Class in qupath.process.gui. Enum reflecting different color images that may be used by the Wand tool. wandToRoi(Wand) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a traced outline from the ImageJ Wand into a PolygonRoi. wandType - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1102968,Log,LogLevel,1102968,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,". WorkflowCommandLogView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-act",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:678,log,logged,678,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,1,['log'],['logged']
Testability,". WorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowStep. All Superinterfaces:; Serializable. All Known Subinterfaces:; ScriptableWorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface WorkflowStep; extends Serializable; Basic interface for a loggable workflow step.; ; Not as useful as a ScriptableWorkflowStep (which should be used where possible),; but here just in case. Author:; Pete Bankhead; See Also:. ScriptableWorkflowStep. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. Method Details. getName; String getName(); Get the name of the workflow step. Returns:. getParameterMap; Map<String,?> getParameterMap(); Get a map of parameters required for this step. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html:671,log,loggable,671,javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,1,['log'],['loggable']
Testability,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html:1285,test,test,1285,javadoc/docs/qupath/lib/analysis/features/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html,1,['test'],['test']
Testability,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:770,Log,LogRankTest,770,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,7,"['Log', 'log', 'test']","['LogRankResult', 'LogRankTest', 'log', 'log-rank', 'test']"
Testability,. qupath.lib.analysis.stats.survival Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.analysis.stats.survival. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-tree.html:524,Log,LogRankTest,524,javadoc/docs/qupath/lib/analysis/stats/survival/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-tree.html,3,['Log'],"['LogRankResult', 'LogRankTest']"
Testability,. qupath.lib.common (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.common. package qupath.lib.common. General-purpose helper classes. Classes. Class; Description; ColorTools. Static functions to help work with RGB(A) colors using packed ints. GeneralTools. Collection of generally useful static methods. LogTools. Helper class for logging. Prefs. Core QuPath preferences. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Version. Helper class for working with semantic versioning. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html:562,Log,LogTools,562,javadoc/docs/qupath/lib/common/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html,2,"['Log', 'log']","['LogTools', 'logging']"
Testability,. qupath.lib.common Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.common. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.common.ColorTools; qupath.lib.common.GeneralTools; qupath.lib.common.LogTools; qupath.lib.common.Prefs; qupath.lib.common.ThreadTools; qupath.lib.common.Timeit; qupath.lib.common.Timeit.Checkpoint; qupath.lib.common.Version (implements java.lang.Comparable<T>). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-tree.html:377,Log,LogTools,377,javadoc/docs/qupath/lib/common/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-tree.html,1,['Log'],['LogTools']
Testability,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:527,test,tested,527,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,1,['test'],['tested']
Testability,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:821,log,logging,821,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,2,['log'],['logging']
Testability,". qupath.lib.gui.commands Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.commands. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.commands.BrightnessContrastCommand (implements java.lang.Runnable); qupath.lib.gui.commands.Commands; qupath.lib.gui.commands.ContextHelpViewer; qupath.lib.gui.commands.CountingDialogCommand (implements javafx.beans.value.ChangeListener<T>, java.lang.Runnable); qupath.lib.gui.commands.ExportObjectsCommand; qupath.lib.gui.commands.InteractiveObjectImporter; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.commands.MiniViewers; qupath.lib.gui.commands.MiniViewers.MiniViewerManager (implements javafx.event.EventHandler<T>); qupath.lib.gui.commands.PathObjectGridView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener); qupath.lib.gui.commands.ProjectCommands; qupath.lib.gui.commands.SummaryMeasurementTableCommand; qupath.lib.gui.commands.TMACommands; qupath.lib.gui.commands.UpdateUrisCommand<T>. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-tree.html:707,Log,LogViewerCommand,707,javadoc/docs/qupath/lib/gui/commands/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-tree.html,1,['Log'],['LogViewerCommand']
Testability,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:17,log,logging,17,javadoc/docs/qupath/lib/gui/logging/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html,9,"['Log', 'log']","['LogLevel', 'LogManager', 'log', 'logging']"
Testability,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html:17,log,logging,17,javadoc/docs/qupath/lib/gui/logging/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html,8,"['Log', 'log']","['LogLevel', 'LogManager', 'logging']"
Testability,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html:740,log,logging,740,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html,2,['log'],['logging']
Testability,". qupath.lib.plugins (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:870,log,logging,870,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['log'],['logging']
Testability,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html:722,log,logging,722,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html,1,['log'],['logging']
Testability,". qupath.lib.plugins.parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.parameters. package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClasses. Class; Description; BooleanParameter. Parameter that can take on true of false value - or null. ChoiceParameter<S>. Parameter that supports a list of choices. DoubleParameter. Parameter to represent a floating point numeric value. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. IntParameter. Parameter to represent an integer numeric value. NumericParameter<S extends Number>. Abstract parameter to represent a numeric value. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. StringParameter. Parameter to represent a String value. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html:728,log,logging,728,javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,1,['log'],['logging']
Testability,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html:424,log,logging,424,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,2,['log'],"['loggable', 'logging']"
Testability,. qupath.lib.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.scripting. package qupath.lib.scripting. Defines helper class for running scripts. Related Packages. Package; Description; qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. Classes. Class; Description; LoggingTools;  ; QP. Collection of static methods that are useful for scripting. ScriptAttributes. Default attributes that can be set when running scripts. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/package-summary.html:583,Log,LoggingTools,583,javadoc/docs/qupath/lib/scripting/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/package-summary.html,1,['Log'],['LoggingTools']
Testability,. qupath.lib.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.scripting.LoggingTools; qupath.lib.scripting.QP; qupath.lib.scripting.ScriptAttributes; qupath.lib.scripting.ScriptParameters; qupath.lib.scripting.ScriptParameters.Builder. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/package-tree.html:324,Log,LoggingTools,324,javadoc/docs/qupath/lib/scripting/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/package-tree.html,1,['Log'],['LoggingTools']
Testability,. qupath.opencv.ml Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.ml. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.opencv.ml.BioimageIoTools; qupath.opencv.ml.FeaturePreprocessor; qupath.opencv.ml.FeaturePreprocessor.Builder; qupath.opencv.ml.OpenCVClassifiers; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. qupath.opencv.ml.OpenCVClassifiers.BoostClassifier; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.EMClusterer; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. qupath.opencv.ml.PatchClassifierParams; qupath.opencv.ml.PatchClassifierParams.Builder. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html:689,Log,LogisticRegressionClassifier,689,javadoc/docs/qupath/opencv/ml/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-tree.html,1,['Log'],['LogisticRegressionClassifier']
Testability,".Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (def",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:268811,log,logarithm,268811,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logarithm']
Testability,".Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error wr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2515,Log,Logger,2515,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,2,"['Log', 'log']","['Logger', 'logger']"
Testability,".ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wrapper only supports integer values. isInteractive() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Returns the value of ChartThresholdPane.isInteractiveProperty(). isInteractiveProperty() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623858,Test,Test,623858,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability,.InteractiveObjectImporter; qupath.opencv.tools.Interpolation; qupath.lib.gui.JavadocViewer; qupath.lib.images.writers.JpegWriter; qupath.lib.images.servers.JsonImageServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gui.actions.menus.Menus; qupath.lib.gu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19709,Log,LogManager,19709,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Log'],['LogManager']
Testability,".Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:1864,log,log,1864,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,2,['log'],['log']
Testability,".g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the scale f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:502830,Log,LogManager,502830,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,.gui.commands.InteractiveObjectImporter; qupath.opencv.tools.Interpolation; qupath.lib.gui.JavadocViewer; qupath.lib.images.writers.JpegWriter; qupath.lib.images.servers.JsonImageServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gui.actions.menus.Menus;,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19701,log,logging,19701,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability,".lib.gui.viewer.ViewerManager. Try to remove the row containing the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageRenderer that controls conversion to RGB. rendererProperty() - Method in class qupath.lib.gui.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:852192,log,logging,852192,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,".lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set whether Bio-Formats should support only local ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:925126,Log,LogManager,925126,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,".ml.OpenCVClassifiers.BoostClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Train the classifier using data in an appropriate format. train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; TRAIN_VALIDATION_TEST_METADATA_KEY - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata key for the flag indicating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1047076,Test,Test,1047076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability,".scripting.richtextfx.stylers.PropertiesStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; computeEditorStyles(String) - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Compute styling for the specified text, considering it will be used in the main editor. computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; computeFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute features. computeLocalBinaryPatterns16(SimpleImage, double) - Static method in class qupath.lib.analysis.features.LocalBinaryPatterns. Compute local binary pattern descriptor for a SimpleImage. computeLogRankTest(KaplanMeierData, KaplanMeierData) - Static method in class qupath.lib.analysis.stats.survival.LogRankTest. Compare KaplanMeier objects using log-rank test. computeRunningStatistics(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Create a RunningStatistics object using all the values from a specified array. computeRunningStatistics(SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Compute running statistics using all pixels from a SimpleImage. computeRunningStatistics(SimpleImage, SimpleImage, List<RunningStatistics>) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). computeTiledROIs(ROI, ImmutableDimension, ImmutableDimension, boolean, int) - Static method in class qupath.lib.roi.RoiTools. Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:133209,log,log-rank,133209,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log-rank', 'test']"
Testability,"0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many time",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1005,Log,Log,1005,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['Log'],['Log']
Testability,"; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1844,log,log,1844,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,; FeatureExtractors (QuPath 0.5.0); Normalizer (QuPath 0.5.0); qupath.opencv.ml.objects.features (QuPath 0.5.0); qupath.opencv.ml.objects.features Class Hierarchy (QuPath 0.5.0); Preprocessing (QuPath 0.5.0); Preprocessing.PCAProjector (QuPath 0.5.0). OpenCVMLClassifier (QuPath 0.5.0); qupath.opencv.ml.objects (QuPath 0.5.0); qupath.opencv.ml.objects Class Hierarchy (QuPath 0.5.0). /pixel; ; qupath.opencv.ml.pixel (QuPath 0.5.0); qupath.opencv.ml.pixel Class Hierarchy (QuPath 0.5.0); PixelClassificationMeasurementManager (QuPath 0.5.0); PixelClassifiers (QuPath 0.5.0); PixelClassifierTools.CreateObjectOptions (QuPath 0.5.0); PixelClassifierTools (QuPath 0.5.0). BioimageIoTools (QuPath 0.5.0); FeaturePreprocessor.Builder (QuPath 0.5.0); FeaturePreprocessor (QuPath 0.5.0); OpenCVClassifiers.BoostClassifier (QuPath 0.5.0); OpenCVClassifiers.DTreesClassifier (QuPath 0.5.0); OpenCVClassifiers.EMClusterer (QuPath 0.5.0); OpenCVClassifiers (QuPath 0.5.0); OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0); OpenCVClassifiers.NormalBayesClassifierCV (QuPath 0.5.0); OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0); OpenCVClassifiers.RTreesClassifier (QuPath 0.5.0); OpenCVClassifiers.SVMClassifierCV (QuPath 0.5.0); OpenCVClassifiers.SVMSGDClassifierCV (QuPath 0.5.0); qupath.opencv.ml (QuPath 0.5.0); qupath.opencv.ml Class Hierarchy (QuPath 0.5.0); PatchClassifierParams.Builder (QuPath 0.5.0); PatchClassifierParams (QuPath 0.5.0). /ops; ; ImageDataOp (QuPath 0.5.0); ImageDataServer (QuPath 0.5.0); ImageOp (QuPath 0.5.0); ImageOps.Channels (QuPath 0.5.0); ImageOps.Core (QuPath 0.5.0); ImageOps.Filters (QuPath 0.5.0); ImageOps (QuPath 0.5.0); ImageOps.ML (QuPath 0.5.0); ImageOps.Normalize (QuPath 0.5.0); ImageOps.PaddedOp (QuPath 0.5.0); ImageOps.Threshold (QuPath 0.5.0); qupath.opencv.ops (QuPath 0.5.0); qupath.opencv.ops Class Hierarchy (QuPath 0.5.0). /tools; ; GroovyCV (QuPath 0.5.0); Interpolation (QuPath 0.5.0); LocalNormalization (QuPath 0.5.0); LocalNormalizatio,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:34011,Log,LogisticRegressionClassifier,34011,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:1223,Test,Test,1223,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['Test'],['Test']
Testability,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1240,Log,LogisticRegressionClassifier,1240,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.L",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1778,log,log,1778,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:1254,log,log,1254,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,1,['log'],['log']
Testability,"; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. Parameters:; menuTitle - ; recentItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16165,log,logging,16165,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['log'],['logging']
Testability,; PixelClassifier (QuPath 0.5.0); PixelClassifierMetadata.Builder (QuPath 0.5.0); PixelClassifierMetadata (QuPath 0.5.0). Normalization (QuPath 0.5.0); qupath.lib.classifiers (QuPath 0.5.0); qupath.lib.classifiers Class Hierarchy (QuPath 0.5.0). /color; ; ColorDeconvMatrix3x3 (QuPath 0.5.0); ColorDeconvolutionHelper (QuPath 0.5.0); ColorDeconvolutionStains.DefaultColorDeconvolutionStains (QuPath 0.5.0); ColorDeconvolutionStains (QuPath 0.5.0); ColorMaps.ColorMap (QuPath 0.5.0); ColorMaps (QuPath 0.5.0); ColorModelFactory (QuPath 0.5.0); ColorModels.ColorModelBuilder (QuPath 0.5.0); ColorModels.DisplayBand (QuPath 0.5.0); ColorModels (QuPath 0.5.0); ColorToolsAwt (QuPath 0.5.0); ColorTransformer.ColorTransformMethod (QuPath 0.5.0); ColorTransformer (QuPath 0.5.0); qupath.lib.color (QuPath 0.5.0); qupath.lib.color Class Hierarchy (QuPath 0.5.0); StainVector.DefaultStains (QuPath 0.5.0); StainVector (QuPath 0.5.0). /common; ; ColorTools (QuPath 0.5.0); GeneralTools (QuPath 0.5.0); LogTools (QuPath 0.5.0); qupath.lib.common (QuPath 0.5.0); qupath.lib.common Class Hierarchy (QuPath 0.5.0); Prefs (QuPath 0.5.0); ThreadTools (QuPath 0.5.0); Timeit.Checkpoint (QuPath 0.5.0); Timeit (QuPath 0.5.0); Version (QuPath 0.5.0). /display; . /settings; ; ChannelColor (QuPath 0.5.0); ChannelSettings (QuPath 0.5.0); DisplaySettingUtils (QuPath 0.5.0); ImageDisplaySettings (QuPath 0.5.0); qupath.lib.display.settings (QuPath 0.5.0); qupath.lib.display.settings Class Hierarchy (QuPath 0.5.0). ChannelDisplayInfo (QuPath 0.5.0); ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0); ChannelDisplayMode (QuPath 0.5.0); DirectServerChannelInfo (QuPath 0.5.0); ImageDisplay (QuPath 0.5.0); qupath.lib.display (QuPath 0.5.0); qupath.lib.display Class Hierarchy (QuPath 0.5.0); SingleChannelDisplayInfo (QuPath 0.5.0). /experimental; . /pixels; ; ImageJProcessor (QuPath 0.5.0); ImageSupplier (QuPath 0.5.0); MaskSupplier (QuPath 0.5.0); MeasurementProcessor.CustomMeasurement (QuPath 0.5.0); M,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:6488,Log,LogTools,6488,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LogTools']
Testability,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:2134,log,logged,2134,javadoc/docs/qupath/lib/gui/panes/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html,1,['log'],['logged']
Testability,"; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:2074,test,test,2074,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,1,['test'],['test']
Testability,"; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8799,Test,Test,8799,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['Test'],['Test']
Testability,"; mat - ; x - ; y - ; width - ; height - ; Returns:. crop; public static Mat crop(Mat mat,; Padding padding); Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). Parameters:; mat - ; padding - ; Returns:; Since:; v0.4.0. applyTiled; public static Mat applyTiled(Function<Mat,Mat> fun,; Mat mat,; int tileWidth,; int tileHeight,; Padding padding,; int borderType); Apply a function to a Mat that strictly requires a specific input size.; The output is expected to have the same size as the input, but may have a different number of channels.; ; This method can be used to:; ; Split larger input into tiles of the required size, apply the function and merge the result; Pad smaller input into tiles of the required size, apply the function and strip padding from the result. If the image dimensions are not an exact multiple of the requested tile sizes, both steps may be required.; ; Important! If the output (width & height) of the function is smaller than the input, it will resized; to have the same dimensions and a warning will be logged. Parameters:; fun - the function to apply to the input; mat - the input Mat; tileWidth - the strict tile width required by the input; tileHeight - the strict tile height required by the input; padding - padding to apply for internal tiling. Note that if the entire image needs to be padded, this should ; be done before input.; borderType - an OpenCV border type, in case padding is needed; Returns:; the result of applying fun to mat, having applied any necessary tiling along the way. sepFilter2D; public static void sepFilter2D(Mat mat,; Mat kx,; Mat ky); Apply a separable filter to an image, with symmetric boundary padding. Parameters:; mat - input image; kx - horizontal kernel; ky - vertical kernel. sepFilter2D; public static void sepFilter2D(Mat mat,; Mat kx,; Mat ky,; int borderType); Apply a separable filter to an image. Parameters:; mat - input image; kx - horizontal kernel; ky - vertical kernel; border",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:33157,log,logged,33157,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logged']
Testability,"<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Train the classifier using data in an appropriate format. train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; TRAIN_VALIDATION_TEST_METADATA_KEY - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata key for the flag indicating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1046335,Log,LogisticRegressionClassifier,1046335,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27766,Log,LogViewerCommand,27766,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['Log'],['LogViewerCommand']
Testability,CV's DNN module. DnnTools() - Constructor for class qupath.opencv.dnn.DnnTools;  ; DnnTools.DNNLayer - Class in qupath.opencv.dnn. Helper class to summarize a DNN layer. do8BitRangeCheck(double) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.dis,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:267689,log,log,267689,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"Chart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659559,Log,LogRankTest,659559,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankTest']
Testability,"Class, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:2803,log,logged,2803,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['log'],['logged']
Testability,"Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1720,log,log,1720,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"Concrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1956,Log,LogManager,1956,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogManager']
Testability,Extension (QuPath 0.5.0); Subcommand (QuPath 0.5.0); UpdateChecker (QuPath 0.5.0); UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14149,log,logging,14149,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,2,"['Log', 'log']","['LogManager', 'logging']"
Testability,"F. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2887,Log,LogLevel,2887,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"Geometry. static Geometry; regionToGeometry(ImageRegion region). Convert an ImageRegion to a rectangular Geometry. static Geometry; removeFragments(Geometry geometry,; double minArea). Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. static Geometry; removeInteriorRings(Geometry geometry,; double minRingArea). Fill all interior rings for the specified geometry that have an area < a specified threshold. static Geometry; roiToGeometry(ROI roi). Convert to QuPath ROI to a JTS Geometry. static Geometry; roundCoordinates(Geometry geometry). Round coordinates in a Geometry to integer values. static Geometry; shapeToGeometry(Shape shape). Convert a java.awt.Shape to a JTS Geometry. static List<Geometry>; splitGeometryByLineStrings(Geometry polygon,; Collection<? extends Geometry> splitLines). Split an input polygonal geometry using a collection of split lines. static Geometry; tryToFixPolygon(Polygon polygon). Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. static Geometry; union(Collection<? extends Geometry> geometries). Calculate the union of multiple Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GeometryTools; public GeometryTools(). Method Details. getDefaultFactory; public static GeometryFactory getDefaultFactory(); Get the default GeometryFactory to construct Geometries within QuPath. Returns:. parseTransformMatrix; public static AffineTransformation parseTransformMatrix(String text); throws ParseException; Parse the matrix (String) to create and return an AffineTransformation. ; ; The order of the matrix elements should be the following:. m00 m01 m02; m10 m11 m12. Parameters:; text - ; Returns:; affineTransformation; Throws:; ParseException. convertTransform; public static AffineTransform convertTransform(AffineTransformation transform); Convert an AffineTran",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:3755,Test,Test,3755,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['Test'],['Test']
Testability,"H. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1312,log,logging,1312,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['logging']
Testability,"HITE - Static variable in class qupath.lib.color.ColorToolsAwt. White, with 50% opacity. TRANSLUCENT_WHITE_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. White with opacity at 50%. TRANSPARENT - Static variable in class qupath.lib.images.servers.ImageChannel. Special color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<? extends PathObject>, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. tryToInterpretMessage(Throwable, int, boolean) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; tryToLoad(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide. tryToLoadQuietly(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide, but don't throw an exception if it fails. tryToParseMicrons(double, String) - Static method in class qupath.imagej.tools.IJTools. Based on a value and its units, try to get something suitable in microns. TUMOR - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Tumor classification. TUMOR - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Tumor classification. type(DensityMaps.DensityMapType) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. The type",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1055041,Test,Test,1055041,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability,I (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages (QuPath 0.5.0); qupath.lib.scripting.languages Class Hierarchy (QuPath 0.5.0); ScriptAutoCompletor (QuPath 0.5.0); ScriptLanguage (QuPath 0.5.0). LoggingTools (QuPath 0.5.0); qupath.lib.scripting (QuPath 0.5.0); qupath.lib.scripting Class Hierarchy (QuPath 0.5.0); QP (QuPath 0.5.0); ScriptAttributes (QuPath 0.5.0); ScriptParameters.Builder (QuPath 0.5.0); ScriptParameters (QuPath 0.5.0). /opencv; . /dnn; ; AbstractDnnModel (QuPath 0.5.0); BlobFunction (QuPath 0.5.0); DnnModel (QuPath 0.5.0); DnnModelBuilder (QuPath 0.5.0); DnnModelParams.Builder (QuPath 0.5.0); DnnModelParams (QuPath 0.5.0); DnnModels (QuPath 0.5.0); DnnObjectClassifier (QuPath 0.5.0); DnnShape (QuPath 0.5.0); DnnTools.DNNLayer (QuPath 0.5.0); DnnTools (QuPath 0.5.0); OpenCVDnn.Builder (QuPath 0.5.0); OpenCVDnn (QuPath 0.5.0); OpenCVDnn.ModelType (QuPath 0.5.0); OpenCVDnnModelBuilder (QuPath 0.5.0); OpenCVModelObjectClassifier (QuPath 0.5.0); qupath.opencv.dnn (QuPath 0.5.0); qupath.opencv.dnn Class Hierarchy (QuPath 0.5.0); PredictionFunction (QuPath 0.5.0). /features; ; DelaunayClusteringPlugin (QuPath 0.5.0); DelaunayTriangulation (QuPath 0.5.0); qupath.opencv.features ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:31648,Log,LoggingTools,31648,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LoggingTools']
Testability,InfoMessage; qupath.lib.gui.commands.InteractiveObjectImporter; qupath.opencv.tools.Interpolation; qupath.lib.gui.JavadocViewer; qupath.lib.images.writers.JpegWriter; qupath.lib.images.servers.JsonImageServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19672,Log,LoggingTools,19672,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Log'],['LoggingTools']
Testability,"IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set whether Bio-Formats should support only local files (rather than any ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:925151,log,log,925151,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,Interpolation; qupath.lib.gui.JavadocViewer; qupath.lib.images.writers.JpegWriter; qupath.lib.images.servers.JsonImageServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gui.actions.menus.Menus; qupath.lib.gui.tools.MenuTools; qupath.lib.gui.commands.Mini,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19756,Log,LogRankTest,19756,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Log'],['LogRankTest']
Testability,"LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupActionByText(String) - Method in class qupath.lib.gui.QuPathGUI. Search for an action based upon its text (name) property. lookupMenuItem(String) - Method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:660110,Log,LogViewerCommand,660110,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogViewerCommand']
Testability,"M - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:240357,Log,LogLevel,240357,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"MapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor for class qupath.lib.analysis.features.LocalBinaryPatterns;  ; LocalBinaryPatternsPlugin - Class in qupath.lib.algorithms. Calculate local binary pattern features. LocalBinaryPatternsPlugin() - Constructor for class qupath.lib.algorithms.LocalBinaryPatternsPlugin. Default constructor. localeDefault - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeFormat - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; LocalePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localizationDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the localization directory. localNormalization(double, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Apply local 2D normalization",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:654404,test,test,654404,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:412660,Log,LogViewerCommand,412660,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogViewerCommand']
Testability,"Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. default String; getBaseStyle(). Optionally return a base style for the code area. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Method Details. getLanguageNames; Set<String> getLanguageNames(); Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Returns:. computeEditorStyles; org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Compute styling for the specified text, considering it will be used in the main editor. Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; default org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Compute styling for the specified text, considering it will be used in the console. Parameters:; text - the text to process styling for; logConsole - if true, the console prints to the log rather than directly; Returns:; stylespans the StyleSpans to apply. getBaseStyle; default String getBaseStyle(); Optionally return a base style for the code area.; The default is to return null, but one use is to return ""-fx-font-family: sans-serif"" if the language should ; not be formatted as code. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html:2164,log,logConsole,2164,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,3,['log'],"['log', 'logConsole']"
Testability,"Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; computeEditorStyles(String) - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Compute styling for the specified text, considering it will be used in the main editor. computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; computeFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute features. computeLocalBinaryPatterns16(SimpleImage, double) - Static method in class qupath.lib.analysis.features.LocalBinaryPatterns. Compute local binary pattern descriptor for a SimpleImage. computeLogRankTest(KaplanMeierData, KaplanMeierData) - Static method in class qupath.lib.analysis.stats.survival.LogRankTest. Compare KaplanMeier objects using log-rank test. computeRunningStatistics(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Create a RunningStatistics object using all the values from a specified array. computeRunningStatistics(SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Compute running statistics using all pixels from a SimpleImage. computeRunningStatistics(SimpleImage, SimpleImage, List<RunningStatistics>) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). computeTiledROIs(ROI, ImmutableDimension, ImmutableDimension, boolean, int) - Static method in class qupath.lib.roi.RoiTools. Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster) - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:133162,Log,LogRankTest,133162,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankTest']
Testability,"Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1297,Log,Logger,1297,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,2,"['Log', 'log']","['Logger', 'logger']"
Testability,"N serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentia",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:4116,log,logged,4116,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['log'],['logged']
Testability,"OIs. RoiLabeling - Class in qupath.imagej.processing. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. RoiLabeling() - Constructor for class qupath.imagej.processing.RoiLabeling;  ; ROIs - Class in qupath.lib.roi. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). ROIs() - Constructor for class qupath.lib.roi.ROIs;  ; roiToGeometry(ROI) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter. Convert a QuPath ROI to a JTS Geometry. roiToGeometry(ROI) - Static method in class qupath.lib.roi.GeometryTools. Convert to QuPath ROI to a JTS Geometry. RoiTools - Class in qupath.lib.roi. A collection of static methods for working with ROIs. RoiTools() - Constructor for class qupath.lib.roi.RoiTools;  ; RoiTools.CombineOp - Enum Class in qupath.lib.roi. Methods of combining two ROIs. rootLogLevelProperty() - Static method in class qupath.lib.gui.logging.LogManager. Property representing the current requested root log level. rotate(RotatedImageServer.Rotation) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rotate the image, using an increment of 90 degrees. ROTATE_180 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 180 degrees. ROTATE_270 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 270 degrees clockwise. ROTATE_90 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 90 degrees clockwise. ROTATE_IMAGE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ROTATE_NONE - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. No rotation. RotatedImageServer - Class in qupath.lib.images.servers. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer(ImageServer<BufferedImage>, Rotat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:871332,log,log,871332,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ObjectHierarchy; getCurrentHierarchy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageData(). Get the path to the current ImageData. static String; getCurrentImageName(). Get the name of the current image. static String; getCurrentImageNameWithoutExtension(). Get the name of the current image, removing any file extension. static ImageServer<?>; getCurrentServer(). Get the ImageServer of the current ImageData. static String; getCurrentServerPath(). Get the path to the ImageServer of the current ImageData. static PathClass; getDerivedPathClass(PathClass baseClass,; String name). Get a PathClass with the specified name, derived from another PathClass. static PathClass; getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb). Get a PathClass with the specified name, derived from another PathClass. static Collection<PathObject>; getDetectionObjects(). Get a list of the current detection objects. static org.slf4j.Logger; getLogger(). Get the logger associated with this class. static PathClass; getNonIntensityAncestorPathClass(PathObject pathObject). Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. static List<PathObject>; getObjects(Predicate<PathObject> predicate). Get a list of all objects in the current hierarchy according to a specified predicate. static List<PathObject>; getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Get a list of all objects in the specified hierarchy according to a specified predicate. static PathClass; getPathClass(String name). Get a PathClass with the specified name. static PathClass; getPathClass(String name,; Integer rgb). Get a PathClass with the specified name and color. static Project<BufferedImage>; getProject(). Get the current project. static ProjectImageEntry<BufferedImage>; getProjectEntry(). Get the project entry for the currently-open image within the current project, ; or null if no project",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:19099,Log,Logger,19099,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['Log'],['Logger']
Testability,"Options;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the specified delimiter between ; elements of derived PathClasses. totalBytes() - Method in class qupath.lib.gui.UndoRedoManager. The total number of bytes used for all viewers. toURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to a URI. tPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current t-position for the timepoint currently visible in the viewer. TRACE - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Trace logging (an awful lot of messages). traceGeometries(ImageServer<BufferedImage>, RegionRequest, Geometry, ContourTracing.ChannelThreshold...) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace one or more geometries in an image. traceGeometry(ImageServer<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; train(TrainData) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1045096,log,logging,1045096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:1074,Test,Test,1074,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['Test'],['Test']
Testability,"P. Select all tile objects in the current hierarchy. selectTiles(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all tile objects in the specified hierarchy. selectTMACores() - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the current hierarchy, excluding missing cores. selectTMACores(boolean) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the current hierarchy, optionally including missing cores. selectTMACores(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the specified hierarchy, excluding missing cores. selectTMACores(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the specified hierarchy, optionally including missing cores. sendLogToConsoleProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. sendQuitRequest() - Method in class qupath.lib.gui.QuPathGUI. Request to quit QuPath. SEP - Variable in class qupath.process.gui.ProcessingExtension.ObjectClassificationCommands;  ; SEP - Variable in class qupath.process.gui.ProcessingExtension.PixelClassificationCommands;  ; SEP_0 - Variable in class qupath.imagej.gui.IJExtension.IJExtensionCommands;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; SEP_0 - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; SEP_00 - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; SEP_00 - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Mul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:903292,log,log,903292,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min,; int max). Clip a value to be within a specific range. static NumberFormat; createFormatter(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:1073,Test,Test,1073,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['Test'],['Test']
Testability,"PaneHeight(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to accept drag and drop events. setupTarget(Scene) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTools. Request that CUDA is used. setUseGrayscaleLuts(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useGrayscaleLutProperty(). setUseInvertedBackground(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:953121,Log,LogManager,953121,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3585,log,logDirectoryProperty,3585,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['logDirectoryProperty']
Testability,"PathObject. Returns true if this object represents an image tile. isTitle - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; isTitle() - Method in class qupath.lib.plugins.parameters.EmptyParameter. Returns true if the parameter should be considered a title. isTMACore() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents a TMA core. isTMADearrayed() - Static method in class qupath.lib.scripting.QP. Returns true if TMA cores are available. isToolSwitchingEnabled() - Method in class qupath.lib.gui.ToolManager. Returns true if the user is able to activate another PathTool, false otherwise. isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier has already been trained and is ready to predict. isTranslating() - Method in class qupath.lib.roi.RoiEditor. Query if a ROI is currently being translated through this editor. isTransparent() - Method in class qupath.lib.images.servers.ImageChannel. Check if the color is 'transparent'; this is used for background/ignored channels. isTwoPlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:635105,Log,LogisticRegressionClassifier,635105,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"Property<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager().",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1608,log,log,1608,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"RROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void set",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2781,Log,LogLevel,2781,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1343,Log,LogLevel,1343,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogLevel']
Testability,"Static method in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.logging.LogManager.LogLevel. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Returns an array containing the constants of this enum class, in; the ord",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1088567,Log,LogManager,1088567,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"Static methods helpful when dealing with ImageServers. ServerTools() - Constructor for class qupath.lib.images.servers.ServerTools;  ; setAccelerator(String, String) - Method in class qupath.lib.gui.QuPathGUI. Set an accelerator for the specified menu command. setAccelerator(MenuItem, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified menu item. setAccelerator(Action, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified action. setActiveHandlePosition(double, double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. If a handle has been grabbed, update its displacement. setActiveTool(PathTool) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the active PathTool for input to this viewer. setActiveViewer(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the activeViewer property. setAll() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ALL. setAlphaComposite(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; setArgs(String[]) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set optional string args to pass to the script. setBatchIndex(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image index for batch processing (default is 0). setBatchProjectAndImage(Project<BufferedImage>, ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the Project and ImageData to use for batch processing for the current thread. setBatchSaveResult(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Specify whether the script that is running should save results or not. setBatchSize(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the batch size for batch processing (default is 1). setBioformatsEnabled(boolean) - Method in class qupath.lib.images.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:913230,Log,LogManager,913230,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ScriptStylerProvider(). Method Details. getStylerFromLanguage; public static ScriptStyler getStylerFromLanguage(ScriptLanguage language); Get the ScriptStyler object corresponding to the specified ScriptLanguage. ; If the language cannot be matched, PlainStyler is returned. Parameters:; language - ; Returns:; corresponding stylers, or PlainStyler if no match. getPlainStyling; public static org.fxmisc.richtext.model.StyleSpans<Collection<String>> getPlainStyling(String text); Get simple styling that does not apply any classes. Parameters:; text - the text to process styling for; Returns:. getLogStyling; public static org.fxmisc.richtext.model.StyleSpans<Collection<String>> getLogStyling(String text); Get styling for use with a logger. Parameters:; text - the text to process styling for; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:3396,log,logger,3396,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['log'],['logger']
Testability,Subcommand (QuPath 0.5.0); UpdateChecker (QuPath 0.5.0); UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); Preference,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14187,Log,LogManager,14187,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LogManager']
Testability,"TMA core...). SummaryMeasurementTableCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Command to show a summary measurement table, for PathObjects of a specified type (e.g. supports2D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 2D images. supports3D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 3D images (z-stacks). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can be trained interactively (i.e. supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsDynamicMeasurements() - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. supportsFile(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Query whether a file represents a supported script. supportsFile(File) - Method in interface q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1005066,Log,LogisticRegressionClassifier,1005066,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:400027,Log,LogRankTest,400027,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankTest']
Testability,UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); PreferencePane.MeasurementPreferences (QuPath 0.5.0); PreferencePa,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14238,log,logging,14238,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['log'],['logging']
Testability,"Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.featu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6567,log,logging,6567,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['log'],['logging']
Testability,"Writer implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27021,test,test,27021,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['test'],['test']
Testability,"a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creatin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27588,Log,LogRankTest,27588,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['Log'],['LogRankTest']
Testability,"a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Compute the intersection of a Geometry and a specified bounding box. consumeOutput() - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:136715,Test,Test,136715,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability,"ace qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430446,log,logger,430446,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability,"acker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659408,Log,LogTools,659408,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogTools']
Testability,"age. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2942,log,logLevel,2942,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['log'],['logLevel']
Testability,"ageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27545,Log,LogManager,27545,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['Log'],['LogManager']
Testability,"ager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1475,log,logging,1475,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['logging']
Testability,"aining the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageRenderer that controls conversion to RGB. rendererProperty() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageR",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:852281,log,logging,852281,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"alTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupath.opencv.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601354,Log,LogManager,601354,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,an be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. Returns:. cssDirectoryProperty; public ReadOnlyObjectProperty<Path> cssDirectoryProperty(); Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. Returns:. localizationDirectoryProperty; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty(); Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. Returns:. logDirectoryProperty; public ReadOnlyObjectProperty<Path> logDirectoryProperty(); Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. Returns:. scriptsDirectoryProperty; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty(); Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Thr,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:7849,log,logDirectoryProperty,7849,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,3,['log'],"['log', 'logDirectoryProperty']"
Testability,"anager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2500,Log,LogLevel,2500,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogLevel']
Testability,"analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1901,log,log,1901,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['log'],['log']
Testability,"and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3411,log,logger,3411,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"andler. Constructor. WandToolEventHandler.WandPreferences - Class in qupath.process.gui;  ; WandToolEventHandler.WandType - Enum Class in qupath.process.gui. Enum reflecting different color images that may be used by the Wand tool. wandToRoi(Wand) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a traced outline from the ImageJ Wand into a PolygonRoi. wandType - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1102949,log,logging,1102949,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"andles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27805,log,logs,27805,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['log'],['logs']
Testability,"anes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659955,log,logging,659955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ange listener; use removeListener(PathObjectHierarchyListener) instead. Parameters:; listener - . getRootObject; public PathObject getRootObject(); Get the root object. All other objects in the hierarchy are descendants of the root. Returns:. getTMAGrid; public TMAGrid getTMAGrid(); Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. Returns:. getSelectionModel; public PathObjectSelectionModel getSelectionModel(); Get the selection model, which handles the selection status of objects. Returns:. setTMAGrid; public void setTMAGrid(TMAGrid tmaGrid); Set the tma grid for this hierarchy.; If identical to the current TMA grid, nothing will happen.; Otherwise, if null then any existing TMA grid will be removed. Parameters:; tmaGrid - . insertPathObject; public boolean insertPathObject(PathObject pathObject,; boolean fireChangeEvents); Insert an object into the hierarchy. This differs from addObject(PathObject, boolean) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObject - the object to add; fireChangeEvents - if true, an event will be added after adding the object. Choose false if a single event should be added after making multiple changes.; Returns:; true if the hierarchy changed as a result of this call, false otherwise. insertPathObjects; public boolean insertPathObjects(Collection<? extends PathObject> pathObjects); Insert a collection of objects into the hierarchy, firing a change event on completion.; This differs from addObjects(Collection) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObjects - the objects to add; Returns:; true if the hierarchy changed as a result of this call, false otherwise. resolveHierarchy; public void resolveHierarchy(); Attempt to resolve the parent-child relationships between all objects w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:11244,log,logic,11244,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['log'],['logic']
Testability,"ankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLeve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1513,Log,LogManager,1513,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogManager']
Testability,"arBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColor. Color to paint behind any image. static DoubleProperty; viewerGamma. Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinear. Request that images are displayed in viewers using bilinear interpolation. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathPrefs.AutoUpdateType. Options for au",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:9013,log,log,9013,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"arameter<Double>; Parameter to represent a floating point numeric value.; ; May be bounded. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Double; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Double>; duplicate(). Create a new Parameter with the same text and value. Double; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Double; getValue(). Get the current set value (may be null). Double; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:1596,Test,Test,1596,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,1,['Test'],['Test']
Testability,"arameter<Integer>; Parameter to represent an integer numeric value.; ; May be bounded. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Integer; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Integer>; duplicate(). Create a new Parameter with the same text and value. Integer; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Integer; getValue(). Get the current set value (may be null). Integer; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:1586,Test,Test,1586,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,1,['Test'],['Test']
Testability,"arameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<T>; Parameters:; imageData - ; arg - ; Returns:. getLoggableParameters; protected ParameterList getLoggableParameters(ImageData<T> imageData); Get a copy of the current parameter list (with empty parameters removed) suitable for logging.; Subclasses might choose to append extra parameters here, which aren't part of the main list; (e.g. because they shouldn't be included in any automatically created dialog box). Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:5581,log,logging,5581,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['log'],['logging']
Testability,"arameters:; pathObjects - ; Returns:; Since:; v0.5.0. getFlattenedObjectList; public static List<PathObject> getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent); Get all descendant objects as a flattened list. Parameters:; parentObject - the parent objects whose children and descendants should be added to the list; list - output list, optional; includeParent - if true, parentObject will be included in the output list; Returns:; either list, or a new list created if necessary. countDescendants; public static int countDescendants(PathObject pathObject); Count the descendants of a PathObject recursively. Parameters:; pathObject - ; Returns:. containsROI; @Deprecated; public static boolean containsROI(ROI parentROI,; ROI childROI); Deprecated.; Test whether one ROI is can completely contain a second ROI.; Returns false if either ROI is null.; ; Note: This is not a perfect test, since it really only checks if the vertices of the child ROI fall within the parent - it is possible; that connecting lines stray outside the parent, yet it still returns true. This behavior may change in later versions.; ; TODO: Consider improving 'containsROI' method accuracy. Parameters:; parentROI - ; childROI - ; Returns:. findObjectsOutsideImage; public static List<PathObject> findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting); Get all the objects with ROIs that are outside the bounds of an image. Parameters:; pathObjects - the input objects to check; server - the image to check; ignoreIntersecting - if true, consider objects that overlap the image boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the image; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, boolean); findObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:18062,test,test,18062,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['test'],['test']
Testability,"archy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageData(). Get the path to the current ImageData. static String; getCurrentImageName(). Get the name of the current image. static String; getCurrentImageNameWithoutExtension(). Get the name of the current image, removing any file extension. static ImageServer<?>; getCurrentServer(). Get the ImageServer of the current ImageData. static String; getCurrentServerPath(). Get the path to the ImageServer of the current ImageData. static PathClass; getDerivedPathClass(PathClass baseClass,; String name). Get a PathClass with the specified name, derived from another PathClass. static PathClass; getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb). Get a PathClass with the specified name, derived from another PathClass. static Collection<PathObject>; getDetectionObjects(). Get a list of the current detection objects. static org.slf4j.Logger; getLogger(). Get the logger associated with this class. static PathClass; getNonIntensityAncestorPathClass(PathObject pathObject). Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. static List<PathObject>; getObjects(Predicate<PathObject> predicate). Get a list of all objects in the current hierarchy according to a specified predicate. static List<PathObject>; getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Get a list of all objects in the specified hierarchy according to a specified predicate. static PathClass; getPathClass(String name). Get a PathClass with the specified name. static PathClass; getPathClass(String name,; Integer rgb). Get a PathClass with the specified name and color. static Project<BufferedImage>; getProject(). Get the current project. static ProjectImageEntry<BufferedImage>; getProjectEntry(). Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. static String; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:19128,log,logger,19128,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['log'],['logger']
Testability,"ass qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupActionByText(String) - Method in class qupath.lib.gui.QuPathGUI. Search for an action based upon its text (name) prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:660096,log,log,660096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ass qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126499,log,log,126499,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ass qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658312,log,logarithm,658312,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logarithm']
Testability,"ass qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scriptin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1018462,test,test,1018462,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"ass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log le",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1110,log,logging,1110,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['logging']
Testability,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1270,Log,LogViewerCommand,1270,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,2,"['Log', 'log']","['LogViewerCommand', 'log']"
Testability,"assifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can handle missing (NaN) values. supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier is able to handle more than one outputs for a single sample. supportsPixelSize() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPixelSize() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPixelSize() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPixelSize() - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1009789,Log,LogisticRegressionClassifier,1009789,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"assifierTools.CreateObjectOptions;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the specified delimiter between ; elements of derived PathClasses. totalBytes() - Method in class qupath.lib.gui.UndoRedoManager. The total number of bytes used for all viewers. toURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to a URI. tPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current t-position for the timepoint currently visible in the viewer. TRACE - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Trace logging (an awful lot of messages). traceGeometries(ImageServer<BufferedImage>, RegionRequest, Geometry, ContourTracing.ChannelThreshold...) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace one or more geometries in an image. traceGeometry(ImageServer<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1045080,Log,LogLevel,1045080,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"athGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7171,log,logging,7171,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"athObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.Open",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:194868,log,log,194868,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"atic method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to accept drag and drop events. setupTarget(Scene) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTools. Request that CUDA is used. setUseGrayscaleLuts(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useGrayscaleLutProperty(). setUseInvertedBackground(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, fl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:953146,log,log,953146,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"ay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Optionally enable or disable parallelization when reading images. setResolution(PixelCalibration) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the resolution at which the training should occur. setROI(ROI) - Method in class qupath.lib.objects.PathROIObject. Set the ROI for this object. setROI(ROI) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, stopping any ROI translation currently in progress. setROI(ROI, boolean) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, optionally stopping any ROI translation currently in progress. setRootLogLevel(LogManager.LogLevel) - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level. setRotation(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the rotation; angle in radians. setSaturationPercent(double) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. setScript(String) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setScriptEditor(ScriptEditor) - Method in class qupath.lib.gui.QuPathGUI. Set a new ScriptEditor, which will be used from now on. setSelectable(Action, boolean) - Static method in class qupath.lib.gui.actions.ActionTools. Set the selectable property for an action. setSelected(boolean) - Method in class qupath.lib.gui.SelectableItem. Set the item to be selected. setSelectedObject(PathObject) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:944412,log,log,944412,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"ay.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Property representing the user directory. useROIBounds(boolean) - Method in class qupath.lib.images.writers.TileExporter. Op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1073571,log,logger,1073571,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability,"b.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionIcon (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMenu (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMethod (implements java.lang.annotation.Annotation). Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:42814,log,logging,42814,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['log'],['logging']
Testability,"b.objects.PathRootObject. The root object is never locked. isEmpty() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Returns true if there are no events included. isEmpty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Query if the table is empty, i.e. isEmpty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the collection of recorded frames is empty. isEmpty() - Method in interface qupath.lib.measurements.MeasurementList. Returns true if the list does not contain any measurements. isEmpty() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Check if the hierarchy is empty (i.e. isEmpty() - Method in class qupath.lib.objects.PathObjectConnections. Returns true if the group is empty. isEmpty() - Method in class qupath.lib.plugins.workflow.Workflow. Returns true if the workflow does not contain any steps. isEmpty() - Method in interface qupath.lib.projects.Project. Test if the project contains any images. isEmpty() - Method in class qupath.lib.regions.Padding. Returns true of the padding is zero. isEmpty() - Method in class qupath.lib.roi.EllipseROI;  ; isEmpty() - Method in class qupath.lib.roi.RectangleROI;  ; isEmpty() - Method in class qupath.lib.roi.AreaROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolygonROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolylineROI. True if the bounding box has zero area. isEmpty() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if the ROI bounds have zero width and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsROI. A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... isEmptyRegion(RegionRequest) - Method in class qupath.lib.gui.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:620103,Test,Test,620103,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9565,log,log,9565,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"bjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:5380,test,test,5380,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['test'],['test']
Testability,"ble). scale; default ROI scale(double scaleX,; double scaleY); Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. The scaling uses 0,0 as the origin. Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; Returns:; See Also:. scale(double, double, double, double). getArea; double getArea(); Get the area of this ROI. For lines and points this returns 0. Returns:; See Also:. getScaledArea(double, double). getScaledArea; double getScaledArea(double pixelWidth,; double pixelHeight); Get scaled area of the ROI, for use with calibrated pixel sizes. Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. getArea(). getLength; double getLength(); Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Returns:; See Also:. getScaledLength(double, double). getScaledLength; double getScaledLength(double pixelWidth,; double pixelHeight); Get the scaled length, for use with calibrated pixel sizes. Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. getLength(). getConvexHull; ROI getConvexHull(); Get a ROI representing the convex hull of this ROI.; This should be the smallest convex shape that contains all the ROI points. Returns:. getSolidity; double getSolidity(); Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Returns:. contains; boolean contains(double x,; double y); Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where isArea() returns true. ; All other ROIs (points, lines) return false. Parameters:; x - ; y - ; Returns:. updatePlane; ROI updatePlane(ImagePlane plane); Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Parameters:; plane - the new plane to use; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html:8700,Test,Test,8700,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html,1,['Test'],['Test']
Testability,"ble, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430842,log,log,430842,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be writ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:34994,log,log,34994,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"c final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class); public final ObjectProperty<PathPrefs.DetectionTreeDisplayModes> hierarchyDisplayMode. Constructor Deta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:3052,Log,LogLevel,3052,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,2,"['Log', 'log']","['LogLevel', 'logLevel']"
Testability,"cation string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430760,log,logger,430760,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logger']
Testability,"ceParameter, DoubleParameter, EmptyParameter, IntParameter, NumericParameter, StringParameter. public interface Parameter<S>; extends Serializable; Interface defining algorithm parameters, which need to be displayed to users somehow. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Details. getDefaultValue; S getDefaultValue(); Get a default value to use if the Parameter has not been otherwise set. Returns:. setValue; boolean setValue(S value); Set the Parameter to have a specified value. Parameters:; value - ; Returns:. setStringLastValue; boolean setStringLastValue(Locale locale,; String value); Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. resetValue; void resetValue(); Set last value to null (so defau",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html:1477,Test,Test,1477,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,1,['Test'],['Test']
Testability,"cessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778338,Log,LogisticRegressionClassifier,778338,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"closing class:; AutoCompletions. public static interface AutoCompletions.Completion; A single completion.; Instances must be able to determine whether they can provide a valid autocompletion, ; given an input string and a caret position - and, if so, also supply the completion text to insert. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getCompletionText(). Get the text that should be inserted for the full completion. String; getDisplayText(). Get the text that should be displayed for this completion. String; getInsertion(String text,; int pos,; String lastToken). Get the string to insert, given the provided text and position. default AutoCompletions.CompletionTokenizer; getTokenizer(). Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. boolean; isCompatible(String text,; int pos,; String lastToken). Test if this completion is compatible with the provided text. Method Details. getCompletionText; String getCompletionText(); Get the text that should be inserted for the full completion. Returns:. getDisplayText; String getDisplayText(); Get the text that should be displayed for this completion.; This which may include additional information that isn't part of the completion itself; (e.g. method parameters, return type). Returns:. getInsertion; String getInsertion(String text,; int pos,; String lastToken); Get the string to insert, given the provided text and position.; This involves stripping off any overlapping part of the completion, ; so that it can be inserted at pos. Parameters:; text - the full text; pos - the current caret position; lastToken - the final token, as output by getTokenizer().; If null, the token will be calculated - but it can improve performance to precompute ; tokens whenever multiple completions use the same way of determining tokens.; Returns:; the text to insert. isCompatible; boolean isC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html:1391,Test,Test,1391,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,1,['Test'],['Test']
Testability,"ctions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658510,LOG,LOGARITHM,658510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['LOG'],['LOGARITHM']
Testability,"ctions.menus;  ; ObjectsMenuActions.LockActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.SelectActions - Class in qupath.lib.gui.actions.menus;  ; ObjectTreeBrowser - Class in qupath.lib.gui.panes. Simple browser for exploring fields (including private fields) within an object by reflection. ObjectTreeBrowser() - Constructor for class qupath.lib.gui.panes.ObjectTreeBrowser;  ; ObservableMeasurementTableData - Class in qupath.lib.gui.measure. A table data model to supply observable measurements of PathObjects. ObservableMeasurementTableData() - Constructor for class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; OD_Normalized - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. RGB values normalized to OD vector (to reduce intensity information). of(long...) - Static method in class qupath.opencv.dnn.DnnShape. Create a new DnnShape with the specified dimension lengths. OFF - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Turn off logging. OMEPixelParser - Class in qupath.lib.images.servers.bioformats. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder - Class in qupath.lib.images.servers.bioformats. Builder for instances of OMEPixelParser. OMEPyramidWriter - Class in qupath.lib.images.writers.ome. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder - Class in qupath.lib.images.writers.ome. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType - Enum Class in qupath.lib.images.writers.ome. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType - Enum Class in qupath.lib.images.writers.ome. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries - Class in qupath.lib.images.writers.ome. Class representing a single series to write to an OME-TIFF. OMEPyramidWrit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:720144,log,logging,720144,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1655,log,log,1655,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"cv.ml.pixel.PixelClassifierTools.CreateObjectOptions;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the specified delimiter between ; elements of derived PathClasses. totalBytes() - Method in class qupath.lib.gui.UndoRedoManager. The total number of bytes used for all viewers. toURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to a URI. tPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current t-position for the timepoint currently visible in the viewer. TRACE - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Trace logging (an awful lot of messages). traceGeometries(ImageServer<BufferedImage>, RegionRequest, Geometry, ContourTracing.ChannelThreshold...) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace one or more geometries in an image. traceGeometry(ImageServer<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1045061,log,logging,1045061,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"d Type; Constant Field; Value; public static final String; DEFAULT_PROJECT_EXTENSION; ""qpproj""; public static final String; DEFAULT_PROJECT_NAME; ""project"". qupath.lib.scripting.QP. Modifier and Type; Constant Field; Value; public static final String; PROJECT_BASE_DIR; ""{%PROJECT}"". qupath.lib.scripting.ScriptAttributes. Modifier and Type; Constant Field; Value; public static final String; ARGS; ""args""; public static final String; BATCH_INDEX; ""qupath.script.batchIndex""; public static final String; BATCH_LAST; ""qupath.script.batchLast""; public static final String; BATCH_SAVE; ""qupath.script.batchSave""; public static final String; BATCH_SIZE; ""qupath.script.batchSize""; public static final String; FILE_PATH; ""qupath.script.file"". qupath.opencv.*. qupath.opencv.dnn.DnnModel. Modifier and Type; Constant Field; Value; public static final String; DEFAULT_INPUT_NAME; ""input""; public static final String; DEFAULT_OUTPUT_NAME; ""output"". qupath.opencv.dnn.DnnModelParams. Modifier and Type; Constant Field; Value; public static final String; FRAMEWORK_MXNET; ""MxNet""; public static final String; FRAMEWORK_ONNX_RUNTIME; ""OnnxRuntime""; public static final String; FRAMEWORK_OPENCV_DNN; ""OpenCV DNN""; public static final String; FRAMEWORK_PYTORCH; ""PyTorch""; public static final String; FRAMEWORK_TENSORFLOW; ""TensorFlow""; public static final String; FRAMEWORK_TF_LITE; ""TFLite"". qupath.opencv.dnn.PredictionFunction<T>. Modifier and Type; Constant Field; Value; public static final String; DEFAULT_INPUT_NAME; ""input""; public static final String; DEFAULT_OUTPUT_NAME; ""output"". qupath.process.*. qupath.process.gui.commands.SplitProjectTrainingCommand. Modifier and Type; Constant Field; Value; public static final String; TRAIN_VALIDATION_TEST_METADATA_KEY; ""Train/Validation/Test type""; public static final String; VALUE_NONE; ""None""; public static final String; VALUE_TEST; ""Test""; public static final String; VALUE_TRAINING; ""Train""; public static final String; VALUE_VALIDATION; ""Validation"". ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/constant-values.html:6436,Test,Test,6436,javadoc/docs/constant-values.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html,2,['Test'],['Test']
Testability,"d Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1967,Log,LogLevel,1967,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogLevel']
Testability,"d annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Parameters:; qupath - ; imageData - . showScriptEditor; public static void showScriptEditor(QuPathGUI qupath); Show the script editor, or bring the window to the front if it is already open. Parameters:; qupath - . createMemoryMonitorDialog; public static Stage createMemoryMonitorDialog(QuPathGUI qupath); Create a dialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25457,log,logging,25457,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"d in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into quartiles. getQuPath() - Method in class qupath.lib.gui.actions.CommonActions. Get the QuPath instance associated with these actions. getQuPath() - Static method in class qupath.lib.gui.scripting.QPEx. Get the current QuPath instance. getQuPathVersion() - Method in class qupath.imagej.gui.IJExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.lib.extension.svg.SvgExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get a QuPath version for which this extension was written. getQuPathVersion() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension. Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:494477,Log,LogRankResult,494477,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankResult']
Testability,"d output stream. void; writeImage(T img,; String pathOutput). Write a full image to a specified path. Method Details. getName; String getName(); Get the name of the image writer. Returns:. getExtensions; Collection<String> getExtensions(); Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getDefaultExtension; default String getDefaultExtension(); Get the default extension. This should be the first returned by getExtensions(). Returns:. supportsT; boolean supportsT(); Check if writer can handle multiple timepoints. Returns:. supportsZ; boolean supportsZ(); Check if writer can handle multiple z-slices. Returns:. supportsRGB; boolean supportsRGB(); Check if writer can handle RGB (it probably can...). Returns:. supportsImageType; boolean supportsImageType(ImageServer<T> server); Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Parameters:; server - ; Returns:. supportsPyramidal; boolean supportsPyramidal(); Returns true if the writer is capable of writing pyramidal images. Returns:. supportsPixelSize; boolean supportsPixelSize(); Returns true if the writer is capable of storing pixel size information. Returns:. getDetails; String getDetails(); Get further details of the writer, which may be displayed to a user. Returns:. getImageClass; Class<T> getImageClass(); Get the class of supported images. Returns:; ImageServer.getImageClass(). writeImage; void writeImage(ImageServer<T> server,; RegionRequest region,; String pathOutput); throws IOException; Write an image region to a specified path. Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; void writeImage(T img,; String pathOutput); throws IOException; Write a full image to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html:3503,Test,Test,3503,javadoc/docs/qupath/lib/images/writers/ImageWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html,1,['Test'],['Test']
Testability,"d tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659188,log,logging,659188,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"d. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659207,log,log,659207,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"dWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand. OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers. OMETiffWriter. ImageWriter for writing OME-TIFF images. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:34105,Log,LogisticRegression,34105,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['Log'],['LogisticRegression']
Testability,"ddSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30849,Log,LogManager,30849,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,der. Match tiles to the bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a t,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:34969,Log,LogManager,34969,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,der.ImageIncludeType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.logging.LogManager.LogLevel. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Returns the enum constant of th,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1080058,Log,LogLevel,1080058,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"do' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3164,log,logging,3164,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['log'],['logging']
Testability,"ds. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2264,Log,LogLevel,2264,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,12,"['Log', 'log']","['LogLevel', 'LogManager', 'log', 'logging']"
Testability,"e (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43189,log,logging,43189,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logging']
Testability,"e - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4205,Test,Test,4205,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,1,['Test'],['Test']
Testability,"e QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Returns:; See Also:. GeneralTools.getPackageVersion(Class). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:2312,test,tested,2312,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,1,['test'],['tested']
Testability,"e selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8269,log,logging,8269,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"e value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3713,Test,Test,3713,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['Test'],['Test']
Testability,"e, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. minValueProperty; public DoubleProperty minValueProperty(); The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. Returns:. maxValueProperty; public DoubleProperty maxValueProperty(); The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. Returns:. updateHistogram; public void updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected); Update the histogram to show the data for the given channel. Parameters:; imageDisplay - ; channelSelected - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:12754,log,logarithm,12754,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"e; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi.interfaces; Interface ROI. All Known Implementing Classes:; AreaROI, EllipseROI, GeometryROI, LineROI, PointsROI, PolygonROI, PolylineROI, RectangleROI. public interface ROI; Base interface for defining regions of interest (ROIs) within QuPath.; ; In general, anything that returns a coordinate should be defined in terms of pixels ; from the top left of the full-resolution image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; ROI.RoiType. Enum representing the major different types of ROI. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Get a ROI representing the convex hull of this ROI. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html:1081,Test,Test,1081,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html,1,['Test'],['Test']
Testability,"eOD(double, double), but involves ; rounding the float first. Parameters:; val - ; OD_LUT - ; Returns:; See Also:. makeOD(double, double). makeODLUT; public static double[] makeODLUT(double maxValue); Create an optical density lookup table with 256 entries, normalizing to the specified background value. Parameters:; maxValue - ; Returns:; See Also:. makeOD(double, double); makeODByLUT(int, double[]). makeODLUT; public static double[] makeODLUT(double maxValue,; int nValues); Create an optical density lookup table, normalizing to the specified background value. Parameters:; maxValue - background (white value); nValues - number of values to include in the lookup table; Returns:. convertPixelsToOpticalDensities; public static void convertPixelsToOpticalDensities(float[] px,; double maxValue,; boolean use8BitLUT); For originally-8-bit images, optical densities can usually be computed faster by preallocating a LUT with the 0-255 required values.; Otherwise, log values need to be calculated for every pixel (which can be relatively slow). Parameters:; px - ; maxValue - ; use8BitLUT - . getRedOpticalDensities; public static float[] getRedOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. getGreenOpticalDensities; public static float[] getGreenOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. getBlueOpticalDensities; public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:4919,log,log,4919,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['log'],['log']
Testability,"ePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Overrides:; addWorkflowStep in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:5968,log,logged,5968,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['log'],['logged']
Testability,"eWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:3793,Test,Test,3793,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['Test'],['Test']
Testability,"ed image. Parameters:; matLabelsNuclei - labelled image for the cell nuclei; matLabelsCells - labelled image for the full cell; labels must correspond to those in matLabelsNuclei; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; cell objects generated by tracing contours; See Also:. ContourTracing.createCells(SimpleImage, SimpleImage, RegionRequest, int, int). findRegionalMaxima; public static Mat findRegionalMaxima(Mat mat); Get the regional maxima within a Mat, providing the output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:42941,log,logging,42941,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logging']
Testability,"ed on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class DefaultScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor. All Implemented Interfaces:; ScriptEditor. Direct Known Subclasses:; RichScriptEditor. public class DefaultScriptEditor; extends Object; implements ScriptEditor; Default multilingual script editor.; ; Lacks syntax highlighting and other pleasant features, unfortunately. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguage;  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntax;  ; protected ObservableBooleanValue; sendLogToConsole. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Field Summary; Fields. Modifier and Type; Field; Description; protected org.controlsfx.control.action.Action; beautifySourceAction;  ; protected KeyCombination; comboPasteEscape;  ; protected final KeyCodeCombination; completionCodeCombination;  ; protected org.controlsfx.control.action.Action; compressSourceAction;  ; protected org.controlsfx.control.action.Action; copyAction;  ; protected org.controlsfx.control.action.Action; cutAction;  ; protected org.controlsfx.control.action.Action; findAction;  ; protected org.controlsfx.control.action.Action; insertAllDefaultImportAction;  ; protected org.controlsfx.control.action.Action; insertDetectionMeasurementsAction;  ; protected org.controlsfx.control.action.Action; insertMuAction;  ; protected org.controlsfx.control.action.Action; insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixelClassifiersAction;  ; protected org.controlsfx.control.ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:1068,log,log,1068,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['log'],['log']
Testability,"ed with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:499709,Log,LogRankResult,499709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankResult']
Testability,"ed, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxW",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:3370,log,logarithm,3370,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"een ; elements of derived PathClasses. Parameters:; delimiter - ; Returns:. isValid; public boolean isValid(); A PathClass is valid if its name is not null.; ; This should generally the case, but a single (invalid) PathClass with a null name ; can be used to indicate the absence of a classification; however, it should not be assigned ; to any object. Rather, objects should be assigned either a valid PathClass or null to indicate ; that they have no classification. Returns:. toSet; public Set<String> toSet(); Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names.; ; Important! If any path class component names are duplicates, these will ; (necessarily) be removed from the set. Therefore it is not guaranteed that ; calling fromCollection(Collection) on the output will return the same PathClass object.; ; var pathClass = ...;; var pathClass2 = PathClass.getInstance(pathClass.toSet());; assert pathClass == pathClass2; // This may or may not be true!; . However the PathClass objects should be the same if the name components are all valid and ; there are no duplicates (which should normally be the case). Returns:. compareTo; public int compareTo(PathClass o); This is now equivalent to this.toString().compareTo(o.toString()).; ; Note that in previous versions (< 0.1.2), the comparison was made based on the name only.; ; This could result in unexpected behavior whenever comparing with equality and using ; derived PathClass objects, because only the (final) name part was being compared ; and this could potentially result in classifications (wrongly) being considered equal ; (e.g. ""Tumor: Positive"" and ""Stroma: Positive"").; ; This was most significant when working with Groovy, where == is replaced by compareTo. Specified by:; compareTo in interface Comparable<PathClass>. getNullClass; public static PathClass getNullClass(); Get the value of NULL_CLASS, used to represent no classification.; In most cas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:10137,assert,assert,10137,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['assert'],['assert']
Testability,"el.PixelClassifierTools.CreateObjectOptions;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the specified delimiter between ; elements of derived PathClasses. totalBytes() - Method in class qupath.lib.gui.UndoRedoManager. The total number of bytes used for all viewers. toURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to a URI. tPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current t-position for the timepoint currently visible in the viewer. TRACE - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Trace logging (an awful lot of messages). traceGeometries(ImageServer<BufferedImage>, RegionRequest, Geometry, ContourTracing.ChannelThreshold...) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace one or more geometries in an image. traceGeometry(ImageServer<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1045069,Log,LogManager,1045069,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"eld Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html:1962,test,test,1962,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,1,['test'],['test']
Testability,"eld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, fina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1192,Log,LogLevel,1192,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogLevel']
Testability,ements (QuPath 0.5.0); ObjectMeasurements.ShapeFeatures (QuPath 0.5.0); qupath.lib.analysis.features (QuPath 0.5.0); qupath.lib.analysis.features Class Hierarchy (QuPath 0.5.0). /heatmaps; ; ColorModels.ColorModelBuilder (QuPath 0.5.0); ColorModels.DisplayBand (QuPath 0.5.0); ColorModels (QuPath 0.5.0); DensityMaps.DensityMapBuilder (QuPath 0.5.0); DensityMaps.DensityMapParameters (QuPath 0.5.0); DensityMaps.DensityMapType (QuPath 0.5.0); DensityMaps (QuPath 0.5.0); qupath.lib.analysis.heatmaps (QuPath 0.5.0); qupath.lib.analysis.heatmaps Class Hierarchy (QuPath 0.5.0). /images; ; ContourTracing.ChannelThreshold (QuPath 0.5.0); ContourTracing (QuPath 0.5.0); qupath.lib.analysis.images (QuPath 0.5.0); qupath.lib.analysis.images Class Hierarchy (QuPath 0.5.0); SimpleImage (QuPath 0.5.0); SimpleImages (QuPath 0.5.0); SimpleModifiableImage (QuPath 0.5.0). /stats; . /survival; ; KaplanMeierData (QuPath 0.5.0); KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0); LogRankTest (QuPath 0.5.0); LogRankTest.LogRankResult (QuPath 0.5.0); qupath.lib.analysis.stats.survival (QuPath 0.5.0); qupath.lib.analysis.stats.survival Class Hierarchy (QuPath 0.5.0). ArrayWrappers.ArrayWrapper (QuPath 0.5.0); ArrayWrappers (QuPath 0.5.0); Histogram (QuPath 0.5.0); qupath.lib.analysis.stats (QuPath 0.5.0); qupath.lib.analysis.stats Class Hierarchy (QuPath 0.5.0); RunningStatistics (QuPath 0.5.0); StatisticsHelper (QuPath 0.5.0). DelaunayTools.Builder (QuPath 0.5.0); DelaunayTools (QuPath 0.5.0); DelaunayTools.Subdivision (QuPath 0.5.0); DistanceTools (QuPath 0.5.0); qupath.lib.analysis (QuPath 0.5.0); qupath.lib.analysis Class Hierarchy (QuPath 0.5.0). /awt; . /common; ; AffineTransforms (QuPath 0.5.0); AwtTools (QuPath 0.5.0); BufferedImageTools (QuPath 0.5.0); qupath.lib.awt.common (QuPath 0.5.0); qupath.lib.awt.common Class Hierarchy (QuPath 0.5.0). /classifiers; . /object; ; AbstractObjectClassifier (QuPath 0.5.0); ObjectClassifier (QuPath 0.5.0); ObjectClassifiers.ClassifyByMeasurementBuilde,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:4101,Log,LogRankTest,4101,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LogRankTest']
Testability,"enCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:14369,log,logged,14369,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['log'],['logged']
Testability,"ence; public static ROI symDifference(ROI roi1,; ROI roi2); Compute the symmetric difference between two ROIs (XOR). Parameters:; roi1 - the first ROI; roi2 - the second ROI; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:8796,Test,Test,8796,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['Test'],['Test']
Testability,"entroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this success",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143389,test,test,143389,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['test'],['test']
Testability,er (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gui.actions.menus.Menus; qupath.lib.gui.tools.MenuTools; qupath.lib.gui.commands.MiniViewers; qupath.lib.gui.commands.MiniViewers.MiniViewerManager (implements javafx.event.EventHandler<T>); qupath.imagej.processing,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19883,Log,LogViewerCommand,19883,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Log'],['LogViewerCommand']
Testability,"er of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:400039,Log,LogRankResult,400039,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankResult']
Testability,"er this transform can be applied to the specified image. supportsImage(PixelType, int, boolean) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.PngWriter;  ; supportsImageType(ImageServer<T>) - Method in interface qupath.lib.images.writers.ImageWriter. Test whether images provided by a specified ImageServer can be successfully written. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Tree classifiers in OpenCV support missing v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1007815,Test,Test,1007815,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Test'],['Test']
Testability,"erface qupath.lib.gui.scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setDebugMode(boolean) - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default image data, which will be returned by QP.getCurrentImageData() if it would otherwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDefaultProject(Project<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.objects.Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:921648,Log,LogManager,921648,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"ers:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3421,Test,Test,3421,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['Test'],['Test']
Testability,"es that the geometry is valid, and does not contain self-intersections or overlapping pieces. ; No checks are made to confirm this (for performance reasons). Parameters:; geometry - ; minRingArea - ; Returns:. fillHoles; public static Geometry fillHoles(Geometry geometry); Fill all interior rings for the specified geometry. Parameters:; geometry - ; Returns:. removeFragments; public static Geometry removeFragments(Geometry geometry,; double minArea); Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. Parameters:; geometry - the geometry to refine; minArea - the minimum area of a fragment to retain. If ≤ 0, the geometry is returned unchanged.; Otherwise, polygons will be extracted from the geometry and all that have an external ring area smaller than minArea will be removed.; Returns:; the refined Geometry, or an empty polygon if all pieces of the geometry were removed. tryToFixPolygon; public static Geometry tryToFixPolygon(Polygon polygon); Test a polygon for validity, attempting to fix TopologyValidationErrors if possible.; This attempts a range of tricks (starting with Geometry.buffer(0)), although none; are guaranteed to work. The first that largely preserves the polygon's area is returned.; ; The result is guaranteed to be valid, but not necessarily to be a close match to the ; original polygon; in particular, if everything failed the result will be empty.; ; Code that calls this method can test if the output is equal to the input to determine ; if any changes were made. Parameters:; polygon - input (possibly-invalid) polygon; Returns:; the input polygon (if valid), an adjusted polygon (if attempted fixes helped),; or an empty polygon if the situation could not be resolved. refineAreas; public static Geometry refineAreas(Geometry geometry,; double minSizePixels,; double minHoleSizePixels); Remove small fragments and fill small interior rings within a Geometry.; ; Note that any modifications to the geometry will result in p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:9482,Test,Test,9482,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['Test'],['Test']
Testability,"escription copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4710,Test,Test,4710,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['Test'],['Test']
Testability,"et a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:6461,Test,Test,6461,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['Test'],['Test']
Testability,"et specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658828,Log,LoggingTools,658828,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LoggingTools']
Testability,"etOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. minValueProperty; public DoubleProperty minValueProperty(); The minimum value displayed on the histogram.; This can be used to interactively control mi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11995,log,logarithm,11995,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"etRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:9178,Test,Test,9178,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['Test'],['Test']
Testability,"ethod Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; imageData - image containing the objects to test; pathObject - object to test for missing feature; Returns:; a collection of feature names that correspond to missing features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:2546,test,test,2546,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,2,['test'],['test']
Testability,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1248,log,logOnce,1248,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,2,['log'],['logOnce']
Testability,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the cu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1290,log,log,1290,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"ethod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.writers; Class TiffWriterIJ. java.lang.Object; qupath.imagej.images.writers.TiffWriterIJ. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class TiffWriterIJ; extends Object; ImageWriter implementation to write TIFF images using ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TiffWriterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:1181,Test,Test,1181,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['Test'],['Test']
Testability,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1910,test,test,1910,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,1,['test'],['test']
Testability,"e component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set els",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2046,log,log,2046,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"f its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getPath; public String getPath(); Get the requested ImageServer path, used as an identifier. Returns:; See Also:. ImageServer.getPath(). getDownsample; public double getDownsample(); Get the requested downsample factor, defining the resolution at which pixels should be returned. Returns:. intersect2D; public RegionRequest intersect2D(ImageRegion region); Intersect to the specified 2D region, ignoring z and t. Parameters:; region - the region defining the x, y, width and height of the maximum permitted bounding box.; Returns:; the clipped RegionRequest, which may be this if no clipping is required. intersect2D; public RegionRequest intersect2D(int x,; int y,; int width,; int height); Intersect to the specified 2D region. Parameters:; x - x-coordinate of the second region's bounding box; y - y-coordinate of the second region's bounding box; width - width of the second region's bounding box; height - heig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:7950,test,test,7950,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['test'],['test']
Testability,"f necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Convert a java.awt.Shape ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:956678,log,log,956678,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"face used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaControl(boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea, boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to wrap an existing text area and wrap it in a TextAreaControl. textFieldPrompt(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. textProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing the message text. textProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; textProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1019372,log,logging,1019372,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"fferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, whe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30907,log,logging,30907,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"fier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Convert a java.awt.Shape to a JTS Geometry. SharedThreadPoolManager - Class in qupath.lib.gui. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. show() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.commands.LogViewerCommand;  ; show() - Method in class qupath.lib.gui.commands.PathObjectGridView. Create the stage and show the grid view. show() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Show the dialog. SHOW_ANALYSIS_PANE - Variable in class qupath.lib.gui.actions.CommonActions;  ; SHOW_ANALYSIS_PANEL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; SHOW_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; SHOW_ANNOTATIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; SHOW_CELL_BOUNDARIES - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions;  ; SHOW_CELL_BOUNDARIES - Variable in class qupath.lib.gui.actions.OverlayActions;  ; SHOW_CELL_BOUNDARIES_AND_NUCLEI - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions;  ; SHOW_CELL_BOUNDARIES_AND_NUCLEI - Variable in class qupath.lib.gui.actions.OverlayActions;  ; SHOW_CELL_CENTROIDS - Variable in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:958310,Log,LogViewerCommand,958310,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogViewerCommand']
Testability,"for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27797,log,log,27797,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['log']
Testability,"formats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Property representing the user directory. useROIBounds(boolean) - Method in class qupath.lib.images.writers.TileExporter. Optionally use the full ROI for parent objects, rather than TileExporter.tileSize(int, int). useRotateGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useRotateGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support rotate gestures for touchscreens and trackpads. userPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. A path where additional files may be stored, such as extensions and log files. useScrollGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support scroll gestures for touchscreens and trackpads. useSelectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; useSelectedColorProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1075016,log,log,1075016,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"former. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:10197,log,log,10197,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['log']
Testability,"g events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2112,log,log,2112,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"g is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103990,Log,Log,1103990,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['Log']
Testability,"g whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:1705,Test,Test,1705,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['Test'],['Test']
Testability,"g.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1390,log,log,1390,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['log'],['log']
Testability,"garithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659296,Log,Log,659296,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['Log']
Testability,"geJPath(String) - Static method in class qupath.imagej.gui.IJExtension. Set the path for a local ImageJ installation, if required. setImageName(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the image name for this project entry. setImageName(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Set the name property of the metadata for an ImageServer. setImageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for the specified objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:930604,log,log,930604,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:2233,test,test,2233,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,1,['test'],['test']
Testability,"ging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupActionByText(String) - Method in class qupath.lib.gui.QuPathGUI. Search for an action based upon its text (name) property. lookupMenuItem(String) - Method in class qupath.lib.gui.QuPathGUI. Search for a menu item ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:660183,Log,LogViewerCommand,660183,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogViewerCommand']
Testability,h 0.5.0); UpdateChecker (QuPath 0.5.0); UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); PreferencePane.MeasurementP,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14198,Log,LogLevel,14198,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LogLevel']
Testability,"h.lib.images.writers.JpegWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.PngWriter;  ; supportsImageType(ImageServer<T>) - Method in interface qupath.lib.images.writers.ImageWriter. Test whether images provided by a specified ImageServer can be successfully written. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can handle missing (NaN) values. supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Returns false (the default value). sup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1008454,Log,LogisticRegressionClassifier,1008454,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"h.lib.scripting.QP. Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the specified hierarchy. selectObjects(PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified classifications. selectObjectsByMeasurement(ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Deprecated. selectObjectsByPathClass(PathClass...) - Static method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:899858,log,logging,899858,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"h.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659219,log,logOnce,659219,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['Log', 'log']","['Logger', 'logOnce']"
Testability,"han the specified area from a Geometry, ignoring internal rings. Parameters:; geometry - the geometry to refine; minArea - the minimum area of a fragment to retain. If ≤ 0, the geometry is returned unchanged.; Otherwise, polygons will be extracted from the geometry and all that have an external ring area smaller than minArea will be removed.; Returns:; the refined Geometry, or an empty polygon if all pieces of the geometry were removed. tryToFixPolygon; public static Geometry tryToFixPolygon(Polygon polygon); Test a polygon for validity, attempting to fix TopologyValidationErrors if possible.; This attempts a range of tricks (starting with Geometry.buffer(0)), although none; are guaranteed to work. The first that largely preserves the polygon's area is returned.; ; The result is guaranteed to be valid, but not necessarily to be a close match to the ; original polygon; in particular, if everything failed the result will be empty.; ; Code that calls this method can test if the output is equal to the input to determine ; if any changes were made. Parameters:; polygon - input (possibly-invalid) polygon; Returns:; the input polygon (if valid), an adjusted polygon (if attempted fixes helped),; or an empty polygon if the situation could not be resolved. refineAreas; public static Geometry refineAreas(Geometry geometry,; double minSizePixels,; double minHoleSizePixels); Remove small fragments and fill small interior rings within a Geometry.; ; Note that any modifications to the geometry will result in points and lines being stripped away, ; leaving only polygons. Parameters:; geometry - input geometry to refine; minSizePixels - minimum area of a fragment to keep (the area of interior rings for polygons will be ignored); minHoleSizePixels - minimum size of an interior hole to keep; Returns:; the refined geometry (possibly the original unchanged), or empty geometry if the changes resulted in the Geometry disappearing; See Also:. removeFragments(Geometry, double); removeInterio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:9945,test,test,9945,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['test'],['test']
Testability,"hat doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. F",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27576,log,log,27576,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['log']
Testability,"have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:502822,log,logging,502822,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"hen dealing with ImageServers. ServerTools() - Constructor for class qupath.lib.images.servers.ServerTools;  ; setAccelerator(String, String) - Method in class qupath.lib.gui.QuPathGUI. Set an accelerator for the specified menu command. setAccelerator(MenuItem, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified menu item. setAccelerator(Action, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified action. setActiveHandlePosition(double, double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. If a handle has been grabbed, update its displacement. setActiveTool(PathTool) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the active PathTool for input to this viewer. setActiveViewer(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the activeViewer property. setAll() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ALL. setAlphaComposite(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; setArgs(String[]) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set optional string args to pass to the script. setBatchIndex(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image index for batch processing (default is 0). setBatchProjectAndImage(Project<BufferedImage>, ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the Project and ImageData to use for batch processing for the current thread. setBatchSaveResult(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Specify whether the script that is running should save results or not. setBatchSize(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the batch size for batch processing (default is 1). setBioformatsEnabled(boolean) - Method in class qupath.lib.images.servers.bioformats.BioF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:913255,log,log,913255,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"hod in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399721,Log,LogRankResult,399721,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankResult']
Testability,"hod in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658779,Log,LoggingTools,658779,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LoggingTools']
Testability,"hod in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.logging.LogManager.LogLevel. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Returns an array containing the constants of this enum class, in; the order they ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1088578,Log,LogLevel,1088578,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"hods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RegionFilter.StandardRegionFilters valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<RegionFilter.StandardRegionFilters>. test; public boolean test(ImageData<?> imageData,; RegionRequest region). Specified by:; test in interface BiPredicate<ImageData<?>,RegionRequest>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:4255,test,test,4255,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,3,['test'],['test']
Testability,"ht). Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. static double; getCircularity(ROI roi). Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). static double; getCircularity(ROI roi,; double pixelWidth,; double pixelHeight). Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). static Shape; getShape(ROI roi). Get a Shape object representing a ROI. static ROI; getShapeROI(Area area,; ImagePlane plane). Create a ROI from an Shape. static ROI; getShapeROI(Shape shape,; ImagePlane plane,; double flatness). Create a ROI from an Shape with a specified 'flatness'. static ROI; intersection(Collection<? extends ROI> rois). Create intersection of multiple ROIs from a collection. static ROI; intersection(ROI... rois). Create intersection of multiple ROIs. static boolean; intersectsRegion(ROI roi,; ImageRegion region). Test whether a ROI and an ImageRegion intersect. static boolean; isShapeROI(ROI roi). Returns true if the ROI is not null and is not a point ROI. static List<ROI>; makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI). Make fixed-size rectangular tile ROIs for a specified area. static ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformR",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:4408,Test,Test,4408,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['Test'],['Test']
Testability,"hy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object, omitting the alpha component. getRGBThumb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:499768,log,log-rank,499768,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log-rank', 'test']"
Testability,"ib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109133,log,loggable,1109133,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['loggable']
Testability,"ib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430367,log,logging,430367,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,ib.images.servers.JsonImageServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.analysis.stats.survival.KaplanMeierData; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent (implements java.lang.Comparable<T>); qupath.lib.images.servers.LabeledImageServer.Builder; qupath.lib.roi.LineROI (implements java.io.Serializable); qupath.process.gui.commands.ui.LoadResourceCommand<S> (implements java.lang.Runnable); qupath.lib.analysis.features.LocalBinaryPatterns; qupath.opencv.tools.LocalNormalization; qupath.opencv.tools.LocalNormalization.LocalNormalizationType; qupath.opencv.tools.LocalNormalization.SmoothingScale; qupath.lib.scripting.LoggingTools; qupath.lib.gui.logging.LogManager; qupath.lib.analysis.stats.survival.LogRankTest; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult; qupath.lib.common.LogTools; qupath.lib.gui.commands.LogViewerCommand; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.commands.MeasurementExportCommand (implements java.lang.Runnable); qupath.lib.gui.tools.MeasurementExporter; qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory; qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.tools.MeasurementMapper; qupath.lib.experimental.pixels.MeasurementProcessor; qupath.lib.experimental.pixels.MeasurementProcessor.Functions; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements; qupath.lib.gui.actions.menus.MeasureMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.MeasureMenuActions.Actions; qupath.lib.gui.actions.menus.Menus; qupath.lib.gui.tools.MenuTools; qupath.lib.gui.commands.MiniViewers; qupath.lib.gui.commands.MiniViewers.MiniViewerManager (implements javafx.event.Even,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:19849,Log,LogTools,19849,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Log'],['LogTools']
Testability,"ib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation usin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814511,log,logging,814511,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:1550,test,test,1550,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,1,['test'],['test']
Testability,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3356,log,log,3356,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,14,"['Log', 'log']","['LogLevel', 'log', 'logging']"
Testability,"id; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2770,Log,LogManager,2770,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogManager']
Testability,"ies. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1524,Log,LogLevel,1524,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogLevel']
Testability,"if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this neither a lower nor an upper bound constraining valid values. isUndoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isUndoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'undo' can be applied to the control. isUndoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isUnknown() - Method in class qupath.opencv.dnn.DnnShape. Returns true if the shape is unknown. isUnsignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is an unsigned integer representation. isURL() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:637010,Log,LogRankResult,637010,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankResult']
Testability,"ified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the image type of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283964,Log,LogManager,283964,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"il: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1290,Log,LogisticRegression,1290,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,1,['Log'],['LogisticRegression']
Testability,"ile). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the final dot,; but also handles specific multi-part file extensions as well. Parameters:; file - ; Returns:; See Also:. stripExtension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9824,test,test,9824,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['test'],['test']
Testability,iler.Builder. Match tiles to the bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoi,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:34961,log,logging,34961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Measuremen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27556,Log,LogLevel,27556,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['Log'],['LogLevel']
Testability,"implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Details. getDefaultValue; S getDefaultValue(); Get a default value to use if the Parameter has not been otherwise set. Returns:. setValue; boolean setValue(S value); Set the Parameter to have a specified value. Parameters:; value - ; Returns:. setStringLastValue; boolean setStringLastValue(Locale locale,; String value); Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. resetValue; void resetValue(); Set last value to null (so default can be used). getValue; S getValue(); Get the current set value (may be null). Returns:; See Also:. setValue(S); getValueOrDefault(). getValueOrDefault; S getValueOrDefault(); Get the current set value, or any default if no value has been set. Returns:; See Also:. setValue(S); getValue(). getPrompt; String getPrompt(); Get some prompt text that may be displayed to a user. Returns:. isValidInput; boolean isValidInput(S value); Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setHidden; void setHidden(boolean hidden); Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Parameters:; hidden - . isHidden; boolean isHidden(); Test is the 'hidden' flag is set for the parameter. Returns:. duplicate; Parameter<S> duplicate(); Create a new Parameter with the same text and value. Returns:. hasHelpText; boolean hasHelpText(); Query whether getHelpText() returns a meaningful String (as opposed to null). Returns:. getHelpText; String getHelpText(); Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html:3454,Test,Test,3454,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,1,['Test'],['Test']
Testability,"in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659334,log,logOnce,659334,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['Log', 'log']","['Logger', 'logOnce']"
Testability,"in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaContro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1018580,test,test,1018580,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"in this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that en",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:2762,Test,Test,2762,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['Test'],['Test']
Testability,"ing (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1978,Log,LogManager,1978,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogManager']
Testability,"ing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659769,log,log,659769,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['log', 'test']","['log', 'test']"
Testability,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1782,Test,Test,1782,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,2,"['Test', 'test']","['Test', 'test']"
Testability,"ion.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8239,test,test,8239,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['test'],['test']
Testability,"ionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse ap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29239,log,log,29239,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"iptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2457,log,logger,2457,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"iption; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to dec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1893,Log,LogLevel,1893,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,2,"['Log', 'log']","['LogLevel', 'logging']"
Testability,"isplayed as a drop-down list. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected List<S>; choices;  ; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. List<S>; getChoices(). Get a list of available choices. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:1622,Test,Test,1622,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['Test'],['Test']
Testability,"isplaying a PathObject using the default PathObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:194810,Log,LoggingTools,194810,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LoggingTools']
Testability,"ith the ImageServer as a distinct object. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getPath(). Get a String path that can uniquely identify this image. default PixelCalibration; getPixelCalibration(). Get the PixelCalibration object from the current metadata. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Get an array of downsample factors supported by the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. Collection<URI>; getURIs(). Get the URIs for images required for this server. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Test whether a region is empty, i.e. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. default T; readBufferedImage(RegionRequest request). Deprecated.; since v0.4.0. default T; readRegion(double downsample,; int x,; int y,; int width,; int height). Read a 2D(+C) image region from the default ImagePlane (i.e. default T; readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoint. default T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:3990,Test,Test,3990,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['Test'],['Test']
Testability,"ized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430152,log,log,430152,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"j.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Returns the enum constant of this class with the specified name. valueOf(String) - Sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1077193,test,test,1077193,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLev",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1447,Log,LogManager,1447,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogManager']
Testability,"java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.display.ChannelDisplayMode; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains; qupath.lib.color.ColorTransformer.ColorTransformMethod; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType; qupath.lib.gui.dialogs.Dialogs.DialogButton; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap; qupath.lib.gui.tools.GuiTools.SnapshotType; qupath.lib.gui.charts.HistogramChart.CountsTransformMode; qupath.lib.gui.charts.HistogramChart.DisplayMode; qupath.lib.gui.tools.IconFactory.PathIcons; qupath.lib.images.ImageData.ImageType; qupath.lib.gui.viewer.ImageInterpolation; qupath.lib.images.servers.ImageServerMetadata.ChannelType; qupath.lib.gui.actions.InfoMessage.MessageType; qupath.opencv.tools.LocalNormalization.NormalizationType; qupath.lib.gui.logging.LogManager.LogLevel; qupath.lib.measurements.MeasurementList.MeasurementListType; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature; qupath.lib.classifiers.Normalization; qupath.lib.analysis.features.ObjectMeasurements.Compartments; qupath.lib.analysis.features.ObjectMeasurements.Measurements; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType; qupath.opencv.dnn.OpenCVDnn.ModelType; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode; qupath.lib.plugins.ParallelTileObject.Status; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses; qupath.lib.io.PathIO.GeoJsonExportOptions; qupath.lib.objects.PathObjectFilter (implements java.util.function.Predicate<T>); qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType; qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:44722,Log,LogLevel,44722,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['Log'],['LogLevel']
Testability,"ject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:3191,log,log,3191,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,jectMeasurements.Measurements (QuPath 0.5.0); ObjectMeasurements.ShapeFeatures (QuPath 0.5.0); qupath.lib.analysis.features (QuPath 0.5.0); qupath.lib.analysis.features Class Hierarchy (QuPath 0.5.0). /heatmaps; ; ColorModels.ColorModelBuilder (QuPath 0.5.0); ColorModels.DisplayBand (QuPath 0.5.0); ColorModels (QuPath 0.5.0); DensityMaps.DensityMapBuilder (QuPath 0.5.0); DensityMaps.DensityMapParameters (QuPath 0.5.0); DensityMaps.DensityMapType (QuPath 0.5.0); DensityMaps (QuPath 0.5.0); qupath.lib.analysis.heatmaps (QuPath 0.5.0); qupath.lib.analysis.heatmaps Class Hierarchy (QuPath 0.5.0). /images; ; ContourTracing.ChannelThreshold (QuPath 0.5.0); ContourTracing (QuPath 0.5.0); qupath.lib.analysis.images (QuPath 0.5.0); qupath.lib.analysis.images Class Hierarchy (QuPath 0.5.0); SimpleImage (QuPath 0.5.0); SimpleImages (QuPath 0.5.0); SimpleModifiableImage (QuPath 0.5.0). /stats; . /survival; ; KaplanMeierData (QuPath 0.5.0); KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0); LogRankTest (QuPath 0.5.0); LogRankTest.LogRankResult (QuPath 0.5.0); qupath.lib.analysis.stats.survival (QuPath 0.5.0); qupath.lib.analysis.stats.survival Class Hierarchy (QuPath 0.5.0). ArrayWrappers.ArrayWrapper (QuPath 0.5.0); ArrayWrappers (QuPath 0.5.0); Histogram (QuPath 0.5.0); qupath.lib.analysis.stats (QuPath 0.5.0); qupath.lib.analysis.stats Class Hierarchy (QuPath 0.5.0); RunningStatistics (QuPath 0.5.0); StatisticsHelper (QuPath 0.5.0). DelaunayTools.Builder (QuPath 0.5.0); DelaunayTools (QuPath 0.5.0); DelaunayTools.Subdivision (QuPath 0.5.0); DistanceTools (QuPath 0.5.0); qupath.lib.analysis (QuPath 0.5.0); qupath.lib.analysis Class Hierarchy (QuPath 0.5.0). /awt; . /common; ; AffineTransforms (QuPath 0.5.0); AwtTools (QuPath 0.5.0); BufferedImageTools (QuPath 0.5.0); qupath.lib.awt.common (QuPath 0.5.0); qupath.lib.awt.common Class Hierarchy (QuPath 0.5.0). /classifiers; . /object; ; AbstractObjectClassifier (QuPath 0.5.0); ObjectClassifier (QuPath 0.5.0); ObjectClassifiers.Clas,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:4073,Log,LogRankTest,4073,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['Log'],['LogRankTest']
Testability,"jectsMenuActions.LockActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.SelectActions - Class in qupath.lib.gui.actions.menus;  ; ObjectTreeBrowser - Class in qupath.lib.gui.panes. Simple browser for exploring fields (including private fields) within an object by reflection. ObjectTreeBrowser() - Constructor for class qupath.lib.gui.panes.ObjectTreeBrowser;  ; ObservableMeasurementTableData - Class in qupath.lib.gui.measure. A table data model to supply observable measurements of PathObjects. ObservableMeasurementTableData() - Constructor for class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; OD_Normalized - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. RGB values normalized to OD vector (to reduce intensity information). of(long...) - Static method in class qupath.opencv.dnn.DnnShape. Create a new DnnShape with the specified dimension lengths. OFF - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Turn off logging. OMEPixelParser - Class in qupath.lib.images.servers.bioformats. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder - Class in qupath.lib.images.servers.bioformats. Builder for instances of OMEPixelParser. OMEPyramidWriter - Class in qupath.lib.images.writers.ome. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder - Class in qupath.lib.images.writers.ome. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType - Enum Class in qupath.lib.images.writers.ome. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType - Enum Class in qupath.lib.images.writers.ome. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries - Class in qupath.lib.images.writers.ome. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand - Class in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:720163,Log,LogLevel,720163,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"l - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659899,Log,LogTools,659899,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogTools']
Testability,"l MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2253,Log,LogManager,2253,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogManager']
Testability,"labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27715,log,log,27715,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,"['log', 'test']","['log', 'test']"
Testability,"lass qupath.lib.gui.viewer.OverlayOptions. Property representing the global opacity for overlay drawing. OPEN_IMAGE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; OPEN_IMAGE_OR_URL - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; opencl() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target. opencl16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target with 16-bit floating point. OpenCVClassifiers - Class in qupath.opencv.ml. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers() - Constructor for class qupath.opencv.ml.OpenCVClassifiers;  ; OpenCVClassifiers.BoostClassifier - Class in qupath.opencv.ml. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier - Class in qupath.opencv.ml. Classifier based on DTrees. OpenCVClassifiers.EMClusterer - Class in qupath.opencv.ml. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier - Class in qupath.opencv.ml. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV - Class in qupath.opencv.ml. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel - Class in qupath.opencv.ml. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier - Class in qupath.opencv.ml. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV - Class in qupath.opencv.ml. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV - Class in qupath.opencv.ml. Classifier based on SVMSGD. OpenCVDnn - Class in qupath.opencv.dnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn() - Constructor for class qupath.opencv.dnn.OpenCVDnn;  ; OpenCVDnn.Builder - Class in qupath.opencv.dnn. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType - Enum Class in qupath.opencv.dnn. Enum representing different classe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:722610,Log,LogisticRegressionClassifier,722610,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"lass qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Optionally enable or disable parallelization when reading images. setResolution(PixelCalibration) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the resolution at which the training should occur. setROI(ROI) - Method in class qupath.lib.objects.PathROIObject. Set the ROI for this object. setROI(ROI) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, stopping any ROI translation currently in progress. setROI(ROI, boolean) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, optionally stopping any ROI translation currently in progress. setRootLogLevel(LogManager.LogLevel) - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level. setRotation(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the rotation; angle in radians. setSaturationPercent(double) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. setScript(String) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setScriptEditor(ScriptEditor) - Method in class qupath.lib.gui.QuPathGUI. Set a new ScriptEditor, which will be used from now on. setSelectable(Action, boolean) - Static method in class qupath.lib.gui.actions.ActionTools. Set the selectable property for an action. setSelected(boolean) - Method in class qupath.lib.gui.SelectableItem. Set the item to be selected. setSelectedObject(PathObject) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:944329,Log,LogLevel,944329,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"lass qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the scale factor for the specified featu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:502855,log,log,502855,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"lassificationOverlay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Optionally enable or disable parallelization when reading images. setResolution(PixelCalibration) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the resolution at which the training should occur. setROI(ROI) - Method in class qupath.lib.objects.PathROIObject. Set the ROI for this object. setROI(ROI) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, stopping any ROI translation currently in progress. setROI(ROI, boolean) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, optionally stopping any ROI translation currently in progress. setRootLogLevel(LogManager.LogLevel) - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level. setRotation(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the rotation; angle in radians. setSaturationPercent(double) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. setScript(String) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setScriptEditor(ScriptEditor) - Method in class qupath.lib.gui.QuPathGUI. Set a new ScriptEditor, which will be used from now on. setSelectable(Action, boolean) - Static method in class qupath.lib.gui.actions.ActionTools. Set the selectable property for an action. setSelected(boolean) - Method in class qupath.lib.gui.SelectableItem. Set the item to be selected. setSelectedObject(PathObject) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObject) - Method in class qupath.lib.objects.h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:944387,Log,LogManager,944387,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"lassifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143786,test,test,143786,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['test'],['test']
Testability,"ld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class JpegWriter. java.lang.Object; qupath.lib.images.writers.JpegWriter. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class JpegWriter; extends Object; ImageWriter implementation to write JPEG images using ImageIO. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; JpegWriter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). W",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:1166,Test,Test,1166,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['Test'],['Test']
Testability,"le in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:40936,log,logging,40936,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"le, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430594,log,logged,430594,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['log'],"['log', 'logged']"
Testability,"lean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25062,log,logging,25062,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659122,Log,LogManager,659122,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['Log'],['LogManager']
Testability,"libration. Returns true if the pixel width and height information in microns is known. hasPointROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Returns true if a PathObject has a Point ROI. hasROI() - Method in class qupath.lib.objects.PathObject. Returns true if this object has a ROI. hasROI() - Method in class qupath.lib.roi.RoiEditor. Returns true if this editor currently has a ROI. hasServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if there is currently an ImageServer being displayed in this viewer. hasString(String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasSuffix() - Method in class qupath.lib.common.Version. Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. hasUnseenErrors() - Method in class qupath.lib.gui.commands.LogViewerCommand. Boolean binding indicating whether there are any unseen errors. hasUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid upper bound. hasZAndT() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker has Z and T information. hasZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the z-spacing is known in microns. hConcat(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Horizontal concatenation for a Mat. headerText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog header text. height - Variable in class qupath.lib.geom.ImmutableDimension. Height of the ImmutableDimension. height - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; height - Variable in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:573469,Log,LogViewerCommand,573469,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogViewerCommand']
Testability,"llection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to mana",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658759,log,log,658759,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659062,Log,LogManager,659062,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:956653,Log,LogManager,956653,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,ls.SvgBuilder.ImageIncludeType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.logging.LogManager.LogLevel. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Returns the enum cons,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1080047,Log,LogManager,1080047,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"lsfx.control.action.Action insertQPExImportAction. insertAllDefaultImportAction; protected org.controlsfx.control.action.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorContro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8113,test,test,8113,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['test'],['test']
Testability,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:61557,log,logged,61557,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,['log'],"['loggable', 'logged']"
Testability,"ludePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601346,log,logging,601346,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"lue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4206,Test,Test,4206,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,1,['Test'],['Test']
Testability,"lue; public static final String; PROJECT_LOCATION; ""classifiers/pixel_classifiers"". qupath.lib.color.ColorDeconvolutionStains. Modifier and Type; Constant Field; Value; public static final String; DAB; ""DAB""; public static final String; EOSIN; ""Eosin""; public static final String; HEMATOXYLIN; ""Hematoxylin"". qupath.lib.common.GeneralTools. Modifier and Type; Constant Field; Value; public static final String; SYMBOL_MICROMETER; ""\u00b5m""; public static final char; SYMBOL_MU; '\u00b5'; public static final char; SYMBOL_SIGMA; '\u03c3'. qupath.lib.gui.JavadocViewer. Modifier and Type; Constant Field; Value; public static final String; PROP_JAVADOC_PATH; ""javadoc"". qupath.lib.gui.QuPathGUI. Modifier and Type; Constant Field; Value; public static final int; TOOLBAR_ICON_SIZE; 16. qupath.lib.gui.UserDirectoryManager. Modifier and Type; Constant Field; Value; public static final String; DIR_COLORMAPS; ""colormaps""; public static final String; DIR_CSS; ""css""; public static final String; DIR_EXTENSIONS; ""extensions""; public static final String; DIR_LOCALIZATION; ""localization""; public static final String; DIR_LOGS; ""logs""; public static final String; DIR_SCRIPTS; ""scripts"". qupath.lib.gui.commands.InteractiveObjectImporter. Modifier and Type; Constant Field; Value; public static final String; MIME_TYPE_GEOJSON; ""application/geo+json"". qupath.lib.gui.measure.ObservableMeasurementTableData. Modifier and Type; Constant Field; Value; public static final String; NAME_OBJECT_ID; ""Object ID"". qupath.lib.gui.tma.TMADataIO. Modifier and Type; Constant Field; Value; public static final String; TMA_DEARRAYING_DATA_EXTENSION; "".qptma"". qupath.lib.gui.viewer.recording.ViewTracker. Modifier and Type; Constant Field; Value; protected static final String; LOG_DELIMITER; ""\t"". qupath.lib.images.servers.PixelCalibration. Modifier and Type; Constant Field; Value; public static final String; PIXEL; ""px""; public static final String; Z_SLICE; ""z-slice"". qupath.lib.images.servers.openslide.jna.OpenSl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/constant-values.html:1864,log,logs,1864,javadoc/docs/constant-values.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html,1,['log'],['logs']
Testability,"lue=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class); public final ObjectProperty<PathP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2979,log,logLevel,2979,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,2,"['Log', 'log']","['LogLevel', 'logLevel']"
Testability,"lues() - Static method in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.logging.LogManager.LogLevel. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Returns an array containing the constants of this enum class, i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1088559,log,logging,1088559,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"luginIJ. public abstract class AbstractInteractivePlugin<T>; extends AbstractPlugin<T>; implements PathInteractivePlugin<T>; Abstract class to help with implementing an interactive plugin. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected ParameterList; params;  . Constructor Summary; Constructors. Constructor; Description; AbstractInteractivePlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected trans",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2030,log,logging,2030,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['log'],['logging']
Testability,"ly using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4312,Test,Test,4312,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['Test'],['Test']
Testability,"m constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuild",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659418,Log,Log,659418,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['Log']
Testability,"mageData to a new value. setImageJPath(String) - Static method in class qupath.imagej.gui.IJExtension. Set the path for a local ImageJ installation, if required. setImageName(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the image name for this project entry. setImageName(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Set the name property of the metadata for an ImageServer. setImageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classificat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:930571,log,logging,930571,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,mages; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); PreferencePane.MeasurementPreferences (QuPath 0.5.0); PreferencePane.ObjectPreferences (QuPath 0.5.0); Preference,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:14277,log,logging,14277,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['log'],['logging']
Testability,"mall tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageReg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:16787,log,logical,16787,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['log'],['logical']
Testability,"me ; useful text (or a title) that may need to be displayed. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; isTitle;  ; protected String; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<String>; duplicate(). Create a new Parameter with the same text and value. String; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isTitle(). Returns true if the parameter should be considered a title. boolean; isValidInput(String value). Always returns false. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value);",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:1605,Test,Test,1605,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['Test'],['Test']
Testability,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1162,log,log-rank,1162,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,4,"['log', 'test']","['log-rank', 'test']"
Testability,"mon.GeneralTools. Split new lines (in a cross-platform way... splitMerge(Collection<? extends ImageOp>) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMerge(ImageOp...) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMultiply(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. splitNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Get a list containing the names of all constituent parts of a PathClass. SplitProjectTrainingCommand - Class in qupath.process.gui.commands. Divide a project into training, validation and test sets but flagging individual image entries. SplitProjectTrainingCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SplitProjectTrainingCommand. Constructor. splitROI(ROI) - Static method in class qupath.lib.roi.RoiTools. Split a multi-part ROI into separate pieces. splitSelectedAnnotationAreasByLines() - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitSelectedAnnotationAreasByLines(double, boolean) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSelectedAnnotationAreasByLines(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:991851,test,test,991851,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['test'],['test']
Testability,"mpatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecting objects too; Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(ImageData<?> imageData); Remove objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144751,test,test,144751,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['test'],['test']
Testability,"mponent). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2351,Log,LogLevel,2351,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"mpt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into quartiles. getQuPath() - Method in class qupath.lib.gui.actions.CommonActions. Get the QuPath instance associated with these actions. getQuPath() - Static method in class qupath.lib.gui.scripting.QPEx. Get the current QuPath instance. getQuPathVersion() - Method in class qupath.imagej.gui.IJExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.lib.extension.svg.SvgExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get a QuPath version for which this extension was written. getQuPathVersion() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:494465,Log,LogRankTest,494465,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankTest']
Testability,"mum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399866,Log,LogRankResult,399866,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankResult']
Testability,"n class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupath.opencv.dnn.OpenCVDnn. Initialize ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601380,log,logging,601380,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"n class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata key for the flag indicating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1047925,Log,LogisticRegressionClassifier,1047925,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"nage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupActionByText(String) - Method in class qupath.lib.gui.QuPathGU",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:660017,Log,LogTools,660017,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['Log'],"['LogTools', 'LogViewerCommand']"
Testability,"nager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off log",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1458,Log,LogLevel,1458,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogLevel']
Testability,"nces - Class in qupath.process.gui;  ; WandToolEventHandler.WandType - Enum Class in qupath.process.gui. Enum reflecting different color images that may be used by the Wand tool. wandToRoi(Wand) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a traced outline from the ImageJ Wand into a PolygonRoi. wandType - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message on",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1102983,log,logging,1102983,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"nces;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupAction",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659964,Log,LogTools,659964,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogTools']
Testability,"nction that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776272,Log,LogisticRegressionClassifier,776272,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"nd updated), ; use updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean). Parameters:; pathObject - the original object (this will be unchanged); plane - the plane for the new ROIs; copyMeasurements - if true, measurements and metadata should be copied; this may not be suitable since ; intensity measurements probably aren't appropriate for the new plane; createNewIDs - if true, create new IDs for the object (recommended); Returns:; the new object, with ROIs on the requested plane; Since:; v0.4.0; See Also:. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean). getSuitableName; public static String getSuitableName(Class<? extends PathObject> cls,; boolean makePlural); Get a user-friendly name for a specific type of PathObject, based on its Java class. Parameters:; cls - ; makePlural - ; Returns:. containsObject; @Deprecated; public static boolean containsObject(PathObject parentObject,; PathObject childObject); Deprecated.; Test whether the ROI associated with one object can completely the ROI of a second object.; Returns false if either ROI is null. Parameters:; parentObject - ; childObject - ; Returns:. isAncestor; public static boolean isAncestor(PathObject pathObject,; PathObject possibleAncestor); Query if one object is the ancestor of another. Parameters:; pathObject - ; possibleAncestor - ; Returns:. getTMACoreObjects; public static List<TMACoreObject> getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores); Extract a list of TMA cores from an object hierarchy. If no cores are present, an empty list is returned. Parameters:; hierarchy - ; includeMissingCores - ; Returns:. getAncestorTMACore; public static TMACoreObject getAncestorTMACore(PathObject pathObject); Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core.; ; If the passed object already is a TMACore, it is returned directly. Otherwise, all ancestors are checked. Parameters:; pathObject - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:23372,Test,Test,23372,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['Test'],['Test']
Testability,"nderer(ImageRenderer) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Optionally enable or disable parallelization when reading images. setResolution(PixelCalibration) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the resolution at which the training should occur. setROI(ROI) - Method in class qupath.lib.objects.PathROIObject. Set the ROI for this object. setROI(ROI) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, stopping any ROI translation currently in progress. setROI(ROI, boolean) - Method in class qupath.lib.roi.RoiEditor. Set the active ROI, optionally stopping any ROI translation currently in progress. setRootLogLevel(LogManager.LogLevel) - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level. setRotation(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the rotation; angle in radians. setSaturationPercent(double) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. setScript(String) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setScriptEditor(ScriptEditor) - Method in class qupath.lib.gui.QuPathGUI. Set a new ScriptEditor, which will be used from now on. setSelectable(Action, boolean) - Static method in class qupath.lib.gui.actions.ActionTools. Set the selectable property for an action. setSelected(boolean) - Method in class qupath.lib.gui.SelectableItem. Set the item to be selected. setSelectedObject(PathObject) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:944318,Log,LogManager,944318,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"ner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stride); Test method for rearranging a collection so that entries are interleaved with a regularity given by stride.; ; It can be used to rearrange tasks to try to make better use of cached image regions, by helping to ensure that; all available processors are operating on distinct parts of the image - rather than all in the same region,; where image tile requests could become a bottleneck.; ; Intended use would be something like the following:; ; int n = tasks.size();; Runnable[] tasks2 = new Runnable[n];; if (rearrangeByStride(tasks, tasks2, Runtime.getRuntime().availableProcessors())); tasks = Arrays.asList(tasks2);; . Parameters:; input - ; output - ; stride - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:6321,log,logged,6321,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,2,"['Test', 'log']","['Test', 'logged']"
Testability,"ng created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static Bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29495,log,log,29495,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable com",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3130,Log,LogLevel,3130,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,"['Log', 'log']","['LogLevel', 'log']"
Testability,"nks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class EllipseROI. java.lang.Object; qupath.lib.roi.EllipseROI. All Implemented Interfaces:; Serializable, ROI. public class EllipseROI; extends Object; implements Serializable; ROI implementing a circle, or (unrotated) ellipse. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:1067,Test,Test,1067,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['Test'],['Test']
Testability,"nlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; createRelativePathProperty(String other). Create a read only property for a relative path of the user subdirectory. ReadOnlyObjectProperty<Path>; cssDirectoryProperty(). Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Proper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3186,log,log,3186,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"ns.LockActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.SelectActions - Class in qupath.lib.gui.actions.menus;  ; ObjectTreeBrowser - Class in qupath.lib.gui.panes. Simple browser for exploring fields (including private fields) within an object by reflection. ObjectTreeBrowser() - Constructor for class qupath.lib.gui.panes.ObjectTreeBrowser;  ; ObservableMeasurementTableData - Class in qupath.lib.gui.measure. A table data model to supply observable measurements of PathObjects. ObservableMeasurementTableData() - Constructor for class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; OD_Normalized - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. RGB values normalized to OD vector (to reduce intensity information). of(long...) - Static method in class qupath.opencv.dnn.DnnShape. Create a new DnnShape with the specified dimension lengths. OFF - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Turn off logging. OMEPixelParser - Class in qupath.lib.images.servers.bioformats. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder - Class in qupath.lib.images.servers.bioformats. Builder for instances of OMEPixelParser. OMEPyramidWriter - Class in qupath.lib.images.writers.ome. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder - Class in qupath.lib.images.writers.ome. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType - Enum Class in qupath.lib.images.writers.ome. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType - Enum Class in qupath.lib.images.writers.ome. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries - Class in qupath.lib.images.writers.ome. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand - Class in qupath.lib.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:720182,log,logging,720182,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"nsion is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9693,test,test,9693,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['test'],['test']
Testability,"nsions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4314,Test,Test,4314,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['Test'],['Test']
Testability,"nt Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1882,Log,LogManager,1882,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['Log'],['LogManager']
Testability,nting the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; createRelativePathProperty(String other). Create a read only property for a relative path of the user subdirectory. ReadOnlyObjectProperty<Path>; cssDirectoryProperty(). Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInst,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1975,log,log,1975,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['log'],['log']
Testability,"num class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:240373,log,logging,240373,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"nus;  ; ObjectsMenuActions.LockActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.SelectActions - Class in qupath.lib.gui.actions.menus;  ; ObjectTreeBrowser - Class in qupath.lib.gui.panes. Simple browser for exploring fields (including private fields) within an object by reflection. ObjectTreeBrowser() - Constructor for class qupath.lib.gui.panes.ObjectTreeBrowser;  ; ObservableMeasurementTableData - Class in qupath.lib.gui.measure. A table data model to supply observable measurements of PathObjects. ObservableMeasurementTableData() - Constructor for class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; OD_Normalized - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. RGB values normalized to OD vector (to reduce intensity information). of(long...) - Static method in class qupath.opencv.dnn.DnnShape. Create a new DnnShape with the specified dimension lengths. OFF - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Turn off logging. OMEPixelParser - Class in qupath.lib.images.servers.bioformats. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder - Class in qupath.lib.images.servers.bioformats. Builder for instances of OMEPixelParser. OMEPyramidWriter - Class in qupath.lib.images.writers.ome. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder - Class in qupath.lib.images.writers.ome. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType - Enum Class in qupath.lib.images.writers.ome. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType - Enum Class in qupath.lib.images.writers.ome. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries - Class in qupath.lib.images.writers.ome. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:720152,Log,LogManager,720152,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30841,log,logging,30841,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658993,Log,LogManager,658993,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"ocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430545,Log,LogViewerCommand,430545,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogViewerCommand']
Testability,"od in interface qupath.lib.gui.scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setDebugMode(boolean) - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default image data, which will be returned by QP.getCurrentImageData() if it would otherwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDefaultProject(Project<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:921640,log,logging,921640,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"od. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.writers; Class ZipWriterIJ. java.lang.Object; qupath.imagej.images.writers.ZipWriterIJ. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class ZipWriterIJ; extends Object; ImageWriter implementation to write zipped TIFF images using ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ZipWriterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:1183,Test,Test,1183,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['Test'],['Test']
Testability,"odeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static Observabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50170,log,log,50170,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['log'],['log']
Testability,"ogDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property correspon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659632,Log,LogRankTest,659632,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['Log'],['LogRankTest']
Testability,"ogger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3554,log,logger,3554,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"ogging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103980,Log,LogTools,1103980,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogTools']
Testability,"ogging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2489,Log,LogManager,2489,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['Log'],['LogManager']
Testability,"ole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the console. Specified by:; computeConsoleStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; logConsole - if true, the console prints to the log rather than directly; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:2518,log,logConsole,2518,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,9,['log'],"['log', 'logConsole']"
Testability,"olean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupath.opencv.dnn.OpenCV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601365,Log,LogLevel,601365,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogLevel']
Testability,"olors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:10072,log,logs,10072,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['logs']
Testability,"om interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:8023,Test,Test,8023,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['Test'],['Test']
Testability,"on<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2591,log,logger,2591,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['log'],['logger']
Testability,"oncrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:2397,log,log,2397,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['log'],['log']
Testability,"ons.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjectAndImage() - Static method in class qupath.lib.scripting.QP. Reset the Project and ImageData used for batch processing for the current thread. resetClassifications(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the current hierarchy. resetClassifications(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.process.gui.WandToolEventHandler. Reset the constraining objects. resetCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the custom pixel layer overlay to null. resetDetectionClassifications() - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all detection objects in the current hierarchy. resetGridSize() - Method in class qupath.lib.gui.viewer.ViewerMan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:861457,log,logging,861457,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"ons;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125989,log,logs,125989,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logs']
Testability,"onstructor. WandToolEventHandler.WandPreferences - Class in qupath.process.gui;  ; WandToolEventHandler.WandType - Enum Class in qupath.process.gui. Enum reflecting different color images that may be used by the Wand tool. wandToRoi(Wand) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a traced outline from the ImageJ Wand into a PolygonRoi. wandType - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1102957,Log,LogManager,1102957,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"operty; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty(); Read-only property representing the currently-open project. Returns:; See Also:. getProject(); setProject(Project). getProject; public Project<BufferedImage> getProject(); Get the value of projectProperty(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the value of imageDataProperty(). Returns:. viewerProperty; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty(); Property representing the viewer currently active. Returns:; See Also:. getViewer(). closeViewer; public boolean closeViewer(QuPathViewer viewer); Close the image within a viewer, prompting to save changes if necessary. Parameters:; viewer - ; Returns:; True if the viewer no longer contains an open image (either because it never did contain one, or ; the image was successfully closed), false otherwise (e.g. if the user thwarted the close request). getLogViewerCommand; public LogViewerCommand getLogViewerCommand(); Get the log viewer associated with this QuPath instance. Returns:; Since:; v0.5.0. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:31920,Log,LogViewerCommand,31920,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,2,"['Log', 'log']","['LogViewerCommand', 'log']"
Testability,"orkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:454854,Log,LogisticRegressionClassifier,454854,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"ositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424204,log,logged,424204,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logged']
Testability,"ox; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest); readRegion(double, int, int, int, int, int, int). getServerType; String getServerType(); A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getAssociatedImageList; List<String> getAssociatedImageList(); Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Returns:; See Also:. getAssociatedImage(String). getAssociatedImage; T getAssociatedImage(String name); Get the image for a given associated image name. Parameters:; name - ; Returns:; See Also:. getAssociatedImageList(). isEmptyRegion; boolean isEmptyRegion(RegionRequest request); Test whether a region is empty, i.e. it contains nothing to be painted (e.g. the server paints objects; but there are no objects present in the region) and readBufferedImage(RegionRequest region) would return null.; ; This makes it possible to avoid a (potentially more expensive) request to readRegion(RegionRequest),; or to add it to a request queue, if we know there will be nothing to show for it.; ; Note: if this method returns true, it is safe to assume readBufferedImage would return null.; However, even if the method returns false it is possible that the region is still empty -; the purpose of this method is to assist performance, and it should return quickly.; Therefore if the calculations needed to identify if the region is empty are too onerous, it may conservatively return false. Parameters:; request - ; Returns:. getPixelType; PixelType getPixelType(); The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:12093,Test,Test,12093,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['Test'],['Test']
Testability,"pecified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399854,Log,LogRankTest,399854,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogRankTest']
Testability,"per tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126365,log,log,126365,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['log']
Testability,"perty for the specified regions. setMissing(boolean) - Method in class qupath.lib.objects.TMACoreObject. Set the missing flag for this core, for example because insufficient tissue is present. setName(String) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the name of this ViewTracker. setName(String) - Method in class qupath.lib.objects.PathObject. Set the stored object name. setNumBins(int) - Method in class qupath.lib.gui.charts.HistogramDisplay. Set the number of bins for the histogram. setNumericParameterValue(String, Number) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set a numeric parameter value (either int or double). setNumericParameterValueRange(String, double, double) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the minimum and maximum value for a numeric parameter. setNumThreads(int) - Static method in class qupath.lib.common.Prefs. Set the requested number of threads. setOff() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.OFF. setOpacity(double) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set opacity between 0 (completely transparent) and 1 (completely opaque). setOpacity(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set global opacity for overlay drawing. setOptionalParameters(boolean, boolean, boolean, boolean) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set optional parameters for this ViewTracker. setOverrideSystemMenuBar(boolean) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of SystemMenuBar.systemMenubarProperty(). setParallelism(int) - Static method in class qupath.lib.common.ThreadTools. Set the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:938151,log,logging,938151,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"precated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static fina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1126,log,logging,1126,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
Testability,"presenting the global opacity for overlay drawing. OPEN_IMAGE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; OPEN_IMAGE_OR_URL - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; opencl() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target. opencl16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target with 16-bit floating point. OpenCVClassifiers - Class in qupath.opencv.ml. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers() - Constructor for class qupath.opencv.ml.OpenCVClassifiers;  ; OpenCVClassifiers.BoostClassifier - Class in qupath.opencv.ml. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier - Class in qupath.opencv.ml. Classifier based on DTrees. OpenCVClassifiers.EMClusterer - Class in qupath.opencv.ml. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier - Class in qupath.opencv.ml. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV - Class in qupath.opencv.ml. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel - Class in qupath.opencv.ml. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier - Class in qupath.opencv.ml. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV - Class in qupath.opencv.ml. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV - Class in qupath.opencv.ml. Classifier based on SVMSGD. OpenCVDnn - Class in qupath.opencv.dnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn() - Constructor for class qupath.opencv.dnn.OpenCVDnn;  ; OpenCVDnn.Builder - Class in qupath.opencv.dnn. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType - Enum Class in qupath.opencv.dnn. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:722688,Log,LogisticRegression,722688,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegression']
Testability,"public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainVectorFromPixels; public static StainVector generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax); Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. Parameters:; name - ; rgb - ; redMax - ; greenMax - ; blueMax - ; Returns:. getMedianRGB; public static int getMedianRGB(int[] rgb); Determine median of RGB values.; The median of each channel is computed separately. Parameters:; rgb - array of packed RGB values; Returns:. refineColorDeconvolutionStains; public static ColorDeconvolutionStains refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped); Attempt to automatically refine color deconvolution stains based upon pixel values.; ; Warning! This is really only for testing - it has not be very extensively validated.; ; The method used is based very loosely on that of Macenko et al. (2009), but avoids eigenvalue computations in favor of; determining an initial stain inputs.; ; TODO: Improve automatic stain vector refinement. Parameters:; rgb - ; stains - ; minStain - minimum optical density for each RGB channel (default 0.15); percentageClipped - ; Returns:. estimateWhiteValues; public static double[] estimateWhiteValues(int[] rgb); Estimate white (background) values for a brightfield image.; ; The algorithm computes histograms for each RGB channel, and takes the mode; of the histogram in the region of the histogram > the mean value for that channel. Parameters:; rgb - an array of packed RGB values; Returns:; an array containing estimated [red, green and blue] background values. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:6834,test,testing,6834,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['test'],['testing']
Testability,"qupath); Show a dialog to track the viewed region of an image. Parameters:; qupath - . combineSelectedAnnotations; public static boolean combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op); Combine the selected annotations for the specified hierarchy. Parameters:; imageData - the image data to process; op - the RoiTools.CombineOp operation to apply; Returns:; true if changes were made, false otherwise. promptToSelectObjectsByClassification; public static void promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData); Prompt to select objects according to their classifications. Parameters:; qupath - ; imageData - . promptToEditClass; public static boolean promptToEditClass(PathClass pathClass); Prompt to edit the name/color of a class. Parameters:; pathClass - ; Returns:. selectObjectsByClassification; public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:20358,log,logging,20358,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['log'],['logging']
Testability,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:995,Log,LogLevel,995,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,2,"['Log', 'log']","['LogLevel', 'logLevel']"
Testability,"r interactively modifying existing ROIs. RoiLabeling - Class in qupath.imagej.processing. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. RoiLabeling() - Constructor for class qupath.imagej.processing.RoiLabeling;  ; ROIs - Class in qupath.lib.roi. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). ROIs() - Constructor for class qupath.lib.roi.ROIs;  ; roiToGeometry(ROI) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter. Convert a QuPath ROI to a JTS Geometry. roiToGeometry(ROI) - Static method in class qupath.lib.roi.GeometryTools. Convert to QuPath ROI to a JTS Geometry. RoiTools - Class in qupath.lib.roi. A collection of static methods for working with ROIs. RoiTools() - Constructor for class qupath.lib.roi.RoiTools;  ; RoiTools.CombineOp - Enum Class in qupath.lib.roi. Methods of combining two ROIs. rootLogLevelProperty() - Static method in class qupath.lib.gui.logging.LogManager. Property representing the current requested root log level. rotate(RotatedImageServer.Rotation) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rotate the image, using an increment of 90 degrees. ROTATE_180 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 180 degrees. ROTATE_270 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 270 degrees clockwise. ROTATE_90 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 90 degrees clockwise. ROTATE_IMAGE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ROTATE_NONE - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. No rotation. RotatedImageServer - Class in qupath.lib.images.servers. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:871271,Log,LogManager,871271,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogManager']
Testability,"r of objects in the hierarchy, excluding the root. Returns:. setHierarchy; public void setHierarchy(PathObjectHierarchy hierarchy); Set the contents of this hierarchy to be the same as that of another hierarchy.; In practice, this means copying the root and TMA grid of the second hierarchy. Parameters:; hierarchy - . getObjectsForROI; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls,; ROI roi); Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. ; This relies on centroids for detections, and a 'covers' rule for others. Parameters:; cls - class of PathObjects (e.g. PathDetectionObject), or null to accept all; roi - ; Returns:. getObjectsForRegion; public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:18855,test,test,18855,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['test'],['test']
Testability,"r,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName); Prompt the user to create objects directly from the pixels of an ImageServer.; Often, the ImageServer has been created by applying a PixelClassifier. Parameters:; imageData - the ImageData to which objects should be added; classifier - the ImageServer used to generate objects; classifierName - the name of the classifier; if not null and the command runs to completion, it will be logged in the history ; workflow of the ImageData for later scripting.; Returns:; true if changes were made, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:4228,log,logged,4228,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['log'],['logged']
Testability,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:1254,test,test,1254,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,1,['test'],['test']
Testability,"r; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27625,log,log-rank,27625,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,"['log', 'test']","['log-rank', 'test']"
Testability,"rarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27652,Log,LogRankResult,27652,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['Log'],['LogRankResult']
Testability,"rarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658888,Log,LoggingTools,658888,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['Log', 'log']","['LoggingTools', 'logLevel']"
Testability,"rdRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1794,test,test,1794,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['test'],['test']
Testability,"resenting the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2556,Log,LogManager,2556,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,2,['Log'],['LogManager']
Testability,"rightnessContrastHistogramPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastHistogramPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1030,log,logarithm,1030,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['log'],['logarithm']
Testability,"ring>. public class StringParameter; extends Object; Parameter to represent a String value. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected String; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<String>; duplicate(). Create a new Parameter with the same text and value. String; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:1487,Test,Test,1487,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['Test'],['Test']
Testability,"ript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1056,test,test,1056,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['test'],['test']
Testability,"ription copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Descri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4987,Test,Test,4987,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['Test'],['Test']
Testability,"ription; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1997,log,log,1997,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['log'],['log']
Testability,"rresponds to a specific PathTool, creating a new action if one does not already exist. getToolBar() - Method in class qupath.lib.gui.QuPathGUI. Get the main toolbar. getToolManager() - Method in class qupath.lib.gui.QuPathGUI. Get the ToolManager that handles available and selected tools. getTools() - Method in class qupath.lib.gui.ToolManager. Get a read-only list of all available tools. getTPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible time point. getTrainData() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get training data. getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getTransform() - Method in class qupath.lib.images.servers.AffineTransformImageServer. Get the affine transform for this server. getTransformedPixels(int[], ColorTransformer.ColorTransformMethod, float[], ColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorTransformer. Apply a color transform to all pixels in a packed (A)RGB array. getTransformedValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.ImageDisplay. Get a string representation of a transformed pixel value, using the currently-selected channels. getTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:540089,Log,LogisticRegressionClassifier,540089,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['Log'],['LogisticRegressionClassifier']
Testability,"rts (or 'dots').; Examples include ome.tif and tar.gz, which can be problematic with some file choosers. Parameters:; ext - ; Returns:. blankString; public static boolean blankString(String s,; boolean trim); Check if a string is blank, i.e. it is null or its length is 0. Parameters:; s - ; trim - If true, any string will be trimmed before its length checked.; Returns:; True if the string is null or empty. escapeFilePath; public static String escapeFilePath(String path); Escape backslashes in an absolute file path - useful when scripting. Parameters:; path - ; Returns:. clipValue; public static int clipValue(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:12883,Test,Test,12883,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['Test'],['Test']
Testability,"rts. Classes for plotting and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810263,log,logging,810263,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['log'],['logging']
Testability,"rver. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibilit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27529,log,logging,27529,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['logging']
Testability,"s. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measuremen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27757,log,logging,27757,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['log'],['logging']
Testability,"s. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info loggin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1104,log,logging,1104,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['log'],['logging']
