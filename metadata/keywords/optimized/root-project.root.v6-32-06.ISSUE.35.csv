quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"tents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; ________________________________. > On 7 Mar 2022, at 20:08, Axel Naumann ***@***.***> wrote:; > ; > ; > Can you share how you determined",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4515,Depend,Dependee,4515,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['Depend'],['Dependee']
Integrability,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2110,inject,inject,2110,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,1,['inject'],['inject']
Integrability,"ter/cling/lib/Interpreter/IncrementalExecutor.h:253; > #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; > #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; > #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; > #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:846; > #69 0x00007fffeea62615 in cling::Interpreter::EvaluateInternal (this=0x4f17a0, input=..., CO=..., V=0x7fffffffcc70, wrapPoint=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; > #70 0x00007fffee95d98f in TCling::Calc (this=0x4f0e00, line=0x1c224b0 ""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::shared_ptr<ROO""..., error=0x7fffffffcd0c) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3556; > #71 0x00007ffff7fc97b3 in ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_0::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (; > codeSlice=""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:16636,wrap,wrapPoint,16636,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,1,['wrap'],['wrapPoint']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:16016,protocol,protocols,16016,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework direct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:11971,protocol,protocols,11971,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.1.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:24820,protocol,protocols,24820,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.1.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework direct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:20775,protocol,protocols,20775,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target x86_64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:7093,protocol,protocols,7093,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['protocol'],['protocols']
Integrability,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target x86_64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /usr/local/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:3478,protocol,protocols,3478,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['protocol'],['protocols']
Integrability,"test-testMatrixTSparse ..................................***Failed 0.03 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from testSparse; [ RUN ] testSparse.LwbInit; /builddir/build/BUILD/root-6.30.02/math/matrix/test/testMatrixTSparse.cxx:47: Failure; Expected equality of these values:; m1; Which is: 80-byte object <00-00 02-AA 28-E9 07-70 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-05 3C-B0 00-00 00-00 00-00 01-00 03-FF 87-BA DF-98 00-00 02-AA 29-1E 84-50 00-00 02-AA 29-1E 65-B0 00-00 02-AA 29-1E 7F-00>; m2; Which is: 264-byte object <00-00 02-AA 28-E9 04-58 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-00 3C-B0 00-00 00-00 00-00 01-22 00-C0 4C-E7 2C-66 40-09 21-FB 54-44 2D-18 ... 40-34 B8-A1 9E-49 B7-53 40-37 70-82 EF-AC 42-40 00-00 02-AA 29-1E 83-A0 00-00 03-FF 87-BA DF-98 00-00 03-FF 87-86 06-68 00-00 03-FF 87-85 04-16 00-00 03-FF EE-2F 6B-28 00-00 03-FF EE-2F 6A-E0>; [ FAILED ] testSparse.LwbInit (0 ms); [----------] 1 test from testSparse (0 ms total); [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (0 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] testSparse.LwbInit; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. ### Reproducer. - Build root with gcc 14 on Fedora 40 on aarch64, ppc64le or s390x; - Run the test. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Fedora Linux 40. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14446:2102,message,message,2102,https://root.cern,https://github.com/root-project/root/issues/14446,1,['message'],['message']
Integrability,testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.math.smatrix.roottest_root_math_smatrix_testKalman](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11500/testReport/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/). And 82 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344056775:3312,interface,interface,3312,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344056775,2,['interface'],['interface']
Integrability,"th the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Mino",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1762,message,messages,1762,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611,2,['message'],['messages']
Integrability,"th`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required inpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1779,interface,interface,1779,https://root.cern,https://github.com/root-project/root/issues/12350,1,['interface'],['interface']
Integrability,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`; * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3749#issuecomment-487380677:414,depend,depend,414,https://root.cern,https://github.com/root-project/root/pull/3749#issuecomment-487380677,1,['depend'],['depend']
Integrability,that should not be shell dependent. The current build system using Makefile works fine with zsh,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077390625:25,depend,dependent,25,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077390625,1,['depend'],['dependent']
Integrability,"the Google C++ guidelines. I think this is not something we should spend too much time on now, but maybe good to keep in mind for the future.; 3. https://github.com/root-project/root/pull/8700#discussion_r672519457 The configuration parameters (GlobalObservables etc.): should we unify them or keep like this?; 4. https://github.com/root-project/root/pull/8700#discussion_r672538377 This should be checked by Wouter. In addition, some other remaining questions:; 1. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test.; 2. In an ideal world I would have liked to add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, this will take time. The advantage would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the MultiProcess minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in ""PR 7"" (see overview). So, up for discussion, two choices: A: add (probably mostly useless except for testing this PR) ""LikelihoodGradientSerial"" class (based on RooGradMinimizerFcn) so we can add an integration test in this PR; B: wait for the integration test in PR 7.; 3. Does everybody like the RooNLLVar statics?; 4. Offset in the new TestStatistics classes can easily include the RooSubsidiaryL term as well, unlike with RooAbsTestStatistic, where the RooConstraintSum was a separate class that would not be included in the offset. I have now implemented a legacy mode to get bit-wise equal results, but is the new ""full"" mode a good idea at all? Does it make sense?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915217168:2074,integrat,integration,2074,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915217168,2,['integrat'],['integration']
Integrability,"the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC install",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:30463,wrap,wrapper,30463,https://root.cern,https://github.com/root-project/root/issues/10528,1,['wrap'],['wrapper']
Integrability,"the code between these two points?. see you, RD. Successful RAL:. https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout. [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful UK WATERLOO:. https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout. [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500); [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username: atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false, private IPv4: false, private I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:1441,protocol,protocol,1441,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1913,interface,interfaces,1913,https://root.cern,https://github.com/root-project/root/pull/5219,3,['interface'],"['interface', 'interfaces']"
Integrability,the integration attempt (to build master) failed with . ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-725b5e05650d8bf8cd995e6f1f38ca75/root-6.23.01/core/imt/src/RTaskArena.cxx: In constructor 'ROOT::Internal::RTaskArenaWrapper::RTaskArenaWrapper(unsigned int)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-725b5e05650d8bf8cd995e6f1f38ca75/root-6.23.01/core/imt/src/RTaskArena.cxx:70:79: error: reference to 'task_arena' is ambiguous; ```. maybe I have to add something to our cmake config ? . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-623c54/12317/lcg/root/6.23.01-725b5e05650d8bf8cd995e6f1f38ca75/log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933#issuecomment-762253484:4,integrat,integration,4,https://root.cern,https://github.com/root-project/root/issues/6933#issuecomment-762253484,2,['integrat'],['integration']
Integrability,"the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. So indeed, lot's of experimental / internal interface work here - but we felt that (a) a sufficient amount depends on this and (b) we've demonstrated enough utility that it was time to start talking about merging. (With many thanks to @jpivarski for driving this work home with his work on a python interface!)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1797,interface,interface,1797,https://root.cern,https://github.com/root-project/root/pull/943,7,"['depend', 'interface']","['depends', 'interface']"
Integrability,"the same segfault, although it; does not use directio for the inputs; https://bigpanda.cern.ch/job?pandaid=4946328705. It has some hardwired TFile open from RD. [2021-01-12 06:55:54.209757 -0500][Debug ][PostMaster ]; Creating new channel to: this-will-totally-fail:1094 1 stream(s); [2021-01-12 06:55:54.209835 -0500][Debug ][PostMaster ]; [this-will-totally-fail:1094 #0] Stream parameters: Network Stack:; IPAuto, Connection Window: 120, ConnectionRetry: 5, Stream Error; Window: 1800; [2021-01-12 06:55:54.209937 -0500][Debug ][TaskMgr ]; Registering task: ""TickGeneratorTask for: this-will-totally-fail:1094""; to be run at: [2021-01-12 06:56:09 -0500]; [2021-01-12 06:55:54.209976 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] MsgHandler created: 0x3171890 (message:; kXR_open (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat; ) ).; [2021-01-12 06:55:54.210005 -0500][Dump ][PostMaster ]; [this-will-totally-fail:1094 #0] Sending message kXR_open (file: ,; mode: 00, flags: kXR_open_read kXR_async kXR_retstat ) (0x31933e0); through substream 0 expecting answer at 0; [2021-01-12 06:55:54.210582 -0500][Error ][Utility ] Unable; to resolve this-will-totally-fail:1094: Name or service not known; [2021-01-12 06:55:54.210595 -0500][Error ][PostMaster ]; [this-will-totally-fail:1094 #0] Unable to resolve IP address for the; host; [2021-01-12 06:55:54.210610 -0500][Error ][XRootD ]; [this-will-totally-fail:1094] Unable to send the message kXR_open; (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat ):; [FATAL] Invalid address; [2021-01-12 06:55:54.210651 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] Destroying MsgHandler: 0x3171890.; Error in <TNetXNGFile::Open>: [FATAL] Invalid address; [2021-01-12 06:55:54.211229 -0500][Debug ][Utility ]; Monitor library name not set. No monitoring. The TFile is expected to fail, but why the segfault?; The jobs ran on native CentOS, so the singularity container theory is; another good one shot down by fa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758618647:1007,message,message,1007,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758618647,1,['message'],['message']
Integrability,"the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tests, you wish to run the job by hand (not using ctest), do the following:; > ; > cd $CETPKG_BUILD/critic/test/art/product-mixing/ProductMix_wraparound_r.d/; > art -c ProductMix_wraparound_r.fcl -j4; > ; > I have debugged using valgrind, helgrind, gdb, and Arm forge's DDT. Under the covers, it appears there is a spin-lock that just spins at the end of the job. When enabling memory-debugging with DDT, I get a memory error when a ROOT file is closed from the destructor of the RootIOPolicy class, a class used for product-mixing. See the attached screenshots, which include a portion of the stacktrace where the memory error is happening, and the value o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:7545,Wrap,Wrapping,7545,https://root.cern,https://github.com/root-project/root/issues/6939,1,['Wrap'],['Wrapping']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146422/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143369248:2740,interface,interface,2740,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143369248,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146493/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143567859:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143567859,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146658/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144988696:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144988696,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146674/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145213663:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145213663,2,['interface'],['interface']
Integrability,ther/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147282/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153770266:2726,interface,interface,2726,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153770266,2,['interface'],['interface']
Integrability,"there will be always some sort of a textual header file which can be processed with our clang-based rootcling and build a pcm file as basis for our dictionaries. . > My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. Clang has at least 5 different ""flavors"" of modules. One of them is the C++20 modules as described by the C++ standard. At the moment you start using C++ 20 you could use the `import`/`export` constructs and you will be able to use that feature for encapsulation purposes. There is not enough project transitions which are bigger than toy examples. One of the challenges is how we discover module dependencies. That is, we need extra tooling to decide how to split the source files into modules. In practice we need to pre-lex all of the content before the build system can start processing project files. The community is discussing scanners (such as clang scan-deps), daemons (the gcc implementation), protocols, etc. There is increasing amount of papers trying to address how we put C++ modules at scale (https://wg21.link/p2656, https://wg21.link/P2409, https://youtu.be/_LGR0U5Opdg?si=AbLazREvyl5PXVFG). Some papers/talks are more radical claiming that we cannot even roll out modules (as written in the standard) at such scale. . For modules to be useful and work reliably we know that we need to apply modularization bottom up. That means that before modularizing cmssw/art we need everything below starting from libc and libxml to become modular. That's something we observed during our modularization efforts in cmssw (see https://github.com/cms-sw/cmssw/issues/15248). The reasons we cannot make it yet default is discussed here: https://github.com/cms-sw/cmssw/issues/41810#issuecomment-1578982627 and here https://github.com/root-project/root/pull/13000 Not surprisingly we have observed similar comments coming from modularization efforts in gcc and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536#issuecomment-1693395998:1782,protocol,protocols,1782,https://root.cern,https://github.com/root-project/root/issues/13536#issuecomment-1693395998,1,['protocol'],['protocols']
Integrability,therewith avoiding memory hogging because of the attached TTreeChaches. This code has been written by David Smith and minimally edited for its integration in root.; See sister PR in roottest: https://github.com/root-project/roottest/pull/1161. This PR fixes [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16198:143,integrat,integration,143,https://root.cern,https://github.com/root-project/root/pull/16198,1,['integrat'],['integration']
Integrability,"therewith dealing with the concrete type of the source rather than its; virtual interface.; This change has no impact for the user, both in C++ and Python, since; a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2963:80,interface,interface,80,https://root.cern,https://github.com/root-project/root/pull/2963,1,['interface'],['interface']
Integrability,"this is a backport of; https://gitlab.cern.ch/lhcb/Rec/commit/6103563cc0fc537d8920a2918117b27a48823772#5c0090c3eee645cadb8dd97f9faf43e9664403ce_191_190. There are actually two changes:; - add an override in MethodBase generated code; - remove trailing whitespaces in the code of a MLP w/ normalise variable transformation. discussion points:; - one could also remove trailing whitespaces in other files (`grep -- ' "" << std::endl;'`); - the whitespaces are a bit on the boarder of history noise vs. useful; - the override will make the generated code for all code generated methods (not only MLP) depend on c++11 (which to my knowledge is the case for MLP already, but not for the other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1456:597,depend,depend,597,https://root.cern,https://github.com/root-project/root/pull/1456,1,['depend'],['depend']
Integrability,"this is solvable though. We can probably hack up a custom ld.so for; this, and we might even be able to convince the ld.so devs to add new APIs; to make this work. -- Lang. On Tue, Apr 19, 2022 at 11:40 PM Vassil Vassilev ***@***.***>; wrote:. > I didn't see this fail before, but from a first look:; >; > It looks like we have a problem with re-entrant JITing; >; > Yes, OL_applyQueryPhase1() is reentered here and it waits for the; > JITDylib's GeneratorsMutex that was locked in the very same place in the; > previous invocation. While the SessionMutex in ExecusionSession is; > recursive, the GeneratorsMutex is not. I assume it's not supposed to be; > recursive. Instead, I guess the process of querying symbols should not be; > re-entrant.; >; > The interesting frame in the callstack is:; >; > #26 0x00007fffebd32f70 in _GLOBAL__sub_I_clingwrapper.cxx; >; > This initializes the llvm::orc::Platform, which eventually calls back; > into the ExecutionSession and triggers the suspicious lookups. Is it; > necessary to do this in a static constructor? Maybe move it into an; > explicit init function and call it after the outer lookup finished? If it; > fixes the bug, maybe that's a way forward.; >; > Otherwise, if this initialization must run in a static ctor, you may try; > and remove the JITDylib that initiates the ld_open from the; > JITDylibSearchOrder used in the lookup. Its symbols won't be available to; > cppyy then. (Never tried this in practice.); >; > We cannot control what's in the static init of user libraries. They can; > use interpreter services. This approach used to work, why locking is; > necessary? Aren't we 'just' reading?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/10294#issuecomment-1103526477>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAA4XKI2Y5KMHF5LN6FKUELVF6RGTANCNFSM5SIVWJ4A>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1274280300:4674,Message,Message,4674,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1274280300,1,['Message'],['Message']
Integrability,"this is the compiler wrapper:; ```; #!/bin/bash; GCC_DIR=`which gcc | sed ""s/\/bin\/gcc$//""`; ${CLANG_ROOT}/bin/clang++ --gcc-toolchain=${GCC_DIR} ""${@}""; ```. should I set CXX to just `/opt/clang/13.0.1-gcc84/bin/clang++ `?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046#issuecomment-1059271062:21,wrap,wrapper,21,https://root.cern,https://github.com/root-project/root/issues/10046#issuecomment-1059271062,1,['wrap'],['wrapper']
Integrability,this should work:. ```bash; git checkout update-df103; git commit --amend # and change the commit message; git push --force upstream update-df103 # or maybe origin instead of upstream depending on your setup; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221#issuecomment-604884572:98,message,message,98,https://root.cern,https://github.com/root-project/root/pull/5221#issuecomment-604884572,2,"['depend', 'message']","['depending', 'message']"
Integrability,"thod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C93E9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:7111,depend,depends,7111,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,thodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io/xml && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__XMLIO.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libXMLIO.so -m libRIO_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-529005715:14051,Wrap,WrappedFunction,14051,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-529005715,3,['Wrap'],['WrappedFunction']
Integrability,thodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io/xmlparser && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__XMLParser.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libXMLParser.so -m libCore_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullreque,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:4160,Wrap,WrappedFunction,4160,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,2,['Wrap'],['WrappedFunction']
Integrability,tiGenFunctionTempl&lt;double&gt;' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1819,Wrap,WrappedFunction,1819,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,1,['Wrap'],['WrappedFunction']
Integrability,"tion (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31293,Wrap,WrapperCall,31293,https://root.cern,https://github.com/root-project/root/issues/12372,1,['Wrap'],['WrapperCall']
Integrability,"tion ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~~~~~~~~^~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~^~~~; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':; JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'; collect2: error: ld returned 1 exit status; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:5931,integrat,integration,5931,https://root.cern,https://github.com/root-project/root/issues/13101,1,['integrat'],['integration']
Integrability,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:2948,message,message,2948,https://root.cern,https://github.com/root-project/root/issues/12430,1,['message'],['message']
Integrability,"tl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 an",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:4594,message,message,4594,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"tocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout. [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Fail canada:. https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout. [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed CERN:. https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout. [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Failed Technion:. https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout. [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed Manchester:. https://bigpanda.cern.ch//media/filebrowser/75e12a74-de3e-4b78-bc16-cfcde3fdcb77/panda/tarball_PandaJob_4926186317_UKI-NORTHGRID-MAN-HEP/payload.stdout. [2020-12-19 00:36:00.516637 +0000][Debug ][XRootDTransport ] [bohr3226.tier2.hep.manchester.ac.uk:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:4009,protocol,protocol,4009,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,3,['protocol'],['protocol']
Integrability,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:24092,message,message,24092,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"tp_iter is used to implement an iterator protocol for Python using the; ""data"" member function of std::vector. However, the specialization; `vector<bool>` is not required to have this member function, which; breaks the iterator. Removing the tp_iter field does not break iterating; vector<bool> in Python, it falls back to the old iterator mechanism via; the get/setitem special functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4731:41,protocol,protocol,41,https://root.cern,https://github.com/root-project/root/pull/4731,1,['protocol'],['protocol']
Integrability,tps://epsft-jenkins.cern.ch/job/root-pullrequests-build/63570/console).; ### Errors:; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - CMake Error at VC-stamp/VC-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - CMake Error at VDT-stamp/VDT-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512764850:962,message,message,962,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512764850,1,['message'],['message']
Integrability,ts-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/io/io/res -writeEmptyRootPCM ROOT/RCanvas.hxx ROOT/RFrame.hxx ROOT/RMenuItem.hxx ROOT/RObjectDrawable.hxx ROOT/RColor.hxx ROOT/RDisplayItem.hxx ROOT/RDrawingAttr.hxx ROOT/RDrawingOptsBase.hxx ROOT/RPalette.hxx ROOT/RStyle.hxx ROOT/RPadDisplayItem.hxx ROOT/RPadExtent.hxx ROOT/RPad.hxx ROOT/RPadLength.hxx ROOT/RPadPainter.hxx ROOT/RPadPos.hxx ROOT/RPadUserAxis.hxx ROOT/RVirtualCanvasPainter.hxx /mnt/build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/LinkDef.h ; - Error: Had to build non-system module ROOTGraphicsPrimitives implicitly. You first need to ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RAttrLine.hxx:19:10: fatal error: cyclic dependency in module 'ROOTGpadv7': ROOTGpadv7 -&gt; ROOTGraphicsPrimitives -&gt; ROOTGpadv7 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RFrame.hxx:19:10: fatal error: could not build module 'ROOTGraphicsPrimitives' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGpadv7d5165452bb_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3700#issuecomment-483554021:2868,depend,dependency,2868,https://root.cern,https://github.com/root-project/root/pull/3700#issuecomment-483554021,1,['depend'],['dependency']
Integrability,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1849,interface,interface,1849,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,1,['interface'],['interface']
Integrability,ttest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1595,interface,interface,1595,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,1,['interface'],['interface']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28689/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394262891:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394262891,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28729/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2130#issuecomment-394298233:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2130#issuecomment-394298233,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/31336/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251#issuecomment-400304937:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2251#issuecomment-400304937,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410609447:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410609447,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::Glo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/45678/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2861#issuecomment-433260714:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2861#issuecomment-433260714,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/47279/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2929#issuecomment-436387385:1023,depend,depends,1023,https://root.cern,https://github.com/root-project/root/pull/2929#issuecomment-436387385,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/51378/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-454135180:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-454135180,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/51648/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-454782659:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-454782659,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/52436/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-458141335:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-458141335,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/52472/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-458503585:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-458503585,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/52784/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’}",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3357#issuecomment-459369738:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3357#issuecomment-459369738,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/53006/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-460347884:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-460347884,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/53372/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-461825509:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-461825509,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/54902/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470527237:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470527237,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/57919/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726#issuecomment-486155559:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3726#issuecomment-486155559,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/58334/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3751#issuecomment-487600631:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3751#issuecomment-487600631,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/61815/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-503915403:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-503915403,1,['depend'],['depends']
Integrability,"ttps://epsft-jenkins.cern.ch/job/root-pullrequests-build/71287/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4595#issuecomment-547811067:1029,depend,depends,1029,https://root.cern,https://github.com/root-project/root/pull/4595#issuecomment-547811067,1,['depend'],['depends']
Integrability,"tutorials/fit/fit1.C opens the fillrandom.root, and declared an ordering dependency that it should be run after tutorials/hist/fillrandom.C. But if then the tutorials/hist/fillrandom.py is messing with the file the tutorials/fit/fit1.C could fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10311#issuecomment-1091394355:73,depend,dependency,73,https://root.cern,https://github.com/root-project/root/pull/10311#issuecomment-1091394355,1,['depend'],['dependency']
Integrability,"ude ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecWithArgsAndReturn(address, args, ret)>: Called with no wrapper, not implemented!; res = 7.31217e-322; (int) 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12549:2067,wrap,wrapper,2067,https://root.cern,https://github.com/root-project/root/issues/12549,1,['wrap'],['wrapper']
Integrability,"ue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3"">v1.2.3</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>more failing proto pollution tests <a href=""https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc""><code>13c01a5</code></a></li>; <li>even more aggressive checks for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab""><code>38a4d1c</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2"">v1.2.2</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>failing test for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab""><code>0efed03</code></a></li>; <li>cleanup <a href=""https://github.com/minimistjs/minimist/commit/67d3722413448d00a62963d2d30c34656a92d7e2""><code>67d3722</code></a></li>; <li>console.dir -&gt; console.log <a href=""https://github.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54""><code>47acf72</code></a></li>; <li>don't assign onto <strong>proto</strong> <a href=""https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94""><code>63e7ed0</code></a></li>; </ul>; <!-- raw HTML omi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:4284,protocol,protocol,4284,https://root.cern,https://github.com/root-project/root/pull/11865,1,['protocol'],['protocol']
Integrability,uild failed on ROOT-fedora31/noimt.; Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:996,interface,interface,996,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,1,['interface'],['interface']
Integrability,uild/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/builtins/xxhash -I/mnt/build/workspace/root-pullrequests-build/root/builtins/lz4 -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -writeEmptyRootPCM ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h Gtypes.h GuiTypes.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TApplicationImp.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBrowser.h TBrowserImp.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TCanvasImp.h TColorGradient.h TColor.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TGuiFactory.h TInetAddress.h TInspectorImp.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjectSpy.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4270#issuecomment-524220443:5737,Message,MessageTypes,5737,https://root.cern,https://github.com/root-project/root/pull/4270#issuecomment-524220443,2,['Message'],['MessageTypes']
Integrability,"uild/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:785 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3495#issuecomment-471012018:1143,depend,depends,1143,https://root.cern,https://github.com/root-project/root/pull/3495#issuecomment-471012018,1,['depend'],['depends']
Integrability,"uild/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:807 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3875#issuecomment-496524545:1143,depend,depends,1143,https://root.cern,https://github.com/root-project/root/pull/3875#issuecomment-496524545,1,['depend'],['depends']
Integrability,"uild/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4592#issuecomment-547429612:1196,depend,depends,1196,https://root.cern,https://github.com/root-project/root/pull/4592#issuecomment-547429612,1,['depend'],['depends']
Integrability,"uilt for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/10065; Here is the full list of ROOTv5.34:; ```; Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language; processor. It rather is a portable script language environment which; is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory; and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface.; All commands must be preceded by a . (dot), except; for the evaluation statement { } and the ?.; ===========================================================================; > [file] : output redirection to [file]; 2> [file] : error redirection to [file]; >& [file] : output&error redirection to [file]; Help: ? : help; help : help; /[keyword] : search keyword in help information; Shell: ![shell] : execute shell command; Source: v <[line]>: view source code <around [line]>; V [stack] : view source code in function call stack; t : show function call stack; f [file] : select file to debug; T : turn on/off trace mode for all source; J [stat] : Set warning level [0-5]; A [1|0] : allowing automatic variable on/off; trace <classname> : turn on trace mode for class; deltrace <classname> : turn off trace mode for class; Evaluation: p [expr] : evaluate expression (no declaration/loop/condition); Evaluation: s [expr] : step into expression (no declaration/loop/condition); Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:2019,interface,interface,2019,https://root.cern,https://github.com/root-project/root/issues/10191,1,['interface'],['interface']
Integrability,"ulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to furth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1174,interface,interfaces,1174,https://root.cern,https://github.com/root-project/root/pull/943,2,['interface'],"['interface', 'interfaces']"
Integrability,"ull ((1, 2)) __attr_access ((__read_write__, 1, 3));; #endif; ~~~. conflict with the ROOT header core/clib/inc/strlcpy.h:. ~~~.c++; size_t strlcpy(char *dst, const char *src, size_t siz);; size_t strlcat(char *dst, const char *src, size_t siz);; ~~~. Resulting in compilation errors due to different exception specifiers:. ~~~; In file included from /usr/include/c++/13/cstring:42,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of 'size_t strlcpy(char*, const char*, size_t) noexcept' has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:13:; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration 'size_t strlcpy(char*, const char*, size_t)'; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of 'size_t strlcat(char*, const char*, size_t) noexcept' has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration 'size_t strlcat(char*, const char*, size_t)'; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; ~~~. ### Reproducer. Compile root on a system using the latest dev version of glibc, e.g. Fedora Rawhide. ### ROOT version. 6.28.04. ### Installation method. RPM package build (uses mock, i.e. a clean change root environment). ### Operating system. Fedora Rawhide (f39). ### Additional context. See the failures in Fedora's continuous integration test build at:; https://koschei.fedoraproject.org/package/root?collection=f39",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13156:2605,integrat,integration,2605,https://root.cern,https://github.com/root-project/root/issues/13156,1,['integrat'],['integration']
Integrability,ullLongDescription=This fixes test failure:\r\n```\r\n 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-08T05:13:23.652Z] ghprbPullLongDescription=This fixes test failure:\r\n```\r\n 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/Roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366#issuecomment-856508685:1228,message,message,1228,https://root.cern,https://github.com/root-project/root/pull/8366#issuecomment-856508685,1,['message'],['message']
Integrability,"ullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\inc\RooSpan.h(120): error C2146: syntax error: missing '&gt;' before identifier '__restrict__' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\inc\RooSpan.h(120): error C2146: syntax error: missing '&gt;' before identifier '__restrict__' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\inc\RooSpan.h(120): error C2146: syntax error: missing '&gt;' before identifier '__restrict__' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526504754:1538,message,message,1538,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526504754,1,['message'],['message']
Integrability,"ult_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:9884,message,message,9884,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"umentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583); ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::oper",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:13358,depend,depends,13358,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"umentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583); ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::oper",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:15984,depend,depends,15984,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction.; The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2960:147,message,message,147,https://root.cern,https://github.com/root-project/root/pull/2960,1,['message'],['message']
Integrability,unittests-pyroot-pyz-rdataframe-asnumpy; Start 55: pyunittests-pyroot-pyz-rdataframe-makenumpy; 134/1231 Test #55: pyunittests-pyroot-pyz-rdataframe-makenumpy ......................... Passed 10.99 sec; 151/1231 Test #54: pyunittests-pyroot-pyz-rdataframe-asnumpy ........................... Passed 23.56 sec; Start 363: gtest-tree-dataframe-test-dataframe-friends; Start 364: gtest-tree-dataframe-test-dataframe-colnames; Start 365: gtest-tree-dataframe-test-dataframe-cache; 388/1231 Test #364: gtest-tree-dataframe-test-dataframe-colnames ........................ Passed 4.40 sec; Start 366: gtest-tree-dataframe-test-dataframe-callbacks; 389/1231 Test #363: gtest-tree-dataframe-test-dataframe-friends ......................... Passed 10.87 sec; Start 367: gtest-tree-dataframe-test-dataframe-histomodels; 390/1231 Test #366: gtest-tree-dataframe-test-dataframe-callbacks ....................... Passed 8.60 sec; Start 368: gtest-tree-dataframe-test-dataframe-interface; Start 369: gtest-tree-dataframe-test-dataframe-nodes; 392/1231 Test #369: gtest-tree-dataframe-test-dataframe-nodes ........................... Passed 2.13 sec; Start 370: gtest-tree-dataframe-test-dataframe-regression; 393/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-tes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:1252,interface,interface,1252,https://root.cern,https://github.com/root-project/root/pull/10300,1,['interface'],['interface']
Integrability,"unity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right?. Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:3220,depend,depends,3220,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,1,['depend'],['depends']
Integrability,"until a register value is repeated (or maxPeriod is reached); * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent); * @tparam nTaps the number of taps; * @param start the start value of the LFSR; * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant.; * @param wrapping if true, allow wrapping until maxPeriod or start is reached; * @param verbose if true, print the lfsr and new bit on each step; * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right); * @return the array of pseudo random bits, or an empty array if input was incorrect; * @see https://en.wikipedia.org/wiki/Monic_polynomial; * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register; * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence; */; template <size_t k, size_t nTaps>; vector<bool>; LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false); {; vector<bool> result;; //Sanity-checks; if(taps.size()<2); {; cerr << ""At least two taps are needed"" << endl;; return result;; }; for(auto tap : taps); {; if(tap > k); {; cerr << ""Out of range tap "" << tap << endl;; return result;; }; }; if(start.none()); {; cerr << ""A non-zero start value is needed"" << endl;; return result;; }. const uint32_t maxPeriod = pow(2,k) - 1;; result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;; bitset<k> lfsr(start);; uint32_t i = 0;; do; {; // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1; bool newBit = lfsr[taps.at(0) - 1];; for(uint16_t j = 1; j < taps.size() ; ++j); {; newBit ^= lfsr[taps.at(j) - 1];; }. lfsr <<= 1;; lfsr[0] = newBit;; if(verbose); {; cout << i << "" "" << newBit << "" "" << lfsr << endl;; }; result.emplace_back(newBit);; ++i;. if(!wrapping); {; if(lfsrHistory.count(lfsr.to_ulong())); {; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8199#issuecomment-843369054:1408,wrap,wrapping,1408,https://root.cern,https://github.com/root-project/root/issues/8199#issuecomment-843369054,1,['wrap'],['wrapping']
Integrability,"ur nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):; error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:1726,interface,interface,1726,https://root.cern,https://github.com/root-project/root/issues/6563,2,"['interface', 'message']","['interface', 'message']"
Integrability,"urce> <dest>`; It set current time when file is copied.; Fine if changing done locally - new file modification will trigger; file copy. But problem appears when changes checkout from repository.; Git preserves time of last modification and this conflicts with logic; of incremental build. Example: . If one builds ROOT today, all files stamp will be from today in build directory.; If somebody commit changes already yesterday, all timestamps for that; changes will be from yesterday. If one checkout these commits, checked out ; files will get time stamps from yesterday. And when running cmake - it will do nothing. This is typical case with `js/` and `ui5/` folders with many files inside.; Very often changes in JSROOT and openui5 are missed by incremental builds. The only way to preserve timestamp in cmake - use `file(COPY ...)` command.; This PR does exactly this. . BUT!!! Drawback - cmake always run rule if source and target file stamps; matches. Incremental builds will be always filled with messages (even when nothing is changed). I did not found way to convince cmake do nothing if time stamp matches.; Probably, there is somewhere the option. Maybe one can apply such brutal-force; approach for `ui5/` and `js/` folders, where main problems appears for me. ```; [ 56%] Generating tutorials/fit/graph2dfit.C; [ 56%] Generating tutorials/fit/langaus.C; [ 56%] Generating tutorials/fit/line3Dfit.C; [ 56%] Generating tutorials/fit/minuit2FitBench.C; [ 56%] Generating tutorials/fit/minuit2GausFit.C; [ 56%] Generating tutorials/fit/minuit2FitBench2D.C; [ 56%] Generating tutorials/fit/multifit.py; [ 56%] Generating tutorials/fit/myfit.C; [ 56%] Generating tutorials/fit/multifit.C; [ 56%] Generating tutorials/fit/multidimfit.C; [ 56%] Generating tutorials/fit/qa2.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial3.C; [ 56%] Generating tutorials/fit/vectorizedFit.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial1.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial2.C; [ 56%] Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804:1119,message,messages,1119,https://root.cern,https://github.com/root-project/root/pull/9804,1,['message'],['messages']
Integrability,"using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:1518,message,message,1518,https://root.cern,https://github.com/root-project/root/issues/9489,4,['message'],"['message', 'messages']"
Integrability,"usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot/inc -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot -I/usr/include/python2.7 -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -fno-strict-aliasing -Wno-parentheses-equality -Wno-cast-function-type -Wno-deprecated-register -Wno-register -std=c++11 -MD -MT bindings/pyroot/CMakeFiles/PyROOT.dir/src/Converters.cxx.o -MF bindings/pyroot/CMakeFiles/PyROOT.dir/src/Converters.cxx.o.d -o bindings/pyroot/CMakeFiles/PyROOT.dir/src/Converters.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot/src/Converters.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot/src/Converters.cxx:860:25: error: converting to ‘std::tuple&lt;const char*, long int&gt;’ from initializer list would use explicit constructor ‘constexpr std::tuple&lt;_T1, _T2&gt;::tuple(_U1&&, _U2&&) [with _U1 = char*&; _U2 = long int&; &lt;template-parameter-2-3&gt; = void; _T1 = const char*; _T2 = long int]’ . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:865 (message): ; - cc1plus: warning: unrecognized command line option ‘-Wno-register’ ; - cc1plus: warning: unrecognized command line option ‘-Wno-deprecated-register’ ; - cc1plus: warning: unrecognized command line option ‘-Wno-cast-function-type’ ; - cc1plus: warning: unrecognized command line option ‘-Wno-parentheses-equality’",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4345#issuecomment-528012009:1851,message,message,1851,https://root.cern,https://github.com/root-project/root/pull/4345#issuecomment-528012009,1,['message'],['message']
Integrability,"usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```; cmake .. \; -Dalien=OFF -Dcuda=ON \; -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \; -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \; -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9; ```. The error message:. ```; /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:; /usr/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-257136223:2117,depend,depend,2117,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-257136223,1,['depend'],['depend']
Integrability,"ut adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: ; ```cpp; //subroutine.C. // my_subroutines.C; void my_subroutine(unique_ptr<TH1> &x) {; x.reset(); // not needed for TH1F, but safer in general.; x.reset(new TH1F());; // .. do something with it.; }; ```; ```cpp; //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here; vector<unique_ptr<TH1>> retvec(3); // and here, as intended.; for (int i=0; i<3; i++) {; my_subroutine(retvec[i]);; }; return retvec;; }; ```. But the end-user can decide. Again, the subroutine works regardless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:6180,rout,routine,6180,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,1,['rout'],['routine']
Integrability,"ut default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:2650,integrat,integrate,2650,https://root.cern,https://github.com/root-project/root/pull/8596,1,['integrat'],['integrate']
Integrability,ut](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/console).; ### Warnings:; - [2021-03-22T09:08:25.235Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.036Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.297Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1183,Interface,InterfaceUtils,1183,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,"utions and functions from dicts to arrays; [RF][HS3] Change some fields to use arrays and not dictionaries; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF][HS3] Don't assume that combined dataset name is always `""obsData""`; [RF][HS3] Use less `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:5553,message,messages,5553,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['message'],['messages']
Integrability,"v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2475,Depend,Dependabot,2475,https://root.cern,https://github.com/root-project/root/pull/11864,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,v6.20 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5713:13,depend,dependent,13,https://root.cern,https://github.com/root-project/root/pull/5713,1,['depend'],['dependent']
Integrability,v6.20: Fix potential startup error messages on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5628:35,message,messages,35,https://root.cern,https://github.com/root-project/root/pull/5628,1,['message'],['messages']
Integrability,v622 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5712:12,depend,dependent,12,https://root.cern,https://github.com/root-project/root/pull/5712,1,['depend'],['dependent']
Integrability,va/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2439,message,message,2439,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541874616:1580,depend,depend,1580,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541874616,1,['depend'],['depend']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541874616:1329,depend,depend,1329,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541874616,1,['depend'],['depend']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-543261278:1580,depend,depend,1580,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-543261278,1,['depend'],['depend']
Integrability,"vailable [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-543261278:1329,depend,depend,1329,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-543261278,1,['depend'],['depend']
Integrability,"ver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df007_snapshot.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 883: Environment variables:; 883: ROOT_HIST=0; 883: Test timeout computed to be: 1500; 883: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Failed 4.47 sec; test 884; Start 884: tutorial-dataframe-df008_createDataSetFromScratch-py. 884: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df008_createDataSetFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x62d78c) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x62d7a8)->Snapshot<double>("" [R<U+0013>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:4777,message,message,4777,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,ver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:1820,interface,interface,1820,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['interface'],['interface']
Integrability,"verloaded ‘ConstrainedParameters(&lt;brace-enclosed initializer list&gt;)’ is ambiguous ; - [2021-11-29T20:41:10.037Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:469:76: error: call of overloaded ‘GlobalObservables(&lt;brace-enclosed initializer list&gt;)’ is ambiguous . ### Warnings:; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:1385,synchroniz,synchronizeParameterSettings,1385,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,very good. I actually linked a fix to this messages directly in the start of my bug report.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13560#issuecomment-1697299774:43,message,messages,43,https://root.cern,https://github.com/root-project/root/issues/13560#issuecomment-1697299774,1,['message'],['messages']
Integrability,"void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 192 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47634/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2943#issuecomment-437335723:2420,depend,depends,2420,https://root.cern,https://github.com/root-project/root/pull/2943#issuecomment-437335723,1,['depend'],['depends']
Integrability,"warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56136/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56136/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3619#issuecomment-478136552:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/3619#issuecomment-478136552,1,['depend'],['depends']
Integrability,"warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66556/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66556/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4309#issuecomment-526262587:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/4309#issuecomment-526262587,1,['depend'],['depends']
Integrability,"we should try to fix that, so that each TBranch is a single zlib stream when compressed with zlib. Yes and the chunking of the generation is determining the clusters size. We wanted to increase the number of tasks based on that idea, but the TTree clusters are not actually set by this. It is set by the auto-save option<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_blob_master_tree_dataframe_inc_ROOT_RSnapshotOptions.hxx-23L35&d=DwMFaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=xs3jkKpmLeMypw1lXllSZjdULkrCzzEkzX8vpGMM9yc&s=txfsLH9Ss0Rd1-_XgaCU94eGPUrmNZ7w20xQN3AMsyw&e=> in RSnapshotOptions. The problem is that the default is to not auto-save, but save only when calling Write(), which then happens only at the end of a full task that may generate lots of data that will stay in memory until the end. It's probably enough to make auto-save default to save at every 5-10% of generated data. We already call Write() depending on this setting, so in principle there's no need to increase the number of tasks. This is a bit surprising. The TTree is supposed to be re-using as much as possible the memory chunk (both the compression buffer and the TBuffer) as much as possible. The TTree is reusing memory chunks for the baskets, but the TBB task arenas that are created for each TTree:Fill() are not. They are created by a TBranchIMTHelper that is created on the stack<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_blob_master_tree_tree_src_TTree.cxx-23L4406&d=DwMFaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=xs3jkKpmLeMypw1lXllSZjdULkrCzzEkzX8vpGMM9yc&s=9vBGU4V_H1c-CBOJQ2AX0dDxhzuNM6Jn0jE9OHzgqgk&e=> in TTree::Fill(). I had already noticed this before (see 5ba88aa<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_commit_5ba88aa3bf2e0ffe222968f9b6f029bf8f4ead57&d=DwMFaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=xs3jkKpmLeMypw1lXllSZjdULkrCzzEkzX8vpGMM9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385#issuecomment-461577552:2616,depend,depending,2616,https://root.cern,https://github.com/root-project/root/pull/3385#issuecomment-461577552,1,['depend'],['depending']
Integrability,"webgui: adjust v7 classes drawing, synchronize jsroot code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1647:35,synchroniz,synchronize,35,https://root.cern,https://github.com/root-project/root/pull/1647,1,['synchroniz'],['synchronize']
Integrability,webgui: introduce binary interface for TWebWindow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1785:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1785,1,['interface'],['interface']
Integrability,"ween incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 192 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47486/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2943#issuecomment-437034013:2420,depend,depends,2420,https://root.cern,https://github.com/root-project/root/pull/2943#issuecomment-437034013,1,['depend'],['depends']
Integrability,"well, that's easily fixed as well:; ```cmake; try_compile(FWD_DECLARE MYBINDIR forward_declare.cpp); try_compile(FWD_HEADER MYBINDIR forward_header.cpp); if(FWD_DECLARE); message(""Using forward declaration for nlohmann_json""); elseif(FWD_HEADER); message(""Using forward header from nlohmann_json""); else(); set(DO_WHATEVER_NLOHMANM_3.11.0_NEEDS ON); message(""using the special code that nlohmann 3.11.0 needs""); endif(); ```; But it's up to you. Arch Linux package builds now, so I am satisfied. Thanks for the help and quick response!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1219649968:171,message,message,171,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1219649968,3,['message'],['message']
Integrability,"what is the difference between `histogram_freq=0` and `...=1`? I would like to know the reason for the options that differ from the default. I would set the `write_images` to `False`, because the current PyKeras interface is not desigend for image data. What about `write_grads`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353#issuecomment-350036293:212,interface,interface,212,https://root.cern,https://github.com/root-project/root/pull/1353#issuecomment-350036293,1,['interface'],['interface']
Integrability,"wiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Code-Squash AD support for RooFlexibleInterpVar.; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:4862,interface,interface,4862,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log; ```; root.exe -l -q -b -n -x hsimple.C; ===========================================================; There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so).; This is the entire stack trace of all threads:; ===========================================================; #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6; #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6; #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0; #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so; #7 <signal handler called>; #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6; #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-975756188:121,integrat,integration,121,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-975756188,1,['integrat'],['integration']
Integrability,workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/builtins/xxhash -I/mnt/build/workspace/root-pullrequests-build/root/builtins/lz4 -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zstd -writeEmptyRootPCM ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4563#issuecomment-544634073:3099,Message,MessageTypes,3099,https://root.cern,https://github.com/root-project/root/pull/4563#issuecomment-544634073,1,['Message'],['MessageTypes']
Integrability,workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/103134/console).; ### Errors:; - [2020-12-01T17:10:04.934Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2020-12-01T17:10:04.934Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2020-12-01T17:10:04.934Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2020-12-01T17:10:04.934Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2020-12-01T17:10:07.471Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2020-12-01T17:10:07.471Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2020-12-01T17:10:07.471Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2020-12-01T17:10:07.471Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-736690756:1152,message,message,1152,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-736690756,3,['message'],['message']
Integrability,"workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/123928/console).; ### Errors:; - [2021-08-03T11:18:56.328Z] ghprbPullLongDescription=Fix the following compilation errors when using the /std:c++17 flag on Windows:\r\n```\r\nroofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'\r\nroofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\r\nroofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'\r\nroofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'\r\nroofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\r\nroofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'\r\nroofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'\r\nroofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\r\nroofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'\r\n```\r\n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8789#issuecomment-891808563:1260,message,message,1260,https://root.cern,https://github.com/root-project/root/pull/8789#issuecomment-891808563,4,['message'],['message']
Integrability,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:6881,rout,routine,6881,https://root.cern,https://github.com/root-project/root/issues/11385,1,['rout'],['routine']
Integrability,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:6933,rout,routine,6933,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,1,['rout'],['routine']
Integrability,"xec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:157:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillHelper, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' requested here; auto act",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:6116,Interface,InterfaceUtils,6116,https://root.cern,https://github.com/root-project/root/issues/6675,1,['Interface'],['InterfaceUtils']
Integrability,"xport/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02);",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:2732,depend,depends,2732,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,y.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:30: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:36: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:42: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:49: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:7: error: 'virtual' can only appe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:6253,Wrap,WrappedFunction,6253,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Wrap'],['WrappedFunction']
Integrability,"yndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131164/console).; ### Errors:; - [2021-11-29T20:41:10.037Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:468:91: error: call of overloaded ‘ConstrainedParameters(&lt;brace-enclosed initializer list&gt;)’ is ambiguous ; - [2021-11-29T20:41:10.037Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:469:76: error: call of overloaded ‘GlobalObservables(&lt;brace-enclosed initializer list&gt;)’ is ambiguous . ### Warnings:; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:1034,synchroniz,synchronizeParameterSettings,1034,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"you should see the warnings regarding the comparisons of `unsigned long` and `int` as well on your system. can you check? the tests for all builds seem to be fine. is it possible for you to access [cdash.cern.ch](cdash.cern.ch)?. as well, please rebase and squash your commits in a single commit with a meaningful message. last change: please put a `[TMVA]` tag at the begin of your commit message so that it's clear what you've worked on in the commit history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309#issuecomment-404080279:314,message,message,314,https://root.cern,https://github.com/root-project/root/pull/2309#issuecomment-404080279,2,['message'],['message']
Integrability,"ze_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46194/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46194/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-434619561:3181,depend,depends,3181,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-434619561,1,['depend'],['depends']
Integrability,"zed. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same.; 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree).; 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup; 1. ROOT 6.22/06. ### Additional context; I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:2752,interface,interfaces,2752,https://root.cern,https://github.com/root-project/root/issues/7308,1,['interface'],['interfaces']
Integrability,"zer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:9098,message,message,9098,https://root.cern,https://github.com/root-project/root/issues/13996,2,['message'],['message']
Integrability,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803#issuecomment-430339684:45,depend,dependent,45,https://root.cern,https://github.com/root-project/root/pull/2803#issuecomment-430339684,1,['depend'],['dependent']
Integrability,… case. Thanks @Axel-Naumann !. This fixes the performance issues for millions of request to the type system from cppyy if the type is for example a `std::vector<int>`. Waiting for response of Wim for integration in the official cppyy-clingwrapper repo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3515:201,integrat,integration,201,https://root.cern,https://github.com/root-project/root/pull/3515,1,['integrat'],['integration']
Integrability,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4985:625,interface,interface,625,https://root.cern,https://github.com/root-project/root/pull/4985,2,['interface'],['interface']
Integrability,"… spectrum and adjust final plot. The files are taken form publiceos!. The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```; Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %; Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %; ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803:909,depend,depends,909,https://root.cern,https://github.com/root-project/root/pull/2803,1,['depend'],['depends']
Integrability,…argets. ROOT builds cling and then moves a set of headers under the semi-private $ROOTSYS/etc/cling. This poses an issue -- the set of proper cling dependencies seem not enough to propagate that information to rootcling for example. Instead of adding LLVMRES to rootcling (as it is the case for rootcling_stage1) add the dependency to something more fundamental such as ClingUtils. This will propagate it transitively to all parties without having to specify the sort-of internal LLVMRES target. This patch should fix the incremental builds where the error is:; error: file '/.../RuntimePrintValue.h' from the precompiled header has been overridden. cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4488:149,depend,dependencies,149,https://root.cern,https://github.com/root-project/root/pull/4488,2,['depend'],"['dependencies', 'dependency']"
Integrability,…ath on different platforms. Also integrated in official cppyy repo:; https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3415:34,integrat,integrated,34,https://root.cern,https://github.com/root-project/root/pull/3415,1,['integrat'],['integrated']
Integrability,"…chInstalledSoftware. This change was already proposed in PR 4647, commit b8cd32, for the; following reason: apparently, SearchInstalledSoftware is called AFTER RootInstallDirs;; the consequence of this is that CMAKE_INSTALL_PYROOTDIR does not take; the proper value ONLY IF its value is NOT specified by the user.; The reason for this is that the value assigned to; CMAKE_INSTALL_PYROOTDIR depends on the Python version that is found.; For this reason, the search for Python is here moved to; RootBuildOptions, which is run BEFORE RootInstallDirs, and this; guarantees that the default value is the correct one. Example of current (wrong) behavior on an Ubuntu machine:; CMAKE_INSTALL_PYROOTDIR -> lib/site-packages. Example of correct behavior (this PR):; CMAKE_INSTALL_PYROOTDIR -> lib/python2.7/dist-packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4939:391,depend,depends,391,https://root.cern,https://github.com/root-project/root/pull/4939,2,['depend'],['depends']
Integrability,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476:89,wrap,wrapper,89,https://root.cern,https://github.com/root-project/root/pull/8476,4,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6046:355,interface,interface,355,https://root.cern,https://github.com/root-project/root/pull/6046,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"…he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):; The package name passed to `find_package_handle_standard_args` (MYSQL) does; not match the name of the calling package (MySQL). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:601 (find_package); CMakeLists.txt:168 (include); This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5245:139,message,message,139,https://root.cern,https://github.com/root-project/root/pull/5245,1,['message'],['message']
Integrability,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6097:307,interface,interface,307,https://root.cern,https://github.com/root-project/root/pull/6097,3,['interface'],['interface']
Integrability,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5523:34,message,message,34,https://root.cern,https://github.com/root-project/root/pull/5523,1,['message'],['message']
Integrability,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5001:264,depend,depend,264,https://root.cern,https://github.com/root-project/root/pull/5001,2,"['depend', 'message']","['depend', 'message']"
Integrability,"…ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:; ```; hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; hist\hist\inc\TF1.h(463,1): message : could be 'TString'; hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'; hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'; gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'; graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9613:310,message,message,310,https://root.cern,https://github.com/root-project/root/pull/9613,6,['message'],['message']
Modifiability," 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins.; * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes.; * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:2713,config,configuration,2713,https://root.cern,https://github.com/root-project/root/issues/9436,1,['config'],['configuration']
Modifiability," %p\n"", val, this);; }; };. const A a1(1);; const A a2(2);; const A a3(3);; const A a4(4);; const A a5(5);; const A a6(6);; const A a7(7);; const A a8(8);; const A a9(9);; const A a10(10);; const A a11(11);; const A a12(12);; const A a13(13);; const A a14(14);; const A a15(15);; const A a16(16);; const A a17(17);; ```. This should print from 1 to 17, but for example `master` gives:; ```; A(9), this = 0x7f9f2174e088; A(17), this = 0x7f9f2174e108; A(16), this = 0x7f9f2174e0f8; A(15), this = 0x7f9f2174e0e8; A(14), this = 0x7f9f2174e0d8; A(13), this = 0x7f9f2174e0c8; A(12), this = 0x7f9f2174e0b8; A(11), this = 0x7f9f2174e0a8; A(10), this = 0x7f9f2174e098; A(1), this = 0x7f9f2174e008; A(8), this = 0x7f9f2174e078; A(7), this = 0x7f9f2174e068; A(6), this = 0x7f9f2174e058; A(5), this = 0x7f9f2174e048; A(4), this = 0x7f9f2174e038; A(3), this = 0x7f9f2174e028; A(2), this = 0x7f9f2174e018; ~A(2), this = 0x7f9f2174e018; ~A(3), this = 0x7f9f2174e028; ~A(4), this = 0x7f9f2174e038; ~A(5), this = 0x7f9f2174e048; ~A(6), this = 0x7f9f2174e058; ~A(7), this = 0x7f9f2174e068; ~A(8), this = 0x7f9f2174e078; ~A(1), this = 0x7f9f2174e008; ~A(10), this = 0x7f9f2174e098; ~A(11), this = 0x7f9f2174e0a8; ~A(12), this = 0x7f9f2174e0b8; ~A(13), this = 0x7f9f2174e0c8; ~A(14), this = 0x7f9f2174e0d8; ~A(15), this = 0x7f9f2174e0e8; ~A(16), this = 0x7f9f2174e0f8; ~A(17), this = 0x7f9f2174e108; ~A(9), this = 0x7f9f2174e088; ```; (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2167679742:2292,variab,variables,2292,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2167679742,1,['variab'],['variables']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1197#issuecomment-337667733:1722,portab,portable,1722,https://root.cern,https://github.com/root-project/root/pull/1197#issuecomment-337667733,1,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_zeroen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1200#issuecomment-337895383:1714,portab,portable,1714,https://root.cern,https://github.com/root-project/root/pull/1200#issuecomment-337895383,2,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1223#issuecomment-338777522:1748,portab,portable,1748,https://root.cern,https://github.com/root-project/root/pull/1223#issuecomment-338777522,1,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/240#issuecomment-337604840:1714,portab,portable,1714,https://root.cern,https://github.com/root-project/root/pull/240#issuecomment-337604840,1,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/582#issuecomment-333202480:1519,portab,portable,1519,https://root.cern,https://github.com/root-project/root/pull/582#issuecomment-333202480,81,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1493#issuecomment-358572401:1520,portab,portable,1520,https://root.cern,https://github.com/root-project/root/pull/1493#issuecomment-358572401,14,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 12 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1535#issuecomment-359854573:1702,portab,portable,1702,https://root.cern,https://github.com/root-project/root/pull/1535#issuecomment-359854573,1,['portab'],['portable']
Modifiability, '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1422#issuecomment-359075766:1520,portab,portable,1520,https://root.cern,https://github.com/root-project/root/pull/1422#issuecomment-359075766,30,['portab'],['portable']
Modifiability," 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301834954:1456,variab,variable,1456,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301834954,1,['variab'],['variable']
Modifiability," 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:14612,variab,variable,14612,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," (layers with the 'Legacy' prefix) are deprecated. Please use the ORCv2 IRCompileLayer instead [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.837Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:3: warning: 'LazyEmittingLayer' is deprecated: ORCv1 layers (including LazyEmittingLayer) are deprecated. Please use ORCv2, where lazy emission is the default [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.838Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699608185:2055,layers,layers,2055,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699608185,2,['layers'],['layers']
Modifiability, (loaded from variable 'ctmod') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: 'pyobj' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 4: Calling 'IsPyCArgObject' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087; 5: 'pycarg_type' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 6: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 7: 'ctmod' initialized here in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165; 8: Assuming 'ctmod' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 9: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 10: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176; 11: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1132:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1132; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1146:25: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:12862,variab,variable,12862,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,2,['variab'],['variable']
Modifiability," - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:31: error: ‘Double_v’ is not a member of ‘ROOT’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:45: error: template argument 1 is invalid ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:48: error: invalid type in declaration before ‘;’ token ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:62:42: error: ‘Double_v’ is not a member of ‘ROOT’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:62:42: error: ‘Double_v’ is not a member of ‘ROOT’ ; - googlebenchmark-prefix/src/googlebenchmark/include/benchmark/benchmark.h:953:54: error: no matching function for call to ‘benchmark::internal::FunctionBenchmark::FunctionBenchmark(const char [37], &lt;unresolved overloaded function type&gt;)’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:64:42: error: ‘Float_v’ is not a member of ‘ROOT’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:64:42: error: ‘Float_v’ is not a member of ‘ROOT’ ; - googlebenchmark-prefix/src/googlebenchmark/include/benchmark/benchmark.h:953:54: error: no matching function for call to ‘benchmark::internal::FunctionBenchmark::FunctionBenchmark(const char [36], &lt;unresolved overloaded function type&gt;)’ . And 30 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:47: warning: unused variable ‘c’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:27:1: warning: ‘bool is_aligned(const void*, size_t)’ defined but not used [-Wunused-function]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/688#issuecomment-314102334:2063,variab,variable,2063,https://root.cern,https://github.com/root-project/root/pull/688#issuecomment-314102334,2,['variab'],['variable']
Modifiability," - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:31: error: ‘Double_v’ is not a member of ‘ROOT’ ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:45: error: template argument 1 is invalid ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:48: error: invalid type in declaration before ‘;’ token ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:62:268: error: ‘Double_v’ is not a member of ‘ROOT’ ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:62:268: error: ‘Double_v’ is not a member of ‘ROOT’ ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:62:283: error: no matching function for call to ‘benchmark::internal::FunctionBenchmark::FunctionBenchmark(const char [37], &lt;unresolved overloaded function type&gt;)’ ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:64:267: error: ‘Float_v’ is not a member of ‘ROOT’ ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:64:267: error: ‘Float_v’ is not a member of ‘ROOT’ ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:64:281: error: no matching function for call to ‘benchmark::internal::FunctionBenchmark::FunctionBenchmark(const char [36], &lt;unresolved overloaded function type&gt;)’ . And 30 more. ### Warnings:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:49:47: warning: unused variable ‘c’ [-Wunused-variable] ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/root/math/genvector/perf/Cartesian3DBenchmarks.cxx:27:1: warning: ‘bool is_aligned(const void*, size_t)’ defined but not used [-Wunused-function]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/688#issuecomment-314106063:2065,variab,variable,2065,https://root.cern,https://github.com/root-project/root/pull/688#issuecomment-314106063,2,['variab'],['variable']
Modifiability, - [2024-02-08T09:31:38.510Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-02-08T09:26:54.389Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-02-08T09:26:55.921Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-02-08T09:28:08.214Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-02-08T09:28:16.251Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-02-08T09:28:16.251Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-02-08T09:30:56.131Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14626#issuecomment-1933679438:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/14626#issuecomment-1933679438,2,['variab'],['variable']
Modifiability, - [2024-03-11T09:32:32.286Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-03-11T09:27:12.583Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-11T09:27:13.916Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-11T09:27:24.850Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-03-11T09:27:30.293Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-03-11T09:27:30.293Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-03-11T09:31:58.273Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14928#issuecomment-1987975643:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/14928#issuecomment-1987975643,2,['variab'],['variable']
Modifiability, - [2024-03-22T08:32:06.622Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-03-22T08:28:40.620Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T08:28:41.726Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T08:29:41.859Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-03-22T08:29:47.484Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-03-22T08:29:47.484Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-03-22T08:31:34.246Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15033#issuecomment-2014607036:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/15033#issuecomment-2014607036,2,['variab'],['variable']
Modifiability, - [2024-03-22T17:47:05.064Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' . And 5 more. ### Warnings:; - [2024-03-22T17:46:07.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T17:46:07.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2024-03-22T17:46:16.348Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp:35:28: warning: unused variable 'E' [-Wunused-variable] ; - [2024-03-22T17:46:22.077Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-03-22T17:46:22.077Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-03-22T17:46:30.249Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15036#issuecomment-2015611531:2666,variab,variable,2666,https://root.cern,https://github.com/root-project/root/pull/15036#issuecomment-2015611531,2,['variab'],['variable']
Modifiability," - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:28994,variab,variable,28994,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Setup observable that is to be morphed; obsvar = ROOT.RooRealVar(""DPhill_V1_truth"", ""\#Delta \#phi_{truth}^{ll} [rad]"", 0, 1.8); ; cosa = ROOT.RooRealVar(""cosa"",""cosa"",-1.,1.); kAww = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1487,Config,Config,1487,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,2,"['Config', 'config']","['Config', 'config']"
Modifiability," -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory 'roottest/root/treeformula/retobj'; --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000; +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000; @@ -28,12 +28,10 @@; Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available; Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available; Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available; Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available; Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available; Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available; Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available; -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent; +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()""; +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}; gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'; ; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; --- Using ROOT from build; gmake[1]: *** [Makefile:31: retobjTest] Error 1; gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-2289396844:1933,Variab,Variable,1933,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-2289396844,1,['Variab'],['Variable']
Modifiability, /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:326:8: error: 'break' statement not in loop or switch statement ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:328:5: error: extraneous closing brace ('}') ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:329:3: error: extraneous closing brace ('}') ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:330:3: error: expected unqualified-id ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:331:1: error: extraneous closing brace ('}') . ### Warnings:; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:223:72: warning: unused parameter 'evalData' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:223:99: warning: unused parameter 'normSet' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:239:1: warning: non-void function does not return a value [-Wreturn-type] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:251:44: warning: unused parameter 'code' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:251:62: warning: unused parameter 'rangeName' [-Wunused-parameter] ; - [2021-10-26T09:23:40.488Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooPolyFunc.cxx:338:19: warning: unused variable 'obs' [-Wunused-variable],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-951750412:2879,variab,variable,2879,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951750412,2,['variab'],['variable']
Modifiability, /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:41.176Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:41.758Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:43.135Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:44.974Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] . And 45 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/testReport/projectroot.roottest.root/dataframe/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490137331:2326,variab,variables,2326,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490137331,1,['variab'],['variables']
Modifiability, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47751,variab,variable,47751,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49447,variab,variable,49447,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:2225,variab,variables,2225,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['variab'],['variables']
Modifiability," 0x00007f62be7d56fe in ?? (); #7 0x00007ffce112d920 in ?? (); #8 0x00007f62be7dc429 in ?? (); #9 0x00007ffce112d950 in ?? (); #10 0x00007f62be7d26b0 in ?? (); #11 0x00007f62bacd3180 in ?? (); #12 0x00007ffce112d940 in ?? (); #13 0x00007ffce112d9a0 in ?? (); #14 0x00007f62be7d985d in ?? (); #15 0x000000000214fc80 in ?? (); #16 0x00007f62be7d26b0 in ?? (); #17 0x000000001d59e690 in ?? (); #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so; #19 0x00007ffce112d940 in ?? (); #20 0x00007f62bacd5778 in ?? (); #21 0x00007f62bacd5740 in ?? (); #22 0x0000000016991e30 in ?? (); #23 0x00007f62be7d298d in ?? (); #24 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f62be7d56fe in ?? (); #7 0x00007ffce112d920 in ?? (); #8 0x00007f62be7dc429 in ?? (); #9 0x00007ffce112d950 in ?? (); #10 0x00007f62be7d26b0 in ?? (); #11 0x00007f62bacd3180 in ?? (); #12 0x00007ffce112d940 in ?? (); #13 0x00007ffce112d9a0 in ?? (); #14 0x00007f62be7d985d in ?? (); #15 0x000000000214fc80 in ?? (); #16 0x00007f62be7d26b0 in ?? (); #17 0x000000001d59e690 in ?? (); #18 0x00007f62bf3940e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2149151217:2017,variab,variable,2017,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2149151217,1,['variab'],['variable']
Modifiability," 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #21 0x00007ffff793f598 in TStreamerInfo::ReadBuffer<char**> (this=0x555558602630, b=..., arr=@0x7fffffffd740: 0x55555862ab20,; compinfo=compinfo@entry=0x55555862ab08, first=first@entry=0, last=last@entry=1, narr=2, eoffset=0, arrayMode=3); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #22 0x00007ffff77f92ac in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=<optimized out>, end=0x555556a3aaa0, loopconfig=<optimized out>,; config=0x55555862aaf0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1883; #23 0x00007ffff76e978c in TStreamerInfoActions::TConfiguredAction::operator() (loopconf=0x55555862a9e0, end_collection=0x555556a3aaa0,; start_collection=0x555556a3a850, buffer=..., this=0x55555862a9b0) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:131; #24 TBufferFile::ApplySequence (this=0x7fffffffd9d0, sequence=..., start_collection=0x555556a3a850, end_collection=0x555556a3aaa0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3646; #25 0x00007ffff781f65e in TStreamerInfoActions::ReadSTLMemberWiseSameClass (buf=..., addr=<optimized out>, conf=conf@entry=0x555558626dd0,; vers=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1155; #26 0x00007ffff781f896 in TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray>;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:5040,config,config,5040,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,1,['config'],['config']
Modifiability," 2D and 3D Histograms and Profiles..............OK; Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; Test 12: Merge tests for Histograms and Profiles with same axes ..........OK; Test 13: Merge tests for Histograms and Profiles with labels ............OK; Test 14: Merge tests for Histograms and Profiles with different axes .....OK; Test 15: Merge tests for Histograms and Profiles with extendable axes ....OK; Test 16: Label tests for 1D and 2D Histograms ............................OK; Test 17: Interpolation tests for Histograms...............................OK; Test 18: Scale tests for Profiles.........................................OK; Test 19: Integral tests for Histograms....................................OK; Test 20: Buffer tests for Histograms......................................OK; Warning in <TROOT::Append>: Replacing existing TH1: h0 (Potential memory leak).; Test 21: Extend axis tests for Histograms.................................OK; Test 22: TH1-THn[Sparse] Conversion tests.................................OK; Test 23: FillData tests for Histograms and Sparses........................OK; [TFile::Cp] Total 0.05 MB	|====================| 100.00 % [0.4 MB/s]; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/stressHistogram.5.18.00.root [./files/stressHistogram.5.18.00.root]; Test 24: Reference File Read for Histograms and Profiles..................OK; ****************************************************************************; stressHistogram: Real Time = 43.72 seconds Cpu Time = 43.45 seconds; ROOTMARKS = 2547.75599669083 ROOT version: 6.25/01	heads/th1_long@v6-25-01-1467-g6783f2255a; ****************************************************************************; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-885544033:1994,Extend,Extend,1994,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-885544033,1,['Extend'],['Extend']
Modifiability, 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:134734,Variab,VariableDecorrTransform,134734,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability, 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat16_t:' at line 119 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:121:30: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:26920,variab,variable,26920,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04; 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04; 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04; 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04; 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the output with and without this PR to a `.csv` file; that was analyzed with pandas:. ```Python; import pandas as pd. df = pd.read_csv(""interp.csv""). df[""diff_abs""] = df[""new""] - df[""ref""]; df[""dif",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3293,Flexible,FlexibleInterpVar,3293,https://root.cern,https://github.com/root-project/root/pull/13067,1,['Flexible'],['FlexibleInterpVar']
Modifiability," ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: wa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:30924,variab,variable,30924,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warnin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:33279,variab,variable,33279,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the Nixpkgs/NixOS contributors. 1. Run `mkdir test-root-6.27`; 2. Place the following files into the `test-root-6.27` directory:. `setup-hook.sh` and `sw_vers.patch` from https://github.com/NixOS/nixpkgs/tree/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root. `default.nix`. ```Nix; { stdenv; , lib; , callPack",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2830,sandbox,sandbox,2830,https://root.cern,https://github.com/root-project/root/issues/11920,1,['sandbox'],['sandbox']
Modifiability," = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf""); obsvar = ws.var(obsname). UnfoldedFile = ROOT.TFile.Open(""Unfolded.root"",""READ""); U1 = UnfoldedFile.Get(""DPhill""); data_hist=ROOT.RooDataHist(""dphill"",""dphill"",[obsvar],U1); ; morphpdf.fitTo(data_hist,ROOT.RooFit.SumW2Error(True)); morphfunc.printPara",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1742,coupling,couplings,1742,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['coupling'],['couplings']
Modifiability," = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf""); obsvar = ws.var(obsname). UnfoldedFile = ROOT.TFile.Open(""Unfolded.root"",""READ""); U1 = UnfoldedFile.Get(""DPhill""); data_hist=ROOT.RooDataHist(""dphill"",""dphill"",[obsvar],U1); ; morphpdf.fitTo(data_hist,ROOT.RooFit.SumW2Error(True)); morphfunc.printParameters();. ws = makews(); plot(ws) ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1790,config,config,1790,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['config'],['config']
Modifiability, Building with configuration args:; ```; -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109820171:89,config,configuration,89,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109820171,1,['config'],['configuration']
Modifiability," C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(617,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCleanup.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ReachableCode.cpp(721,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\RewriteStatepointsForGC.cpp(2847,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/ScaledNumber.h(166,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\BackendUtil.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-03-30T10:02:50.032Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1168,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclCXX.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10269#issuecomment-1082894731:1410,Rewrite,RewriteStatepointsForGC,1410,https://root.cern,https://github.com/root-project/root/pull/10269#issuecomment-1082894731,1,['Rewrite'],['RewriteStatepointsForGC']
Modifiability," CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6122,variab,variable,6122,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['variab'],['variable']
Modifiability, Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 2: Left side of '&&' is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 3: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 4: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201; 5: Assuming 'bstr' is non-null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1205; 6: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1205; 7: Call to 'realloc' has an allocation size of 0 bytes in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1207; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1268:26: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 2: Left side of '&&' is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 3: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 4: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1262; 5: Assuming 'bstr' is non-null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1266; 6: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1266; 7: Call to 'realloc' has an allocation size of 0 bytes in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1268; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1685:23: warning: Maybe you meant to call InstanceConverter::SetArg() instead [clazy-skipped-base-method]; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2772:25:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:15439,portab,portability,15439,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,2,['portab'],['portability']
Modifiability," Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:24713,Config,Configurable,24713,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47539,variab,variable,47539,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:61097,variab,variable,61097,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:62793,variab,variable,62793,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:67881,variab,variable,67881,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/roottest/root/hist/v7unit/biniter.cxx:14:15: warning: loop variable 'bin' is always a copy because the range of type 'TH2F' (aka 'THist&lt;2, float, THistStatContent, THistStatUncertainty&gt;') does not return a reference [-Wrange-loop-analysis] ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/roottest/root/hist/v7unit/biniter.cxx:49:15: warning: loop variable 'bin' is always a copy because the range of type 'TH2F' (aka 'THist&lt;2, float, THistStatContent, THistStatUncertainty&gt;') does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a refere",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/578#issuecomment-301810421:9572,variab,variable,9572,https://root.cern,https://github.com/root-project/root/pull/578#issuecomment-301810421,2,['variab'],['variable']
Modifiability, Error regular expression found in output. Regex=[: error:] 0.77 sec ; - [2022-09-21T12:01:10.225Z] 1072/2349 Test #962: tutorial-spectrum-Src .............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.66 sec ; - [2022-09-21T12:01:10.943Z] 1074/2349 Test #963: tutorial-spectrum-Src2 ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.67 sec . And 3 more. ### Warnings:; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mt101_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253647669:2950,variab,variable,2950,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253647669,1,['variab'],['variable']
Modifiability," I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -6.61703e-01; 2 alpha_NP_shape -2.12313e-01; 3 mu 1.10747e+00; ```; where the pull for `alpha_NP_norm` has increased, which makes sense given the removal of its constraint term. #### `HistoSys` with uniform constraint [not working as expected]. To see the behavior of the `HistoSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:1918,config,configuration,1918,https://root.cern,https://github.com/root-project/root/issues/9070,1,['config'],['configuration']
Modifiability," Installed with Spack on macOS 11:; ```; ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuilti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:1078,Config,Configure,1078,https://root.cern,https://github.com/root-project/root/issues/9524,1,['Config'],['Configure']
Modifiability," Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in `hist`, as done already; for RooFit. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""math"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find math -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10083:1598,config,config,1598,https://root.cern,https://github.com/root-project/root/pull/10083,1,['config'],['config']
Modifiability, OK; PNG output................................................ OK; Test 46: Zoom/UnZoom a fitted histogram............................ OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 47: Parallel Coordinates...................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; Test 48: Draw a pad and clone it................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 49: Ntuple drawing with alphanumeric variables................ OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 50: TH2Poly.(DrawClone() and remote file access).............. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; **********************************************************************; * 14 tests failed. :-(; **********************************************************************; * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch; **********************************************************************; * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 second,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295#issuecomment-1866909548:17389,variab,variables,17389,https://root.cern,https://github.com/root-project/root/pull/14295#issuecomment-1866909548,1,['variab'],['variables']
Modifiability," PkgConfig: /nix/store/v73ppkjk196bwsjm6yy9yv80bdq7q68v-pkg-config-wrapper-0.29.2/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.3; -- Looking for TBB; -- Found TBB: /nix/store/2d2lhp3b4fwva16v4hnxswwc99z0k3ab-tbb-2020.3 (found suitable version ""2020.3"", minimum required is ""2018"") ; -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /nix/store/ar32z43050rasr218cqpg2lpk18axhrq-openblas-0.3.21/lib/libopenblas.so ; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Found LLVM_CONFIG as /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/bin/llvm-config; -- External llvm built in Release mode.; -- Linker detection: GNU ld; -- Building with -fPIC; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/nix/store/v1nxrwb4ls09sbbrwlkgxs7dlw8paksh-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/v1nxrwb4ls09sbbrwlkgxs7dlw8paksh-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/v1nxrwb4ls09sbbrwlkgxs7dlw8paksh-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:14075,config,config,14075,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['config'],['config']
Modifiability, ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/103677/console).; ### Errors:; - [2020-12-10T13:51:42.817Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:42.817Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers ; - [2020-12-10T13:51:46.046Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:46.046Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:51:50.262Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928#issuecomment-742533457:1328,Config,Config,1328,https://root.cern,https://github.com/root-project/root/pull/6928#issuecomment-742533457,2,['Config'],['Config']
Modifiability, TMVA/ROCCalc.h TMVA/ROCCurve.h TMVA/RootFinder.h TMVA/RuleCut.h TMVA/RuleEnsemble.h TMVA/RuleFitAPI.h TMVA/RuleFit.h TMVA/RuleFitParams.h TMVA/Rule.h TMVA/SdivSqrtSplusB.h TMVA/SeparationBase.h TMVA/SimulatedAnnealingFitter.h TMVA/SimulatedAnnealing.h TMVA/SVEvent.h TMVA/SVKernelFunction.h TMVA/SVKernelMatrix.h TMVA/SVWorkingSet.h TMVA/TActivationChooser.h TMVA/TActivation.h TMVA/TActivationIdentity.h TMVA/TActivationRadial.h TMVA/TActivationReLU.h TMVA/TActivationSigmoid.h TMVA/TActivationTanh.h TMVA/Timer.h TMVA/TNeuron.h TMVA/TNeuronInputAbs.h TMVA/TNeuronInputChooser.h TMVA/TNeuronInput.h TMVA/TNeuronInputSqSum.h TMVA/TNeuronInputSum.h TMVA/Tools.h TMVA/TransformationHandler.h TMVA/TSpline1.h TMVA/TSpline2.h TMVA/TSynapse.h TMVA/Types.h TMVA/VariableDecorrTransform.h TMVA/VariableGaussTransform.h TMVA/VariableIdentityTransform.h TMVA/VariableImportance.h TMVA/VariableInfo.h TMVA/VariableNormalizeTransform.h TMVA/VariablePCATransform.h TMVA/VariableRearrangeTransform.h TMVA/VariableTransformBase.h TMVA/VariableTransform.h TMVA/VarTransformHandler.h TMVA/Version.h TMVA/Volume.h TMVA/RTensor.hxx TMVA/RTensorUtils.hxx /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:223:9: error: no member named 'reverse' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:226:9: error: no member named 'reverse' in namespace 'std' ; - Error: Had to build non-system module ROOTDataFrame implicitly. You first need to ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libTMVA5e23216ab9_dictUmbrella.h) . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3803:17: warning: declaration of ‘f1’ shadows a previous local [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3907#issuecomment-498800780:6857,Variab,VariableTransformBase,6857,https://root.cern,https://github.com/root-project/root/pull/3907#issuecomment-498800780,1,['Variab'],['VariableTransformBase']
Modifiability, TMVA/RegressionVariance.h TMVA/ResultsClassification.h TMVA/Results.h TMVA/ResultsMulticlass.h TMVA/ResultsRegression.h TMVA/ROCCalc.h TMVA/ROCCurve.h TMVA/RootFinder.h TMVA/RuleCut.h TMVA/RuleEnsemble.h TMVA/RuleFitAPI.h TMVA/RuleFit.h TMVA/RuleFitParams.h TMVA/Rule.h TMVA/SdivSqrtSplusB.h TMVA/SeparationBase.h TMVA/SimulatedAnnealingFitter.h TMVA/SimulatedAnnealing.h TMVA/SVEvent.h TMVA/SVKernelFunction.h TMVA/SVKernelMatrix.h TMVA/SVWorkingSet.h TMVA/TActivationChooser.h TMVA/TActivation.h TMVA/TActivationIdentity.h TMVA/TActivationRadial.h TMVA/TActivationReLU.h TMVA/TActivationSigmoid.h TMVA/TActivationTanh.h TMVA/Timer.h TMVA/TNeuron.h TMVA/TNeuronInputAbs.h TMVA/TNeuronInputChooser.h TMVA/TNeuronInput.h TMVA/TNeuronInputSqSum.h TMVA/TNeuronInputSum.h TMVA/Tools.h TMVA/TransformationHandler.h TMVA/TSpline1.h TMVA/TSpline2.h TMVA/TSynapse.h TMVA/Types.h TMVA/VariableDecorrTransform.h TMVA/VariableGaussTransform.h TMVA/VariableIdentityTransform.h TMVA/VariableImportance.h TMVA/VariableInfo.h TMVA/VariableNormalizeTransform.h TMVA/VariablePCATransform.h TMVA/VariableRearrangeTransform.h TMVA/VariableTransformBase.h TMVA/VariableTransform.h TMVA/VarTransformHandler.h TMVA/Version.h TMVA/Volume.h TMVA/RTensor.hxx TMVA/RTensorUtils.hxx /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:223:9: error: no member named 'reverse' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:226:9: error: no member named 'reverse' in namespace 'std' ; - Error: Had to build non-system module ROOTDataFrame implicitly. You first need to ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libTMVA5e23216ab9_dictUmbrella.h) . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3803:17: warning: declarati,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3907#issuecomment-498800780:6741,Variab,VariableInfo,6741,https://root.cern,https://github.com/root-project/root/pull/3907#issuecomment-498800780,1,['Variab'],['VariableInfo']
Modifiability," Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/ubuntu/git/root/build/unix/compiledata.sh; Making /home/ubuntu/git/root/builddir/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.4.0-139-generic; Processor 16 core Intel Core Processor (Broadwell, IBRS) (x86_64); Build type Release; Install path /usr/local; Compiler GNU 9.4.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: builtin_afterimage builtin_clang builtin_cling builtin_gl2ps builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_xxhash builtin_zstd shared xrootd; -- Configuring done; -- Generating done; -- Build files have been written to: /home/ubuntu/git/root/builddir; ```; and after `make -j16`:; ```; [...]; [100%] Generating tutorials/hsimple.root; cd /home/ubuntu/git/root/builddir/tutorials && LD_LIBRARY_PATH=/home/ubuntu/git/root/builddir/lib: ROOTIGNOREPREFIX=1 ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:7566,Config,Configuration,7566,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,1,['Config'],['Configuration']
Modifiability," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976:1025,extend,extended,1025,https://root.cern,https://github.com/root-project/root/issues/8976,1,['extend'],['extended']
Modifiability, The configuration args are:; ```; '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-Dcxxmodules:BOOL=OFF' '-Dexceptions:BOOL=ON' '-Dexplicitlink:BOOL=ON' '-Dfail-on-missing:BOOL=ON' '-Dfortran:BOOL=OFF' '-Dgminimal:BOOL=ON' '-Dgnuinstall:BOOL=OFF' '-Dlibcxx:BOOL=OFF' '-Dpch:BOOL=ON' '-Droottest:BOOL=OFF' '-Drpath:BOOL=ON' '-Druntime_cxxmodules:BOOL=OFF' '-Dshared:BOOL=ON' '-Dsoversion:BOOL=ON' '-Dtesting:BOOL=OFF' '-Dthread:BOOL=ON' '-DCLING_CXX_PATH:STRING=g++' '-Dbuiltin_afterimage:BOOL=OFF' '-Dbuiltin_cfitsio:BOOL=OFF' '-Dbuiltin_davix:BOOL=OFF' '-Dbuiltin_fftw3:BOOL=OFF' '-Dbuiltin_freetype:BOOL=OFF' '-Dbuiltin_ftgl:BOOL=OFF' '-Dbuiltin_gl2ps:BOOL=OFF' '-Dbuiltin_glew:BOOL=OFF' '-Dbuiltin_gsl:BOOL=OFF' '-Dbuiltin_llvm:BOOL=ON' '-Dbuiltin_lz4:BOOL=OFF' '-Dbuiltin_lzma:BOOL=OFF' '-Dbuiltin_nlohmannjson:BOOL=OFF' '-Dbuiltin_openssl:BOOL=OFF' '-Dbuiltin_pcre:BOOL=OFF' '-Dbuiltin_tbb:BOOL=OFF' '-Dbuiltin_unuran:BOOL=OFF' '-Dbuiltin_vc:BOOL=OFF' '-Dbuiltin_vdt:BOOL=OFF' '-Dbuiltin_veccore:BOOL=OFF' '-Dbuiltin_xrootd:BOOL=OFF' '-Dbuiltin_xxhash:BOOL=OFF' '-Dbuiltin_zlib:BOOL=OFF' '-Dafdsmrgd:BOOL=OFF' '-Dafs:BOOL=OFF' '-Dalien:BOOL=OFF' '-Darrow:BOOL=OFF' '-Dasimage:BOOL=ON' '-Dastiff:BOOL=ON' '-Dbonjour:BOOL=OFF' '-Dcastor:BOOL=OFF' '-Dccache:BOOL=OFF' '-Dchirp:BOOL=OFF' '-Dcling:BOOL=ON' '-Dcocoa:BOOL=OFF' '-Ddataframe:BOOL=ON' '-Ddavix:BOOL=OFF' '-Ddcache:BOOL=OFF' '-Dfftw3:BOOL=OFF' '-Dfitsio:BOOL=OFF' '-Dftgl:BOOL=OFF' '-Dgdml:BOOL=ON' '-Dgenvector:BOOL=OFF' '-Dgeocad:BOOL=OFF' '-Dgfal:BOOL=OFF' '-Dgl2ps:BOOL=OFF' '-Dglite:BOOL=OFF' '-Dglobus:BOOL=OFF' '-Dgsl_shared:BOOL=OFF' '-Dgviz:BOOL=OFF' '-Dhdfs:BOOL=OFF' '-Dhttp:BOOL=OFF' '-Dimt:BOOL=OFF' '-Djemalloc:BOOL=OFF' '-Dkrb5:BOOL=OFF' '-Dldap:BOOL=OFF' '-Dmathmore:BOOL=OFF' '-Dmemstat:BOOL=OFF' '-Dminimal:BOOL=OFF' '-Dminuit:BOOL=ON' '-Dm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1079029708:94,config,configuration,94,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1079029708,1,['config'],['configuration']
Modifiability," This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:375,config,config,375,https://root.cern,https://github.com/root-project/root/issues/16689,1,['config'],['config']
Modifiability," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:1759,variab,variable,1759,https://root.cern,https://github.com/root-project/root/issues/7345,1,['variab'],['variable']
Modifiability, With configure arguments:; ```; -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109804151:101,config,configure,101,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109804151,1,['config'],['configure']
Modifiability, [2023-04-03T08:02:44.137Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.666Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.925Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.925Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:44.926Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T08:02:46.413Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] . And 42 more. ### Failing tests:; - [projectroot.hist.histdrawv7.test.gtest_hist_histdrawv7_test_histhistdrawv7testUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171955/testReport/projectroot.hist.histdrawv7/test/gtest_hist_histdrawv7_test_histhistdrawv7testUnit/); - [projectroot.roottest.root.meta.tuple.roottest_root_meta_tuple_exec_configtype_unload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171955/testReport/projectroot.roottest.root.meta/tuple/roottest_root_meta_tuple_exec_configtype_unload_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1493919881:2310,variab,variable,2310,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1493919881,2,['variab'],['variable']
Modifiability, [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12470/console).; ### Errors:; - ERROR: Timeout after 10 minutes ; - ERROR: Error cloning remote repo 'origin' ; - ERROR: Error cloning remote repo 'origin' ; - ERROR: Timeout after 10 minutes ; - ERROR: Error fetching remote repo 'origin' ; - ERROR: Error fetching remote repo 'origin' . ### Warnings:; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1351#issuecomment-346958552:1026,portab,portable,1026,https://root.cern,https://github.com/root-project/root/pull/1351#issuecomment-346958552,1,['portab'],['portable']
Modifiability," [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:1284,plugin,pluginFWCoreServicesPlugins,1284,https://root.cern,https://github.com/root-project/root/issues/10732,1,['plugin'],['pluginFWCoreServicesPlugins']
Modifiability," ```; import ROOT; ; ROOT.gStyle.SetOptStat(0); ROOT.PyConfig.IgnoreCommandLineOptions = True; ROOT.gROOT.SetBatch(True). obsname = ""CutGGF_TopoDPhill_truth/DPhill_V1_truth"". def makews():. # Create functions; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Setup observable that is to be morphed; obsvar = ROOT.RooRealVar(""DPhill_V1_truth"", ""\#Delta \#phi_{truth}^{ll} [rad]"", 0, 1.8); ; cosa = ROOT.RooRealVar(""cosa"",""cosa"",-1.,1.); kAww = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1209,config,config,1209,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['config'],['config']
Modifiability," `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:7075,inherit,inheritance,7075,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,1,['inherit'],['inheritance']
Modifiability," a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 910; Start 910: tutorial-v7-ntuple-ntpl007_mtFill. 910: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-b^-l^-q^C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin#PYTHIA8=C:/libs/x64/pythia8/8.3.03#PYTHIA8DATA=C:/libs/x64/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 910: Environment variables:; 910: ROOT_HIST=0; 910: Test timeout computed to be: 1200; 910:; 910: Processing C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C...; 910: Warning in <[ROOT.NTuple] Warning C:\Users\bellenot\git\master\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; 910: Warning in <[ROOT.NTuple] Warning C:\Users\bellenot\git\master\tree\ntuple\v7\src\RNTupleSerialize.cxx:1396 in class ROOT::Experimental::RResult<void> __cdecl ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void *,unsigned int,class ROOT::Experimental::RNTupleDescriptorBuilder &)>: Pre-release format version: RC 1; 1/1 Test #910: tutorial-v7-ntuple-ntpl007_mtFill ... Passed 2.03 sec. The following tests passed:; tutorial-v7-ntuple-ntpl007_mtFill. 100% tests passed, 0 tests f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13264#issuecomment-1649597994:1544,variab,variables,1544,https://root.cern,https://github.com/root-project/root/pull/13264#issuecomment-1649597994,1,['variab'],['variables']
Modifiability," always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:18335,variab,variable,18335,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:3913,variab,variable,3913,https://root.cern,https://github.com/root-project/root/issues/10191,2,['variab'],['variable']
Modifiability," at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TText.h>; #include <TPad.h>; #include <fenv.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; //c->cd(1);//works; c->cd();//fails; TText* t= new TText(0.5,0.5,""some text"");; t->Draw();; delete t;; delete c;; delete C;; return 0;; }. ```; Compile. ```; g++ pad4.cxx $(root-config --glibs --cflags --libs) -o pad4 -g; ```. run. ```; ./pad4; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7/EPEL. ## Additional context; Possible fix:; Change ; ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; return gPad;; }; ..... ```; to. ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; if (!fPrimitives) fPrimitives = new TList;; return gPad;; }; ..... ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:2490,config,config,2490,https://root.cern,https://github.com/root-project/root/issues/6447,1,['config'],['config']
Modifiability," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:2423,variab,variable,2423,https://root.cern,https://github.com/root-project/root/pull/8329,1,['variab'],['variable']
Modifiability," but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:1812,config,config,1812,https://root.cern,https://github.com/root-project/root/issues/11977,1,['config'],['config']
Modifiability," char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so; #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so; #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so; #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so; #23 0x00000000004011ad in main (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:5252,variab,variable,5252,https://root.cern,https://github.com/root-project/root/issues/14037,1,['variab'],['variable']
Modifiability," compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984#issuecomment-1739815648:1096,inherit,inherited,1096,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648,1,['inherit'],['inherited']
Modifiability," copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:10440,variab,variable,10440,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256:1133,config,config,1133,https://root.cern,https://github.com/root-project/root/issues/8256,1,['config'],['config']
Modifiability," for (int i = 0; i < 3; i++); {; y = i;; tree.Fill();; }; tree.Write();; }. void write_tree_and_friends(); {; // Write parent tree to disk.; write_parent_tree(""treeparent.root"", ""treeparent"");; // Write friend trees to disk.; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; write_friend_tree(filename, treename);; }; }; ```. Main function; ```cpp; int main(){; write_tree_and_friends();. TFile parentfile{""treeparent.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};. TChain friendchain{""treefriend""};; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; std::string fullpath{filename + ""/"" + treename};; friendchain.Add(fullpath.c_str());; }; parenttree->AddFriend(&friendchain);; // DIFFERENT SUBCASES ACCORDING TO THE NAME OF THE FRIEND VARIABLE; parenttree->Scan(""x:treefriend.y"");; parenttree->Print(""all"");; ROOT::RDataFrame rdf{*parenttree};; auto display = rdf.Display("""");; display->Print();; }; ```. In this scenario, the only consistent behaviour is given by `TTree::Print(""all"")` that always outputs both info on the parent tree and on the friend chain.; Result from TTree:Print(""all""):; ```; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 9 : Total = 1059 bytes File Size = 494 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:11022,VARIAB,VARIABLE,11022,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['VARIAB'],['VARIABLE']
Modifiability," gnused # sed; lsof # lsof # for ROOT (>=6.28); man # manpath; procps # ps # for ROOT (>=6.28); which # which; ]}""; patchRcPathCsh ""$out/bin/thisroot.csh"" ""${lib.makeBinPath [; coreutils; gnugrep; gnused; lsof # lsof # for ROOT (>=6.28); man; which; ]}""; patchRcPathFish ""$out/bin/thisroot.fish"" ""${lib.makeBinPath [; coreutils; man; which; ]}""; '';. setupHook = ./setup-hook.sh;; }; ```. `flake.nix`. ```Nix; {; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/2787fc7d1e51404678614bf0fe92fc296746eec0"";. outputs = { flake-utils, nixpkgs, ... }: flake-utils.lib.eachDefaultSystem (system:; let; lib = nixpkgs.lib;; pkgs = nixpkgs.legacyPackages.${system};; root = with pkgs; callPackage ./. {; python = python3;; inherit (darwin.apple_sdk.frameworks) Cocoa CoreSymbolication OpenGL;; # https://github.com/NixOS/nixpkgs/issues/201254; stdenv = if stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU then gcc11Stdenv else stdenv;; };; in; {; packages = {; default = root;; inherit root;; };; });; }; ```. `flake.lock`. ```JSON; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1667395993,; ""narHash"": ""sha256-nuEHfE/LcWyuSWnS8t12N1wc105Qtau+/OdUAjtQ0rA="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""5aed5285a952e0b949eb3ba02c12fa4fcfef535f"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1670507980,; ""narHash"": ""sha256-riNZa0xzM1it3pzxciwALeMs+0CsBMWIW2FqulzK8vM="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; }; },; ""root"": {; ""inputs"": {; ""flake-utils"": ""flake-utils"",; ""nixpkgs"": ""nixpkgs""; }; }; },; ""root"": ""root"",; ""version"": 7; }; ```. 4. Run `nix --extra-experimental-features 'nix-command flakes' build --no-link --k",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:9259,inherit,inherit,9259,https://root.cern,https://github.com/root-project/root/issues/11920,1,['inherit'],['inherit']
Modifiability," https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++; void repro(); {; using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);; x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});; // Doesn't work better either...; // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;; RooArgSet pdfs;; RooArgSet yields;. // Fill the templates; for (std::size_t i = 0; i < 2; ++i) {; auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());; pdf.SetParameters(1, 1200 + 100 * i, 50);; pdf.Print();; TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());; h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));; pdfs.addOwned(; *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));; yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));; }. // Construct final model; RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified; model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, Range(0.0, 2000.0));; model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));; model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));; frame->Draw();. c1.SaveAs(""plot.png"");; }; ```. The plot looks like this:; ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13030:1916,variab,variable,1916,https://root.cern,https://github.com/root-project/root/issues/13030,1,['variab'],['variable']
Modifiability, in /opt/root_src/build/rmkdepend/parse.c:335; 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340; 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340; 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345; 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:42778,variab,variable,42778,https://root.cern,https://github.com/root-project/root/issues/7410,1,['variab'],['variable']
Modifiability, in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52836,variab,variable,52836,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:3556,Config,ConfigurableParam,3556,https://root.cern,https://github.com/root-project/root/issues/8180,3,"['Config', 'config']","['ConfigurableParam', 'configFile']"
Modifiability," in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; [ 69%] Built target rootcling_stage1; [ 69%] Generating G__Core.cxx, ../lib/libCore.rootmap; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; Subprocess aborted; ```; Any thoughts, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:20155,variab,variable,20155,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,1,['variab'],['variable']
Modifiability," in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml; -- Configuring done; -- Generating done; -- Build files have been written to: /reproducer/build; + cmake --bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:2583,Config,Configuration,2583,https://root.cern,https://github.com/root-project/root/issues/10478,1,['Config'],['Configuration']
Modifiability, in output. Regex=[: error:] 0.67 sec . And 3 more. ### Warnings:; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mt101_fillNtuples/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot.bin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253647669:3448,variab,variable,3448,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253647669,1,['variab'],['variable']
Modifiability," in str(module):; + raise ImportError(f""{partial_name} is not a namespace (type={type(module)})""); + self._module_cache[fullname] = module; + return True; +; + def create_module(self, spec):; + self.is_package(spec.name); + return self._module_cache[spec.name]; +; + def exec_module(self, module):; + pass; +; + def load_module(self, fullname):; + self.is_package(fullname); + return self._module_cache[fullname]; +; +; +class RootNamespaceFinder(importlib.abc.MetaPathFinder):; + def __init__(self):; + self.loader = RootNamespaceLoader(); +; + def find_spec(self, fullname, path, target=None):; + try:; + self.loader.is_package(fullname); + except ImportError:; + return None; + return spec_from_loader(fullname, self.loader); +; + def invalidate_caches(self):; + self.loader = RootNamespaceLoader(); +; +namespace_finder = RootNamespaceFinder(); +if namespace_finder not in sys.meta_path:; + sys.meta_path.append(namespace_finder). # Configuration for usage from Jupyter notebooks; if _is_ipython:; diff --git a/bindings/pyroot/pythonizations/python/ROOT/_facade.py b/bindings/pyroot/pythonizations/python/ROOT/_facade.py; index 69046fc71c..91e7732e5a 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/_facade.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/_facade.py; @@ -135,24 +135,7 @@ class ROOTFacade(types.ModuleType):; return CreateBufferFromAddress(addr). def _set_import_hook(self):; - # This hook allows to write e.g:; - # from ROOT.A import a; - # instead of the longer:; - # from ROOT import A; - # from A import a; - try:; - import __builtin__; - except ImportError:; - import builtins as __builtin__ # name change in p3; - _orig_ihook = __builtin__.__import__; - def _importhook(name, *args, **kwds):; - if name[0:5] == 'ROOT.':; - try:; - sys.modules[name] = getattr(self, name[5:]); - except Exception:; - pass; - return _orig_ihook(name, *args, **kwds); - __builtin__.__import__ = _importhook; + pass. def _handle_import_all(self):; # Called if ""from ROOT import *"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14097#issuecomment-1824949593:2735,Config,Configuration,2735,https://root.cern,https://github.com/root-project/root/issues/14097#issuecomment-1824949593,1,['Config'],['Configuration']
Modifiability," include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'bi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:39590,variab,variable,39590,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:31313,variab,variable,31313,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1863,variab,variable,1863,https://root.cern,https://github.com/root-project/root/pull/16442,1,['variab'],['variable']
Modifiability," initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DefinitionShadower.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.098Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\Exception.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.438Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\AutoloadCallback.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.757Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\IncrementalCUDADeviceCompiler.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:08.046Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928#issuecomment-742537851:3770,Config,Config,3770,https://root.cern,https://github.com/root-project/root/pull/6928#issuecomment-742537851,1,['Config'],['Config']
Modifiability," initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\MetaProcessor\MetaSema.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\MetaProcessor\obj.clingMetaProcessor.vcxproj] ; - [2020-12-10T13:59:02.706Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\ClingPragmas.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:06.168Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DefinitionShadower.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.098Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\Exception.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-12-10T13:59:07.438Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\include\cling/Interpreter/RuntimeOptions.h(17,16): error C2590: 'Config': only a constructor can have a base/member initializer list (compiling source file C:\build\workspace\root-pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928#issuecomment-742537851:2803,Config,Config,2803,https://root.cern,https://github.com/root-project/root/pull/6928#issuecomment-742537851,1,['Config'],['Config']
Modifiability," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6); #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594); #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29); #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c); #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca); ; ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1; SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) ; ==6948==ABORTING; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. ; ```; ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. `git clone https://github.com/root-project/root.git root_src`; 3. `mkdir root_build && cd root_build`; 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`; 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ); 6. `set ASAN_OPTIONS=detect_odr_violation=0`; 7. `cmake --build . --config Release` . ### Setup; <!--; 1. Operating system: Windows 10; 2. How you obtained ROOT: built it myself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:7062,config,config,7062,https://root.cern,https://github.com/root-project/root/issues/9445,1,['config'],['config']
Modifiability," is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:17495,variab,variable,17495,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," is the expected behaviour?. After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce?. This snippet (taken from the test-stresshistogram source),; ```; ROOT::DisableImplicitMT();; double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }; TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);; TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);; gaus->SetParameters(1,0,1);; h1->FillRandom(""gaus1d"",10000);; auto res = h1->Fit(gaus,""L0S"");; cout << TVirtualFitter::GetFitter() << endl;; ```; run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT?. Custom build from source. ### Which operating system are you using?. macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:; ```; $ root-config --cflags; -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include; $ root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd; ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13041:1689,config,configuration,1689,https://root.cern,https://github.com/root-project/root/issues/13041,3,['config'],"['config', 'configuration']"
Modifiability," it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1458,Config,ConfigType,1458,https://root.cern,https://github.com/root-project/root/issues/12358,4,['Config'],['ConfigType']
Modifiability," it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:1365,variab,variable,1365,https://root.cern,https://github.com/root-project/root/issues/16577,1,['variab'],['variable']
Modifiability," loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Exp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:45461,variab,variable,45461,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:15428,variab,variable,15428,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability," may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:46.571Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:47.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:49.019Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:54.463Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:56.706Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] . And 29 more. ### Failing tests:; - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111452/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111452/testReport/projectroot/test/test_stressroofit_interpreted/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803056268:2858,Config,Configuration,2858,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803056268,2,['Config'],['Configuration']
Modifiability," missing initializer for member ‘std::array&lt;const clang::Type*, 4ul&gt;::_M_elems’ [-Wmissing-field-initializers] ; - [2020-09-29T23:29:34.418Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Diagnostics.cpp:35:60: warning: declaration of ‘Reset’ shadows a member of 'this' [-Wshadow] ; - [2020-09-29T23:29:34.418Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Diagnostics.cpp:35:60: warning: declaration of ‘Report’ shadows a member of 'this' [-Wshadow] ; - [2020-09-29T23:29:34.677Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:235:8: warning: unused parameter ‘C’ [-Wunused-parameter] ; - [2020-09-29T23:29:37.792Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:59:13: warning: declaration of ‘OS’ shadows a member of 'this' [-Wshadow] ; - [2020-09-29T23:29:38.834Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:92:66: warning: missing initializer for member ‘std::array&lt;const void*, 8ul&gt;::_M_elems’ [-Wmissing-field-initializers] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:14:16: warning: unused parameter ‘DGR’ [-Wunused-parameter] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:8: warning: unused parameter ‘PP’ [-Wunused-parameter] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:8: warning: unused parameter ‘Introducer’ [-Wunused-parameter] ; - [2020-09-29T23:29:40.394Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:8: warning: unused parameter ‘PragmaTok’ [-Wunused-parameter] . And 474 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-701047094:1930,plugin,plugins,1930,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-701047094,4,['plugin'],['plugins']
Modifiability," not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Success; -- Distributed RDataFrame enabled; -- Looking for RapidYAML (used by RooFit); -- Could NOT find ryml (missing: RYML_LIBRARY RYML_INCLUDE_DIR); -- RapidYAML not found, only compiling RooFit with nlohmann-json parser; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /afs/cern.ch/user/b/bellenot/temp/root/build/unix/compiledata.sh; Making /afs/cern.ch/user/b/bellenot/temp/root-build.foo/ginclude/compiledata.h; -- ROOT Configuration. System Linux-4.18.0-513.5.1.el8_9.x86_64; Processor 10 core Intel Core Processor (Broadwell, no TSX, IBRS) (x86_64); Build type Release; Install path /usr/local; Compiler GNU 8.5.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_davix builtin_ftgl builtin_gl2ps builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xxhash clad dataframe davix gdml http imt opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; -- Configuring done; -- Generating done; -- Build files have been written to: /afs/cern.ch/user/b/bellenot/temp/root-build.foo; [bellenot@lxplus803 root-build.foo]$; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:12293,Config,Configuring,12293,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['Config'],['Configuring']
Modifiability," not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:6089,variab,variable,6089,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability, of '||' is true in /opt/root_src/math/mathcore/src/triangle.c:15901; 152: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15902; 153: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15902; 154: Assuming field 'edgesout' is 0 in /opt/root_src/math/mathcore/src/triangle.c:15940; 155: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15940; 156: Assuming field 'voronoi' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15947; 157: Taking true branch in /opt/root_src/math/mathcore/src/triangle.c:15947; 158: Passing null pointer value via 3rd parameter 'vpointlist' in /opt/root_src/math/mathcore/src/triangle.c:15949; 159: Calling 'writevoronoi' in /opt/root_src/math/mathcore/src/triangle.c:15949; 160: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:14972; 161: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:14972; 162: Dereference of null pointer (loaded from variable 'vpointlist') in /opt/root_src/math/mathcore/src/triangle.c:14976; /opt/root_src/math/mathcore/src/triangle.c:15380:3: warning: Value stored to 'worstaspect' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'worstaspect' is never read in /opt/root_src/math/mathcore/src/triangle.c:15380; /opt/root_src/math/matrix/inc/TMatrixT.h:280:4: warning: Returning null reference [clang-analyzer-core.uninitialized.UndefReturn]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kTransposed:' at line 135 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 7: Assuming 'no_rows' is >= 0 in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:123337,variab,variable,123337,https://root.cern,https://github.com/root-project/root/issues/7458,1,['variab'],['variable']
Modifiability," of a split and clean-up of #8294. ## Changes or fixes:; - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace.; - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252.; - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets.; - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free.; - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication.; - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed.; - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally; - [x] update the docs (if necessary); - [x] unify copyright/license headers with previous commits; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] refactor member names: underscore suffix; - [x] remove commented out code and TODOs and other junk; - [x] clang-tidy up; - [ ] rebase into two commits (one for `KahanSum` and one for the rest); - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349:2289,refactor,refactor,2289,https://root.cern,https://github.com/root-project/root/pull/9349,1,['refactor'],['refactor']
Modifiability," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:3386,Config,Configuration,3386,https://root.cern,https://github.com/root-project/root/issues/14225,1,['Config'],['Configuration']
Modifiability," of error appeared in the ATLAS analysis software (I believe...) when we switched to ROOT 6.26/08. Though when I now produced a standalone reproducer for it, I couldn't make it work with 6.24/06 either. (Which is what we used for a long time, apparently without this issue.). Take the following struct:. ```c++; struct ConfigType {; std::map<std::string, std::tuple<ConfigType, std::string> > m_children;; };; ```. When I build a (Reflex) dictionary for it, it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1061,Config,ConfigType,1061,https://root.cern,https://github.com/root-project/root/issues/12358,1,['Config'],['ConfigType']
Modifiability," of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteMacros.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Expr.h(1646,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(422,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteModernObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/SmallVector.h(297,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\InclusionRewriter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/ArrayRef.h(77,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullreque",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249#issuecomment-1858805611:1950,Rewrite,Rewrite,1950,https://root.cern,https://github.com/root-project/root/pull/14249#issuecomment-1858805611,2,['Rewrite'],"['Rewrite', 'RewriteModernObjC']"
Modifiability," of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\ASTWriterStmt.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(672,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteMacros.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Expr.h(1646,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(422,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\Rewrite\RewriteModernObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/SmallVector.h(297,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249#issuecomment-1858805611:1479,Rewrite,Rewrite,1479,https://root.cern,https://github.com/root-project/root/pull/14249#issuecomment-1858805611,2,['Rewrite'],"['Rewrite', 'RewriteObjC']"
Modifiability," on mac1012/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/console).; ### Warnings:; - ninja: warning: multiple rules generate lib/liblz4.a. builds involving this target will not be correct; continuing anyway [-w dupbuild=warn] ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:382:13: warning: unused variable 'shellEscape' [-Wunused-const-variable] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] . ### Failing tests:; - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6932/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1059#issuecomment-332323275:955,variab,variable,955,https://root.cern,https://github.com/root-project/root/pull/1059#issuecomment-332323275,2,['variab'],['variable']
Modifiability," other) : TChain(other), m_self(other.m_self, this) {}; ^; /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here; TChain(const TChain&); // not implemented; ^; /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported; import re; Out[1]: <cppyy.gbl.TChain object at 0x(nil)>; ```. ### Python 3.6. ```python; Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33); Type 'copyright', 'credits' or 'license' for more information; IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-1-cdc669878b88> in <module>; 2 import numpy as np; 3; ----> 4 class Ntuple(ROOT.TChain):; 5 def __init__(self, name):; 6 pass. KeyError: 'fProofChain'; ```. ### Python 3.7. ```python; Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50); Type 'copyright', 'credits' or 'license' for more information; IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); Out[1]: *** Break *** segmentation violation; *** Break *** segmentation violation; ```. ### Python 3.8. ```python; Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52); Type 'copyright', 'credits' or 'license' for more information; IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); Out[1]: *** Break *** segmentation violation; *** Break *** segmentation violation; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702595265:2163,enhance,enhanced,2163,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702595265,2,['enhance'],['enhanced']
Modifiability," out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ?? (); 2187: #36 0x00007f2a5e77a0c0 in ?? (); 2187: #37 0x0000614000001840 in ?? (); 2187: #38 0x00007ffc0cd42e10 in ?? (); 2187: #39 0x00007f2a50a1db2e in cling::IncrementalExecutor::executeWrapper (this=<optimized out>, function=..., returnValue=0x7f2a5e77a0c0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:288; 2187: ===========================================================; 2187:; 2187:; 2187: The lines below might hint at the cause of the crash. If you see question; 2187: marks as part of the stack trace, try to recompile with debugging information; 2187: enabled and export CLING_DEBUG=1 environment variable before running.; 2187: You may get help by asking at the ROOT forum https://root.cern/forum; 2187: Only if you are really convinced it is a bug in ROOT then please submit a; 2187: report at https://root.cern/bugs Please post the ENTIRE stack trace; 2187: from above as an attachment in addition to anything else; 2187: that might help us fixing this issue.; 2187: ===========================================================; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:7307,variab,variable,7307,https://root.cern,https://github.com/root-project/root/issues/11867,1,['variab'],['variable']
Modifiability, path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.xml.roottest_root_io_xml_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10480/testReport/projectroot.roottest.root.io/xml/roottest_root_io_xml_make/); - [projectroot.interpreter.clingtest_check_cling](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10480/testReport/projectroot/interpreter/clingtest_check_cling/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1208#issuecomment-341377301:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1208#issuecomment-341377301,2,['portab'],['portable']
Modifiability," realfilename = safemalloc( dirname_len+filename_len+1 );; ^; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; free( realfilename );; ^; export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'; export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; curr = calloc(*size, 1);; ^; export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'; export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; buff->buffer = realloc( buff->buffer, buff->allocated_size );; ^; export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'; 4 errors generated.; make[3]: *** [Makefile:346: export.o] Error 1; make[3]: *** Waiting for unfinished jobs....; ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044:1959,variab,variable,1959,https://root.cern,https://github.com/root-project/root/pull/15044,1,['variab'],['variable']
Modifiability," remove; -- Looking for remove - found; -- Looking for shmat; -- Looking for shmat - found; -- Looking for IceConnectionNumber in ICE; -- Looking for IceConnectionNumber in ICE - found; -- X11_INCLUDE_DIR: /usr/include; -- X11_LIBRARIES: /usr/lib/libSM.so;/usr/lib/libICE.so;/usr/lib/libX11.so;/usr/lib/libXext.so; -- X11_Xpm_INCLUDE_PATH: /usr/include; -- X11_Xpm_LIB: /usr/lib/libXpm.so; -- X11_Xft_INCLUDE_PATH: /usr/include; -- X11_Xft_LIB: /usr/lib/libXft.so; -- X11_Xext_INCLUDE_PATH: /usr/include; -- X11_Xext_LIB: /usr/lib/libXext.so; -- Found GIF: /usr/lib/libgif.so (found version ""5.2.1""); -- Found TIFF: /usr/lib/libtiff.so (found version ""4.3.0""); -- Found PNG: /usr/lib/libpng.so (found version ""1.6.37""); -- Found JPEG: /usr/lib/libjpeg.so (found version ""80""); -- Looking for AfterImage; -- Could NOT find AfterImage (missing: AFTERIMAGE_INCLUDE_DIR AFTERIMAGE_LIBRARIES); -- AfterImage not found. Switching on builtin_afterimage option; -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.8.0""); -- Found GSL: /usr/include (found suitable version ""2.7.1"", minimum required is ""1.10""); -- Looking for OpenGL; -- Found OpenGL: /usr/lib/libOpenGL.so; -- Looking for GLEW; -- Could NOT find GLEW (missing: GLEW_INCLUDE_DIRS GLEW_LIBRARIES); -- GLEW not found. Switching on builtin_glew option; -- Looking for gl2ps; -- Could NOT find gl2ps (missing: GL2PS_LIBRARY GL2PS_INCLUDE_DIR); -- gl2ps not found. Switching on builtin_gl2ps option; -- Looking for LibXml2; -- Found LibXml2: /usr/lib/libxml2.so (found version ""2.9.13""); -- Found OpenSSL: /usr/lib/libcrypto.so (found version ""1.1.1n""); -- Looking for MySQL; -- Found MySQL: /usr/include/mysql; -- Looking for Oracle; -- Oracle not found.; -- Oracle: You can specify includes: -DORACLE_PATH_INCLUDES=/usr/include/oracle/10.2.0.3/client; -- currently found includes:; -- Oracle: You can specify libs: -DORACLE_PATH_LIB=/usr/lib/oracle/10.2.0.3/client/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:4700,config,config,4700,https://root.cern,https://github.com/root-project/root/issues/10528,1,['config'],['config']
Modifiability, runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:16673,variab,variable,16673,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['variab'],['variable']
Modifiability," see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1409,config,config,1409,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,1,['config'],['config']
Modifiability," should provide real implementation ; > ```; > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&); > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&); > ```; > Otherwise these methods will be non-usable for other SQL plugins; > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`; > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:; 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp; `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`; has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds...; For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds.; 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:; `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`; But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-506253921:1928,plugin,plugins,1928,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-506253921,1,['plugin'],['plugins']
Modifiability," simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapsh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:3983,variab,variable,3983,https://root.cern,https://github.com/root-project/root/pull/12905,4,['variab'],['variable']
Modifiability," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2549,plugin,plugin,2549,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,2,['plugin'],['plugin']
Modifiability," ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2240,config,configuration,2240,https://root.cern,https://github.com/root-project/root/issues/7936,1,['config'],['configuration']
Modifiability," std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::map' requested here; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: note: previous definition is here; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; ```. Note 1: A `Release` build seems to work fine. I can reproduce the problem on CentOS 8 Stream with a self-built GCC 11.1.0. When testing with self-built versions of GCC 11.2.0, 10.2.0, and 9.3.0, I get a probably related crash `ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:3857: unsigned int clang::FunctionDecl::getODRHash() const: Assertion 'hasODRHash()' failed.` where the `FunctionDecl` is the constructor of `std::_Rb_tree_iterator`. Note 2: The system-default GCC 8.5.0 and a self-built GCC 8.4.0 are both fine. The only ""relevant"" change that I see for `_Rb_tree_iterator` in GCC 9 is the move from (member) `bool operator==` to `friend bool operator==`, which matches the error message quite nicely. Finally, I was able to reproduce the assertion in a Docker container of `ubuntu:latest` (Ubuntu 22.04.4 LTS at the time of writing), after installing; ```; # apt update; # apt upgrade; # apt install --no-install-recommends ca-certificates cmake gcc g++ git libc6-dev libz-dev make ninja-build patch python3 uuid-dev; ```; and then configuring as `cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -Dx11=OFF ../root.src/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:3363,config,configuring,3363,https://root.cern,https://github.com/root-project/root/issues/10291,1,['config'],['configuring']
Modifiability," the following errors:\r\n```\r\n Start 993: tutorial-rcanvas-rbox-py\r\n\r\n993: Test command: \""C:\Program Files\CMake\bin\cmake.exe\"" \""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py\"" \""-DSYS=C:/Users/bellenot/build/release\"" \""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc\"" \""-P\"" \""C:/Users/bellenot/build/release/RootTestDriver.cmake\""\r\n993: Environment variables:\r\n993: ROOT_HIST=0\r\n993: Test timeout computed to be: 1500\r\n993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RCanvas&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RCanvas, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RBox&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RBox, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: Traceback (most recent call last):\r\n993: File \""C:\Users\bellenot\git\master\tutorials\launcher.py\"", line 34, in &lt;module&gt;\r\n993: spec.loader.exec_module(module)\r\n993: File \""&lt;frozen importlib._bootstrap_external&gt;\"", line 850, in exec_module\r\n993: File \""&lt;frozen importlib._bootstrap&gt;\"", line 228, in _call_with_frames_removed\r\n993: File \""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py\"", line 24, in &lt;module&gt;\r\n993: box1.border.color = RColor.kBlue\r\n993: AttributeError: &lt;class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98&gt; has no attribute 'kBlue'. Full details:\r\n993: attribute acces",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035#issuecomment-927923183:900,variab,variables,900,https://root.cern,https://github.com/root-project/root/pull/9035#issuecomment-927923183,1,['variab'],['variables']
Modifiability," think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:1344,plugin,plugins,1344,https://root.cern,https://github.com/root-project/root/issues/14492,3,['plugin'],['plugins']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3821#issuecomment-493117744:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3821#issuecomment-493117744,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493136444:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493136444,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3687#issuecomment-493200730:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3687#issuecomment-493200730,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3826#issuecomment-493376653:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3826#issuecomment-493376653,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3827#issuecomment-493406179:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3827#issuecomment-493406179,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493393620:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493393620,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3828#issuecomment-493395825:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3828#issuecomment-493395825,2,['variab'],['variable']
Modifiability, this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493407711:1330,variab,variable,1330,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493407711,2,['variab'],['variable']
Modifiability," this would require some changes to our software. And also this problem is not specific to libgandiva only, but it would affect any library that uses LLVM. Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT. > I have in the mean time found the root cause why my patch fails:; > ; > * It is due to copy relocations of symbols from libstdc++; > ; > * Crashes happen whenever cling wants to output text via cout / cerr / etc.; > ; > * The problem is that there are 2 instances of cout / cerr: The first created by the executable itself through copy relocation, when the executable prints something via cout. The second created by libCling loaded with RTLD_DEEPBIND. (By design, RTLD_DEEPBIND links to libstdc++ first before checking the global namespace, so it does not see the copy-relocated symbol.). I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example. > ; > ; > The problem can be avoided if executables are compiled with -fPIC as well.; > I just tried locally to compile the failing ROOT ctests with -fPIC and this fixed the segmentation faults.; > The question is whether this is a proper solution, since it would require to compile all executables with -fPIC. On the other hand, I don't know how to fix this in another way. Perhaps this could be enabled via a special CMake option for ROOT, which enables RTLD_DEEPBIND for libCling and -fPIC for all executables. IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?. > @vgvassilev : I do not see how I could control this.; > https://git",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564015399:1399,portab,portable,1399,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564015399,1,['portab'],['portable']
Modifiability," time in; the past may now fail. Some workarounds are available. This led to issues within the Python language, tracked at; https://bugs.python.org/issue33725. Any application that makes use of; e.g. multiprocessing (or in any way ends up calling MacOS system `fork`; or `exec`) is affected. According to the Python bug tracker, this issue; has been fixed in Python 3.8. The XCode Python 3.8 version begs to differ. In a very specific usecase,; that boils down to this simple reproducer:; ```python; import pyspark. sparkconf = pyspark.SparkConf().setAll(; {""spark.app.name"": ""distrdf001_spark_connection"",; ""spark.master"": ""local[4]"", }.items()); sparkcontext = pyspark.SparkContext(conf=sparkconf). def imp(partition):; import cppyy; return 1. count = sparkcontext.parallelize(range(1)).map(imp).reduce(lambda x,y:; x+y); ```. the issue is still triggered. Installing any other 3.8+ Python; executable on a MacOS node doesn't show this behaviour, with the exact; same pyspark version (3.2.1). It is possible to workaround this problem, by setting the environment; variable OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES before running a test.; This effectively brings back the behaviour of MacOS10.12 and previous; versions. This commit uses this workaround, since we cannot directly; modify how the system XCode Python on MacOS works. To give an idea of the impact of this issue (and therefore the changes; in this commit), the situation where this occurs is as follows:. 1. A user wants to run RDataFrame in distributed mode.; 2. Their environment is MacOS 10.13+.; 3. The application creates a pyspark mock cluster on the local Mac machine and; the computations happen strictly in the single local node, not in a; distributed cluster. Thus, it probably interests only a very small fraction of use cases for; distributed RDataFrame, mainly regarding quick checks done locally before; actually sending the computations to a cluster. Co-authored-by: Enric Tejedor Saavedra <enric.tejedor.saavedra@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9811:1322,variab,variable,1322,https://root.cern,https://github.com/root-project/root/pull/9811,1,['variab'],['variable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9220/testReport/projectroot.roottest.python/pythonizations/roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1197#issuecomment-337667733:2487,portab,portable,2487,https://root.cern,https://github.com/root-project/root/pull/1197#issuecomment-337667733,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9213/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_multiTree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9213/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_multiTree/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9213/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9213/testReport/projectroot.roottest.python/basic/roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/240#issuecomment-337604840:2479,portab,portable,2479,https://root.cern,https://github.com/root-project/root/pull/240#issuecomment-337604840,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343327255:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343327255,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343509208:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343509208,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343735053:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343735053,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11047/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11047/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11047/testReport/projectroot.roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1049#issuecomment-342628177:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1049#issuecomment-342628177,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10384/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10384/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.io.abstractclass.roottest_root_io_abstractclass_make](https://epsft-jenkins.cern.ch/job/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1255#issuecomment-341155396:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1255#issuecomment-341155396,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8996/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_handlers_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8996/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_handlers_doctest/); - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1167#issuecomment-336691370:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1167#issuecomment-336691370,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9423/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9423/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-338361152:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-338361152,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9638/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9638/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-339129413:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-339129413,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9752/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9752/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-339535932:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-339535932,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9975/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9975/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217#issuecomment-339995032:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1217#issuecomment-339995032,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9983/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9983/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1226#issuecomment-340010416:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1226#issuecomment-340010416,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.test.test_vvector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11896/testReport/projectroot/test/test_vvector/); - [projectroot.test.test_vmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11896/testReport/projectroot/test/test_vmatrix/); - [projectroot.roottest.root.io.tree.roottest_root_io_tree_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11896/testReport/projectroot.roottest.root.io/tree/roottest_root_io_tree_make/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337#issuecomment-344879536:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1337#issuecomment-344879536,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15040/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15040/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1521#issuecomment-358393873:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1521#issuecomment-358393873,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15088/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15088/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1524#issuecomment-358696801:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1524#issuecomment-358696801,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15096/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15096/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1525#issuecomment-358710378:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1525#issuecomment-358710378,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15104/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15104/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1526#issuecomment-358749943:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1526#issuecomment-358749943,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15112/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15112/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1524#issuecomment-358761575:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1524#issuecomment-358761575,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15144/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15144/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1523#issuecomment-358897303:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1523#issuecomment-358897303,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15048/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15048/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1517#issuecomment-358454952:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1517#issuecomment-358454952,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15136/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15136/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1526#issuecomment-358771131:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1526#issuecomment-358771131,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15516/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15516/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-359572750:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-359572750,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15508/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15508/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15508/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-359542056:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-359542056,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15548/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15548/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15548/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-359760582:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-359760582,1,['portab'],['portable']
Modifiability, to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15572/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15572/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15572/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-359922537:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-359922537,1,['portab'],['portable']
Modifiability," uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The executable can be compiled with:; ```bash; g++ $(root-config --cflags) -o convolution convolution.cc $(root-config --libs) -lRooFitCore -lRooFit; ```. An interesting observation is that by turning the `RooProdPdf` into a `RooRealSumPdf` by adding another `RooUniform` with coefficient zero, the problem is gone. So the problem is really in the interaction between `RooProdPdf` and `RooFFTConvPdf`. <img src=""https://user-images.githubusercontent.com/6578603/107349328-5eb73300-6ac8-11eb-953b-b21e90db8abc.png"" width=""400"" alt=""convolution""/> <img src=""https://user-images.githubusercontent.com/6578603/107349528-9de58400-6ac8-11eb-997a-ea938868de60.png"" width=""400"" alt=""convolution_hotfix""/>. ### Setup. Current ROOT master built on CentOS 7. ### Additional context. * Originally reported in the [ROOT forum](https://root-forum.cern.ch/t/roofftconvpdf-gives-constant-zero/43443); * In the forum it was reported that this problem also arises with the numerical convolution `RooNumConvPdf`, **however**, the example in **this issue works fine** with `RooNumConvPdf`!; * Two Jira issues appear to be connected to this issue: [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7157:2110,config,config,2110,https://root.cern,https://github.com/root-project/root/issues/7157,1,['config'],['config']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3821#issuecomment-493117744:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3821#issuecomment-493117744,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59426/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493136444:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493136444,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59432/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3687#issuecomment-493200730:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3687#issuecomment-493200730,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59438/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3826#issuecomment-493376653:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3826#issuecomment-493376653,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59450/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3827#issuecomment-493406179:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3827#issuecomment-493406179,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59456/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493393620:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493393620,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59462/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3828#issuecomment-493395825:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3828#issuecomment-493395825,1,['variab'],['variable']
Modifiability, warning: all paths through this function will call itself [-Winfinite-recursion] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:221:1: warning: all paths through this function will call itself [-Winfinite-recursion] ; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 136 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59468/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3825#issuecomment-493407711:1200,variab,variable,1200,https://root.cern,https://github.com/root-project/root/pull/3825#issuecomment-493407711,1,['variab'],['variable']
Modifiability," was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1748,config,configuration,1748,https://root.cern,https://github.com/root-project/root/pull/11882,1,['config'],['configuration']
Modifiability," weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/issues/11333,1,['variab'],['variable']
Modifiability, ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:21: error: template argument 1 is invalid . And 16 more. ### Warnings:; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:423:8: warning: unused variable ‘op_0_n’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:424:8: warning: unused variable ‘op_0_k’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:425:10: warning: unused variable ‘op_0_alpha’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:426:10: warning: unused variable ‘op_0_beta’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:427:8: warning: unused variable ‘op_0_lda’ [-Wunused-variable] ; - [2024,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1948984768:2678,variab,variable,2678,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1948984768,2,['variab'],['variable']
Modifiability,"!; ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules.idx ---; *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build; --- CMakeFiles/modules_idx.dir/all ---; *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build; *** [all] Error code 2. make: stopped in /usr/ho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:1513,config,configuration,1513,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['config'],['configuration']
Modifiability,""" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:1867,config,configure,1867,https://root.cern,https://github.com/root-project/root/issues/11787,1,['config'],['configure']
Modifiability,""",""cosa"",-1.,1.); kAww = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf""); obsvar = ws.var(obsname). UnfoldedFile = ROOT.TFile.Open(""Unfolded.root"",""READ""); U1 = UnfoldedFile.Get(""DPhill""); data_hist=ROOT.RooDataHist(""dphill"",""dphill"",[obsvar],U1); ; morphpdf.fitTo(data_hist,ROOT.RooFit.SumW2Error(True))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1735,config,config,1735,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['config'],['config']
Modifiability,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:1739,variab,variable,1739,https://root.cern,https://github.com/root-project/root/issues/7844,1,['variab'],['variable']
Modifiability,"""Commit"" is not a good commit message. @lmoneta could you help @surya2191997 rewrite the commits?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3924#issuecomment-504893263:77,rewrite,rewrite,77,https://root.cern,https://github.com/root-project/root/pull/3924#issuecomment-504893263,1,['rewrite'],['rewrite']
Modifiability,"""Not applicable"" because this is not a bugfix, just refactoring",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7029#issuecomment-1799063322:52,refactor,refactoring,52,https://root.cern,https://github.com/root-project/root/issues/7029#issuecomment-1799063322,1,['refactor'],['refactoring']
Modifiability,"""RooArgList created with the constructor where you pass multiple elements are non-owning collections"" - it looks like a not very good behaviour. Why can't it be consistent between all constructors?. ""It is also possible to have an owning RooArgList/Set, but in this case it would own all the elements"" - maybe it would be better than to completely prohibit owning? I think it may be used more often than a mixture of owned/not-owned elements. However, it would still require some code. I would also add about RooArgList, that it would be great to handle an arbitrary number of elements. Is it possible? I have 10 pdfs, and I have to add the last one after the RooArgList constructor using the *add* method (because the constructor supports at maximum 9 args).; If one rewrites the constructor, maybe the owning issues might be re-implemented as well.; RooArgList/Set looks like a very general container, so it would benefit from being even more general. Anyway if you can detect this issue and raise an exception, this would be a good solution. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8052#issuecomment-830058968:768,rewrite,rewrites,768,https://root.cern,https://github.com/root-project/root/issues/8052#issuecomment-830058968,1,['rewrite'],['rewrites']
Modifiability,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696260432:517,flexible,flexible,517,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696260432,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:1477,config,configured,1477,https://root.cern,https://github.com/root-project/root/issues/9583,1,['config'],['configured']
Modifiability,"""overloadedFreePtsq"", ROOT.squared). #will fail because argument name determination from overloads is ambiguous; d = d.Define(""overloadedFreePtsq"", ROOT.squared2). #templated free function; d = d.Define(""templatedFreeNmuonsSq"", ROOT.squared[""int""], [""nMuons""]). #static class member; d = d.Define(""staticPtsq"", ROOT.Callable.mul, [""Muon_pt"", ""Muon_pt""]). #class member; d = d.Define(""overloadedMemberPtsq"", ROOT.Callable().squared, [""Muon_pt""]). #templated class member; d = d.Define(""templatedMemberNmuonsSq"", ROOT.Callable().squared[""int""], [""nMuons""]). #overloaded operator(); d = d.Define(""overloadedCallPtsq"", ROOT.Callable(), [""Muon_pt""]). #string expression; d = d.Define(""lambdaPtsq"", ""Muon_pt*Muon_pt""). #complete lambda expression (direct jitting without parsing); d = d.Define(""lambdaPtsq"", ""[](float x) { return x*x; }"", [""Muon_pt""]). #complete lambda expression with inferred column names and argument types (direct jitting without parsing, argument names determined from cling after jitting); d = d.Define(""lambdaAutoPtsq"", ""[](auto Muon_pt) { return Muon_pt*Muon_pt; }""); ```. A few remaining issues here:; - ""Warning: failed - offset calculation between TList and TViewPubFunctions"" in some cases (related to extracting argument names through cling machinery). - cppyy gives limited or obscure errors on template instantiation. In this case the templates are instantiated in code compiled by TClingCallFunc::compile_wrapper() which apparently has different verbosity than TCling::Declare (jitting through this route also does not forcibly disable the null pointer check like Declare does, and possibly other subtleties); In particular there's one nasty case which is fairly common and produces totally incomprehensible errors compared to compiling the same code in gcc (or even with TCling::Declare), where an incorrect number of columns is passed to Declare compare to the callable. All of the above functionality can be easily extended to Filter once we're happy with the direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:4299,extend,extended,4299,https://root.cern,https://github.com/root-project/root/pull/9174,1,['extend'],['extended']
Modifiability,"# API Redesign. ## Goal. The goal is this PR is to improve the API of the CNN layers (MaxPooling and Conv currently), by eliminating redundant constructor arguments and fields. By redundant in this context, I refer to arguments that can be directly computed from others, and fields that unnecesseraly exist in multiple classes. ## Key points. Below some discussion points on design decisions I made, but still consider debatable. ; Since my experience in production level C++ is very limited I highly value opinions from experienced colleagues and previous authors of the module. ### Making `MaxPoolingLayer` a sub-class of `ConvLayer`. Every layer type in a convolutional network follows the logic existing in our `ConvLayer`:. A filter is sliding over the input and at each step applies an operation to the input elements within its receptive field to produce a single output element. * In a convolutional layer this operation is a linear combination with learnable parameters.; * In an average pooling layer the operation is a linear combination with constant parameters (and equal to the inverse of the receptive field's size).; * In a max pooling layer its a non linear operation. As we can see they all share the same logic and therefore fields. ## Results. 1. Common fields between the 2 layer types in the CNN module are now not duplicated (strides sizes, padding sizes, filter sizes). The same for the 4 `protected` methods in `ConvLayer`. 2. We now have a cleaner API, as the constructor arguments where reduced from 26 to 16 without any change in the functionality).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117:78,layers,layers,78,https://root.cern,https://github.com/root-project/root/pull/2117,2,['layers'],['layers']
Modifiability,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15674:492,variab,variable,492,https://root.cern,https://github.com/root-project/root/pull/15674,1,['variab'],['variable']
Modifiability,"# Goal. This PR implements `Im2Col` in CUDA in (what I consider) an optimal way in terms of performance. I achieve that by assigning one thread per output element. This means that threads do not share their write address and therefore no synchronization is required. They do share read address which is of course thread safe. I complement the new functionality with a complete testing suite to assert correctness. # Extra tasks. The tests within the `CNN` module suffer from extensive code duplication as the `Reference` and `CPU` versions do exactly the same thing (the CUDA one's would just worsen the issue). Instead I refactored the `Im2Col` one's using templated arguments: As a result the tests are now defined only once and called independently from each architecture using templates. This approach is also followed in the `DNN` module. If time allows, I plan to refactor all tests within the `CNN` module in a similar manner.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118:622,refactor,refactored,622,https://root.cern,https://github.com/root-project/root/pull/2118,2,['refactor'],"['refactor', 'refactored']"
Modifiability,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780:96,variab,variables,96,https://root.cern,https://github.com/root-project/root/pull/10780,4,['variab'],"['variable', 'variables']"
Modifiability,"# Problem; It is more efficient to debug applications relying on ROOT having a debug ROOT build. # Solution I would like. Provide debug builds for nightlies (and optionally for releases). # Alternatives . - Debug on Linux with released ROOT works perfectly for standard RedHat distros ( the others are less relevant ).; This is a very good alternative (thanks to Mattias!), but Linux-only and release-only. . - Building from the sources is a very-very bad alternative, as the created builds cannot be transferred elsewhere, i.e. shared with collaborators. Another reason why this is a bad alternative: building with the full configuration on Mac in a reasonable time requires a lot of CPU power, much more than a single user laptop can provide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6430:625,config,configuration,625,https://root.cern,https://github.com/root-project/root/issues/6430,1,['config'],['configuration']
Modifiability,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10745:202,variab,variable,202,https://root.cern,https://github.com/root-project/root/pull/10745,1,['variab'],['variable']
Modifiability,"# This Pull request: Allows for the user to specify the number of cores used during make. ## Changes or fixes: Added a number-of-cores option to the parser and added a condition to check if option was used, and if it is,; the Build object cores instance variable will be set to the user passed number. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10997:254,variab,variable,254,https://root.cern,https://github.com/root-project/root/pull/10997,1,['variab'],['variable']
Modifiability,# This Pull request: Improves documentation of TRandom::GetSeed() methods in derived classes. ## Changes or fixes:; Documentation involving inconsistencies in `TRandom::GetSeed()` methods. In the derived classes the seed variable is used to store internal state of the generator not to keep track of the initial state with which it was invoked. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14580,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14687:221,variab,variable,221,https://root.cern,https://github.com/root-project/root/pull/14687,1,['variab'],['variable']
Modifiability,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation and spacing as well as getting rid of unused variables. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10992:143,variab,variables,143,https://root.cern,https://github.com/root-project/root/pull/10992,1,['variab'],['variables']
Modifiability,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10883:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/10883,3,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11037:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/11037,2,['variab'],['variable']
Modifiability,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11058:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/11058,2,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9105:676,adapt,adapted,676,https://root.cern,https://github.com/root-project/root/pull/9105,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11632:167,variab,variable,167,https://root.cern,https://github.com/root-project/root/pull/11632,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. Add `dependabot.yml` file which will configure the dependabot to periodically create PRs whenever GitHub actions can be updated. Currently configured to submit the PR weekly with a maximum of 5 concurrent open PRs. GitHub actions cannot (or should not) be configured to run on the latest version, you can only specify which major version to run. Many times whenever there is a new version released it never gets updated on the developer's end. This PR fixes this with the added benefit of a dedicated PR for each action which should test if there are any breaking changes. The PR also contains a link to the action changelog.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:81,config,configure,81,https://root.cern,https://github.com/root-project/root/pull/14683,3,['config'],"['configure', 'configured']"
Modifiability,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14271:190,extend,extend,190,https://root.cern,https://github.com/root-project/root/pull/14271,1,['extend'],['extend']
Modifiability,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15752:261,enhance,enhanced,261,https://root.cern,https://github.com/root-project/root/pull/15752,1,['enhance'],['enhanced']
Modifiability,# This Pull request:. ## Changes or fixes:. Fixes that CMake was still trying to look for `llvm-config-9` instead of `llvm-config-13` after for #10294. To prevent this I added two variable in the beginning of the file so that it is less likely to be forgotten next time. I also moved the versioned version before the unversioned one. This should make sure it actually takes the right version if `llvm-config` defaults to a version that is not 13 (currently the case in Debian e.g.). /cc @hahnjo @vgvassilev @bellenot. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12150:96,config,config-,96,https://root.cern,https://github.com/root-project/root/pull/12150,4,"['config', 'variab']","['config', 'config-', 'variable']"
Modifiability,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:242,adapt,adapts,242,https://root.cern,https://github.com/root-project/root/pull/16075,1,['adapt'],['adapts']
Modifiability,"# This Pull request:. ## Changes or fixes:. I noticed that the current `.clang-format` file does not fully comply with the schema (https://clang.llvm.org/docs/ClangFormatStyleOptions.html). I updated the configuration file so it's compliant (I made the choices based on what I thought the original authors wanted to achieve with the selected options). I am not sure if the lack of compliance with the schema is because of updates to `clang-format` or not. The changes in this PR should only affect style, but these updates may make `clang-format` behave differently than before (because previous options may have being ignored). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14690:204,config,configuration,204,https://root.cern,https://github.com/root-project/root/pull/14690,1,['config'],['configuration']
Modifiability,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627:692,Config,Config,692,https://root.cern,https://github.com/root-project/root/pull/11627,1,['Config'],['Config']
Modifiability,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10776:157,variab,variable,157,https://root.cern,https://github.com/root-project/root/pull/10776,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. Some minor interface changes to reflect better the underlying TestStatistics classes and how we intend to bring it to users in the upcoming release. . The 'NewStyle' name was changed to 'ModularL' to reflect the fact that these new test statistics are modular. Note that we are undecided on 'ModularL' versus just 'Modular', so if you have a strong opinion on this feel free to change it. Some of the functionality included in the added named arguments is not implemented yet, this is because we plan to add the respective backend for these new features in the near future. Therefore these named arguments were added under RooFit::Experimental namespace. Do we also need to add these not yet functioning arguments already to the RooMinimizer config struct, since we plan to add them in the near future?. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11906:786,config,config,786,https://root.cern,https://github.com/root-project/root/pull/11906,1,['config'],['config']
Modifiability,"# This Pull request:. ## Changes or fixes:. TMath.cxx and TMath.h. . Define BreitWignerRelativistic(...) in TMath.h and then calculate in TMath.cxx, following same convention for names of variables, default values and normalization as BreitWigner(...) which is already defined in TMath. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9926:188,variab,variables,188,https://root.cern,https://github.com/root-project/root/pull/9926,1,['variab'],['variables']
Modifiability,# This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9402:253,variab,variables,253,https://root.cern,https://github.com/root-project/root/pull/9402,3,['variab'],['variables']
Modifiability,# This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9456:243,variab,variables,243,https://root.cern,https://github.com/root-project/root/pull/9456,3,['variab'],['variables']
Modifiability,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791:802,Config,Config,802,https://root.cern,https://github.com/root-project/root/pull/11791,3,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"# This Pull request:. ## Changes or fixes:. This PR re-implements the `TH1` method `GetCumulative(forward, suffix)`, which is equivalent to the original implementation (with #11948 applied) on 1D histograms, but produces more sensible result for 2D and 3D histograms. That is,. $$S_{i_x i_y i_z} = \sum_{j_x = n_{x0}}^{i_x} \sum_{j_y = n_{y0}}^{i_y} \sum_{j_z = n_{z0}}^{i_z} a_{j_x j_y j_z}\ (\text{forward})$$. $$S_{i_x i_y i_z} = \sum_{j_x = i_x}^{n_x} \sum_{j_y = i_y}^{n_y} \sum_{j_z = i_z}^{n_z} a_{j_x j_y j_z}\ (\text{backward})$$. To achieve $O(n_x n_y n_z)$ time complexity (instead of $O(n_x^2 n_y^2 n_z^2)$ ), the method is implemented using the [inclusion-exclusion principle](https://en.wikipedia.org/wiki/Inclusion%E2%80%93exclusion_principle) while referencing the content of the previously-computed neighboring bins. Namely,. $$\begin{cases}; S_{i_x i_y i_z} = a_{i_x i_y i_z} + S_{(i_x-1) i_y i_z} + S_{i_x (i_y-1) i_z} + S_{i_x i_y (i_z-1)} - S_{(i_x-1) (i_y-1) i_z} - S_{i_x (i_y-1) (i_z-1)} - S_{(i_x-1) i_y (i_z-1)} + S_{(i_x-1) (i_y-1) (i_z-1)} & (\text{forward}) \\; S_{i_x i_y i_z} = a_{i_x i_y i_z} + S_{(i_x+1) i_y i_z} + S_{i_x (i_y+1) i_z} + S_{i_x i_y (i_z+1)} - S_{(i_x+1) (i_y+1) i_z} - S_{i_x (i_y+1) (i_z+1)} - S_{(i_x+1) i_y (i_z+1)} + S_{(i_x+1) (i_y+1) (i_z+1)} & (\text{backward}); \end{cases}$$. This is useful when computing the selection efficiency of two variables:; For example, one can get a histogram (`*h2_eff_pt_eta`) in which each bin represents the selection efficiency where pt and eta is greater than the lower edges of the bin from the 2D histogram of these variables (`*h2_pt_eta`) with the following code,. ```c++; TH2 *h2_eff_pt_eta = h2_pt_eta->GetCumulative(kFALSE, ""_efficiency"");; h2_eff_pt_eta->Scale(h2_eff_pt_eta->GetBinContent(1, 1));; ```. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949:1397,variab,variables,1397,https://root.cern,https://github.com/root-project/root/pull/11949,2,['variab'],['variables']
Modifiability,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12476:109,variab,variable,109,https://root.cern,https://github.com/root-project/root/pull/12476,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. This is just a suggestion to align a bit more with Clang's coding standards https://opensource.apple.com/source/lldb/lldb-112/llvm/docs/CodingStandards.html#ll_ns_std. If the change is welcome, I can extend to the rest of parts of ROOT that have this statement. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14922:244,extend,extend,244,https://root.cern,https://github.com/root-project/root/pull/14922,1,['extend'],['extend']
Modifiability,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11840:173,Config,Config,173,https://root.cern,https://github.com/root-project/root/pull/11840,3,"['Config', 'config']","['Config', 'config']"
Modifiability,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11557:107,config,config,107,https://root.cern,https://github.com/root-project/root/pull/11557,6,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"# This Pull request:. ## Changes or fixes:; **Commit 1 (2932c2af9ce19d346807a39d990d77efd1169e09): bug fix.** When using a fractional event range smaller than an actual (integral) event, rounding to integers would cause the extended term in unbinned likelihoods in `RooUnbinnedL` to be added multiple times.; **Commit 2 (18cb82c9ef0aed0b30f08b62b3161aa3a2bc3a29): new `LikelihoodJob` mode.** `LikelihoodJob` would parallelize over events, just like the old bulk parallelization mode of `RooNLLVar` (through `RooRealMPFE`). Now it can also parallelize over components and the two modes can be mixed as well to parallelize over both, allowing the user to define an optimal splitting for their usecase. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11068:224,extend,extended,224,https://root.cern,https://github.com/root-project/root/pull/11068,1,['extend'],['extended']
Modifiability,"# This Pull request:. ## Changes or fixes:; - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance; - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference; - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271:68,Config,ConfigParser,68,https://root.cern,https://github.com/root-project/root/pull/9271,2,['Config'],['ConfigParser']
Modifiability,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15499:568,Extend,Extend,568,https://root.cern,https://github.com/root-project/root/pull/15499,2,['Extend'],['Extend']
Modifiability,"# This Pull request:. ## Changes or fixes:; Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9473:276,config,configuration,276,https://root.cern,https://github.com/root-project/root/pull/9473,1,['config'],['configuration']
Modifiability,"# This Pull request:. ## Changes or fixes:; The main feature is that this PR makes it possible (in the final commit 5227996a9941918404d0a36037daa2c91e29833a) to run minimizations with both LikelihoodGradientJob and LikelihoodJob activated at the same time. This adds likelihood parallelization at the event-level to the non-gradient phases of Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:690,extend,extended,690,https://root.cern,https://github.com/root-project/root/pull/10966,1,['extend'],['extended']
Modifiability,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797:220,enhance,enhanced,220,https://root.cern,https://github.com/root-project/root/pull/15797,3,"['enhance', 'refactor']","['enhanced', 'refactoring', 'refactorings']"
Modifiability,"# This Pull request:. ## Changes or fixes:; This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9409:65,Config,Config,65,https://root.cern,https://github.com/root-project/root/pull/9409,1,['Config'],['Config']
Modifiability,"# This Pull request:. ## Changes or fixes:; This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610:74,refactor,refactor,74,https://root.cern,https://github.com/root-project/root/pull/9610,1,['refactor'],['refactor']
Modifiability,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10574:56,variab,variables,56,https://root.cern,https://github.com/root-project/root/pull/10574,3,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request:. ## Changes or fixes:; warns of overflow with an error message. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). See https://root-forum.cern.ch/t/break-segmentation-violation-while-using-geometry-package/53087/7. Side note: To allow for Long64_t, a complete rewrite of all variables' data types would be needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12028:314,rewrite,rewrite,314,https://root.cern,https://github.com/root-project/root/pull/12028,2,"['rewrite', 'variab']","['rewrite', 'variables']"
Modifiability,"# This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);; * Label nodes now use html, allowing for more custom fonts;; * Colors of different element types were changed to be easier to; distinguish;; * Empty RLoopManager is more clearly indicated;; * Actions which has run are more clearly indicated;; * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9556",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9722:358,adapt,adapted,358,https://root.cern,https://github.com/root-project/root/pull/9722,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. - Cleans up dangling[^1] images and unused containers before running; - Renames `buildroot.yml` to `root-ci.yml` and `rootci-installers/` to `root-ci-config`; - Enables unbuffered python output again. Buffered python output sometimes (often) causes the output to be sorted by stderr first, then stdout. This makes the grouping wrong and warnings out of order. Disabling buffering is also a very minor performance loss for the CI because CMake, CTest and git writes most of their output to stderr, which is already unbuffered. [^1]: Images that are still on disk, but no longer tagged because they are overwritten by an updated one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12309:172,config,config,172,https://root.cern,https://github.com/root-project/root/pull/12309,1,['config'],['config']
Modifiability,"# This Pull request:. - adds helper functions to RooGenericPdf and RooFormulaVar; - makes sure the HS3 JSON contains the names of the variables entering RooFormula-based PDF and function types also in cases where the functions have been constructed with the ""x[0]"" notation. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13225:134,variab,variables,134,https://root.cern,https://github.com/root-project/root/pull/13225,1,['variab'],['variables']
Modifiability,"# This Pull request:. Added some instrospection methods to TestStatistics Likelihood classes and also added corresponding tests. In particular added GetName() and GetInfo(). GetName() follows the same interface as the other RooFit classes in order to stay consistent. GetInfo() returns an std::string which allows for the added flexibility of concatenating more information about the class. Also added getComponents() to RooSumL in order to retrieve the vector of components from the sum likelihood. Note I am not completely happy about the implementation of the naming, in particular with the fact that the name needs to be supplied to the constructor of the RooAbsL class. Another option would be to override the GetName() and GetInfo() functions in each of the child classes explicitly with the same implementation, in which case we could have a unique name_ variable in each of the child classes and no need for the modification to the constructors. Let me know if this is preferred. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10043:862,variab,variable,862,https://root.cern,https://github.com/root-project/root/pull/10043,1,['variab'],['variable']
Modifiability,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14175:140,Extend,Extends,140,https://root.cern,https://github.com/root-project/root/pull/14175,3,"['Extend', 'plugin']","['Extends', 'plugin']"
Modifiability,# This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15051:65,inherit,inheritance,65,https://root.cern,https://github.com/root-project/root/pull/15051,2,['inherit'],['inheritance']
Modifiability,# This Pull request:. Adds more functionality to the RooPolyFunc. ## Changes or fixes:. Add a new constructor and change an existing one slightly to avoid collisions.; Add getters for internal variables.; Fix bugs in printout. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11953:193,variab,variables,193,https://root.cern,https://github.com/root-project/root/pull/11953,1,['variab'],['variables']
Modifiability,# This Pull request:. Adds more options to generate asimov datasets by; - allowing to generate asimov datasets for RooMultiVarGaussian; - adding a new constructor to RooExtendPdf that allows to more easily extend pdfs to fixed nEvents; - improving error messages emitted by AsymptoticsCalculator when creating error messages. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12034:206,extend,extend,206,https://root.cern,https://github.com/root-project/root/pull/12034,1,['extend'],['extend']
Modifiability,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11549:301,config,configuration,301,https://root.cern,https://github.com/root-project/root/pull/11549,4,['config'],"['config', 'configuration']"
Modifiability,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15169:27,plugin,plugin,27,https://root.cern,https://github.com/root-project/root/pull/15169,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105:643,variab,variables,643,https://root.cern,https://github.com/root-project/root/pull/15105,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,# This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning.; It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9368:29,variab,variable,29,https://root.cern,https://github.com/root-project/root/pull/9368,1,['variab'],['variable']
Modifiability,"# This Pull request:. Changes the parametrization of some of the PDFs and a few of their keys. In the process, a mechanism for automatic reparametrization is introduced. ## Changes or fixes:. - the HS3 implementation of RooExponential should invert the meaning of ""c"", such that the JSON represenation reads ""-c"" rather than ""c""; - RooPoisson should write out & read ""noRounding"" as ""integer"" ; - lognormal should be adjusted to adhere to the standard definition by transforming the variables ; - rename multinormal_dist to multivariate_normal_dist; - ""bounds"" now called ""edges"" for irregular binned histograms. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13627:483,variab,variables,483,https://root.cern,https://github.com/root-project/root/pull/13627,1,['variab'],['variables']
Modifiability,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178:653,variab,variable,653,https://root.cern,https://github.com/root-project/root/pull/14178,1,['variab'],['variable']
Modifiability,# This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12490:22,Extend,Extends,22,https://root.cern,https://github.com/root-project/root/pull/12490,1,['Extend'],['Extends']
Modifiability,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232:22,Extend,Extends,22,https://root.cern,https://github.com/root-project/root/pull/15232,1,['Extend'],['Extends']
Modifiability,"# This Pull request:. Fixes a problem where RooFormulaVar instances using the `@1`, `@2` syntax were not properly exported. ## Changes or fixes:. Variables referenced by `@N` in the expression of RooFormulaVar or RooGenericPdf are now replaced by the variable names upon export. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13555:146,Variab,Variables,146,https://root.cern,https://github.com/root-project/root/pull/13555,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14289:841,variab,variables,841,https://root.cern,https://github.com/root-project/root/pull/14289,1,['variab'],['variables']
Modifiability,# This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data.; This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10744:185,config,configuration-option,185,https://root.cern,https://github.com/root-project/root/pull/10744,1,['config'],['configuration-option']
Modifiability,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437:850,variab,variable,850,https://root.cern,https://github.com/root-project/root/pull/16437,1,['variab'],['variable']
Modifiability,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:654,config,configuration,654,https://root.cern,https://github.com/root-project/root/pull/11716,1,['config'],['configuration']
Modifiability,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577:320,config,configuration,320,https://root.cern,https://github.com/root-project/root/pull/11577,4,['config'],"['config', 'configuration']"
Modifiability,"# This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous.; Currently, Exec properly handles container and non-container types.; Corresponding tests added.; Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9770:212,variab,variable,212,https://root.cern,https://github.com/root-project/root/pull/9770,1,['variab'],['variable']
Modifiability,# This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13150:22,Refactor,Refactors,22,https://root.cern,https://github.com/root-project/root/pull/13150,2,"['Refactor', 'variab']","['Refactors', 'variables']"
Modifiability,"# This Pull request:. Resolves #12297. Changes the matrix to do some jobs with different options, e.g. `DLLVM_BUILD_TYP=Debug` for one of the ubuntu22 builds. (can be changed). Also rewrites the matrix to explicitly type each job, instead of doing a N x M jobs. I believe this syntax is easier to configure and makes implementation cleaner, as opposed to using nested lists to provide matrix options. Example run (picture added in case it expires): https://github.com/olemorud/root/actions/runs/4284703493; ![image](https://user-images.githubusercontent.com/82065181/221802381-3394775e-2b1b-45e9-8e3c-63ce0d44bd18.png). ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12388:182,rewrite,rewrites,182,https://root.cern,https://github.com/root-project/root/pull/12388,2,"['config', 'rewrite']","['configure', 'rewrites']"
Modifiability,"# This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14137:283,config,config,283,https://root.cern,https://github.com/root-project/root/pull/14137,1,['config'],['config']
Modifiability,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13813:138,variab,variable,138,https://root.cern,https://github.com/root-project/root/pull/13813,3,"['Flexible', 'variab']","['FlexibleInterpVars', 'variable', 'variables']"
Modifiability,"# This Pull request:. This PR is continuing #13457 by Ahmat and it is based on https://github.com/root-project/root/pull/12941 and [Dynamic-Op](https://github.com/root-project/root/compare/master...Neel-Shah-29:root-1:Dynamic-Op) both by Neel Shah. # Changes of Fixes. - Introduce intermediate tensors with parametric shapes (Dynamic tensors); - Implement the [Range operator](https://github.com/onnx/onnx/blob/main/docs/Operators.md#Range); - Add tests for the Range operator; - Add full support for Input tensors with parametric shapes (using the Dim structure) and propagate the shapes using Dim also in the intermediate ones.; - Start changing operators to support inputs/output tensors with Dim shapes. ; - support now Gemm, Relu, Concat, LayerNormalization; - Add support for input Dim shapes in GNN classes to support fully variable number of nodes and edges",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413:831,variab,variable,831,https://root.cern,https://github.com/root-project/root/pull/14413,1,['variab'],['variable']
Modifiability,# This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9728:30,refactor,refactors,30,https://root.cern,https://github.com/root-project/root/pull/9728,1,['refactor'],['refactors']
Modifiability,"# This Pull request:. This follows on from a recent pull request which added a relativistic breit wigner to ROOT https://github.com/root-project/root/pull/10760, to add a relativistic voigt which is a natural extension. **Brief summary**; Files added:; math/mathmore/inc/Math/VoigtRelativistic.h - Defines VoigtRelativistic class with two functions, evaluate which calculates the relativistic voigt, and dumpingFunction which calculates the relativisitic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this val",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:632,variab,variables,632,https://root.cern,https://github.com/root-project/root/pull/11049,1,['variab'],['variables']
Modifiability,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8941:147,variab,variable,147,https://root.cern,https://github.com/root-project/root/pull/8941,1,['variab'],['variable']
Modifiability,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent`.; It a cleaner Pull request than (#8941). ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9516:187,variab,variable,187,https://root.cern,https://github.com/root-project/root/pull/9516,1,['variab'],['variable']
Modifiability,"# This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced.; It has 2 member strings, corresponding to the brief and the full description.; It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`.; As brief description is the output from `RInterface::DescribeDataset`.; As full description is the remaining code from `RInterface::Describe`.; Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:; * `AsString(bool)` -> returning brief/full description as a string; * `Print(bool)` -> printing the content of `AsString(bool)`; * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`; * printValue -> returns string corresponding to AsString(shortFomat=false); * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #8893",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9551:981,adapt,adapted,981,https://root.cern,https://github.com/root-project/root/pull/9551,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9095:463,adapt,adapted,463,https://root.cern,https://github.com/root-project/root/pull/9095,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. `TRatioPlot` defines three pads named `upper_pad`, `lower_pad` and `top_pad`. If single canvas contains two or more `TRatioPlot`s, the saved C macro declares same object variable names resulting in runtime error. This fix adds counter suffix to pads (like for histograms) resulting in unique pad names. ## Changes or fixes:. Modifications to `SavePrimitive` members of `TPad` and `TCanvas` to count instances and renumerate written object variable names. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . ### Example. Consider MWE; ```c++; {; TH1I * h1 = new TH1I(""h1"", ""h1"", 10, -5, 5);; TH1I * h2 = new TH1I(""h2"", ""h2"", 10, -5, 5);. h1->FillRandom(""gaus"", 1000);; h2->FillRandom(""gaus"", 1000);. TCanvas * can = new TCanvas(""c_pads_test"", ""c_pads_test"", 800, 400);. can->cd(0);; TPad * p1 = new TPad(""p1"", ""p1"", 0, 0.3, 0.5, 1.0);; p1->Draw();; p1->cd();; TRatioPlot ratio1(h1, h2);; ratio1.Draw();. can->cd(0);; TPad * p2 = new TPad(""p2"", ""p2"", 0.5, 0.3, 1.0, 1.0);; p2->Draw();; p2->cd();; TRatioPlot ratio2(h2, h1);; ratio2.Draw();. can->cd(0);; TPad * p3 = new TPad(""p3"", ""p3"", 0.0, 0.0, 1.0, 0.3);; p3->Draw();; p3->cd();; h1->Draw();; h2->Draw(""same"");. can->Draw();. can->SaveAs("".C"");; }; ```; Run the macro and then try to run resulting `c_pads_test.C`. The output will be:. ```; Processing c_pads_test.C...; In file included from input_line_10:1:; /home/rlalik/c_pads_test.C:229:10: error: redefinition of 'upper_pad'; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:27:10: note: previous definition is here; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:303:10: error: redefinition of 'lower_pad'; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0.3);; ^; /home/rlalik/c_pads_test.C:103:10: note: previous definition is here; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12349:192,variab,variable,192,https://root.cern,https://github.com/root-project/root/pull/12349,2,['variab'],['variable']
Modifiability,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267:221,Adapt,Adapt,221,https://root.cern,https://github.com/root-project/root/pull/14267,1,['Adapt'],['Adapt']
Modifiability,"# This Pull request:; ; Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used ; along the following lines,; ```; ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9444:229,coupling,couplings,229,https://root.cern,https://github.com/root-project/root/pull/9444,1,['coupling'],['couplings']
Modifiability,# This Pull request:; Added correct treatment of extended term in asymptotically correct method for uncertainty determination in the presence of weights. This improvement will allow for extended unbinned maximum likelihood fits to use the asymptotically correct method. . ## Changes or fixes:; -Added extended term to asymptotically correct method to allow for weighted extended maximum likelihood fits; -Usage of logarithmic PDFs for derivatives may have some numerical benefits; -Fixed RooDerivative to not use the parameter range in the step size calculation in case the parameter supplied has no range. This now allows to use the method (and RooDerivative in general) for parameters that do not specify a range. ; -Added warning in case of binned fits. In this case a chi2 fit using the std. treatment of weights should be preferrable. ## Checklist:. - [x] tested changes locally. This PR fixes # ; resolves https://its.cern.ch/jira/browse/ROOT-10827; resolves https://its.cern.ch/jira/browse/ROOT-10866; related #11660 ; note https://github.com/root-project/root/issues/11112 can not be fixed since the resulting minuit covariance matrix is not positive definite (set PrintLevel(0) to see this). Calculations with the inverse Hessians are thus not reliable. High stats fit show the expected behaviour.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14751:49,extend,extended,49,https://root.cern,https://github.com/root-project/root/pull/14751,4,['extend'],['extended']
Modifiability,"# This Pull request:; Adds GDML support for `scaledSolid` tag; ## Changes or fixes:; Given that Geant4 supports the `scaledSolid` tag, all TGeo scaled solids are exported using this tag now. Below is a snapshot of the solids produced after importing the Geant4 persistency example `examples/extended/persistency/gdml/G01/scaledSolids.gdml` <img src=""https://github.com/root-project/root/assets/18400453/dd95e08f-a3b7-47c1-8e86-844a66aae167"" width=""600"">. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13194",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13241:291,extend,extended,291,https://root.cern,https://github.com/root-project/root/pull/13241,1,['extend'],['extended']
Modifiability,# This Pull request:; Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:; - Adds a GH Actions workflow that runs on pull requests; - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it.; - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8530:103,extend,extended,103,https://root.cern,https://github.com/root-project/root/pull/8530,1,['extend'],['extended']
Modifiability,"# This Pull request:; Adds experimental support for histogramming on GPU with CUDA. ; `[skip-ci]`. ## Changes or fixes:; - N-dimensional histograms with fixed and variable sized bins can be filled on the GPU; - Histogram statistics (sum of weights, sum of square of weights, etc.) can be calculated on GPU . ## Checklist:; - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572:163,variab,variable,163,https://root.cern,https://github.com/root-project/root/pull/12572,1,['variab'],['variable']
Modifiability,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11102:150,config,configurations,150,https://root.cern,https://github.com/root-project/root/pull/11102,1,['config'],['configurations']
Modifiability,"# This Pull request:; Adds the support to CONST properties (double scalars) to TGeoOpticalSurface instances.; This MR enables the TGeoOpticalSurface to have the same functionality as the G4OpticalSurface from Geant4.; Since the class TGeoOpticalSurface is only enhanced by additional member data/functions, the backwards ; compatibility is ensured. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14617:261,enhance,enhanced,261,https://root.cern,https://github.com/root-project/root/pull/14617,1,['enhance'],['enhanced']
Modifiability,"# This Pull request:; Allows multiple (discontinuous) ranges for `HFitInterface::FillData`, see [here](https://root-forum.cern.ch/t/fitting-one-function-to-multiple-ranges-simultaneously/49061/3). @lmoneta - one thing I didn't implement was checking if the different ranges overlapped at all. If several of the ranges are overlapping (i.e. [0,50], [25, 75]), then at present the bins in both regions will be added twice, not sure what sort of behavior this would cause. I think the best way to get around that is to check when the range are added, I note that one such check is already in place in [`DataRange::CleanRangeSet`](https://root.cern/root/html606/DataRange_8cxx_source.html#l00165), this could be extended. Wanted to flag with you first before I changed too much though. Example for 1D use:. ```; TF1 *back = new TF1(""back"", ""[0] + x*[1]"", -10, 10);; TF1 *comb = new TF1(""comb"", ""[0] + x*[1] + [2]*exp(-((x-[3])**2)/[4])"", -10, 10);; ; TH1F *th1 = new TH1F(""th1"", ""th1"", 100, -10, 10); . comb->SetParameter(0, 10.);; comb->SetParameter(1, -0.5);; comb->SetParameter(2, 15.0);; comb->SetParameter(3, 1.0);; comb->SetParameter(4, 1.5);. TCanvas *c1 = new TCanvas();; th1->FillRandom(""comb"", 5000);; th1->Draw(""colz"");. ROOT::Fit::DataRange range;; //x ranges to miss the peak; range.AddRange(0, -10, -2.5);; range.AddRange(0, 4.5, 10);; ; ROOT::Fit::DataOptions opt;; ROOT::Fit::BinData data(opt, range);; ROOT::Fit::FillData(data, th1);; ; back->SetParameter(0, 10.);; back->SetParameter(1, -0.5);; ; ROOT::Math::WrappedMultiTF1 fitFunc(*back, back->GetNdim());; ROOT::Fit::Fitter fitter;; fitter.SetFunction(fitFunc, false);; fitter.LikelihoodFit(data);; fitter.Result().Print(std::cout);. th1->Draw(""hist"");; back->Draw(""same"");; ```. or 2D use:. ```; TF2 *back = new TF2(""back"", ""[0] + (x-[1])**2/[2]**2 + (y-[3])**2/[4]**2"", -10, 10, -10, 10);; TF2 *comb = new TF2(""comb"", ""[0] + (x-[1])**2/[2]**2 + (y-[3])**2/[4]**2 + [5]*TMath::Gaus(x,[6],[7])*TMath::Gaus(y,[8],[9])"", -10, 10, -10, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10101:708,extend,extended,708,https://root.cern,https://github.com/root-project/root/pull/10101,1,['extend'],['extended']
Modifiability,"# This Pull request:; Fixes some small issues with debug printout during integration or generation. ## Changes or fixes:; The first commit changes the debug printout in `RooRealIntegral::evaluate`. `_mode` here is the analytical integral code, `_intOperMode` is the variable that can be `Hybrid`, `Analytic` or `PassThrough` (like in the switch-case above). The second commit adds `printMultiline` to `RooEffGenContext`. This is used when requesting verbose printout during dataset generation, which is supposed to recursively print all gen contexts. Before this change, having a `RooEffProd` inside the model stopped the recursive printout. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12178:266,variab,variable,266,https://root.cern,https://github.com/root-project/root/pull/12178,1,['variab'],['variable']
Modifiability,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10726:119,variab,variable,119,https://root.cern,https://github.com/root-project/root/pull/10726,1,['variab'],['variable']
Modifiability,"# This Pull request:; In the GDML writing there is a confusion with the use of:; TGeoManager::fgDefaultUnits or TGeoManager::GetDefaultUnits(). -- It is used both to determine if the length unit string is defined as ""cm"" or ""mm"".; -- At the same time this variable is used by the elements and materials to discriminate; between the system of units. This confusion then ultimately leads to this bug:; -- If TGeo units are ON and the GDML should be written in the G4 convention (mm); automatically the densities and the atomic weights go wrong. If in TGeoManager.cxx line 302; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kG4Units;; is changed to:; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kRootUnits;. This fixes the problem, because the usage of TGeoManager::GetDefaultUnits(); when the elements/materials were created is then consistent with the GDML writing.; See:; https://root-forum.cern.ch/t/problem-with-elements-in-exported-gdml-files/46473/5. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8955:256,variab,variable,256,https://root.cern,https://github.com/root-project/root/pull/8955,1,['variab'],['variable']
Modifiability,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11826:48,Adapt,AdaptiveIntegratorMultiDim,48,https://root.cern,https://github.com/root-project/root/pull/11826,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13803:54,config,config,54,https://root.cern,https://github.com/root-project/root/pull/13803,2,['config'],['config']
Modifiability,"# This Pull request:; The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. ; This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:; - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up ; - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes; - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9717:786,refactor,refactoring,786,https://root.cern,https://github.com/root-project/root/pull/9717,1,['refactor'],['refactoring']
Modifiability,"# This Pull request:; This is the Scipy plugin for ROOT math libraries for minimization; * Implementation using Python C API that supports several methods such as; Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,; Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov.; * It supports:; * Jacobian (Gradients); * Hessian; * Bounds for the variables.; * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented.; * The implementation of extra parameters was implemented.; * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12997:40,plugin,plugin,40,https://root.cern,https://github.com/root-project/root/pull/12997,2,"['plugin', 'variab']","['plugin', 'variables']"
Modifiability,"# This Pull request:; Translates all ""math"" tutorials into Python.; ## Changes or fixes:; It shows creative ways of using C++ methods in Python more than; the usual way of ROOT.gROOT.ProcessLine method. There are some notes; about why we should or shouldn't use some syntax(inherited from C++-ROOT) ; in Python.; Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15960:274,inherit,inherited,274,https://root.cern,https://github.com/root-project/root/pull/15960,1,['inherit'],['inherited']
Modifiability,"# This Pull request:; [DF] Added SaveGraph Tutorials; [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph.; Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #9145",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9540:770,adapt,adapted,770,https://root.cern,https://github.com/root-project/root/pull/9540,1,['adapt'],['adapted']
Modifiability,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16192:357,variab,variable,357,https://root.cern,https://github.com/root-project/root/pull/16192,1,['variab'],['variable']
Modifiability,"# This Pull request:; adds the possibility of requesting metrics in `RNTupleReadOptions`. ; Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15953:449,inherit,inherit,449,https://root.cern,https://github.com/root-project/root/pull/15953,1,['inherit'],['inherit']
Modifiability,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15138:752,config,config,752,https://root.cern,https://github.com/root-project/root/pull/15138,1,['config'],['config']
Modifiability,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16080:22,refactor,refactors,22,https://root.cern,https://github.com/root-project/root/pull/16080,2,"['extend', 'refactor']","['extend', 'refactors']"
Modifiability,"# environement. ```; (master)> cmake --version; cmake version 3.20.1; ```. ```; (master)> uname -rs; Linux 5.12.0-2-default; ```. ```; (master)> grep -e ""^VERSION_ID="" -e ""^NAME="" /etc/*release; NAME=""openSUSE Tumbleweed""; VERSION_ID=""20210502""; ```. ```; (master)> python --version; Python 2.7.18; ```. ```; (master)> python3 --version; Python 3.8.9; ```. ```; (master)> whereis python; python: /usr/bin/python3.8 /usr/bin/python /usr/bin/python2.7 /usr/bin/python2.7-config /usr/lib/python3.8 /usr/lib/python2.7 /usr/lib64/python3.8 /usr/lib64/python /usr/lib64/python2.7 /usr/local/lib/python3.8 /usr/include/python2.7 /usr/include/python /usr/share/man/man1/python.1.gz; ```. ```; (master)> sudo zypper se -i python | grep -e ""Interpreter"" -e ""dev""; i | libpython2_7-1_0 | Python Interpreter shared library | package; i | libpython3_8-1_0 | Python Interpreter shared library | package; i+ | python | Python Interpreter | package; i | python-base | Python Interpreter base package | package; i+ | python-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38 | Python 3 Interpreter | package; i | python38-base | Python 3 Interpreter and Stdlib Core | package; i | python38-pyudev | Udev bindings for Python | package; ```. # output. ```; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analys",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097:469,config,config,469,https://root.cern,https://github.com/root-project/root/issues/8097,1,['config'],['config']
Modifiability,"## Changes or fixes:. 1. Environment variable `CLING_HISTFILE` to specify history file path.; 2. Environment variable `CLING_HISTSIZE` to specify history size. The original behavior is to not set the history size explicitly.; That is equivalent to unlimited history size according to `textinput::History::AppendToFile()` (history file will never be pruned so it grows indefinitely). This is probably not most users expect. @Axel-Naumann, @vgvassilev do you think it makes sense to set default cling history size to something like 500 ? (That changes current behavior.). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11286:37,variab,variable,37,https://root.cern,https://github.com/root-project/root/pull/11286,2,['variab'],['variable']
Modifiability,"## Changes or fixes:. Use registry pattern for the ONNX parser. Now the operators and the tensor types are stored in a std::unordered_map. All the implemented operators are registered automatically when creating an object of type RModelParser_ONNX. When parsing an onnx graph the parser checks the type of the onnx node and throw an exception if it's not implemented or call the corresponding function to parse it. This PR also makes SOFIE more modular. Now operators can be added simply by defining an operator class that inherits from ROperator, defining a function to parse the onnx node and registering this function to the parser. ## Example of adding a new ONNX operator. ```{c++}; #include ""onnx_proto3.pb.h""; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx"". using namespace TMVA::Experimental::SOFIE;. template<typename T>; struct ROperator_Sign : public ROperator {; std::string fNX;; std::string fNY;; std::vector<size_t> fShapeX;; std::vector<size_t> fShapeY;. ROperator_Sign(std::string nameX, std::string nameY) : fNX(nameX), fNY(nameY) {}. std::vector<std::vector<size_t>> ShapeInference(std::vector<std::vector<size_t>> input) override {; return input;; }. std::vector<ETensorType> TypeInference(std::vector<ETensorType> input) override {; return input;; }. void Initialize(RModel& model) override {; if (!model.CheckIfTensorAlreadyExist(fNX)) {; throw std::runtime_error(""TMVA::SOFIE - Tensor "" + fNX + "" not found."");; }; fShapeX = model.GetTensorShape(fNX);; fShapeY = fShapeX;; //fShapeY = ShapeInference({fShapeX})[0];; model.AddIntermediateTensor(fNY, model.GetTensorType(fNX), fShapeY);; }. std::string Generate(std::string OpName) override {; OpName = ""op_"" + OpName;; std::stringstream out;. out << SP << ""\n//---- Operator"" << OpName << ""\n"";; size_t length = ConvertShapeToLength(fShapeX);; out << SP << ""for (size_t i = 0; i < "" << length << ""; i++) {\n"";; out << SP << SP << ""if (tensor_"" << fNX << ""[i] > 0.) {\n"";; out << SP << SP << SP << ""tensor_"" << ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11518:523,inherit,inherits,523,https://root.cern,https://github.com/root-project/root/pull/11518,1,['inherit'],['inherits']
Modifiability,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:40,refactor,refactoring,40,https://root.cern,https://github.com/root-project/root/pull/8700,2,"['inherit', 'refactor']","['inheritance', 'refactoring']"
Modifiability,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:; https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1988096588:188,variab,variables,188,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1988096588,1,['variab'],['variables']
Modifiability,"## DeepCode's analysis on [#10aee9](https://www.deepcode.ai/app/gh/root-project/root/293a52b457c64492cb4893872389ddb3c271e58e/root-project/root/10aee91a545f762c6933819860cc14d4150700c8/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">Leaking memory. TLegend is allocated on the heap and never freed. In function DrawMultiROCCurve. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/10aee91a545f762c6933819860cc14d4150700c8/tmva/tmvagui/src/RVariablePlotter.cxx#L269"">RVariablePlotter.cxx:269</a></li> <li><a href=""https://github.com/root-project/root/blob/10aee91a545f762c6933819860cc14d4150700c8/tmva/tmvagui/src/RVariablePlotter.cxx#L394"">RVariablePlotter.cxx:394</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/293a52b457c64492cb4893872389ddb3c271e58e/root-project/root/10aee91a545f762c6933819860cc14d4150700c8/pr/_/%2Ftmva%2Ftmvagui%2Fsrc%2FRVariablePlotter.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/293a52b457c64492cb4893872389ddb3c271e58e/root-project/root/10aee91a545f762c6933819860cc14d4150700c8/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8723#issuecomment-894156855:1811,plugin,plugins,1811,https://root.cern,https://github.com/root-project/root/pull/8723#issuecomment-894156855,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"## DeepCode's analysis on [#7044cb](https://www.deepcode.ai/app/gh/root-project/root/8f93e6d94b7499ef05e59235cf0cf614590d1a3d/root-project/root/7044cb062469991c59a612fe50f1f51b19e666a9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">Use warn() instead of warning(). Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/7044cb062469991c59a612fe50f1f51b19e666a9/ui5/eve7/lib/EveManager.js#L316"">EveManager.js:316</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/8f93e6d94b7499ef05e59235cf0cf614590d1a3d/root-project/root/7044cb062469991c59a612fe50f1f51b19e666a9/pr/_/%2Fui5%2Feve7%2Flib%2FEveManager.js/javascript%2Fdc_interfile_project%2FUseInstead/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/8f93e6d94b7499ef05e59235cf0cf614590d1a3d/root-project/root/7044cb062469991c59a612fe50f1f51b19e666a9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8571#issuecomment-870916693:1566,plugin,plugins,1566,https://root.cern,https://github.com/root-project/root/pull/8571#issuecomment-870916693,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8436#issuecomment-861665905:1737,plugin,plugins,1737,https://root.cern,https://github.com/root-project/root/pull/8436#issuecomment-861665905,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"## DeepCode's analysis on [#9dbf29](https://www.deepcode.ai/app/gh/root-project/root/55a7841e24ac8a65d92e996f85449c0027424b64/root-project/root/9dbf2954c51e5553d077ad04840e0287c4072004/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">Potential nullptr dereference. Null flows from nullptr literal. Consider adding a check. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9dbf2954c51e5553d077ad04840e0287c4072004/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L91"">RColumn.hxx:91</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/55a7841e24ac8a65d92e996f85449c0027424b64/root-project/root/9dbf2954c51e5553d077ad04840e0287c4072004/pr/_/%2Ftree%2Fntuple%2Fv7%2Finc%2FROOT%2FRColumn.hxx/cpp%2Fdc%2FDerefOfNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/55a7841e24ac8a65d92e996f85449c0027424b64/root-project/root/9dbf2954c51e5553d077ad04840e0287c4072004/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8703#issuecomment-883134154:1616,plugin,plugins,1616,https://root.cern,https://github.com/root-project/root/pull/8703#issuecomment-883134154,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"## DeepCode's analysis on [#b8067c](https://www.deepcode.ai/app/gh/root-project/root/de302abeae86368724e69a7a0e7a24b2dff28f07/root-project/root/b8067c6dbee9e53538bd2cd1b130bd2187239774/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">Missing check is_open on std::ifstream before calling seekg on it. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/b8067c6dbee9e53538bd2cd1b130bd2187239774/tmva/tmva/src/RootStorageBDT.cxx#L92"">RootStorageBDT.cxx:92</a></li> <li><a href=""https://github.com/root-project/root/blob/b8067c6dbee9e53538bd2cd1b130bd2187239774/tmva/tmva/src/RootStorageBDT.cxx#L94"">RootStorageBDT.cxx:94</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/de302abeae86368724e69a7a0e7a24b2dff28f07/root-project/root/b8067c6dbee9e53538bd2cd1b130bd2187239774/pr/_/%2Ftmva%2Ftmva%2Fsrc%2FRootStorageBDT.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/de302abeae86368724e69a7a0e7a24b2dff28f07/root-project/root/b8067c6dbee9e53538bd2cd1b130bd2187239774/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873#issuecomment-902672646:1767,plugin,plugins,1767,https://root.cern,https://github.com/root-project/root/pull/8873#issuecomment-902672646,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"## DeepCode's analysis on [#f74996](https://www.deepcode.ai/app/gh/root-project/root/021d52ee0a8605045fccdc8ae79dc4691b9029ce/root-project/root/f749962c4d5be3304bfd984d4299161352aafea8/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function rcanvas_update. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/f749962c4d5be3304bfd984d4299161352aafea8/tutorials/rcanvas/rcanvas_update.cxx#L36"">rcanvas_update.cxx:36</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/021d52ee0a8605045fccdc8ae79dc4691b9029ce/root-project/root/f749962c4d5be3304bfd984d4299161352aafea8/pr/_/%2Ftutorials%2Frcanvas%2Frcanvas_update.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/021d52ee0a8605045fccdc8ae79dc4691b9029ce/root-project/root/f749962c4d5be3304bfd984d4299161352aafea8/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8602#issuecomment-874043801:1625,plugin,plugins,1625,https://root.cern,https://github.com/root-project/root/pull/8602#issuecomment-874043801,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"## Describe the bug. `CMAKE_CXX_FLAGS`, set by hand in `ROOTUseFile.cmake`, includes a specification on cxx standard, which should be specified rather by `CMAKE_CXX_STANDARD` variable. In a projects using ROOT, the inclusion causes doubly-specified cxx-standard in their compile procedure, and the maintainer transferred me here; see the thread here:. https://github.com/iLCSoft/LCIO/issues/109#issuecomment-694867125. ## Expected behavior. `--std=` options should be set in `CMAKE_CXX_STANDARD`, rather than `CMAKE_CXX_FLAGS`. ## To Reproduce. see https://github.com/iLCSoft/LCIO/issues/109#issuecomment-694867125. ## Setup. ROOT Docker images: docker pull rootproject/root:6.22.02-ubuntu20.04, ran on docker on WSL2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6384:175,variab,variable,175,https://root.cern,https://github.com/root-project/root/issues/6384,1,['variab'],['variable']
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The virtual C++ methods overriden in some python class is ignored in the subsequent subclass. . Simple examples is given in [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15); In short:; - C++ class A, ; - python class B, that inherits from A and override virtual method from A ; - python class C, that inherits from B and override (the same) virual method form A (and B); - python class D, that inherits from B and has empty body . And f one call the method from A, B, C , D ; - for A one gets original C++ behaviour (OK); - for B one gets the overriden behaviour (OK); - for C one gets overriden behaviour defined in C (OK); - for D one gets the original C++ behaviour ( that is not OK) . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It is expected that D picks up the overriden method from class B, as naturally expected for the inheritance pattern . ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Simple gist is [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15). ## Setup. 1. ROOT version 623/01; 2. Operating system CentOS7, lxplus x86, 64-centos7-gcc9-opt. 3. How you obtained ROOT: `dev3/latest` nightly LCG slot,. ## Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6470:351,inherit,inherits,351,https://root.cern,https://github.com/root-project/root/issues/6470,4,['inherit'],"['inheritance', 'inherits']"
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. With [ROOT-10692](https://sft.its.cern.ch/jira/browse/ROOT-10692) fixed, ROOT now, by default, uses the default C++ standard of the compiler rather than always using C++11. However, due to how our cmake logic is structured, root7 is still turned off by default, even if the default C++ standard used by the compiler was detected to be C++14 or higher. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. With a compiler that defaults to `-std=C++14` or above, a vanilla `cmake path/to/root` should have root7 turned on. ## Additional context; <!--; Add any other context about the problem here.; -->. I think the root cause is that, at the following lines in our main `CMakeLists.txt`, we _first_ include `RootBuildOptions` (which sets root7 to OFF by default because it doesn't detect a high-enough C++ standard) and _then_ we include `CheckCompiler`, which sets our default `CMAKE_CXX_STANDARD` to the compiler default. https://github.com/root-project/root/blob/33458dc53621cf3e685a302a4bf899108aed0d0c/CMakeLists.txt#L128-L134. Moving `include(CheckCompiler)` above `include(RootBuildOptions)` fixes this issue but breaks Windows, because some cmake variable that `CheckCompiler` needs in the case of windows were defined earlier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6406:1295,variab,variable,1295,https://root.cern,https://github.com/root-project/root/issues/6406,1,['variab'],['variable']
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Serialization of ROOT objects in python using `dill` is broken for `python3`, but it works ok for `python2`.; ; ( `dill` serialization is vital for the proper paralllel and distributive python calculations using `pathos` suite. The functionality of ; regular paralell python `pp` and `multiprocessing` module is very limited due to limitations of `pickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/relea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:541,extend,extending,541,https://root.cern,https://github.com/root-project/root/issues/6370,1,['extend'],['extending']
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The following code works fine with 6.20.04, but segfaults with 6.22.02. ```cpp; #include ""RooDataSet.h""; #include ""RooRealVar.h""; #include ""TFile.h""; #include ""TTree.h"". int main(int argc, char* argv[]) {; TTree* tree = new TTree(""tree"", ""tree"");; double var = 1;; tree->Branch(""var"", &var, ""var/D"");; tree->Fill();. RooRealVar* roovar = new RooRealVar(""var"", ""var"", 0, 10);; TFile* output_file = new TFile(""test.root"", ""RECREATE"", ""output_file"");. output_file->Print();; RooDataSet* data_set = new RooDataSet(""data_set"", ""data_set"", tree, RooArgSet(*roovar));; output_file->Print();. return 0;; }; ```. The segfault happens on the last `output_file->Print();` line - it seems the creation of the `RooDataSet` somehow destroys the object pointed to by `output_file`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the code to run without segfaulting. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Save the quoted code to `mwe_tfile.cc`; 2. Build with `g++ mwe_tfile.cc -o mwe_tfile $(root-config --cflags --glibs) -lRooFitCore`; 3. Run `./mwe_tfile`. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Ubuntu 18.04; Binary ROOT installs; Works with 6.20.04; Doesn't work with 6.22.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6408:1384,config,config,1384,https://root.cern,https://github.com/root-project/root/issues/6408,1,['config'],['config']
Modifiability,"## Describe the bug; Crash. ```; user@lxplus733 ~]$ g++ pad.cxx $(root-config --glibs --cflags --libs) -o pad -g; [user@lxplus733 ~]$ ./pad ; Warning in <UnknownClass::SetDisplay>: DISPLAY not set, setting it to pcatlas18.mppmu.mpg.de:0.0. *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f73109b046c in waitpid () from /lib64/libc.so.6; #1 0x00007f731092df62 in do_system () from /lib64/libc.so.6; #2 0x00007f731533f5dc in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so.6.22; #3 0x00007f731534206a in TUnixSystem::DispatchSignals(ESignals) () from /usr/lib64/root/libCore.so.6.22; #4 <signal handler called>; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.22; #7 0x0000000000400c6d in main (argc=1, argv=0x7ffd71ee3b98) at pad.cxx:9; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6374:71,config,config,71,https://root.cern,https://github.com/root-project/root/issues/6374,1,['config'],['config']
Modifiability,"## Describe the bug; Crash.; ```; [host@hermes Desktop]$ g++ canvas.cxx $(root-config --glibs --cflags --libs) -o canvas -g; [host@hermes Desktop]$ ./canvas. *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f481d5d946c in __libc_waitpid (pid=1478152, stat_loc=stat_loc; entry=0x7ffe12925160, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f481d556f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f4821f685dc in TUnixSystem::StackTrace (this=0x244d980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f4821f6b06a in TUnixSystem::DispatchSignals (this=0x244d980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 TPad::ResizePad (this=0x2503ca0, option=0x7f4820490bae """") at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:5490; #6 0x00007f4820448f84 in TCanvas::Build (this=0x2503ca0) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:637; #7 0x00007f482044969e in TCanvas::Constructor (this=this; entry=0x2503ca0, name=name; entry=0x400cc3 ""canvas"", title=title; entry=0x400cc3 ""canvas"", ww=4, ww; entry=-4, wh=wh; entry=-28) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:425; #8 0x00007f482044c88c in TCanvas::TCanvas (this=0x2503ca0, name=0x400cc3 ""canvas"", title=0x400cc3 ""canvas"", ww=-4, wh=-28) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:366; #9 0x0000000000400ba3 in main (argc=1, argv=0x7ffe12927dc8) at canvas.cxx:5; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are reall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6379:79,config,config,79,https://root.cern,https://github.com/root-project/root/issues/6379,1,['config'],['config']
Modifiability,"## Describe the bug; Crash.; ```; [user@lxplus733 ~]$ g++ pavelabel.cxx $(root-config --glibs --cflags --libs) -o pavelabel -g; [user@lxplus733 ~]$ ./pavelabel ; Warning in <UnknownClass::SetDisplay>: DISPLAY not set, setting it to hostname:0.0. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f4b1f57246c in waitpid () from /lib64/libc.so.6; #1 0x00007f4b1f4eff62 in do_system () from /lib64/libc.so.6; #2 0x00007f4b23f015dc in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so.6.22; #3 0x00007f4b23f0406a in TUnixSystem::DispatchSignals(ESignals) () from /usr/lib64/root/libCore.so.6.22; #4 <signal handler called>; #5 0x00007f4b22407674 in TPad::PaintBox(double, double, double, double, char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f4b229661a3 in TBox::PaintBox(double, double, double, double, char const*) () from /usr/lib64/root/libGraf.so.6.22; #7 0x00007f4b229a7570 in TPave::PaintPave(double, double, double, double, int, char const*) () from /usr/lib64/root/libGraf.so.6.22; #8 0x00007f4b229aa009 in TPaveLabel::PaintPaveLabel(double, double, double, double, char const*, char const*) () from /usr/lib64/root/libGraf.so.6.22; #9 0x0000000000400d05 in main (argc=1, argv=0x7fff9bced0c8) at pavelabel.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ============",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6375:79,config,config,79,https://root.cern,https://github.com/root-project/root/issues/6375,1,['config'],['config']
Modifiability,"## Describe the bug; Using cppyy in ROOT master (51eb56e), I have a Python class that inherits from a C++ class (with two abstract classes) and I need to pass an instance of the Python class to a C++ function that accepts a pointer to one of the base classes. When the C++ function tries to call a method from the instance, I get a segmentation fault (actually I enter in an infinite segfault loop, where ROOT segfault handler segfaults too). ## Expected behavior; Just that called the C++ function can use the passed instance. ## To Reproduce; From a directory containing the file:; ```reproducer.py; import cppyy. cppyy.gbl.gInterpreter.Declare(""""""; #include <array>; #include <iostream>. struct Interface1 {; virtual void do_1() = 0;; virtual ~Interface1() = default;; };. struct Interface2 {; virtual void do_2() = 0;; virtual ~Interface2() = default;; };. struct Base : virtual public Interface1, virtual public Interface2 {; Base() {; std::cout << std::hex << ""Base* "" << this << ""\nInt1* "" << static_cast<Interface1*>( this ) << ""\nInt2* ""; << static_cast<Interface2*>( this ) << '\n';; }; };. struct Derived : Base, virtual public Interface2 {; void do_1() override { std::cout << std::hex << this << ""->do_1\n""; }; void do_2() override { std::cout << std::hex << this << ""->do_2\n""; }; };. void my_func( Interface2* i ) { i->do_2(); }; """"""). class PyDerived(cppyy.gbl.Derived):; pass. i = PyDerived(); i.do_1(); i.do_2(). cppyy.gbl.my_func(i). ```; call; ```; python reproducer.py; ```. ## Setup; - ROOT version: 51eb56e; - OS: CentOS7; - arch: x86_64; - compiler: gcc 9.2.0. ## Additional context; I'm using the nightly builds by CERN SFT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6376:86,inherit,inherits,86,https://root.cern,https://github.com/root-project/root/issues/6376,1,['inherit'],['inherits']
Modifiability,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8684:536,Layers,Layers,536,https://root.cern,https://github.com/root-project/root/pull/8684,2,"['Config', 'Layers']","['Configuration', 'Layers']"
Modifiability,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8430:677,Layers,Layers,677,https://root.cern,https://github.com/root-project/root/pull/8430,2,"['Config', 'Layers']","['Configuration', 'Layers']"
Modifiability,"## Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:1057,variab,variables,1057,https://root.cern,https://github.com/root-project/root/issues/7308,1,['variab'],['variables']
Modifiability,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7239:887,inherit,inherits,887,https://root.cern,https://github.com/root-project/root/issues/7239,1,['inherit'],['inherits']
Modifiability,"## Pythonic interaction with the RooWorkspace. This issue tracks the progress on the GSoC project on the Pythonic interaction with the RooWorkspace:; https://hepsoftwarefoundation.org/gsoc/2023/proposal_RooFit-RooWorkspacePythonization.html. This project was assigned to @yashnator. ## Milestones and TODOs. - [x] Pythonic way to use the RooWorkspace factory language using `__setitem__` on the workspace (#12911); - [x] Enable creation of pdf, functions and variables from Python dictionaries passed to `RooWorksapce.__setitem__` (#12994); - [x] Implement automatic loading of JSON IO keys (#13152); - [ ] Support creation of binned datasets from dictionaries as described in [this comment](https://github.com/root-project/root/issues/13185#issuecomment-1621628860); - [ ] Move all logic except for `dict` to string conversion to the C++ side; - [ ] Avoid using nlohmann-json directly, but use RooFits `JSONInterface` instead. ## Merged PRs. 1. https://github.com/root-project/root/pull/12911; 2. https://github.com/root-project/root/pull/12994; 3. https://github.com/root-project/root/pull/13152; 4. https://github.com/root-project/root/pull/13150",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13185:459,variab,variables,459,https://root.cern,https://github.com/root-project/root/issues/13185,1,['variab'],['variables']
Modifiability,"## SOFIE-SYCL; SOFIE-SYCL extends SOFIE functionality so that SYCL inference code can be generated for Intel GPUs using Intel oneAPI libraries for the BLAS routines. This functionality is already enabled by default when -Dtmva-sofie=On. The inference code should be compiled with a SYCL compiler and linked against the Intel oneAPI MKL library. Currently, the only SYCL Implementation supported is IntelDPCPP. The correctness of the SYCL implementations of the ONNX Operators has been tested with the SOFIE gtests. Also, missing gtests for BatchNormalization, Slice, Transpose have been added. In addition, the transpose convolution for 3d (ConvTranspose3d) operator that was not supported before has been added for both C++ and SYCL inference code, as well as the respective gtest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13550:26,extend,extends,26,https://root.cern,https://github.com/root-project/root/pull/13550,1,['extend'],['extends']
Modifiability,"## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). ; Stating the PR message for clarity. The pull request add the tutorials for the lagrangian ; morphing class and also add an example for the factory interface. The are some accompanying ; fixes as listed below.; Please take a look and let me know if this looks good !. ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate ; the usage of the `RooLagrangianMorphFunc` class; - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new; options of `taylorexpand` and `lagrangianmorph`; ; ## Changes or fixes:; - formatting of `tutorials/roofit/rf710_roopoly.py`; - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed ; from `NP` to `NewPhysics` to avoid confusion with other abbreviations; - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,; Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9680:845,coupling,couplings,845,https://root.cern,https://github.com/root-project/root/pull/9680,1,['coupling'],['couplings']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour?. No error message when generating `module.idx`. ### How to reproduce?. This can be reproduced with a modified ROOT:; ```diff; diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx; index 7a094cc01f..d74c69aa2b 100644; --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx; +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx; @@ -73,4 +73,6 @@ namespace cling {; std::string printValue(ROOT::RDataFrame *tdf);; } // ns cling; ; +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);; +; #endif // ROOT_RDATAFRAME; ```. This causes; ```; [522/527] Generating lib/modules.idx; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12988:188,variab,variable,188,https://root.cern,https://github.com/root-project/root/issues/12988,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When root is built with minuit2_omp=on then using RooFit with Minuit2 is broken out of the box because minuit2 multithreads the objective function evaluation, where the objective function is provided by RooFit and is in general not thread safe. ### What is the expected behaviour?. Probably RooFit should disable the minuit2 multithreading when it calls minuit2 (but actually I couldn't even figure out how to do this myself beyond the brute force solution of setting the environment variable OMP_NUM_THREADS=1. ### How to reproduce?. In a build with minuit2_omp (e.g. standard root package on arch linux). ```python. import ROOT; import time. def gaussian_minuit2():; """"""; """""". axis = ROOT.RooRealVar(""x"", ""x"", 50, 130); axis.setBins(100); axis.setRange(50, 130). mu = ROOT.RooRealVar(""mu"", ""mu"", 91.0, 85.0, 97.0) # 91; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 4.0, 0.5, 10.0) # 4. background = ROOT.RooGaussian(""gauss_bkg"", ""Gaussian background"",; axis, mu, sigma). NDATA = 100000. data = background.generateBinned({axis}, NDATA); data.SetName(""Data_gauss""). mu2 = ROOT.RooRealVar(""mu2"", ""mu2"", 97.0, 50.0, 130.0) # 91; sigma2 = ROOT.RooRealVar(""sigma2"", ""sigma2"", 6.0, 0.5, 10.0) # 4. bkg_fit = ROOT.RooGaussian(""bkg_fit"", ""Gaussian background for fit"",; axis, mu2, sigma2). expected_num = ROOT.RooRealVar(; ""nexp"", ""nexp"", NDATA, 90000, 110000). model = ROOT.RooExtendPdf(; ""Extended"", ""extend"", bkg_fit, expected_num). res2 = model.fitTo(data, ; ROOT.RooFit.Extended(True), ; ROOT.RooFit.Minimizer(""Minuit2""),; ROOT.RooFit.Save(True), ; ROOT.RooFit.PrintLevel(0)). print(""***********************************""); res2.Print(); res2.correlationMatrix().Print(); print(res2.status()); print(res2.covQual()). '''; c = ROOT.TCanvas(); c.cd(); frame = axis.frame(Title=""Title""); data.plotOn(frame); model.plotOn(frame); frame.Draw(); c.SaveAs(""gaussian.png""); '''. if __name__ == '__main__':. ROOT.RooRandom.randomGenerat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12940:564,variab,variable,564,https://root.cern,https://github.com/root-project/root/issues/12940,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour?. If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists!. ### How to reproduce?. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT?. irrelevant. ### Which operating system are you using?. irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042:456,adapt,adaptor,456,https://root.cern,https://github.com/root-project/root/issues/13042,1,['adapt'],['adaptor']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. # TL;DR. ROOT doesn't work on SWAN within any Spark job, unless these environment variables are explicitly set in the worker env beforehand:. * `PATH`: `/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin`; * `ROOT_INCLUDE_PATH`: `/cvmfs/sft-nightlies.cern.ch/lcg/views/devswan/Thu/x86_64-centos7-gcc11-opt/include`. This behaviour has appeared since LCG102, which means ROOT 6.26. On LCG101 (ROOT 6.24.06), the behaviour is not shown. # The long story. ROOT doesn't work on certain platforms, given the following situation particular situation (which could then be extrapolated to more general ones). On SWAN, when spawning Spark executors, their environment is cherry-picked to ensure their proper functioning. In particular, only these environment variables are defined:; ```python; ['CLASSPATH',; 'CONTAINER_ID',; 'HADOOP_COMMON_HOME',; 'HADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:157,variab,variables,157,https://root.cern,https://github.com/root-project/root/issues/13811,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14215:802,variab,variables,802,https://root.cern,https://github.com/root-project/root/issues/14215,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13798:683,config,config,683,https://root.cern,https://github.com/root-project/root/issues/13798,1,['config'],['config']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212:408,config,configuration,408,https://root.cern,https://github.com/root-project/root/issues/15212,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211:492,config,configuration,492,https://root.cern,https://github.com/root-project/root/issues/15211,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13846:1661,variab,variable,1661,https://root.cern,https://github.com/root-project/root/issues/13846,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:480,config,configuration,480,https://root.cern,https://github.com/root-project/root/issues/14163,3,['config'],"['config', 'configuration']"
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. I noticed that sometimes, when trying to produce .C macros for my figures, the `SaveAs()` function would return broken macros. I narrowed it down to the `Name()` arguments passed to the `plotOn()` function when plotting RooFit pdf's. The problem seems to be that the default `Name()` value contains special characters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. //",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15887:468,variab,variable,468,https://root.cern,https://github.com/root-project/root/issues/15887,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:; ```; cmake .. -G Xcode ; -- The C compiler identification is AppleClang 14.0.0.14000029; -- The CXX compiler identification is AppleClang 14.0.0.14000029; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done (12.8s); -- Generating done (0.0s); CMake Error in CMakeLists.txt:; The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree; data2TreeLib. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly.; ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/14 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 28 2023, 00:39:39 |; | From tags/v6-26-14@v6-26-14 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits',",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595:259,config,configuration,259,https://root.cern,https://github.com/root-project/root/issues/14595,2,"['Config', 'config']","['Configuring', 'configuration']"
Modifiability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable; ```cpp; bool TMVA::DecisionTreeNode::fgIsTraining = false;; ```; This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14568:198,variab,variable,198,https://root.cern,https://github.com/root-project/root/issues/14568,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:; ```cpp; void SetDeclFile(const char* name, int line); ```; stores its second parameter in a Short_t:; ```cpp; fDeclFileLine = line;; Short_t	fDeclFileLine	line of class declaration; ```. Both GCC and I agree that:; ```; /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:; /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value; ``. A Short_t is smaller than an int:; ```; Short_t Signed Short integer 2 bytes (short); ```; and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14562:1148,variab,variable,1148,https://root.cern,https://github.com/root-project/root/issues/14562,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello @guitargeek @cburgard !. My student @mathyuu is trying to use the JSON functionality for some combination workflow, and at first we are making sure we can ""round-trip"" existing workspaces. There are problems importing JSON files that were produced by the export functionality. More specifically, when importing ""generic functions"", aka RooFormulas, the parser used to get the names of the dependent variables is extremely brittle and cannot handle numbers in scientific notation in all cases... and to be honest, reading the code, what surprises me is that it can at all work in some cases. Can't you rely on the built-in parsers for `RooFormula` instead, for instance ?. The issue is in `extractArguments` function. BTW, if you fix the bug, can you take the opportunity to change the output from `vector<string>` to `set<string>` ? There are warnings printed down the line with a difference between what the function ""claims to use"" and what it ""is in use"", that all come from variables that appear several times in the formula. See below for reproducer. ### Reproducer. Here is a copy of the function:. ``` C++; #include <vector>; #include <algorithm>; #include <string>; #include <iostream>; #include <cctype>. std::vector<std::string> extractArguments(std::string expr); {; // Get rid of whitespaces; expr.erase(std::remove_if(expr.begin(), expr.end(), [](unsigned char c) { return std::isspace(c); }), expr.end());. std::vector<std::string> arguments;; size_t startidx = expr.size();; for (size_t i = 0; i < expr.size(); ++i) {; if (startidx >= expr.size()) {; if (isalpha(expr[i])) {; startidx = i;; }; } else {; if (!isdigit(expr[i]) && !isalpha(expr[i]) && expr[i] != '_') {; if (expr[i] == '(') {; startidx = expr.size();; continue;; }; std::string arg(expr.substr(startidx, i - startidx));; startidx = expr.size();; arguments.push_back(arg);; }; }; }; if (startidx < expr.size()) {; arguments.push_back(expr.su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14637:480,variab,variables,480,https://root.cern,https://github.com/root-project/root/issues/14637,2,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:240,config,configuration,240,https://root.cern,https://github.com/root-project/root/issues/13656,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi ROOT team,. We ran into some trouble last night with the ROOT ""HEAD"" builds that have CUDA enabled in our LCG nightlies. The builds failed on these platforms: x86_64-centos7-gcc11-opt, x86_64-centos8-gcc11-opt, and el9-gcc11-opt. These are the ones we use for this configuration. @bellenot: asked me to let you know, so here's the ticket. Here's the error message we got:. ```; Error: Module 'RooFitCuda.pcm' failed to load.; ```; and this:; ```; make[5]: *** [roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/build.make:519: roofit/roofitcore/G__RooFitCore.cxx] Error 1; make[5]: Target 'roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/depend' not remade because of errors.; make[4]: *** [CMakeFiles/Makefile2:44521: roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/all] Error 2; ```. you can find the full build logs here:. http://cdash.cern.ch/upload/d526fd513d6f4007d95aa0eeb56dfc0627929bf1/ROOT-HEAD-build.log. Thanks for looking into this, and let me know if you need anything else!. Cheers,; Dmitri. ### Reproducer. No reproducer. ### ROOT version. HEAD. ### Installation method. build from sources. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13415:343,config,configuration,343,https://root.cern,https://github.com/root-project/root/issues/13415,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I found that putting a RooBinSamplingPdf that wraps an extended pdf inside a RooAddPdf (that is in 'no-coefficient' mode, so that it is also extended), you cannot construct the NLL for this. The reason I think is that the RooBinSamplingPdf class does not forward the createExpectedEventsFunc call to the underlying pdf. Will submit a fix in just a moment. ### Reproducer. Here's a minimal reproducer:; ```; RooWorkspace w;; w.factory(""RooAddPdf::apdf(RooBinSamplingPdf::p(x,RooExtendPdf::epdf(EXPR::pdf('x',x[0,10]),e[100])))"");; RooDataSet d(""data"",""data"",*w.var(""x""));; w.pdf(""apdf"")->createNLL(d);; ```; Produces:; ```; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(apdf) fixing normalization set for coefficient determination to observables in data; [#0] ERROR:InputArguments -- The pdf ""p"" of type RooBinSamplingPdf did not overload RooAbsPdf::createExpectedEventsFunc()!. *** Break *** segmentation violation; ```. ### ROOT version. 6.34. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16796:130,extend,extended,130,https://root.cern,https://github.com/root-project/root/issues/16796,3,['extend'],['extended']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16520:75,Inherit,Inherit,75,https://root.cern,https://github.com/root-project/root/issues/16520,4,"['Inherit', 'inherit']","['Inherit', 'inheritance', 'inherited']"
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. It seems that one can configure tmva into a state that cudnn is disabled, but it's still trying to link:; ```; [ 78%] Linking CXX shared library ../../lib/libTMVA.so; cd /root/build/tmva/tmva && /usr/bin/cmake -E cmake_link_script CMakeFiles/TMVA.dir/link.txt --verbose=1; /usr/bin/c++ -fPIC -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual; [...]; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.1]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x1b): undefined reference to `cudnnGetErrorString'; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.2]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x5b): undefined reference to `cudnnGetErrorString'; [...]; ```. I believe the way to trick it is to set `tmva-cudnn=ON`. It looks like users were not supposed to touch it, instead they should have set `-Dcudnn=On`. Setting the latter, the following code runs:; https://github.com/root-project/root/blob/45f13f0c6e145b0ddef82bf049a43fbe4870381b/cmake/modules/SearchInstalledSoftware.cmake#L1638-L1654. Instead, I set `tmva-cudnn` directly, the code above doesn't run, and tmva fails to link because the location of cudnn is never discovered. Maybe, one of `cudnn` or `tmva-cudnn` should be removed, and only a single flag should enable or disable it. ### Reproducer. On ubuntu with cuda and cudnn, I did:; ```; (ROOT-CI) root@102b09e3cf56:~/build# cmake -Dtmva-gpu=On -Dtesting=On -Dtmva-cudnn=On -Dbuiltin_openui5=Off -Dclad=Off -Dgdml=Off -Dgeom=Off -Dopengl=Off -Droot7=Off -Dspectrum=Off -Droofit=Off -Dvdt=Off ../root; ```. ```; $ apt list --installed | grep cudnn; libcudnn9-cuda-12/unknown,now 9.3.0.75-1 amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16715:97,config,configure,97,https://root.cern,https://github.com/root-project/root/issues/16715,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:318,Config,Configuration,318,https://root.cern,https://github.com/root-project/root/issues/16638,1,['Config'],['Configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749:187,Flexible,FlexibleInterpVar,187,https://root.cern,https://github.com/root-project/root/issues/13749,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16600:411,variab,variables,411,https://root.cern,https://github.com/root-project/root/issues/16600,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15744:1122,Extend,Extended,1122,https://root.cern,https://github.com/root-project/root/issues/15744,1,['Extend'],['Extended']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The legacy backend can be used with models with categorical parameters (minimization can proceed if it is held constant). ; The new cpu backend appears to not include the categorical param in its list of variables (from `getVariables()`) and also just crashes when you try to evaluate the function. ### Reproducer. ```; {; // create a one-channel on-bin model, with two samples in the channel, which are each scaled by a factor; // that depends on the state of a category; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/chan1""]->SetXaxis(1,0,1);; w[""simPdf/chan1/bkg1""]->SetBinContent(1,5);; w[""simPdf/chan1/bkg2""]->SetBinContent(1,10);; w[""simPdf/chan1/bkg1""]->Multiply(""fac1('myCat==0?1:0',myCat[a,b])"",""func"");; w[""simPdf/chan1/bkg2""]->Multiply(""fac2('myCat==0?0:1',myCat)"",""func"");; w[""simPdf/chan1""]->SetBinData(1,12);. w.pars()[""myCat""]->get<RooAbsArg>()->setAttribute(""Constant""); // how I would hold the param constant. auto nll = w[""simPdf""]->nll(""obsData"",{RooFit::EvalBackend(""cpu"")});; nll->getVariables()->Print(); // in cpu mode ""myCat"" doesn't appear here!!; nll->getVariables()->setCatLabel(""myCat"",""a"");. cout << nll->getVal() << endl; // this crashes for cpu mode. }; ```. ### ROOT version. 6.32 , master. ### Installation method. source. ### Operating system. all?. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15701:279,variab,variables,279,https://root.cern,https://github.com/root-project/root/issues/15701,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16047:93,variab,variable,93,https://root.cern,https://github.com/root-project/root/issues/16047,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14277:798,variab,variables,798,https://root.cern,https://github.com/root-project/root/issues/14277,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16028:286,variab,variable,286,https://root.cern,https://github.com/root-project/root/issues/16028,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14255:506,Extend,ExtendPdf,506,https://root.cern,https://github.com/root-project/root/issues/14255,5,"['Extend', 'variab']","['ExtendPdf', 'variable', 'variables']"
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318:1476,variab,variable,1476,https://root.cern,https://github.com/root-project/root/issues/15318,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `TTreeFormula` (and thus by extend `TTree::Scan` and `TTree::Draw`) does not handle well (under-statement) cases of schema evolution that involves renaming a class. See the reproducer for more details. We need to verify if whether `TTreeReader` and thus `RDataFrame` suffer from the same issue. ### Reproducer. [conversion.tgz](https://github.com/root-project/root/files/14105386/conversion.tgz); run:; ```; root.exe -b -l -q writedata.C+; # Read with the 'old' schema, the result is accurate.; root.exe -b -l -q oldread.C+; # Read with the complex rule ; TTree::Scan is broken; root.exe -b -l -q readwithrule.C+; # Read with the renaming rule ; TTree::Scan only works for accessing the inner content in the case of a split branch.; root.exe -b -l -q readwithrenaming.C+; ```. The correct output for the full object printing part of the reading script is:; ```; Content of branch seg_split.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; Content of branch seg_unsplit.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; ```. The expected result of the `TTree::Scan` part of the reading script is:. ```; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0 * 0 * 2 *; ******************************************************************; **************************************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments.someValue *; **************************************************************************************; * 0 * 0 * 2 *; * 0 * 1 * 3 *; **********************************************************************",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:103,extend,extend,103,https://root.cern,https://github.com/root-project/root/issues/14493,1,['extend'],['extend']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:286,plugin,plugins,286,https://root.cern,https://github.com/root-project/root/issues/15091,2,['plugin'],['plugins']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. running some tests on 6.32 with the CMS Higgs workspace I am getting a crash with the top of the stack trace pointing to `RooBernstein::fillBuffer()` which was introduced in https://github.com/root-project/root/commit/50a1bddacc1cbd22d7ce0e184db42bc04e9b0088. I can confirm that I don't see the crash when I use a version of ROOT master from just before this commit. . Looking at the commit, it has introduced a new data member, `_buffer` ... but has not done any schema evolution. . I'm wondering if the crash is that the `_buffer` in the auto-evolved instance is empty, and then the `fillBuffer` method is trying to fill into this? The resize of `_buffer` only happens in the non-default-constructor, I note. ### Reproducer. In 6.32:; ```; import ROOT.Experimental.XRooFit as XRF; w = XRF.xRooNode(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root""); w[""model_s""][0].Draw(); ```; or in C++:; ```; using namespace ROOT::Experimental::XRooFit;; xRooNode w(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root"");; w[""model_s""]->at(0)->Draw();; ```. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15690:620,evolve,evolved,620,https://root.cern,https://github.com/root-project/root/issues/15690,1,['evolve'],['evolved']
Modifiability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865:226,Config,Config,226,https://root.cern,https://github.com/root-project/root/issues/13865,2,['Config'],['Config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. 10-20fold slowdown of running a particular ALICE event generation process, where the generator is compiled just-in-time from a ROOT macro (see reproducer). Slowdown observed when switching from ROOT tag 6.28.04 to 6.28.08. In particular, bisecting this slowdown shows that it is caused by this commit https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 (from #11631). Reverting this single commit brings back the original performance. ### Reproducer. On lxplus7.cern.ch, run:. ```; #!/usr/bin/env bash. # good software version; /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 > env.txt. # bad software version; #/cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1 > env.txt. source env.txt. time o2-sim-dpl-eventgen --nEvents 5 --generator external --configFile ${O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorEMCocktail.ini --seed 11. ```. ### ROOT version. Everything having https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 included. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579:891,config,configFile,891,https://root.cern,https://github.com/root-project/root/issues/15579,2,['config'],"['config', 'configFile']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188:446,config,configuration,446,https://root.cern,https://github.com/root-project/root/issues/14188,4,"['CONFIG', 'config']","['CONFIG', 'config', 'configuration']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A user has reported a compatibility issue when sourcing thisroot.sh from the ROOT framework in the zsh shell. The error encountered is: /usr/bin/which: invalid option -- 'p'. This problem is traced to the script at:. https://github.com/root-project/root/blob/a1f54ed694b330a3b2591807daa75445a39a76c3/config/thisroot.sh#L182. The script uses the _which_ command with the -p option, a feature specific to zsh's built-in _which_ command. However, in this context, the system's _which_ command is called instead, which does not recognize the -p option. The script should be modified to use zsh's built-in _which_ command. This can be done by using _builtin which_ instead of just _which_. ### Reproducer. ```; ssh lxplus7; zsh; source /cvmfs/sft.cern.ch/lcg/releases/LCG_105/ROOT/6.30.02/x86_64-centos7-gcc11-opt/bin/thisroot.sh ; /usr/bin/which: invalid option -- 'p'; ```. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14324:375,config,config,375,https://root.cern,https://github.com/root-project/root/issues/14324,1,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As per the title, `TBranch::GetBulkEntries` does not work for variable-sized arrays, while it works for static-sized arrays and scalars. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>; #include <TBufferFile.h>; #include <TFile.h>; #include <TTree.h>. void FillTree(const char *filename, const char *treeName) {; TFile f(filename, ""recreate"");; TTree t(treeName, treeName);; int n = 2;; double *x = new double[2];; x[0] = 42;; x[1] = 84;; t.Branch(""n"", &n);; t.Branch(""x"", x, ""x[n]/D"");; t.Fill();; t.Write();; f.Close();; }. int main() {; auto filename = ""repro_getbulkread.root"";; auto treename = ""t"";; FillTree(filename, treename);. TFile f(filename);; auto *t = f.Get<TTree>(treename);. t->Scan();; ; auto *b = t->GetBranch(""x"");; TBufferFile buf(TBuffer::kWrite, 10000);; const auto n = b->GetBulkRead().GetBulkEntries(0, buf);; assert(n == 1);; }; ```. ### ROOT version. 6.29. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13239:137,variab,variable-sized,137,https://root.cern,https://github.com/root-project/root/issues/13239,1,['variab'],['variable-sized']
Modifiability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14169:124,config,configure,124,https://root.cern,https://github.com/root-project/root/issues/14169,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159:252,Config,Configuring,252,https://root.cern,https://github.com/root-project/root/issues/14159,1,['Config'],['Configuring']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068:571,config,config,571,https://root.cern,https://github.com/root-project/root/issues/14068,2,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15727:804,CONFIG,CONFIG,804,https://root.cern,https://github.com/root-project/root/issues/15727,4,"['CONFIG', 'config']","['CONFIG', 'configuration', 'configure', 'configures']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Expected: valid XML. To summarize:; - `ShapeFactor` can have init values for its nuisance parameters; - The documentation for `ShapeFactor` indicates settings both for reading/writing the initial shape (see `fhHigh` in the [source code](https://github.com/root-project/root/blob/28c5ade5377bfb6b9025b79aa404d5270516af3c/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h#L251)); - `ShapeFactor` inherits from `HistogramUncertaintyBase` which allows setting of some common attributes such as `HistoName` and `HistoPath` and `InputFile`. I can write valid code (in python, but assumed to be about the same as in C++) to create a valid `Measurement` that ROOT is happy with, however it is not serializable. ### Reproducer. Using the attached `data/data.root` which contains the histogram already with init values, you can run the following python code mainly inspired from the [hf001_example.C](https://root.cern.ch/doc/master/hf001__example_8C.html) example:. ```python; import ROOT; from ROOT.RooStats import HistFactory as HiFa; Measurement = HiFa.Measurement; Sample = HiFa.Sample; Channel = HiFa.Channel. InputFile = ""data/data.root"". # Create the measurement; meas = Measurement(""meas"", ""meas""); meas.SetOutputFilePrefix( ""./results/example_UsingPython"" ); meas.SetPOI( ""poi"" ); meas.AddConstantParam(""alpha_syst1""); meas.AddConstantParam(""Lumi""); meas.SetLumi( 1.0 ); meas.SetLumiRelErr( 0.10 ); meas.SetExportOnly( False ); meas.SetBinHigh( 2 ). chan0 = Channel(""channel_0""); chan0.SetData(""histchannel_0_data"", InputFile); chan0.SetStatErrorConfig( 0.05, ""Poisson"" ). sample_0 = Sample(""sample_0"", ""histchannel_0_sample_0"", InputFile); sample_0.AddShapeFactor(""shape_factor_0""); sample_0.GetShapeFactorList()[0].SetInputFile(InputFile); sample_0.GetShapeFactorList()[0].SetHistoName(""inits_shape_factor_0""); chan0.AddSample( sample_0 ). sample_1 = Sample(""sample_1"", ""histchannel_0_sample_1"", InputFile); sample_1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287:477,inherit,inherits,477,https://root.cern,https://github.com/root-project/root/issues/13287,1,['inherit'],['inherits']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14195:166,variab,variables,166,https://root.cern,https://github.com/root-project/root/issues/14195,2,"['Config', 'variab']","['Configuring', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14528:152,variab,variable,152,https://root.cern,https://github.com/root-project/root/issues/14528,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi, build craps out as seen below. Reasonably standard build, the only difference from (my) usual is that I have no preinstalled xrootd, no idea if that is related. I've seen similar issues on 13.2-RELEASE. Something makes it think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:403,config,configure,403,https://root.cern,https://github.com/root-project/root/issues/14492,3,"['config', 'plugin']","['configure', 'configure-Release', 'plugins']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi:; I build ROOT on Windows with msvc and with option /permissive-, it issues error like below, could you take a look at this issue, thanks.; `F:\gitP\root-project\root\tmva\tmva\inc\TMVA/RBatchGenerator.hxx(100,89): error C4576: a parenthesized type followed by an initializer list is a non-standard explicit type conversion syntax [F:\gitP\root-project\root\build_amd64\tmva\tmva\G__TMVA.vcxproj]`. **Workaround:**; If I remove the brackets around the `std::vector<std::size_t>` in the line: https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RBatchGenerator.hxx#L100, error will disappear. ### Reproducer. Open a VS2022 x64 Native Tools command.; 1. git clone https://github.com/root-project/root F:\gitP\root-project\root; 2. git -C ""F:\gitP\root-project\root"" reset --hard 0d1f204109a31cc4884e9fd49519edf0fa2e4505; 3. mkdir F:\gitP\root-project\root\build_amd64 and cd F:\gitP\root-project\root\build_amd64; 4. python.exe -m pip install pytest ; 5. set _CL_=/permissive-; 6. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=ON -Droottest=ON ..; 7. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### ROOT version. commit: 0d1f204109a31cc4884e9fd49519edf0fa2e4505. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. [build.log](https://github.com/root-project/root/files/12300237/build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13421:1253,Config,Configuration,1253,https://root.cern,https://github.com/root-project/root/issues/13421,1,['Config'],['Configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15118:178,variab,variables,178,https://root.cern,https://github.com/root-project/root/issues/15118,6,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13122:267,config,configured,267,https://root.cern,https://github.com/root-project/root/issues/13122,1,['config'],['configured']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If configuring any web display, gPad is not properly set.; As a result, `h.Draw` creates new canvas.; Code works properly when gROOT.SetWebDisplay(""off"") invoked. ### Reproducer. Here is reproducer:; ```; import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:; print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()); else:; print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas; h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. master branch. Python 3.11.9. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15498:78,config,configuring,78,https://root.cern,https://github.com/root-project/root/issues/15498,1,['config'],['configuring']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:687,variab,variable,687,https://root.cern,https://github.com/root-project/root/issues/15970,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In TFormula the polynomial functions do not accept a variable name (such as x) as argument. . ### Reproducer. Example of code producing an error in parsing the formula expression; ```; TF1 f1(""f1"",""pol1(x,0)"");; TF1 f2(""f2"",""pol1(x,[A],[B])"");; ```; In the case of other predefined functions, for example, gaus, works as expected:; ```; TF1 f1(""f1"",""gaus(x,0)"");; f1.Print(""V"");; TF1 f2(""f2"",""gaus(x,[A],[mean],[sigma])"");; f2.Print(""V"");; ```. ### ROOT version. All ROOT 6 versions with new TFormula. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16794:128,variab,variable,128,https://root.cern,https://github.com/root-project/root/issues/16794,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:102,inherit,inheriting,102,https://root.cern,https://github.com/root-project/root/issues/15221,1,['inherit'],['inheriting']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13734:636,config,config,636,https://root.cern,https://github.com/root-project/root/issues/13734,3,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:; ```; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h; ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14593:116,variab,variable,116,https://root.cern,https://github.com/root-project/root/issues/14593,1,['variab'],['variable']
Modifiability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT_HEAD failed in the nightlies in centos7 platfom; The reported error estracted from the[ log file ](http://cdash.cern.ch/upload/43670d452f7f3ef813ce655ef9357e62800d1e7a/ROOT-HEAD-configure.log)is:; gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-pc-linux-gnu:/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test found_arc4; -- Performing Test found_arc4 - Failed; -- Performing Test found_arc4_bsd; -- Performing Test found_arc4_bsd - Failed; -- Performing Test found_getrandom; -- Performing Test found_getrandom - Failed; CMake Error at core/unix/CMakeLists.txt:42 (message):; Fail to detect cryptographic random generator. ### Reproducer. [lcg_nightly_pipeline](https://lcgapp-services.cern.ch/spi-jenkins/view/LCG%20Nightlies/job/lcg_nightly_pipeline/). ### ROOT version. master. ### Installation method. build from source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958:258,config,configure,258,https://root.cern,https://github.com/root-project/root/issues/14958,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Running `rootn.exe` from ROOT 6.30.04 should bring up the ROOT prompt, but instead crashes instantly on startup. . It works fine with older versions of ROOT (6.28, 6.26). ### Reproducer. - Install precompiled ROOT 6.30.04, downloaded from root.cern, on RHEL8 or 9.; - Run `thisroot.sh` to set up the runtime environment; - Type rootn.exe; - Hard crash. Transcript of session on RHEL8:; ```; % source /apps/ROOT/6.30.04/bin/thisroot.sh; % root-config --version; 6.30.04; % root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_davix builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xrootd builtin_xxhash builtin_zeromq builtin_zlib builtin_zstd clad dataframe davix fftw3 fitsio fortran gdml http imt mathmore mlp minuit2 mysql opengl pgsql proof pyroot roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore x11 xml xrootd; % which rootn.exe; /apps/ROOT/6.30.04/bin/rootn.exe; % rootn.exe; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; ... longish stack trace ...; ```; This works without error with ROOT 6.26.14 and 6.28.12 on the exact same machine. Running plain `root` 6.30.04 also works, of course. Only `rootn.exe` seems affected. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 31 2024, 09:46:18 |; | From heads/master@tags/v6-30-04 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-21) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ----------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14767:518,config,config,518,https://root.cern,https://github.com/root-project/root/issues/14767,2,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15927:1166,evolve,evolved,1166,https://root.cern,https://github.com/root-project/root/issues/15927,1,['evolve'],['evolved']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612:192,config,config,192,https://root.cern,https://github.com/root-project/root/issues/16612,2,['config'],"['config', 'configure']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls.; Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working.; See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```; dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));; ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13136:148,variab,variable,148,https://root.cern,https://github.com/root-project/root/issues/13136,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We have a HistFactory setup where one of the NormFactors is constant and set to -1. During the Workspace creation (HistoToWorkspaceFactoryFast) the code crashes:. ```; --------; RooFormulaVar::b2[ actualVars=(b) formula=""b*b"" ] = 0.294849. [#2] INFO:HistFactory -- making normFactor: mu_ttbar; [#2] INFO:HistFactory -- processing hist emu_OS_2b_Mc_regBin; [#2] INFO:HistFactory -- Mc_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_stop_2b_regBin; [#2] INFO:HistFactory -- stop_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_ttV_2b_regBin; [#2] INFO:HistFactory -- ttV_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_diboson_2b_regBin; [#2] INFO:HistFactory -- diboson_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_wjets_2b_regBin; [#2] INFO:HistFactory -- wjets_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- making normFactor: mu_Z; [#2] INFO:HistFactory -- processing hist emu_OS_2b_zjets_2b_regBin; [#2] INFO:HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:1298,variab,variable,1298,https://root.cern,https://github.com/root-project/root/issues/14225,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14157:611,config,configuration,611,https://root.cern,https://github.com/root-project/root/issues/14157,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When drawing `TGraph2D` with ""tri1"" draw option and configure min/max Z values which do not fully covers existing range,; wrong drawing appears.; ![c1](https://github.com/root-project/root/assets/4936580/fc74b088-f09b-499d-8181-07f8b436f5a7). ### Reproducer. Reproducer macro:; [gr2d.C.txt](https://github.com/root-project/root/files/12302619/gr2d.C.txt). ### ROOT version. master branch, most probably all previous branches as well. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13424:127,config,configure,127,https://root.cern,https://github.com/root-project/root/issues/13424,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python; import cppyy; cppyy.cppdef(""""""; class vertex { public:; virtual std::string idself() { return ""I am vertex""; }; };; class Mvertex : public vertex { public:; virtual std::string idself() { return ""I am Mvertex""; }; };; class vCont { public:; std::vector< vertex* > verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; };; """"""); cont = cppyy.gbl.vCont(); verts = cont.vertices(); for v in verts:; print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ); ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:; `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False ; I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`; which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15234:95,polymorphi,polymorphic,95,https://root.cern,https://github.com/root-project/root/issues/15234,2,"['polymorphi', 'variab']","['polymorphic', 'variable']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13569:221,variab,variable,221,https://root.cern,https://github.com/root-project/root/issues/13569,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16189:347,config,configuration,347,https://root.cern,https://github.com/root-project/root/issues/16189,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038:932,config,configuration,932,https://root.cern,https://github.com/root-project/root/issues/16038,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the webgui in Qt5 there is a red frame around the currectly selected pad:; <img width=""337"" alt=""RedFrame"" src=""https://github.com/root-project/root/assets/62039342/c98e6a71-b86e-43e8-9b82-0bc7e19f7072"">. Is there any way to disable this frame or possible to configure the color of the frame from within the C++ part?. It seems this color _red_ is hardcoded in `/js/modules/gpad/TPadPainter.mjs`; ```js; let lineatt = this.is_active_pad && (cp?.highlight_gpad !== false) ? new TAttLineHandler({ style: 1, width: 1, color: 'red' }) : this.lineatt;; ```; And I could not find a way to set _highlight_gpad_ from C++. Maybe I missed something?. ### Reproducer. Launch the qtweb tutorial; Select the TCanvas tab; Divide the main canvas in multiple pads; Select one of the pads; You will see the red frame around the selected pad. ### ROOT version. 6.31.01 linuxx8664gcc. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14401:345,config,configure,345,https://root.cern,https://github.com/root-project/root/issues/14401,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15938:243,variab,variables,243,https://root.cern,https://github.com/root-project/root/issues/15938,2,['variab'],"['variable', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16024:193,variab,variables,193,https://root.cern,https://github.com/root-project/root/issues/16024,6,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter.; Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):; ````; [mkrzewic@hack ~/build/root]$ lldb bin/root.exe; (lldb) target create ""bin/root.exe""; Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64).; (lldb) run; Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64); interpArgs.size(): 20; interpArgs[0]: cling4root; interpArgs[1]: -DNDEBUG; interpArgs[2]: -UDEBUG; interpArgs[3]: -U_DEBUG; interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/; interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling; interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include; interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/; interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075:848,plugin,plugins,848,https://root.cern,https://github.com/root-project/root/issues/14075,1,['plugin'],['plugins']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:556,inherit,inheritance,556,https://root.cern,https://github.com/root-project/root/issues/14186,1,['inherit'],['inheritance']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. if at the prompt, it is possible to change the type and value of a variable by using an innocent cast. ### Reproducer. At the root prompt:; ```; root [0] double x = 3; (double) 3.0000000; root [1] int(x); (int) 0; root [2] x; (int) 0; ```; This example is a stripped down version of [this post on the forum](https://root-forum.cern.ch/t/a-strangeness-for-init-value-for-root-prompt/57576) by `cxwx1`. ### ROOT version. MacOs 14, ROOT 6.30.02 and master (llvm 13 and 16) from sources; EL9, ROOT 6.30.02 and master (llvm 13 and 16) from packages. ### Installation method. sources/packages. ### Operating system. macos/el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14259:142,variab,variable,142,https://root.cern,https://github.com/root-project/root/issues/14259,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708:332,config,configuration,332,https://root.cern,https://github.com/root-project/root/issues/13708,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,; I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```; <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>; <variable name=""testVariable"" value=""someNumbers[1]""/>; ```. ROOT complains when parsing the GDML, with the following error:. ```; input_line_155:2:81: error: subscripted value is not an array, pointer, or vector; Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }; ~~~~^~; Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'; aborting; ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,; Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```; root -l; TGeoManager::Import(""geometry_test.gdml""); ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13074:132,variab,variables,132,https://root.cern,https://github.com/root-project/root/issues/13074,2,['variab'],"['variable', 'variables']"
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336:932,Config,Configuration,932,https://root.cern,https://github.com/root-project/root/issues/15336,3,"['Config', 'Plug-in']","['Configuration', 'Plug-in']"
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15178:145,config,configuration,145,https://root.cern,https://github.com/root-project/root/issues/15178,1,['config'],['configuration']
Modifiability,### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15048:117,inherit,inheritance,117,https://root.cern,https://github.com/root-project/root/issues/15048,4,['inherit'],['inheritance']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:; ```; Torch Version: 2.0.1; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:922,variab,variables,922,https://root.cern,https://github.com/root-project/root/issues/13155,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. ; When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```; cmake_minimum_required(VERSION 3.10); project(ROOTHistMapExample); find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}); set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp); set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h); ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h); add_library(mwe SHARED ${SOURCES} G__mwe.cxx); target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); target_link_libraries(mwe ${ROOT_LIBRARIES}); ```. myscript.py:. ```; import cppyy; import ROOT; cppyy.load_library('libmwe.so'); createHistMap = cppyy.gbl.createHistMap; hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:; hist.ProjectionY() # This should fail if the type is not correctly handled; print(""something is wrong""); except AttributeError as e:; print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed; print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""); ```. mwe.cpp:. ```; #include <mwe.h>; #include <TH1.h>; #include <TH2.h>. std::map<std::string, TH1*> createHistMap() ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16062:643,polymorphi,polymorphic,643,https://root.cern,https://github.com/root-project/root/issues/16062,1,['polymorphi'],['polymorphic']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321:961,Config,Configuration,961,https://root.cern,https://github.com/root-project/root/issues/15321,1,['Config'],['Configuration']
Modifiability,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11447:116,config,configuration,116,https://root.cern,https://github.com/root-project/root/issues/11447,2,['config'],['configuration']
Modifiability,"### Describe the bug. If one combines two weighted datasets to a new dataset meant for simultaneous fits, the weight information is unexpectedly lost. This can be circumvented by creating a new weight variable and using the `RooFit::WeightVar()` command argument, but users expect that this gets dealt with automatically. ### Expected behavior. The new RooDataSet should also be weighted. ### To Reproduce. Run the code I wrote as an answer to a question on the forum:; https://root-forum.cern.ch/t/roofit-simultaneous-template-fit-on-two-different-variables/51774/3. Replace this part:; ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooRealVar w(""weight"", ""weight"", 1.0);; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}}),; WeightVar(""weight"")};; ```. with this:. ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}})};; ```; When the `WeightVar` argument is removed, the combined dataset is not weighted anymore, which is completely unexpected as the input datasets have the same layout and are both weighted. ### Setup. ROOT `master` on Arch Linux. ### Additional context; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11487:201,variab,variable,201,https://root.cern,https://github.com/root-project/root/issues/11487,4,['variab'],"['variable', 'variables']"
Modifiability,"### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python; import ROOT. class pMainFrame( ROOT.TGMainFrame ):; def __init__( self, parent, width, height ):; ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); ```. This prints:. ```; Traceback (most recent call last):; File ""../examples/mainframerepro.py"", line 10, in <module>; window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); File ""../examples/mainframerepro.py"", line 6, in __init__; ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work; TypeError: none of the 2 overloaded methods succeeded. Full details:; Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>; TypeError: takes at most 1 arguments (3 given); Dispatcher1::Dispatcher1() =>; TypeError: takes at most 0 arguments (3 given); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++; namespace __cppyy_internal {; class Dispatcher1 : public ::TGMainFrame {; public:; virtual ~Dispatcher1() {}; using TGMainFrame::TGMainFrame;; using TGMainFrame::GetMWMinpString;; };; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6578:46,inherit,inherits,46,https://root.cern,https://github.com/root-project/root/issues/6578,1,['inherit'],['inherits']
Modifiability,"### Describe the bug. The `RooFFTConvPdf` gives wrong results if one of the input PDFs is a `RooProdPdf`. ### To Reproduce. The issue can be reproduced by computing the convolution of two Gaussians, where one of the Gaussians is turned into a `RooFFTConvPdf` by multiplication with unity (`RooUniform`). ```C++; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealSumPdf.h""; #include ""RooRealVar.h""; #include ""RooRealSumPdf.h""; #include ""RooUniform.h""; #include ""RooProdPdf.h""; #include ""RooFFTConvPdf.h""; #include ""TCanvas.h"". int main() {. // x variable with bins for convolution; RooRealVar x(""x"",""x"", -2000, 3000.);; x.setBins(1000, ""cache"");. // let's try to convolute two Gaussians; RooRealVar zero(""zero"", ""zero"", 0.0);; RooRealVar sigma(""sima"", ""sigma"", 100.);. RooRealVar mass(""mass"", ""mass"", 1000);; RooRealVar width(""width"", ""width"", 100.);. RooGaussian gaus1(""gaus1"", ""gaus1"", x, zero, sigma);; RooGaussian gaus2(""gaus2"", ""gaus2"", x, mass, width);. // multiply one Gaussian with unity to get a RooProdPdf; RooUniform uni(""uni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7157:560,variab,variable,560,https://root.cern,https://github.com/root-project/root/issues/7157,1,['variab'],['variable']
Modifiability,"### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:; ```C++; model.createChi2(data);; RooChi2Var{""chi2"", ""chi2"", model, data};; ```. ### To Reproduce. ```C++; void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;; RooRealVar mean(""mean"",""mean"",5, 0, 10) ;; RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);; RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2; std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};; // Create chi2 variable directoy via constructor; RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results!; chi21->Print();; chi22.Print();. auto minimize = [](RooAbsReal& real){; RooMinimizer m(real);; m.setPrintLevel(-1);; m.migrad();; m.hesse();; std::unique_ptr<RooFitResult> r{m.save()};; r->Print();; };. // Even the minimization results are different, also when correctly; // resetting the fit parameters in between fits.; minimize(*chi21);; mean.setVal(5);; sigma.setVal(0.5);; mean.setError(0.0);; sigma.setError(0.0);; minimize(chi22);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10557:955,variab,variable,955,https://root.cern,https://github.com/root-project/root/issues/10557,2,['variab'],['variable']
Modifiability,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027:751,config,config,751,https://root.cern,https://github.com/root-project/root/issues/8027,1,['config'],['config']
Modifiability,"### Describe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:837,variab,variable,837,https://root.cern,https://github.com/root-project/root/issues/11333,3,['variab'],['variable']
Modifiability,"### Describe the bug. ``` 1018 - tutorial-roofit-rf208_convolution-py (Failed); 1020 - tutorial-roofit-rf210_angularconv-py (Failed); 1021 - tutorial-roofit-rf211_paramconv-py (Failed); 1052 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```; if ROOT is not built with fft3. ### Expected behavior. The tutorials are skipped. ### To Reproduce. Configure with testing, without fft, run tests. ### Additional context; Add to `fftw3_veto` in `tutorials/CMakeLists.txt`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8261:348,Config,Configure,348,https://root.cern,https://github.com/root-project/root/issues/8261,1,['Config'],['Configure']
Modifiability,"### Describe the bug. building root v6-26-00 with clang 13.0.1 fails with many errors. I have tried with both gcc8.4 and gcc11.2 toolchains for clang. This is on a centos7 system. The cmake (3.22.2) configuration step was:; ```; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -GNinja ../src; ```; Is this expected behavior? If so, what version of clang is supported for building root?. If desired, I will attach the build errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046:199,config,configuration,199,https://root.cern,https://github.com/root-project/root/issues/10046,1,['config'],['configuration']
Modifiability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:379,config,config,379,https://root.cern,https://github.com/root-project/root/issues/7971,1,['config'],['config']
Modifiability,"### Describe the bug; A crash is produced if you type `.Class` in the ROOT prompt. ```; ===========================================================================; struct std::atomic<_Tp *>; SIZE: (NA) FILE: atomic LINE: -1; List of member variables --------------------------------------------------; root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed.; ```. ### Expected behavior; No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce; `.Class; `; or `.Class TTree`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140:241,variab,variables,241,https://root.cern,https://github.com/root-project/root/issues/10140,1,['variab'],['variables']
Modifiability,"### Describe the bug; Cmake is not able to configure a project with ROOT.; Usage of ROOT from master requires ""nlohmann_json"".; cmake fails if ""nlohmann_json"" is not found. Even if this package is not used in any way.; . ### Expected behavior; Cmake is able to configure a project with ROOT. ### To Reproduce. Call `find_package(ROOT)`, e.g. `find_package(ROOT REQUIRED COMPONENTS Core RIO Tree TreePlayer Net Hist Gui Gpad Graf EG Thread Imt Html)`. in cmake. ### Setup; ROOT from ; /cvmfs/sft.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc8-opt/bin/thisroot.sh; CentOS7 x86_64 . ### Additional context; The configuration worked well in the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7202:43,config,configure,43,https://root.cern,https://github.com/root-project/root/issues/7202,3,['config'],"['configuration', 'configure']"
Modifiability,### Describe the bug; Configuring a build with a different ROOT build already in the environment causes CTest to test the wrong build. I wonder how many devs are not testing their changes but that of some completely unrelated build :-(. ### Expected behavior; `cmake -Droottest=On` should have `ctest` test *that* build. ### To Reproduce; ```; $ which root; $ mkdir ../1; $ cd ../1; $ . /home/axel/build/root/master/deb/bin/thisroot.sh; $ cmake -Droottest=On ../src; $ grep ROOTSYS CMakeCache.txt ; ROOTSYS:INTERNAL=/home/axel/build/root/master/deb; ```. ### Setup; 1. ROOT version: master; 2. Operating system: Ubuntu 20.04; 3. How you obtained ROOT: I built it myself.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7081:22,Config,Configuring,22,https://root.cern,https://github.com/root-project/root/issues/7081,1,['Config'],['Configuring']
Modifiability,"### Describe the bug; Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log.; [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log); Could you please help have a look? Thanks a lot!. Error:; CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):; Command failed: 1; ; 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'; ; See also; ; F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log; ; ### Expected behavior; Successfully build root project without errors. ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src; 3. mkdir root_build root_install && cd root_build; 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src; 5. cmake --build . --config Release --target install. ### Setup; 1. Operating system: Windows 10; 2. Visual studio version: 16.11.6; 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9347:243,config,configure-out,243,https://root.cern,https://github.com/root-project/root/issues/9347,6,['config'],"['config', 'configure', 'configure-Release', 'configure-out']"
Modifiability,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11067:77,config,configuration,77,https://root.cern,https://github.com/root-project/root/issues/11067,2,['config'],['configuration']
Modifiability,"### Describe the bug; It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like; ```; hadd dummyFile01.root dummyFile0.root dummyFile1.root; ``` ; Everything is okay. While if you do like; ```; hadd dummyFile10.root dummyFile1.root dummyFile0.root; ```; And you open the merged `dummyFile10.root` to get entries like; ```; root [1] dummyTree->GetEntries(); (long long) 1000; ```; It looks okay. But if you show the first event, like; ```; root [1] dummyTree->Show(0); ======> EVENT:0; index = 0; dummyVariable = 2.13654e-306; ```; The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior; ```; root [1] dummyTree->Show(0); ======> EVENT:0; index = 0; dummyVariable = 0.261287; ```. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12510:932,variab,variable,932,https://root.cern,https://github.com/root-project/root/issues/12510,1,['variab'],['variable']
Modifiability,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196:788,variab,variable,788,https://root.cern,https://github.com/root-project/root/issues/7196,1,['variab'],['variable']
Modifiability,"### Describe the bug; ROOT v6.24.06 is currently failing to build in Ubuntu 22.04. This appears to be due to an upgrade to [OpenSSL 3.0](https://www.openssl.org/blog/blog/2021/09/07/OpenSSL3.Final/) with this new LTS release; you can see for example a similar issue [here](https://github.com/chris2511/xca/issues/320). The specific build error happens while building XROOTD. (I apologize in advance if this is not the correct place to report the issue.). ### Expected behavior; ROOT builds without error using latest OpenSSL. ### To Reproduce; 1) Clean install of Ubuntu 22.04; 2) `sudo apt update`, followed by `sudo apt upgrade` and `sudo apt install` the required libraries for building ROOT; 3) Download ROOT source code and unzip; 4) Configure & build (using system Python 3.10). ### Setup; ROOT version: v6-24-06; Operating system: Ubuntu 22.04 LTS (on Windows Subsystem for Linux / WSL2); How you obtained ROOT: building from source. ### Additional context; `root-v6-24-06/src/ROOT-build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log` files are attached:; [XROOTD-build-out.log](https://github.com/root-project/root/files/8613858/XROOTD-build-out.log); [XROOTD-build-err.log](https://github.com/root-project/root/files/8613857/XROOTD-build-err.log). The specific error from `XROOTD-build-err.log`:; `root-v6-24-06/src/ROOT-build/XROOTD-prefix/src/XROOTD/src/XrdCrypto/XrdCryptosslgsiAux.cc:901:32: error: invalid conversion from ‘const rsa_st*’ to ‘RSA*’ {aka ‘rsa_st*’} [-fpermissive]`. Finally, if it is helpful, the build script being used is [here](https://github.com/ezradlesser/heppy/blob/master/external/root/build.sh), with the only modification to the script being the `root_version` variable: `root_version=6-24-06`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518:739,Config,Configure,739,https://root.cern,https://github.com/root-project/root/issues/10518,2,"['Config', 'variab']","['Configure', 'variable']"
Modifiability,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7454:452,extend,extended,452,https://root.cern,https://github.com/root-project/root/issues/7454,1,['extend'],['extended']
Modifiability,### Describe the bug; The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance.; ### Expected behavior; root project could build successfully under '/std:c++latest' and '/permissive-' mode.; ### To Reproduce; 1. git clone https://github.com/root-project/root F:\gitP\root-project\root; 2. mkdir F:\gitP\root-project\root\build_amd64; 2. set CL= /std:c++latest or set CL= /permissive-; 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild; ### Setup; Visual Studio 2019 16.11.8; ### Additional context; Build.log:; /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log); /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607:638,Config,Configuration,638,https://root.cern,https://github.com/root-project/root/issues/9607,1,['Config'],['Configuration']
Modifiability,"### Describe the bug; The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes.; ```; constexpr uint32_t seed_bits = 19937;; constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;; uint32_t _seed[seed_32_count];; for (uint32_t i = 0; i < seed_32_count; ++i) {; 	_seed[i] = _dev();; }; std::seed_seq _seq(_seed, _seed + seed_32_count);; ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior; Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce; Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup; ROOT 32 bit 6.26; Windows (Not yet tested on linux).; Binary install. ### Additional context; Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10386:496,variab,variables,496,https://root.cern,https://github.com/root-project/root/issues/10386,1,['variab'],['variables']
Modifiability,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631:904,variab,variable,904,https://root.cern,https://github.com/root-project/root/issues/12631,1,['variab'],['variable']
Modifiability,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890:324,config,config,324,https://root.cern,https://github.com/root-project/root/issues/8890,1,['config'],['config']
Modifiability,"### Describe the bug; `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior; The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce; Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7968:324,Config,Configure,324,https://root.cern,https://github.com/root-project/root/issues/7968,1,['Config'],['Configure']
Modifiability,### Encountered problem; Snapshoting the RDataFrame with friend trees does not store variables of the friends.; This is very unfortunate for skimming multiple friend trees if the skimming time consuming and running it only once and storing results would help. ### Feature that could help; Automatically store friend trees / variables into the output file. ### Current workaround; Defining all branches explicitly in the Snapshot argument is very clumsy. ### Additional context; This was briefly discussed on the forum [here](https://root-forum.cern.ch/t/snapshot-friend-trees-after-filtering/43507),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7181:85,variab,variables,85,https://root.cern,https://github.com/root-project/root/issues/7181,2,['variab'],['variables']
Modifiability,### Errors:; - include/Math/IParamFunction.h:247:20: error: use of undeclared identifier 'DoEval' . ### Warnings:; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable pa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1295#issuecomment-342874445:1122,portab,portable,1122,https://root.cern,https://github.com/root-project/root/pull/1295#issuecomment-342874445,1,['portab'],['portable']
Modifiability,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115:301,variab,variables,301,https://root.cern,https://github.com/root-project/root/issues/9115,2,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15077:1045,variab,variable,1045,https://root.cern,https://github.com/root-project/root/issues/15077,1,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13886:70,config,configuration,70,https://root.cern,https://github.com/root-project/root/issues/13886,3,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved and how. Taking as an example; ![image](https://github.com/root-project/root/assets/15638895/8fe5f2bc-0fee-4290-9487-7ff78eeee57a). From https://github.com/root-project/root/actions/runs/9201095928/job/25318040512 . The label of the build says the build type should be debug and it should have the LLVM assertions enabled, but the configuration of the nightly job doesn't have either. One of the two should be fixed to reflect the other. ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=Release ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615:379,config,configuration,379,https://root.cern,https://github.com/root-project/root/issues/15615,1,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved and how. The RNTupleParallelWriter should be extended to allow to fix the logical order of clusters written to disk. This would allow to better align parallel writing with, e.g., lumi blocks. The physical on-disk order of clusters written by the parallel writer will still be arbitrary, but the meta-data can link them to another, logical order. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16326:93,extend,extended,93,https://root.cern,https://github.com/root-project/root/issues/16326,1,['extend'],['extended']
Modifiability,"### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15933:259,variab,variable,259,https://root.cern,https://github.com/root-project/root/issues/15933,1,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version.; The core of the code is this switch:; ```; switch(c) {; case '+': repl = ""pL""; break;; case '-': repl = ""mI""; break;; case '*': repl = ""mU""; break;; case '/': repl = ""dI""; break;; case '&': repl = ""aN""; break;; case '%': repl = ""pE""; break;; case '|': repl = ""oR""; break;; case '^': repl = ""hA""; break;; case '>': repl = ""gR""; break;; case '<': repl = ""lE""; break;; case '=': repl = ""eQ""; break;; case '~': repl = ""wA""; break;; case '.': repl = ""dO""; break;; case '(': repl = ""oP""; break;; case ')': repl = ""cP""; break;; case '[': repl = ""oB""; break;; case ']': repl = ""cB""; break;; case '!': repl = ""nO""; break;; case ',': repl = ""cO""; break;; case '$': repl = ""dA""; break;; case ' ': repl = ""sP""; break;; case ':': repl = ""cL""; break;; case '""': repl = ""dQ""; break;; case '@': repl = ""aT""; break;; case '\'': repl = ""sQ""; break;; case '\\': repl = ""fI""; break;; }; ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;; I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15384:168,variab,variable,168,https://root.cern,https://github.com/root-project/root/issues/15384,2,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15285:854,layers,layers,854,https://root.cern,https://github.com/root-project/root/issues/15285,1,['layers'],['layers']
Modifiability,"### Explain what you would like to see improved. Documentation. . I am having to spend way too much time trying to figure out what basic stuff is. Eg. a TTree is apparently a list of ""independent columns"" but so far looks to me very much like it is the equivalent of a table used to back a higher level representation of table in which case the columns are not independent - they would be related (unless ""independent columns"" is being used to mean statistically independent variables). And I came across ""event"" in code comments which sounds very like ""event"" is a ""row"" of data which'd make sense from a Cern perspective but is ambiguous/meaningless/confusing to a newbie. ### share how it could be improved. A Glossary with ROOT term equivalents in other frames of reference. Eg. Event ~ row ~ tuple ~ observation (assuming I guessed correctly). TTRee ~ RDataFrame/TDataFrame ~ dataset ~ Table ~ 1 or 2 dimensional Array or Tensor ~ a grid of data with one row per event/observation/record.; TBranch ~ column of data in a grid or table of data; TLeaf ~ element ~ cell - a single observation of single variable. And where these are not correct list the differences between them to clarify what they actually are. Without a clear and precise understanding of what the terms mean you are never sure about what you are doing. ----------------------------------------------------------; Some (more) high level notes on how the framework works would be very useful at the start of the primer or comments in the code to explain ""magic"" when it happens - I was scratching my head as to how one particular object knew to use another when no relationship appeared in the code anywhere;; ```. // The canvas on which we'll draw the graph; auto mycanvas = new TCanvas();. // lots of code like... // Draw the graph !; graph.DrawClone(""APE"");. // but no mention of mycanvas again until... . mycanvas->Print(""graph_with_law.pdf"");; ```. which raises all sorts of questions ( as it is not obvious what is going on )",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11967:475,variab,variables,475,https://root.cern,https://github.com/root-project/root/issues/11967,1,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved. I have a `c++` class with several constructors:. MyClass(const std::string& configfilename);; MyClass(const MyClass& other);. I have python bindings for this class that were generated with `cppyy`. Now, I have a piece of python code that instantiates my class, with a nice `try`-`except` block:. try:; obj = MyClass(args.config); except ConfigFileNotFoundError:; print(""config file ""+args.config+"" was not found!""); exit(0). Now, to test, I'm executing this with a wrong config file. But what I get is roughly this:. TypeError: none of the 2 overloaded methods succeeded. Full details:; MyClass(const std::string&) => ConfigFileNotFoundError; MyClass::MyClass(const MyClass&) => TypeError. So I'm wondering:; Since `cppyy` seems to handle function overloading with a `try`/`except` block, is there any reasonable way to do error handling for such applications? . I'd love to actually get the `ConfigFileNotFoundError` to handle it properly, rather than getting this `TypeError`. . I've started to look into using `__overload__`, but this seems less than elegant. Also, I was unable to figure out how to ask `__overload__` for the accepted signatures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9909:125,config,configfilename,125,https://root.cern,https://github.com/root-project/root/issues/9909,8,"['Config', 'config']","['ConfigFileNotFoundError', 'config', 'configfilename']"
Modifiability,"### Explain what you would like to see improved. Right now, the HS3 implementation of importing a HistFactory model contains somewhat of a re-implementation of HistFactory itself in so far as the creation of the RooFit objects (constraint terms, ProdPdfs, ...) is manual.; This constitutes somewhat of a code duplication with the actual implementation of HistFactory.; It might be worthwhile to rewrite this function completely to instead of building the RooFit objects directly, instead build a HistFactory model and then invoke HistToWorkspaceFactory(Fast) on it. However, this would probably need some major refactoring of HistFactory itself, since one would need to circumvent the need of HistFactory to store everything in a temporary file, and also probably require adding a method that works like HistToWorkspaceFactory, but only on a single channel. Hence, this improvement constitutes a significant chunk of work, the only possible payoff being reduced maintenance in the future. ; I leave it to the RooFit dev's to decide if this makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12368:395,rewrite,rewrite,395,https://root.cern,https://github.com/root-project/root/issues/12368,2,"['refactor', 'rewrite']","['refactoring', 'rewrite']"
Modifiability,"### Explain what you would like to see improved. `RBrowser` looks nice, but I can't find various configuration options:; - The server mode I requested and was implemented.; - How to choose the browser?; - How to choose default browser (e.g. in .rootrc)?; - Safari is not listed as supported but seems to work mostly fine (will open a separate ticket on that). . ### To Reproduce; 1. Go to https://root.cern/doc/master/classROOT_1_1Experimental_1_1RBrowser.html; 2. There is basically no documentation besides reference.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10259:97,config,configuration,97,https://root.cern,https://github.com/root-project/root/issues/10259,1,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Consider the following source directory:. ```cpp; // TwoInts.hpp; #pragma once. class TwoInts {; int _a;; int _b;. public:; TwoInts() {}; TwoInts(int a, int b) : _a(a), _b(b) {}; int GetA() const;; int GetB() const;; TwoInts& SetA(int a);; TwoInts& SetB(int b);; };; ```. ```cpp; // TwoInts.cpp; #include ""twoints.hpp"". int TwoInts::GetA() const { return _a; }; int TwoInts::GetB() const { return _b; }; TwoInts& TwoInts::SetA(int a) { _a = a; return *this; }; TwoInts& TwoInts::SetB(int b) { _b = b; return *this; }; ```. ```cpp; // readwrite_twoints.cpp; // compile with e.g.:; // g++ -o readwrite_twoints readwrite_twoints.cpp $(root-config --libs --cflags) twoints.cpp twoints_dict.cpp. #include ""TFile.h""; #include ""twoints.hpp""; #include <iostream>. int main() {; {; // write the `ti` object to an output file; TwoInts ti(1, 2);; TFile out_f(""f.root"", ""recreate"");; out_f.WriteObjectAny(&ti, ""TwoInts"", ""ti"");; std::cout << ""Written TwoInts("" << ti.GetA() << "", "" << ti.GetB() << "")\n"";; }. // read back the `ti` object from the file; TFile in_f(""f.root"");; auto *tiptr = in_f.Get<TwoInts>(""ti"");; std::cout << ""Read TwoInts("" << tiptr->GetA() << "", "" << tiptr->GetB() << "")\n"";. return 0;; }; ```. ```cpp; #ifdef __CLING__; #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ nestedclasses;; #pragma link C++ class TwoInts;. #endif // __CLING__; ```. ```cmake; # CMakeLists.txt; cmake_minimum_required(VERSION 3.9); project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp LINKDEF LinkDef.h). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp twoints_dict.cxx); target_link_libraries(readwrite_twoints ROOT::RIO). # These lines should not be necessary:; configure_file(twoints.hpp twoints.hpp COPYONLY) # This is necessary for out-of-so",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308:748,config,config,748,https://root.cern,https://github.com/root-project/root/issues/8308,1,['config'],['config']
Modifiability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. During [PPP97](https://indico.cern.ch/event/1018696/) Josh brought up that xrootd checks the environment variable `XRD_PARALLELEVTLOOP` to decide how many event loops to spawn, and his multi-thread use-case benefited from setting it to a value higher than one. It was agreed that we should investigate whether this is something interesting for RDF/DistRDF or other multi-thread use cases in ROOT. . ### Additional context; <!--; Add any other context about the problem here.; -->. The variable is mentioned in the `xrdcp` man page, see e.g. [here](https://www.mankier.com/1/xrdcp).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7709:216,variab,variable,216,https://root.cern,https://github.com/root-project/root/issues/7709,2,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. From Andrea Rizzi: currently `df.Display()` only shows the first and last elements of collection columns. It would be more helpful/intuitive if all elements were listed, at least up to a reasonable collection length. Example of the current output:. ```; y | x | w | z | ; 100 | 1 | 1.8000000 | { 1.1000000, 2.1000000 } | ; | ... | | ... | ; | 4 | | { 3.1000000, 4.1000000 } | ; 10000 | 5 | 3.2400000 | { 4.5100000, 5.5100000 } | ; | ... | | ... | ; | 8 | | { 6.5100000, 7.5100000 } | ; 1000000 | 9 | 5.8320000 | { 8.2610000, 9.2610000 } | ; | ... | | ... | ; | 12 | | { 10.261000, 11.261000 } | ; 100000000 | 13 | 10.497600 | { 12.387100, 13.387100 } | ; | ... | | ... | ; | 16 | | { 14.387100, 15.387100 } | ; 10000000000 | 17 | 18.895680 | { 16.925810, 17.925810 } | ; | ... | | ... | ; | 20 | | { 18.925810, 19.925810 } | ; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python; $ python $(root-config --tutdir)/dataframe/df024_Display.py; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6981:1242,config,config,1242,https://root.cern,https://github.com/root-project/root/issues/6981,1,['config'],['config']
Modifiability,"### Explain what you would like to see improved; As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved; In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950:766,config,configurable,766,https://root.cern,https://github.com/root-project/root/issues/8950,2,"['config', 'variab']","['configurable', 'variables']"
Modifiability,"### Explain what you would like to see improved; I daily use QtCreator in my ROOT-based projects, and it would be great if there would be a config-flag to build ROOT with the `GENERATE_QHP` enabled in the doxygen file. https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile#L1514. This way, one can consult the Doxygen documentation directly within QtCreator, no need to use a web browser, which is also great if you don't have internet connection.; See e.g. https://bugreports.qt.io/secure/attachment/48119/Added_doxygen_doc_2.PNG. ### Optional: share how it could be improved; cmake config flag, or automatically detect if qhelpgenerator is found as done in llvm; https://github.com/root-project/root/search?q=qhelpgenerator. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781:140,config,config-flag,140,https://root.cern,https://github.com/root-project/root/issues/8781,2,['config'],"['config', 'config-flag']"
Modifiability,"### Explain what you would like to see improved; I've been working (with couet and others) on reducing errors in the Doxygen documentation of the code, from 10k+ to a manageable level of under 1k (and going down). However, currently, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:717,config,configured,717,https://root.cern,https://github.com/root-project/root/issues/9953,1,['config'],['configured']
Modifiability,"### Explain what you would like to see improved; In TGCommandLinePlugin, pressing tab shows a list of options. It would be nice that, if there is only one option, it gets automatically 'pasted' into the text entry. ### Optional: share how it could be improved; Parse and copy the content of the suggested code to the current text entry. (Removing the #Double_t stuff). ### To Reproduce; 1. On the plugin, type TMath::QuietN and press tab.; 2. [#Double_t#]QuietNaN() is suggested as single option.; 3. Ideally, the text entry would be now: TMath::QuietNaN() as it happens in a normal ROOT Terminal for the analogous case. ### Setup; ROOT 6.25/01",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8127:397,plugin,plugin,397,https://root.cern,https://github.com/root-project/root/issues/8127,1,['plugin'],['plugin']
Modifiability,### Explain what you would like to see improved; In `builtins/xrootd/CMakeLists.txt` we don't pass any openssl configuration over to Xrootd. This causes inconsistent builds for ROOT and xrootd. ### Optional: share how it could be improved; Maybe use; ```; OPENSSL_CRYPTO_LIBRARY; OPENSSL_SSL_LIBRARY; OPENSSL_INCLUDE_DIR; ```; as made available with Xrootd's `CMakeLists.txt`. . ### To Reproduce; See https://root-forum.cern.ch/t/building-from-source-root-v6-26-00-failing-with-openssl-on-macos-monterey/49078,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10075:111,config,configuration,111,https://root.cern,https://github.com/root-project/root/issues/10075,1,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved; Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved; PR #7899 should be enough to fix this. ### To Reproduce; ```python; import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; Typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7900:140,variab,variables,140,https://root.cern,https://github.com/root-project/root/issues/7900,1,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved; ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved; For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:; - https://github.com/Malvineous/cfgpath; - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes; - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10148:57,config,configured,57,https://root.cern,https://github.com/root-project/root/issues/10148,6,['config'],"['config', 'configuration', 'configured']"
Modifiability,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9090:280,config,config,280,https://root.cern,https://github.com/root-project/root/issues/9090,3,['config'],"['config', 'configure']"
Modifiability,"### Explain what you would like to see improved; Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information; - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved; Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages; - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/10065; Here is the full list of ROOTv5.34:; ```; Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language; processor. It rather is a portable script language environment which; is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory; and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:230,variab,variables,230,https://root.cern,https://github.com/root-project/root/issues/10191,2,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180:1287,Inherit,InheritsFrom,1287,https://root.cern,https://github.com/root-project/root/issues/7180,1,['Inherit'],['InheritsFrom']
Modifiability,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8269:852,Inherit,InheritsFrom,852,https://root.cern,https://github.com/root-project/root/issues/8269,1,['Inherit'],['InheritsFrom']
Modifiability,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216:126,config,configure,126,https://root.cern,https://github.com/root-project/root/issues/7216,1,['config'],['configure']
Modifiability,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740:617,adapt,adaptive-integration,617,https://root.cern,https://github.com/root-project/root/issues/7740,1,['adapt'],['adaptive-integration']
Modifiability,"### Explain what you would like to see improved; When running:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / bin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:464,Extend,Extended,464,https://root.cern,https://github.com/root-project/root/issues/9489,2,['Extend'],['Extended']
Modifiability,"### Explain what you would like to see improved; grep on the source code still shows many places where CINT is mentioned. ### Optional: share how it could be improved; Change to equivalent variables in Cling, or remove if no longer needed. For example:. `__CINT__` --> `__CLING__`. ### To Reproduce; grep -r CINT root-src. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10058:189,variab,variables,189,https://root.cern,https://github.com/root-project/root/issues/10058,1,['variab'],['variables']
Modifiability,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16741:128,variab,variables,128,https://root.cern,https://github.com/root-project/root/issues/16741,2,['variab'],['variables']
Modifiability,"### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds.; It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number.; This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier.; PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch); [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14543:462,config,configurable,462,https://root.cern,https://github.com/root-project/root/issues/14543,1,['config'],['configurable']
Modifiability,"### Feature description. From https://its.cern.ch/jira/browse/ROOT-5105. Hi,. TTreeViewer has one cut variable (the pair of scissors). I have received a users request by robin.glattauer@oeaw.ac.at about being able to define more cuts, such that they can be compared more easily. Could this be implemented?. Cheers, Axel. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14563:102,variab,variable,102,https://root.cern,https://github.com/root-project/root/issues/14563,1,['variab'],['variable']
Modifiability,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13924:473,config,configuration,473,https://root.cern,https://github.com/root-project/root/issues/13924,1,['config'],['configuration']
Modifiability,"### Feature description. The legacy backend classes, inheriting from, `RooAbsTestStatistic`, implement the `RooAbsReal::setData` method that allows for datasets to be swapped over in a test statistic function without having to reconstruct the test statistic. To support the new backend, in xRooFit I am having to destroy and recreate the test statistics (NLL function) each time I change the dataset. I dont know if this introduces an unnecessary overhead or not, but I'd be interested to know if implementing the `setData` method with the new classes could be easily implemented or not?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15763:53,inherit,inheriting,53,https://root.cern,https://github.com/root-project/root/issues/15763,1,['inherit'],['inheriting']
Modifiability,"### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: ; ```cpp; //...; .Define(""particle"", [](event_recordT& e){...}, {""event_record""}); .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}); .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}); //...; ```; , but it would be great if I could do something like ; ```cpp; //...; .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ); //...; ```; with an overload of Define that looks like:; `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14147:177,variab,variables,177,https://root.cern,https://github.com/root-project/root/issues/14147,4,['variab'],['variables']
Modifiability,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7614:184,variab,variable,184,https://root.cern,https://github.com/root-project/root/issues/7614,2,['variab'],['variable']
Modifiability,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361:621,variab,variable,621,https://root.cern,https://github.com/root-project/root/issues/7361,1,['variab'],['variable']
Modifiability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8735:638,variab,variable,638,https://root.cern,https://github.com/root-project/root/issues/8735,2,['variab'],"['variable', 'variables']"
Modifiability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Rather often for minimisation in `RooFit`, using `RooAbsPDf::fitTo`, for complicated functions a maximal number of calls is reached. Since there is no direct war to access this parameter of `RooMinimiser` from `RooAbsPDf::fitTo`,; for such cases I need to switch from `RooAbsPdf::fitTo` to a manual creation of `RooMinimiser` object, ; configure it and use it to minimize (manually created) NLL. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. It will be very good to have a dedicated option(`RooCmdArg`) to `RooAbsPdf::fitTo` function that allows to redefine the default number of calls, such that one can use it together with other options, e.g. . ```; dataset = ...; pdf = ...; result = pdf.FitTo ( dataset , ROOT.RooFit.Save() , ROOT.RooFit.MaxCalls( 10000 ) , ... ); ```; ; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. The standard way that I use , is in case `RooAbsPdf::fitTo` reaches maximal number of calls, switch ; to manual creation and configuration of `RooMinimiser`, manual creation of NLL and edssentially bypass very nice and convinient `RooAbsPdf::fitTo` interface. . ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11875:522,config,configure,522,https://root.cern,https://github.com/root-project/root/issues/11875,2,['config'],"['configuration', 'configure']"
Modifiability,"### Is your feature request related to a problem? Please describe.; Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like; It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:; - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path); - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other.; ; The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: ; `root -l my/full/path/to/folder/my_macro.C+t`; should give:; `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered; Using; `gSystem->SetBuildDir(""/tmp/"");`; in my `rootlogon.C`.; But this does not solve the overwrite problem. ### Additional context; https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10147:1261,config,config,1261,https://root.cern,https://github.com/root-project/root/issues/10147,1,['config'],['config']
Modifiability,"### Is your feature request related to a problem? Please describe.; I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example; ```cxx; truth = df.Filter(has_truth, ...).; Define(""truth_computation"", expensive_computation_truth, ...);; reco = df.Filter(has_reco, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; ```; I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like; Ideally, one could then write something like; ```cxx; both = ROOT::RDF::Intersection(truth, reco);; both.Histo2D(..., {""truth_computation"", ""reco_computation""});; ```; Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered; I can calculate both quantities in the beginning; ```cxx; pre = df.Filter(has_truth || has_reco, ...).; Define(""truth_computation"", expensive_computation_truth, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; truth = pre.Filter(has_truth, ...);; reco = pre.Filter(has_reco, ...);; both = reco.Filter(has_truth, ...);; ```; but this will; 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive; 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10620:177,variab,variables,177,https://root.cern,https://github.com/root-project/root/issues/10620,1,['variab'],['variables']
Modifiability,"### Is your feature request related to a problem? Please describe.; I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7880:344,variab,variable,344,https://root.cern,https://github.com/root-project/root/issues/7880,2,['variab'],"['variable', 'variables']"
Modifiability,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8517:212,variab,variable-in-root-files,212,https://root.cern,https://github.com/root-project/root/issues/8517,1,['variab'],['variable-in-root-files']
Modifiability,"### Is your feature request related to a problem? Please describe.; If I want to read data from a webDav/http endpoint using an oidc token, I'd need to be able to pass the token somehow in ROOT to the Davix client wrapper. Possibly through env variable and rootrc. ### Describe the solution you'd like; Make the Davix client wrapper able to take the token from env variable and rootrc. ### Additional context; Preparatory for future WLCG (and not only) authN/Z model.; I was thinking to something like this as a required change, but, of course, I'd need more feedback: https://github.com/root-project/root/compare/master...dciangot:davix_bearer_token?expand=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802:244,variab,variable,244,https://root.cern,https://github.com/root-project/root/issues/6802,2,['variab'],['variable']
Modifiability,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11295:174,variab,variables,174,https://root.cern,https://github.com/root-project/root/issues/11295,8,['variab'],"['variable', 'variableexplorer', 'variables']"
Modifiability,"### Is your feature request related to a problem? Please describe.; When I code contributions for ROOT within QtCreator, I have to manually edit the format to match the one required by ROOT (braces, indents, etc.). ### Describe the solution you'd like; A config file like this one would be perfect, as it would automatically format those things.; https://github.com/drewnoakes/settings/blob/master/qt-creator-code-style.xml. This file could be posted in this webpage below the clang and astyle config files.; https://root.cern/contribute/coding_conventions/. ### Describe alternatives you've considered; clang, astyle. ### Additional context; https://stackoverflow.com/a/59384396/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8797:255,config,config,255,https://root.cern,https://github.com/root-project/root/issues/8797,2,['config'],['config']
Modifiability,"### Is your feature request related to a problem? Please describe.; When TMVA training is run with k-fold cross validation, the variable importances (both method unspecific and method specific) are not printed out by TMVA. ### Describe the solution you'd like; It would be nice if TMVA could print out the variable importances for each fold, as evaluated on the training set for that fold. ### Additional context; I see this issue with ROOT 6.22.06 on lxplus, run by invoking . ```source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh```. I have tried training both with and without ```FoldFileOutput=True``` in the CrossValidation constructor, and don't see the variable importances in either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7092:128,variab,variable,128,https://root.cern,https://github.com/root-project/root/issues/7092,3,['variab'],['variable']
Modifiability,"### This Pull request:. Hi @guitargeek , the class `RooPolyFunc` is introduced with this pull request. This class allow to form multi-variable polynomials of arbitrary number of variables. . The class also allows for RooFit functions to be Taylor expanded as a function of the dependent variables. This is provided by static functions which return the Taylor expanded function as a `RooPolyFunc`. ## Checklist:. - [x] tested changes locally; - [x] added tutorials; - [x] added unit test; - [ ] analytical integral",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184:134,variab,variable,134,https://root.cern,https://github.com/root-project/root/pull/9184,3,['variab'],"['variable', 'variables']"
Modifiability,"### This Pull request:; ; Hi @guitargeek, this PR is just to refactor the simple class in; RooLagrangianMorphFunc::Config as a struct to keep it's usage apparent.; Let me know what you think !; ; #### Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9180:61,refactor,refactor,61,https://root.cern,https://github.com/root-project/root/pull/9180,2,"['Config', 'refactor']","['Config', 'refactor']"
Modifiability,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7161:736,config,config,736,https://root.cern,https://github.com/root-project/root/issues/7161,4,"['CONFIG', 'config']","['CONFIG', 'config', 'configure']"
Modifiability,"### What's wrong. When trying to Snapshot a RDataFrame that contains certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920:77,variab,variables,77,https://root.cern,https://github.com/root-project/root/issues/10920,2,['variab'],"['variable', 'variables']"
Modifiability,"#10966 fixes LikelihoodJob so that it can now be used for parallelizing non-gradient parts of the migrad minimization. This should be reflected in the relevant README.md section here: https://github.com/root-project/root/tree/master/roofit/roofitcore/src/TestStatistics#calculators. We have yet to thoroughly test the class on real life fits. We intend to do this in the coming weeks. After this, we will rewrite the docs, taking into account any possible fixes or API changes that may have been necessary after our tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10967:405,rewrite,rewrite,405,https://root.cern,https://github.com/root-project/root/issues/10967,1,['rewrite'],['rewrite']
Modifiability,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11330:1994,extend,extend,1994,https://root.cern,https://github.com/root-project/root/issues/11330,1,['extend'],['extend']
Modifiability,"#8709 fixes a part of this. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory, e.g. install a lot of builtins there.; 2. Either; - Place an entire ROOT installation there, where all headers start with `#error This is the wrong header`. or; - Search `compile_commands.json` for `-I/my/include/directory/`; 3. Fix the `FindXXX` for all dependencies that provoke the above error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8708#issuecomment-884226626:203,config,configuration,203,https://root.cern,https://github.com/root-project/root/issues/8708#issuecomment-884226626,1,['config'],['configuration']
Modifiability,"#9513 should fixes the case of using integer spectator variables in the Reader.; As a workaround use the interface requiring a float* : `Reader::AddSpectator(""eventID"", float *)`; Thank you for reporting this problem!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115#issuecomment-1007663007:55,variab,variables,55,https://root.cern,https://github.com/root-project/root/issues/9115#issuecomment-1007663007,1,['variab'],['variables']
Modifiability,"#To do so one needs to pass -Dbuiltin_llvm=Off -Dbuiltin_clang=Off and the; PATH should contain the path to llvm-config. Note this is not enabling ROOT to work with vanilla clang!. This patch allows ROOT to be built against a prebuilt clang and llvm from; https://root.cern.ch/git/{llvm.git,clang.git}. It allows to reduce ROOT's; build times (in cases when cmake decides to rebuild the in-tree llvm for; no good reason). It moves the common denominator of different ROOT builds; in one place to save space. It also allows easy switch between LLVM in; debug and release mode. To build the external clang and llvm exactly in the same way as the; in-tree builds use:. CMAKE_FLAGS=""\; -DLLVM_ENABLE_WARNINGS=OFF \; -DLLVM_INCLUDE_TESTS=OFF \; -DCLANG_INCLUDE_TESTS=OFF \; -DLLVM_INCLUDE_EXAMPLES=OFF \; -DCLANG_BUILD_TOOLS=OFF \; -DCLANG_TOOL_ARCMT_TEST_BUILD=OFF \; -DCLANG_TOOL_CLANG_CHECK_BUILD=OFF \; -DCLANG_TOOL_CLANG_FORMAT_BUILD=OFF \; -DCLANG_TOOL_CLANG_FORMAT_VS_BUILD=OFF \; -DCLANG_TOOL_CLANG_FUZZER_BUILD=OFF \; -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=OFF \; -DCLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD=OFF \; -DCLANG_TOOL_CLANG_RENAME_BUILD=OFF \; -DCLANG_TOOL_C_ARCMT_TEST_BUILD=OFF \; -DCLANG_TOOL_C_INDEX_TEST_BUILD=OFF \; -DCLANG_TOOL_DIAGTOOL_BUILD=OFF \; -DCLANG_TOOL_LIBCLANG_BUILD=OFF \; -DCLANG_TOOL_SCAN_BUILD_BUILD=OFF \; -DCLANG_TOOL_SCAN_VIEW_BUILD=OFF \; -DLLVM_BUILD_TOOLS=ON \; -DLLVM_TOOL_LLVM_AR_BUILD=OFF \; -DCLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD=OFF \; -DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON \; -DCLANG_ENABLE_STATIC_ANALYZER=OFF \; -DCLANG_ENABLE_ARCMT=OFF \; -DCLANG_ENABLE_FORMAT=OFF \; -DLLVM_TARGETS_TO_BUILD=host \; -DLLVM_ABI_BREAKING_CHECKS=FORCE_OFF \; -DLLVM_ENABLE_ABI_BREAKING_CHECKS=OFF \; -DCMAKE_INSTALL_PREFIX=.. \; -DCMAKE_BUILD_TYPE=Debug"". cmake ""$CMAKE_FLAGS"" ../../../sources/root-llvm/. EDIT: We actially need -DLLVM_BUILD_TOOLS=OFF to be ON to build the llvm-config binary. Fixed in the description of this PR but not in the commit message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1798:113,config,config,113,https://root.cern,https://github.com/root-project/root/pull/1798,2,['config'],['config']
Modifiability,"$[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are otherwise missing in a cluster.; - RPageStorageFile: add ability to populate the zero page from `kTypePageZero` locators.; - RVariantField: allow reading values with dispatch `tag == 0`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] RPageStorageDaos: populate the zero page from `kTypePageZero` locators. (for a follow-up PR?); - [x] Possible optimization: `UnsealPage()` should be a no-op for zero pages; this is to be handle",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12676:1681,Extend,ExtendToFitColumnRange,1681,https://root.cern,https://github.com/root-project/root/pull/12676,2,"['Extend', 'extend']","['ExtendToFitColumnRange', 'extends']"
Modifiability,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either.; Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library?. ```cmake; add_library(edm4hep SHARED ${sources} ${headers}); target_link_libraries(edm4hep PUBLIC podio::podio); target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>); REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml; USES edm4hep ) # creates edm4hep.cxx; target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict; ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587502937:1143,config,configurations,1143,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587502937,2,['config'],['configurations']
Modifiability,"&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:53624,variab,variable,53624,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57923,variab,variable,57923,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,"' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:13782,variab,variable,13782,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), start=0x101, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:1140; #19 pyrun_simple_file (flags=0x7ffc080e6778, closeit=<optimized out>, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:450; #20 PyRun_SimpleFileExFlags (fp=fp; entry=0xc827e0, filename=<optimized out>, closeit=closeit; entry=0x1, flags=flags; entry=0x7ffc080e6778) at Python/pythonrun.c:483; #21 0x00007faec09ae01c in PyRun_AnyFileExFlags (fp=fp; entry=0xc827e0, filename=<optimized out>, closeit=closeit; entry=0x1, flags=flags; entry=0x7ffc080e6778) at Python/pythonrun.c:92; #22 0x00007faec09cad68 in pymain_run_file (cf=0x7ffc080e6778, config=0xbfdd70) at Modules/main.c:373; #23 pymain_run_python (exitcode=0x7ffc080e6770) at Modules/main.c:598; #24 Py_RunMain () at Modules/main.c:677; #25 0x00007faec09cb227 in pymain_main (args=0x7ffc080e6860) at Modules/main.c:707; #26 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:731; #27 0x00007faebf6bd555 in __libc_start_main () from /lib64/libc.so.6; #28 0x000000000040100e in _start (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007faebe93656a in TNamed::Streamer (this=0x4991600, R__b=...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:37143,config,config,37143,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['config'],['config']
Modifiability,"': 'file',; 'external-contents': '/opt/o2/etc/cling/std.modulemap'; }; ]; },; { 'name': '/opt/o2/include', 'type': 'directory',; 'contents': [; { 'name': 'module.modulemap', 'type': 'file',; 'external-contents': '/opt/o2/etc/cling/vc.modulemap'; }; ]; },; { 'name': '/opt/o2/include/boost', 'type': 'directory',; 'contents': [; { 'name': 'boost.modulemap', 'type': 'file',; 'external-contents': '/opt/o2/etc/cling/boost.modulemap'; }; ]; }]; }; ]; }; Adding runtime include paths:; """"; Added include paths:; Added include paths:; Setting up system headers with clang:; ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include""; ignoring nonexistent directory ""/include""; ignoring duplicate directory ""/opt/o2/include""; ignoring duplicate directory ""/opt/o2/include""; #include ""..."" search starts here:; #include <...> search starts here:; /opt/o2/include/vmc; /opt/o2/include/QualityControl; /opt/o2/include/fairmq; /opt/o2/include/GPU; /opt/o2/include; /opt/o2/etc; /opt/o2/etc//cling; /opt/o2/etc//cling/plugins/include; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward; /opt/o2/etc//cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; #include <cling/Interpreter/RuntimeUniverse.h>; namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;; RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}; extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;; #define __dso_handle ((void*)0x23f75e0); extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }; extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2152743428:4489,plugin,plugins,4489,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2152743428,1,['plugin'],['plugins']
Modifiability,"'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:19574,variab,variable,19574,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] . ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.test.test_stressHistFactory_interpreted](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301834954:81181,variab,variable,81181,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301834954,1,['variab'],['variable']
Modifiability,"'class ROOT::Experimental::RNTupleModel' has no member named 'Get'; 126 | const auto* existing_field = model.Get<bool>(name);; | ^~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'; 126 | const auto* existing_field = model.Get<bool>(name);; | ^~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token; 77 | model.AddField<UInt_t>(""run"", &m_run);; | ^; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]; 77 | model.AddField<UInt_t>(""run"", &m_run);; | ^~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token; 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);; | ^; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]; 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);; | ^~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14454#issuecomment-1914756475:1860,plugin,plugins,1860,https://root.cern,https://github.com/root-project/root/pull/14454#issuecomment-1914756475,1,['plugin'],['plugins']
Modifiability,"( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator; 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer; 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection; 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization; 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass; ```; for `-O0`, while for `-O1`:; ```; 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions; 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection; 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer; 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler; 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator; 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis; 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing; 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3; 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2; 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6; 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5; 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4; 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7; 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination; 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare; 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting; 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:3601,Variab,Variable,3601,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['Variab'],['Variable']
Modifiability,"() const (./cling+0xb4b092); > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9); > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9); > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e); > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67); > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > #14 0x0000000000a32349 _start (./cling+0xa32349); > Stack dump:; > 0.	Program arguments: ./cling -xcuda ; > Segmentation fault (core dumped); > ```; >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; ; > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-775750283:2842,config,configure,2842,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-775750283,1,['config'],['configure']
Modifiability,"(message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Failed 4.47 sec; test 884; Start 884: tutorial-dataframe-df008_createDataSetFromScratch-py. 884: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df008_createDataSetFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x62d78c) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x62d7a8)->Snapshot<double>("" [R<U+0013>,<CA>b; 884: ^; 884: input_line_40:2:211: error: expected expression; 884: <<< cling interactive line includer >>>:1:1: error: expected '}'; 884: input_line_40:1:43: note: to match this '{'; 884: void __cling_Un1Qu315(void* vpClingValue) {; 884: ^; 884: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 884: error code: -529697949; 884:; 884:; 7/16 Test #884: tutorial-dataframe-df008_createDataSetFromScratch-py .....***Failed Error regular expression found in output. Regex=[: error:] 6.23 sec; test 885; Start 885: tutorial-dataframe-df010_trivialDataSource-py. 885: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df010_trivialDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:5437,variab,variables,5437,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['variab'],['variables']
Modifiability,") at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/LookupHelper.cpp:705; #60 0x00007fffed80efde in TClingClassInfo::TClingClassInfo (this=0x1babf10, interp=0x6c8990, name=0x1bc1dd0 ""ROOT::Experimental::RHist<1,double,ROOT::Experimental::RHistStatContent,ROOT::Experimental::RHistStatUncertainty>"", intantiateTemplate=true) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingClassInfo.cxx:88; #61 0x00007fffed60498c in TCling::SetClassInfo (this=0x6c7f40, cl=0x1e612e0, reload=false) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:4034; #62 0x00007ffff6c3a9da in TClass::LoadClassInfo (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5828; #63 0x00007ffff6c392fc in TClass::GetListOfBases (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:3641; #64 0x00007ffff6c3cb46 in TClass::GetBaseClass (this=0x1e612e0, cl=0x160c7d0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:2681; #65 0x00007ffff6c43eb2 in TClass::InheritsFrom (this=0x1e612e0, cl=0x160c7d0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:4894; #66 0x00007ffff6c47ba7 in TClass::Property (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:6100; #67 0x00007ffff6c46dc7 in TClass::IsForeign (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5938; #68 0x00007ffff6c46e68 in TClass::PostLoadCheck (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5955; #69 0x00007ffff6c3e928 in TClass::GetClass (typeinfo=..., load=true, hint_pair_offset=0, hint_pair_size=0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:3284; #70 0x000000000058b9d1 in ROOT::Internal::TClassGetClassHelper<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> >::GetClass (load=true, silent=false) at /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:628; #71 0x000000000058b97f in ROOT::Internal::GetClassHelper<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403351246:15069,Inherit,InheritsFrom,15069,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403351246,1,['Inherit'],['InheritsFrom']
Modifiability,") src/core/base/src/TApplication.cxx:1480:11; #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14; #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11; #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22; #24 0x4ff96d in main src/main/src/rmain.cxx:30:12; #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16; #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame; #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):; [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable; [96, 104) 'R__guard2471' (line 2471); [128, 136) 'R__guard2488' (line 2488); [160, 176) 'interpreterFlagsRAII' (line 2491); [192, 240) 'result' (line 2511); [272, 276) 'compRes' (line 2512); [288, 312) 'mod_line' (line 2517); [352, 376) 'aclicMode' (line 2518); [416, 440) 'arguments' (line 2519); [480, 504) 'io' (line 2520); [544, 568) 'fname' (line 2521); [608, 632) 'ref.tmp' (line 2547); [672, 696) 'ref.tmp145' (line 2547); [736, 768) 'code' (line 2555); [800, 832) 'codeline' (line 2556); [864, 1384) 'in' (line 2559); [1520, 1552) 'ref.tmp176' (line 2562); [1584, 1600) 'agg.tmp'; [1616, 1624) 'ref.tmp198' (line 2568); [1648, 1664) 'agg.tmp207'; [1680, 1696) 'autoParseRaii' (line 2588); HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork; (longjmp and C++ exceptions *are* supported); SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&); Shadow bytes around the buggy address:; 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ac0: f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:4705,variab,variable,4705,https://root.cern,https://github.com/root-project/root/pull/8041,1,['variab'],['variable']
Modifiability,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:2058,config,configured,2058,https://root.cern,https://github.com/root-project/root/issues/9036,1,['config'],['configured']
Modifiability,")::BinOpInfo const&), llvm::Value*&) [clone .constprop.0]':; CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter24EmitCompoundAssignLValueEPKN5clang22CompoundAssignOperatorEMS0_FPN4llvm5ValueERKNS_9BinOpInfoEERS7_.constprop.0+0x67c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaExprObjC.cpp.o): in function `applyCocoaAPICheck(clang::Sema&, clang::ObjCMessageExpr const*, unsigned int, bool (*)(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)) [clone .constprop.0]':; SemaExprObjC.cpp:(.text._ZL18applyCocoaAPICheckRN5clang4SemaEPKNS_15ObjCMessageExprEjPFbS4_RKNS_5NSAPIERNS_4edit6CommitEE.constprop.0+0x13c): undefined reference to `clang::edit::rewriteObjCRedundantCallWithLiteral(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaType.cpp.o): in function `clang::Sema::hasStructuralCompatLayout(clang::Decl*, clang::Decl*)':; SemaType.cpp:(.text._ZN5clang4Sema25hasStructuralCompatLayoutEPNS_4DeclES2_+0x15b): undefined reference to `clang::StructuralEquivalenceContext::IsEquivalent(clang::Decl*, clang::Decl*)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangAnalysis.a(AnalysisDeclContext.cpp.o): in function `clang::AnalysisDeclContext::getBody(bool&) const':; AnalysisDeclContext.cpp:(.text._ZNK5clang19AnalysisDeclContext7getBodyERb+0x117): undefined reference to `clang::BodyFarm::getBody(clang::ObjCMethodDecl const*)'; /usr/bin/ld: AnalysisDeclContext.cpp:(.text._ZNK5clang19AnalysisDeclContext7getBodyERb+0x148): undefined reference to `clang::BodyFarm::getBody(clang::FunctionDecl const*)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangAST.a(ASTImporter.cpp.o): in functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487:6428,rewrite,rewriteObjCRedundantCallWithLiteral,6428,https://root.cern,https://github.com/root-project/root/issues/8487,1,['rewrite'],['rewriteObjCRedundantCallWithLiteral']
Modifiability,"); ; cosa = ROOT.RooRealVar(""cosa"",""cosa"",-1.,1.); kAww = ROOT.RooRealVar(""kAww"",""kAww"",1.); kSM = ROOT.RooRealVar(""kSM"",""kSM"",1.); Lambda = ROOT.RooRealVar(""Lambda"",""Lambda"",1000.); kHww = ROOT.RooRealVar(""kHww"",""kHww"",0.); ; gSM = ROOT.RooFormulaVar(""_gSM"" ,""cosa*kSM"", ROOT.RooArgList(cosa,kSM)); gHww = ROOT.RooFormulaVar(""_gHww"" ,""cosa*kHww/Lambda"", ROOT.RooArgList(cosa,kHww,Lambda)); gAww = ROOT.RooFormulaVar(""_gAww"" ,""sqrt(1-(cosa*cosa))*kAww/Lambda"", ROOT.RooArgList(cosa,kAww,Lambda)); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ""samples-analyzed-NonSMggF-250722-o.root""; ; obsvar.setConstant(True); ; par = ""cosa""; samplelist = [""sig_X_ggf_BSM1"", ""sig_X_ggf_BSM2"", ""sig_X_ggf_SM""]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = obsname; config.folderNames = samplelist; config.couplings.add(gSM); config.couplings.add(gHww); config.couplings.add(gAww); ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of DPhill"", config); ; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # Extract input templates for plotting; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfuncpdf = ROOT.RooWrapperPdf(""morphpdf"", ""morphpdf"",morphfunc); ws = ROOT.RooWorkspace(""workspace""); ws.Import(morphfuncpdf); ; return ws. def plot(ws):; morphfunc = ws.function(""morphfunc""); morphpdf = ws.pdf(""morphpdf""); obsvar = ws.var(obsname). UnfoldedFile = ROOT.TFile.Open(""Unfolded.root"",""READ""); U1 = UnfoldedFile.Get(""DPhill""); data_hist=ROOT.RooDataHist(""dphill"",""dphill"",[obsvar],U1); ; morphpdf.fitTo(data_h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11044#issuecomment-1209312505:1702,config,config,1702,https://root.cern,https://github.com/root-project/root/issues/11044#issuecomment-1209312505,1,['config'],['config']
Modifiability,"); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 self.__transformOneGroup(Header.group(5)); 333 elif EmptyHeader:; 334 self.__currentType = EmptyHeader.group(1). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in __transformOneGroup(self, firstLine); 226 if j != 0:; 227 processed_lines += 1; --> 228 self.iterLines.next(); 229 tmp_str += ""<tr>""; 230 if DatasetName or NumEvents or VariableMeanHeader:. AttributeError: 'range_iterator' object has no attribute 'next'; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version 6.22/02 (via conda); OS: Ubuntu 18.04.5 LTS; (see top of the post for conda environment files). Please let me know if I can provide any more useful information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:3334,Variab,VariableMeanHeader,3334,https://root.cern,https://github.com/root-project/root/issues/6657,1,['Variab'],['VariableMeanHeader']
Modifiability,* A pythonization of `RooAbsCollection::addOwned` is introduced to fix issue #8120. * The unit tests for the pythonization of `RooAbsCollection` were also extended to cover new developments from PR https://github.com/root-project/root/pull/8177. * A pythonization of `RooAbsCollection::operator()` is introduced as discussed in https://github.com/root-project/root/pull/8174.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8179:155,extend,extended,155,https://root.cern,https://github.com/root-project/root/pull/8179,1,['extend'],['extended']
Modifiability,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107:2,Adapt,Adapted,2,https://root.cern,https://github.com/root-project/root/pull/6107,1,['Adapt'],['Adapted']
Modifiability,"* Add a new `ExternalConstraints()` field to the model config, to be directly passed to `createNLL`. This follows exactly the same pattern as the fields for `GlobalObservables()` and `ProjectedObservables()`. * New `ModelConfig::createNLL()` and `fitTo()` functions, such that the user doesn't need to manually transfer the information from the ModelConfig to `RooAbsPdf::createNLL/fitTo()`. * Use the new `ModelConfig::createNLL()` in RooStats to give it a little bit of test coverage. FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12877:55,config,config,55,https://root.cern,https://github.com/root-project/root/pull/12877,1,['config'],['config']
Modifiability,"* Avoid coning of plot variable twice then plotting a `RooAbsReal`, as the new BatchMode doesn't like model cloning; * Some minor fixes in `BatchModeHelpers`; * Improving the interface of `RooAbsReal::createPlotProjection`; * Use also the different BatchMode backends in the `createNLL` calls in `stressRooFit`, extending text coverage also to (profile) likelihood scans with the new BatchMode. The likelihood scans in the tutorials are up to 10 times faster now when using the new BatchMode compared to RooFit legacy. More detail can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11123:23,variab,variable,23,https://root.cern,https://github.com/root-project/root/pull/11123,2,"['extend', 'variab']","['extending', 'variable']"
Modifiability,* Controlled error when step size is 0.; * Small enhancement when TSeq printed in cling (properly show when the; step is smaller than 0),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10407:49,enhance,enhancement,49,https://root.cern,https://github.com/root-project/root/pull/10407,1,['enhance'],['enhancement']
Modifiability,* Correctly configure layout properties for the TreeTable in RBrowser and RGeometryViewer; * Do not use row._bHasChildren field which is private and may be changed/removed in future ui5 versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4628:12,config,configure,12,https://root.cern,https://github.com/root-project/root/pull/4628,1,['config'],['configure']
Modifiability,* Fix an issue with `root-config --has-whatever`. Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory). * [skip-ci] Fix the comment,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10923:26,config,config,26,https://root.cern,https://github.com/root-project/root/pull/10923,3,['config'],['config']
Modifiability,"* Fix unused variable warning in `TMPWorkerExecutor` by moving variable in the only code branch where it's actually used. * Fix some warnings about deprecated enum arithmetics by using `constexpr static int` instead of `enum`. * Fix warnings about the deprecation of `volatile` in C++ by not using it. With these changes, I can compile RooFit again without seeing warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12682:13,variab,variable,13,https://root.cern,https://github.com/root-project/root/pull/12682,2,['variab'],['variable']
Modifiability,"* Fixing inheritance of C++ classes in Python and callbacks to C++ with; object created in Python; * See upstream issue https://bitbucket.org/wlav/cppyy/issues/229/issue-with-python-class-that-derives-from; * Ports following commits of cppyy-backend: 4670bcf0d82d2f1650f739115576a884f51340f6; * Ports following commits of CPyCppyy:; 9d0eca19281a0f38c9cd80628279f1c76f5fe71c,; 398347bd01b693d0f4e7d2c6cef5c9d30adba2b5, 96de8a868b214eeb4be0f4be4914224ba7de6805",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5587:9,inherit,inheritance,9,https://root.cern,https://github.com/root-project/root/pull/5587,1,['inherit'],['inheritance']
Modifiability,* I have refactored the existing methodDL tests to support testing various optimizers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379:9,refactor,refactored,9,https://root.cern,https://github.com/root-project/root/pull/2379,1,['refactor'],['refactored']
Modifiability,* Protect the axes with labels from being extended by `FindBin` when filling the histogram projected from TH2 and TH3; * Transfer the axes' attributes and labels when creating a profile from TH2 and TH3. This PR resolves #6658,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14712:42,extend,extended,42,https://root.cern,https://github.com/root-project/root/pull/14712,1,['extend'],['extended']
Modifiability,"* Refactor the original HistFactory code such that pieces can be reused in the HS3 JSON IO implementation; * Fix problems with ""reverse engineering"" the name of the `ShapeSys` systematics from the ParamHistFunc name; * The `testHistFactory` unit test now validates full JSON roundtripping closure of workspaces with `ShapeSys`, both with Gaussian and Poisson constraints. More details in the commit descriptions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13572:2,Refactor,Refactor,2,https://root.cern,https://github.com/root-project/root/pull/13572,1,['Refactor'],['Refactor']
Modifiability,* Remove ROOT.ROOT calls in the Python tutorials; * Use rdfentry_ instead of tdfentry_; * Use df for variables instead of tdf. @etejedor Fine by you? The tutorials will now break with the old PyROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5189:101,variab,variables,101,https://root.cern,https://github.com/root-project/root/pull/5189,1,['variab'],['variables']
Modifiability,* Remove man pages for non-existing binaries; They might have existed in the past: g2rootold genmap proofserva roota. * Install generated man pages in the correct subdirectory (man/man1). * Use the correct library name in the plugin definitions. * Remove obsolete plugin definition; libPeac was removed in version 5.34.01. * Simplify rule; No need to exclude files that no longer exists. * TWebVirtualX was removed - remove plugin definition using it; See commit a07af0afbe2e26237bf8ca059abc34255378a070. * Don't download input file if it already exists; This allows running the tests with pre-fetched file in environments without network - like e.g. the Fedora package build server. * Python 3 compatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4026:226,plugin,plugin,226,https://root.cern,https://github.com/root-project/root/pull/4026,3,['plugin'],['plugin']
Modifiability,* Remove unnecessary alias for `ABC` in Python 2; * Remove spurious `from __future__ import print_function`; * Place creation of `logger` variable after import statements in `Proxy.py`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9938:138,variab,variable,138,https://root.cern,https://github.com/root-project/root/pull/9938,1,['variab'],['variable']
Modifiability,* Rename DeclareCppCallable to Numba.Declare; * Remove generic backend; * Rename and adapt test accordingly; * Add support for RVecs in callables jitted with numba; * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5310:85,adapt,adapt,85,https://root.cern,https://github.com/root-project/root/pull/5310,1,['adapt'],['adapt']
Modifiability,"* Since the `RooAbsMinimizeFcn` implementations don't need to be copied; anymore, we can use `std::unique_ptr` instead of `shared_ptr` for; clear ownership and less overhead. * Name variables to be consistent with RooFit style. * Streamline `public` and `private` scopes. * Avoid code duplication with new private member function that applies a; specific call to both the regular likelihood and the likelihood in the; gradient. * Additional commit fixes memory leaks of toy datasets in `TestStatistics` tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12361:182,variab,variables,182,https://root.cern,https://github.com/root-project/root/pull/12361,1,['variab'],['variables']
Modifiability,* This commit allows the compiler to potentially; inline/optimize construction of TObjects; * This is in particular important for data-objects; which are created billions of times and which inherit from; TObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/482:190,inherit,inherit,190,https://root.cern,https://github.com/root-project/root/pull/482,1,['inherit'],['inherit']
Modifiability,"* Use only **Browsable::Provider** class for all factory methods; * Split ROOT6 and ROOT7 drawing plugins; * Rename RBrowsable -> RBrowserData to avoid confusion; * Fix Windows compiler error, tests on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4785:98,plugin,plugins,98,https://root.cern,https://github.com/root-project/root/pull/4785,1,['plugin'],['plugins']
Modifiability,* Use proper infinity checks in RooFit HS3; * New `domains` section in JSON to store variable ranges; * Some refactoring of RooFit HS3; * Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; * Add likelihoods and analyses fields for HS3 v2; * Complete also the reading of likelihoods and analysis fields; * Rename fields in JSON file to match new standard. More description in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12207:85,variab,variable,85,https://root.cern,https://github.com/root-project/root/pull/12207,2,"['refactor', 'variab']","['refactoring', 'variable']"
Modifiability,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8001:108,Config,Config,108,https://root.cern,https://github.com/root-project/root/pull/8001,3,['Config'],['Config']
Modifiability,"* introduce new `RooAbsData::sumEntriesW2()` member function to; calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`; overload to conveniently compute the extended term also outside the; the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was; originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended; term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8378:146,extend,extendedTerm,146,https://root.cern,https://github.com/root-project/root/pull/8378,3,['extend'],"['extended', 'extendedTerm']"
Modifiability,"* remove unused variable fTmpBranches from TDataFrameImpl; * inizialize fLastCheckedEntry to -1 for all threads; * total size of collection returned by Take is now a ULong64_t; * {Ret,Arg}Type_t -> {Ret,Args}_t: more readable, no redundancy; * minor text fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/336:16,variab,variable,16,https://root.cern,https://github.com/root-project/root/pull/336,1,['variab'],['variable']
Modifiability,"* remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15163:546,Extend,Extends,546,https://root.cern,https://github.com/root-project/root/pull/15163,1,['Extend'],['Extends']
Modifiability,"* replace ROOTSYS by $ROOTSYS; * import new options for `root` and `root-config` from the current help messages; * extended the explanation of `root` for macro compilation (`+`, `+O`, ...), combinations of macro and data files, combinations of macros with expressions; * updated a few URLs; * updated root-config explanation for Makefiles (adapting to built-in rules). Please check, especially the third point is based my on my regular usage of root and not on the official documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487:73,config,config,73,https://root.cern,https://github.com/root-project/root/pull/1487,4,"['adapt', 'config', 'extend']","['adapting', 'config', 'extended']"
Modifiability,* unused variables; * mixing `int` and `bool` in comparison,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9682:9,variab,variables,9,https://root.cern,https://github.com/root-project/root/pull/9682,1,['variab'],['variables']
Modifiability,"*********************************************************; ******************************************************************; * Starting S T R E S S basic suite *; ******************************************************************; Test 1 : Fitting,plotting & event generation of basic p.d.f.....OK; Test 2 : Data import methods....................................OK; Test 3 : Interpreted expression p.d.f...........................OK; Test 4 : C++ function binding operator p.d.f....................OK; Test 5 : Non-standard binning in counting and asymmetry plots...OK; Test 6 : Calculation of chi^2 and residuals in plots............OK; Test 7 : Normalization of p.d.f.s in 1D.........................OK; Test 8 : Numeric integration configuration......................OK; Test 9 : Addition operator p.d.f................................OK; Test 10 : Extended ML fits to addition operator p.d.f.s..........OK; Test 11 : Basic fitting and plotting in ranges...................OK; Test 12 : Extended ML fit in sub range...........................OK; Test 13 : Component plotting variations..........................OK; Test 14 : FFT Convolution operator p.d.f.........................SKIPPED; Test 15 : Analytical convolution operator........................OK; Test 16 : Composition extension of basic p.d.f...................OK; Test 17 : Sum and product utility functions......................OK; Test 18 : Conditional use of F(x|y)..............................OK; Test 19 : Product operator p.d.f. with uncorrelated terms........OK; Test 20 : Product operator p.d.f. with conditional term..........OK; Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK; Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............OK; Test 23 : Normalization of p.d.f.s in 2D.........................OK; Test 24 : Data and p.d.f projection in category slice............OK; Test 25 : Data and p.d.f projection in sub range.................OK; Test 26 : Fit in multiple rectangular ranges...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:3182,Extend,Extended,3182,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,1,['Extend'],['Extended']
Modifiability,"***********************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treefriend: treefriend3.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend3: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 471 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ```. ## Sub-case 3.1; If we call the friend variable ""treefriend.y"", we get; Result from TTree:Scan(""x:treefriend.y""):; ```; Error in <TTreeFormula::Compile>: Bad numerical expression : ""treefriend.y""; ************************************; * Row * x * treefrien *; ************************************; * 0 * 0 * *; * 1 * 1 * *; * 2 * 2 * *; * 3 * 3 * *; * 4 * 4 * *; * 5 * 5 * *; * 6 * 6 * *; * 7 * 7 * *; * 8 * 8 * *; ************************************; ```; Result from rdf.Display()->Print():; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch treefriend.y is contained in a Friend TTree that is not directly attached to the main.; This is not yet supported by TTreeReader.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; Aborted (core dumped); ```; Which are both somewhat unexpected since the friend chain has a name and it should be easy to distinguish its entries from the main tree. I do like better the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:14060,variab,variable,14060,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['variab'],['variable']
Modifiability,"**Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**; For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**; 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root; 2. mkdir F:\gitP\root-project\root\build_x86; 3. cd F:\gitP\root-project\root\build_x86; 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 5. python.exe -m pip install pytest; 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. ; 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild; 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1""; 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**; VS 2019 + Windows Server 2019. **Additional context**; [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742:110,config,configuration,110,https://root.cern,https://github.com/root-project/root/issues/9742,2,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"**Description of the bug**. In order to use TMapFile I link the application with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:189,config,config,189,https://root.cern,https://github.com/root-project/root/issues/11353,1,['config'],['config']
Modifiability,"*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:3404,Config,ConfigurableParam,3404,https://root.cern,https://github.com/root-project/root/issues/8180,2,['Config'],['ConfigurableParam']
Modifiability,"*N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084:485,config,configuration,485,https://root.cern,https://github.com/root-project/root/issues/14084,1,['config'],['configuration']
Modifiability,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12610:249,variab,variables,249,https://root.cern,https://github.com/root-project/root/issues/12610,3,['variab'],"['variable', 'variables']"
Modifiability,", 13, 1, 1, 987654); (bool) true; root [10] stmt->NextIteration(); (bool) true; root [11] stmt->SetTimestamp(0, time_stamp); (bool) true; root [12] stmt->Process(); (bool) true; ```; Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:; ```; root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""); (TString &) ""pgsql://xxxxxxx/test_db""[32]; root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") ; (TSQLServer *) 0x55cee530db80; root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""); (TSQLStatement *) 0x55cee5346320; root [3] stmt->Process(); (bool) true; root [4] stmt->StoreResult(); (bool) true; root [5] stmt->NextResultRow(); (bool) true; root [6] Int_t year, month, day, hour, minute, sec, mcs;; root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec); (bool) true; root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;; Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1; root [9] stmt->NextResultRow(); (bool) true; root [10] TDatime time_stamp = stmt->GetDatime(0); (TDatime &) Mon Jun 3 10:01:01 2019; root [11] stmt->NextResultRow(); (bool) true; root [12] stmt->GetTimestamp(0, year, month, day, hour, minute, sec, mcs); (bool) true; root [13] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<"". Microsecond: ""<<mcs<<endl;; Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. Microsecond: ; root [14] stmt->NextResultRow(); (bool) true; root [15] time_stamp = stmt->GetTimestamp(0); (TDatime &) Mon Jun 3 10:01:01 2019; ```; And also the last reading returns 987600 microseconds (not 987654) because the date/time string variable is larger than kBindStringSize. ![timestamptz](https://user-images.githubusercontent.com/35529614/59505391-f278cc00-8ead-11e9-84cb-4b4fea2e959a.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-502064205:2779,variab,variable,2779,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-502064205,1,['variab'],['variable']
Modifiability,", __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:18404,plugin,plugins,18404,https://root.cern,https://github.com/root-project/root/issues/8931,1,['plugin'],['plugins']
Modifiability,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:5549,config,config,5549,https://root.cern,https://github.com/root-project/root/issues/16242,3,['config'],['config']
Modifiability,", it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:; ```; [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here?. The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):; ```; [ 0%] Built target AFTERIMAGE; ```; while mine has (grepped out AFTERIMAGE parts):; ```; [ 0%] Creating directories for 'AFTERIMAGE'; [ 2%] Performing download step for 'AFTERIMAGE'; [ 10%] No update step for 'AFTERIMAGE'; [ 12%] No patch step for 'AFTERIMAGE'; [ 16%] Performing configure step for 'AFTERIMAGE'; -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log; [ 85%] Performing build step for 'AFTERIMAGE'; -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; [ 97%] Performing install step for 'AFTERIMAGE'; -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log; [ 97%] Completed 'AFTERIMAGE'; [ 97%] Built target AFTERIMAGE; [ 97%] Built target G__ASImage; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; [ 97%] Linking CXX shared library ../../lib/libASImage.so; [ 97%] Built target ASImage; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2250921631:1153,config,configure,1153,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2250921631,1,['config'],['configure']
Modifiability,"- A new parameter, the lazyness of the snapshot, has been added to the TSnapshotOptions; - The Snapshot methods return a TResultPtr<TInteface<TLoopManager>> rather than a TInteface<TLoopManager>; - Tests and tutorials adapted; - New test for lazy snapshot added",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1870:218,adapt,adapted,218,https://root.cern,https://github.com/root-project/root/pull/1870,1,['adapt'],['adapted']
Modifiability,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add `lsan` build option to enable leak checking.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Add ASAN_OPTIONS and LSAN_OPTIONS environment variables for; executables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066:295,variab,variables,295,https://root.cern,https://github.com/root-project/root/pull/5066,1,['variab'],['variables']
Modifiability,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5237:311,config,configuring,311,https://root.cern,https://github.com/root-project/root/pull/5237,1,['config'],['configuring']
Modifiability,- Allow to steer the unit switching between Geant4 units and ROOT units with an unlock mechanism. The (un)lock mechanism can be enabled by a static member of the TGeoManager; - Adapt the GDML parser and writer accordingly to output the correct units.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7165:177,Adapt,Adapt,177,https://root.cern,https://github.com/root-project/root/pull/7165,1,['Adapt'],['Adapt']
Modifiability,- Fix segfault if class name has underscore in name; - Fix segfault if no identity variable transformation is booked,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/881:83,variab,variable,83,https://root.cern,https://github.com/root-project/root/pull/881,1,['variab'],['variable']
Modifiability,- Fix the computation in case of imt or blas is not available. . Use still TCpuMatrix class (TCpu architecture) but use TMatrix for matrix multiplication instead of BLAS\; Only dense layers architectures are supported in this case. - Fix tutorials for the no-imt case. - Use Higgs data file from root.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5519:183,layers,layers,183,https://root.cern,https://github.com/root-project/root/pull/5519,1,['layers'],['layers']
Modifiability,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14201:137,variab,variable,137,https://root.cern,https://github.com/root-project/root/pull/14201,2,['variab'],['variable']
Modifiability,"- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/build/unix/compiledata.sh; Making /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-4.18.0-305.12.1.el8_4.x86_64; Processor 16 core Intel Core Processor (Broadwell, IBRS) (x86_64); Build type Debug; Install path /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/ROOT/HEAD/x86_64-centos7-gcc9-dbg; Compiler GNU 9.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -g; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage asserts builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_glew builtin_llvm builtin_lz4 builtin_openui5 builtin_pcre builtin_unuran bui; ltin_xxhash builtin_zstd clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gsl_shared http imt mathmore mlp minuit2 mysql opengl oracle pyroot roofit webgui root7 rpa; th runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:19286,Config,Configuration,19286,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['Config'],['Configuration']
Modifiability,- Refactor AdaBoost; - Add multi-class support; - Add ranking feature; - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/315:2,Refactor,Refactor,2,https://root.cern,https://github.com/root-project/root/pull/315,1,['Refactor'],['Refactor']
Modifiability,- Remove `dynamic_cast` for cross casts in a multiple inheritance setting; - Reduce the size of datasets by removing observables that are not in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9412:54,inherit,inheritance,54,https://root.cern,https://github.com/root-project/root/pull/9412,1,['inherit'],['inheritance']
Modifiability,"- Replace the duo of `cudnn` and `tmva-cudnn` by just `tmva-cudnn`. Otherwise, ROOT can be configured to an invalid state where everything compiles but doesn't link.; - Modernise the CMake code that links to cuDNN, going from variables to an imported target. Fix #16715",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16759:91,config,configured,91,https://root.cern,https://github.com/root-project/root/pull/16759,2,"['config', 'variab']","['configured', 'variables']"
Modifiability,- Switch object format from ELF (Linux) to COFF (Windows); - Fix mangled symbols lookup on Windows: remove leading '_' and use malloc to simulate __imp_ variables (that are indirection pointers),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1400:153,variab,variables,153,https://root.cern,https://github.com/root-project/root/pull/1400,1,['variab'],['variables']
Modifiability,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5441:179,layers,layers,179,https://root.cern,https://github.com/root-project/root/pull/5441,1,['layers'],['layers']
Modifiability,"- TThreadExecutor's task pool initializer is now a unique_ptr.; - Removed useless Reduction resolver.; - Change the way Reduce was inherited + overloaded. It was working due; to a GCC bug. See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308; (thanks, Axel); - Chunked Map is now protected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/291:131,inherit,inherited,131,https://root.cern,https://github.com/root-project/root/pull/291,1,['inherit'],['inherited']
Modifiability,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16465:39,variab,variable,39,https://root.cern,https://github.com/root-project/root/pull/16465,1,['variab'],['variable']
Modifiability,- Update Vc to version 1.3.0; - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch); - Use same compiler options and installation prefix as ROOT; - Configure and install Vc into CMake binary directory; - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/360:178,Config,Configure,178,https://root.cern,https://github.com/root-project/root/pull/360,1,['Config'],['Configure']
Modifiability,- Use `PCRE_PCRE_LIBRARY` and `PCRE_PCREPOSIX_LIBRARY` variables; - Avoid installation of empty `lib/pkgconfig` directory. Fixes: [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3266:55,variab,variables,55,https://root.cern,https://github.com/root-project/root/pull/3266,1,['variab'],['variables']
Modifiability,- Use the same flags for `LLVM` than for `ROOT`; - Print out the multi-configuration generator flags; - Fix `root-config.bat` and `compiledata.win32`; - Increase the stack size for `rootcling` and for the `rfield_variant` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16092:71,config,configuration,71,https://root.cern,https://github.com/root-project/root/pull/16092,2,['config'],"['config', 'configuration']"
Modifiability,- When imt is off one needs to have still the imt dependency for using TExecutor; - Fix correct definition for variable defining location of vdt headers.; It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9441:111,variab,variable,111,https://root.cern,https://github.com/root-project/root/pull/9441,1,['variab'],['variable']
Modifiability,"- When the LLVM_BUILD_TYPE is Release, but the CXX_FLAGS are empty, a; warning is issued.; - When configuring, fix the order in which compiler flags are printed. This is the issue mentioned on mattermost. Axel proposed to issue a warning in this case. The question is if this warning catches all cases where build types might be set up wrongly or if the `CMAKE_CXX_FLAGS_${LLVM_BUILD_TYPE}` should be tested.; I also fixed the order in which the compiler flags are printed. I didn't get to this before cache-variable PR where I promised to do this got merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4243:98,config,configuring,98,https://root.cern,https://github.com/root-project/root/pull/4243,2,"['config', 'variab']","['configuring', 'variable']"
Modifiability,"- When weight errors are added to a RooDataSet, but the dataset hasn't; been set up to store weights, these are silently ignored. Users will now; see warnings.; - After adding the last event, the weight variable will keep the value; of the weight error until a new error is set. RooDataSet::add(); therefore now resets weight and weight error after adding an entry. [ROOT-10259]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4178:203,variab,variable,203,https://root.cern,https://github.com/root-project/root/pull/4178,1,['variab'],['variable']
Modifiability,"- [ ] Checked for duplicates. When the `auto` keyword is used in the interpreter to substitute pointer types, the value of the pointer is not printed out correctly, even though the pointer points to the correct variable. A few simple interpreter commands to reproduce the problem:; ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto xp = &x; (int *) @0x7ffe114d3bb8 <- WRONG!; root [3] auto yp = &y; (int *) @0x7ffe114d3bb8 <- WRONG!; root [4] &x; (int *) 0x7f3bcb682018; root [5] &y; (int *) 0x7f3bcb68201c; root [6] xp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [7] yp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. However, if one uses `auto *` instead of auto, one gets the expected behavior:. ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto * xp = &x; (int *) 0x7f8f0a394018 <- CORRECT!; root [3] auto * yp = &y; (int *) 0x7f8f0a39401c <- CORRECT!; root [4] &x; (int *) 0x7f8f0a394018; root [5] &y; (int *) 0x7f8f0a39401c; root [6] xp; (int *) 0x7f8f0a394018 <- CORRECT!; root [7] yp; (int *) 0x7f8f0a39401c <- CORRECT!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. Can we fix the interpreter such that it also prints the correct pointer values when `auto` is used?. This problem was originally spotted on the ROOT forum:; https://root-forum.cern.ch/t/wrong-object-returned-in-root-when-using-auto-keyword",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8806:211,variab,variable,211,https://root.cern,https://github.com/root-project/root/issues/8806,1,['variab'],['variable']
Modifiability,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12786:420,config,config,420,https://root.cern,https://github.com/root-project/root/issues/12786,2,['config'],['config']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Using the `Print(""v"")` option causes a segfault for a few RooFit classes. ### Expected behavior. The printout happens. ### To Reproduce. Take a HistFactory made workspace, select a `FlexibleInterpVar` or a `RooProduct` and call `Print(""v"")`. ### Setup. current master, compiled on archlinux. ### Additional context. The crash always happens in the `Proxies` section, possibly related to the `RooListProxy` rewrite by @hageboeck",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10385:565,Flexible,FlexibleInterpVar,565,https://root.cern,https://github.com/root-project/root/issues/10385,2,"['Flexible', 'rewrite']","['FlexibleInterpVar', 'rewrite']"
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963:693,config,configuration,693,https://root.cern,https://github.com/root-project/root/issues/10963,2,['config'],['configuration']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10572:496,variab,variables,496,https://root.cern,https://github.com/root-project/root/issues/10572,3,['variab'],"['variable', 'variables']"
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Trying to load the plugin for a module that was not compiled returns 0 (success value); ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Return the failure value (-1 ?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Tested with master branch on Monterey MacBook Air (M1, 2020), compiled from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The same code on my Ubuntu 22.04 returns correctly -1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326:477,plugin,plugin,477,https://root.cern,https://github.com/root-project/root/issues/12326,1,['plugin'],['plugin']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter De",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:482,CONFIG,CONFIG,482,https://root.cern,https://github.com/root-project/root/issues/8942,1,['CONFIG'],['CONFIG']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. ; The version copied and adapted of the function is somehow linked to an old version. ; The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. ; In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7254:488,adapt,adapted,488,https://root.cern,https://github.com/root-project/root/issues/7254,1,['adapt'],['adapted']
Modifiability,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8708:1899,config,configured,1899,https://root.cern,https://github.com/root-project/root/issues/8708,1,['config'],['configured']
Modifiability,"- [2022-10-14T16:27:00.539Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Error.h(1223,2): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_567e3d6bsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\RISCVToolchain.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-10-14T16:27:00.539Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/iterator_range.h(43,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ebed891csy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCoroutine.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-10-14T16:27:00.539Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Attributes.h(80,12): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_79f1cb6bdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\VirtRegMap.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-10-14T16:27:00.990Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Edit\RewriteObjCFoundationAPI.cpp(1184,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_68a6b331in': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Edit\obj.clangEdit.vcxproj] . And 51 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11570#issuecomment-1279221547:4802,Rewrite,RewriteObjCFoundationAPI,4802,https://root.cern,https://github.com/root-project/root/pull/11570#issuecomment-1279221547,1,['Rewrite'],['RewriteObjCFoundationAPI']
Modifiability,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448:197,variab,variables,197,https://root.cern,https://github.com/root-project/root/issues/8448,1,['variab'],['variables']
Modifiability,"- [X] Checked for duplicates. ### Describe the bug; When ROOT is configured with `-Druntime_cxxmodules:BOOL=OFF`, then deprecation warnings (from `[[deprecated]]`) are not shown in the Cling interpreter. ### Expected behavior; * Either warnings should be shown in `-Druntime_cxxmodules:BOOL=OFF` configurations; * Or the behaviour should be documented in a clear and concise way. ### To Reproduce. With `-Druntime_cxxmodules:BOOL=OFF`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root -q -l foo.C. Processing foo.C...; $; ```. With `-Druntime_cxxmodules:BOOL=ON`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root.exe -q -l foo.C. Processing foo.C...; input_line_9:2:2: warning: 'foo' is deprecated [-Wdeprecated-declarations]; foo() /* '.x' tries to invoke a function with the same name as the macro */; ^; /tmp/foo.C:1:3: note: 'foo' has been explicitly marked deprecated here; [[deprecated]] void foo() { }; ^; ```. ### Setup. 1. ROOT version: 6.22.08 and 6.24.06; 2. Linux (Debian-10 for me, other OS for others); 3. Built from source using private spack rules, built straight from source. ### Additional context; See discussion on the ""Cling"" Channel in Mattermost. cc: @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9815:65,config,configured,65,https://root.cern,https://github.com/root-project/root/issues/9815,2,['config'],"['configurations', 'configured']"
Modifiability,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11743:352,config,configure,352,https://root.cern,https://github.com/root-project/root/issues/11743,2,['config'],['configure']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no memb",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:574,config,config,574,https://root.cern,https://github.com/root-project/root/issues/8418,1,['config'],['config']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; * The `GetSize()` result of the `TClonesArray` fed to the (re)defining function are always 1000, not reflecting the correct value.; * Redefining a variable that was the type `TClonesArray` causes `GetColumnNames()` method to return a column name vector with repeated column names, and trying to snapshot against related names causes fatal errors. ### Expected behavior; * The `GetSize()` method of the input `TClonesArray` returns the correct size.; * `GetColumnNames()` produces unique column names.; * The redefined `TClonesArray` can be snapshot correctly. ### To Reproduce; 1. Place two ROOT macros in the same directory:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TClonesArray.h>; #include <TLorentzVector.h>. #include <string>; #include <cstdio>; #include <cstdlib>; #include <iostream>. Float_t gen_rand() {; 	return rand() / static_cast<Double_t>(RAND_MAX);; }. void gen_tree(const std::string pathFile = ""file_tcatlv.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of TClonesArrays of TLorentzVectors"");; 	auto *tcaTest = new TClonesArray(""TLorentzVector"", 8);; 	size_t nVar;; 	ttOut->Branch(""TestVar1"", tcaTest);; 	ttOut->Branch(""nTestVar1"", &nVar);; 	constexpr size_t nEntries = 10;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		tcaTest->Clear();; 		nVar = rand() % 8;; 		tcaTest->Expand(nVar);; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tsize: "" << tcaTest->GetSize() << std::endl;; 		for (size_t iVar = 0; iVar < nVar;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:530,variab,variable,530,https://root.cern,https://github.com/root-project/root/issues/9240,1,['variab'],['variable']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:463,config,configuring,463,https://root.cern,https://github.com/root-project/root/issues/7345,1,['config'],['configuring']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile and run the following macro with `root -l -b -q T.C+`:; ```C++; #include <vector>; #include ""TTree.h"". #pragma link C++ class A;; #pragma link C++ class B+;; #pragma link C++ class std::vector<B>+;. struct A {; int x;; ClassDef(A, 1);; };; ClassImp(A);. struct B : A {; int y;; ClassDef(B, 1);; };; ClassImp(B);. void T() {; TTree* tree = new TTree(""T"", ""T"");; std::vector<B> bvec;; tree->Branch(""B"", &bvec);; }; ```; Macro aborts with the error: ; ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.22.08 (built myself), 6.26.00 (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:563,inherit,inherits,563,https://root.cern,https://github.com/root-project/root/issues/10240,1,['inherit'],['inherits']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087:1621,sandbox,sandbox,1621,https://root.cern,https://github.com/root-project/root/issues/9087,1,['sandbox'],['sandbox']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:567,variab,variables,567,https://root.cern,https://github.com/root-project/root/issues/8435,1,['variab'],['variables']
Modifiability,"- [google and issues] Checked for duplicates. ### Describe the bug; When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(; ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",; z, nt_h_top, nt_h_bot, l; );; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),; RooUniform(""u_nt_y"", ""u_nt_y"", y)); );; RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));; // fit; RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(u_nt_x, u_nt_y); );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce; 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built myself. ### Additional context; Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation; >; > ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6; #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6; #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so; #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so; #4 <signal handler called>; #5 0x0000000000000000 in ?? (); #6 0x00007f21b7bf1322 in RooAbsA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8052:857,variab,variables,857,https://root.cern,https://github.com/root-project/root/issues/8052,1,['variab'],['variables']
Modifiability,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8815:87,inherit,inherit,87,https://root.cern,https://github.com/root-project/root/issues/8815,6,"['config', 'inherit', 'variab']","['configuration', 'configures', 'inherit', 'inherited', 'variable']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console; $ touch foo.h; $ rootcling -v2 -f foo.cxx foo.h; Warning: Unused class rule: foo; ```. ### To Reproduce. ```console; $ touch foo.h; $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ...; $ rootcling -v2 -f foo.cxx foo.h; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; Error: Parsing #pragma failed in memory; Warning: Unused class rule: foo; ```. ### Setup; ```; $ rootcling --version; LLVM (http://llvm.org/):; LLVM version 9.0.1; Optimized build with assertions.; Default target: x86_64-apple-darwin20.6.0; Host CPU: skylake; ```. Installed with Spack on macOS 11:; ```; ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuilti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:75,variab,variable,75,https://root.cern,https://github.com/root-project/root/issues/9524,1,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272:853,plugin,plugins,853,https://root.cern,https://github.com/root-project/root/issues/11272,1,['plugin'],['plugins']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:684,config,configured,684,https://root.cern,https://github.com/root-project/root/issues/8633,1,['config'],['configured']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:812,config,configuration,812,https://root.cern,https://github.com/root-project/root/issues/11797,1,['config'],['configuration']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. The following type of error appeared in the ATLAS analysis software (I believe...) when we switched to ROOT 6.26/08. Though when I now produced a standalone reproducer for it, I couldn't make it work with 6.24/06 either. (Which is what we used for a long time, apparently without this issue.). Take the following struct:. ```c++; struct ConfigType {; std::map<std::string, std::tuple<ConfigType, std::string> > m_children;; };; ```. When I build a (Reflex) dictionary for it, it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:389,Config,ConfigType,389,https://root.cern,https://github.com/root-project/root/issues/12358,2,['Config'],['ConfigType']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11138:436,Config,Configuring,436,https://root.cern,https://github.com/root-project/root/issues/11138,1,['Config'],['Configuring']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. While updating ATLAS's EDM, we tried to introduce some `std::vector<std::array<float, 3> >` variables into our output files. But was met with the following types of errors:. ```; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripCenter' [Likely missing ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:144,variab,variables,144,https://root.cern,https://github.com/root-project/root/issues/12007,1,['variab'],['variables']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer ; passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases.; * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed.; * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below); - Ensure you are using CMake >= 3.22.0; - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7; * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9664:791,config,configure,791,https://root.cern,https://github.com/root-project/root/issues/9664,2,['config'],"['configuration', 'configure']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12701:1086,config,config,1086,https://root.cern,https://github.com/root-project/root/issues/12701,2,['config'],['config']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8537:52,Config,Configuring,52,https://root.cern,https://github.com/root-project/root/issues/8537,2,"['Config', 'variab']","['Configuring', 'variables']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; In commit 63aeb0d65d3817e805b0edee2ab7b8f4aa20a190 (master) and commit c3e69067256263bfd5287794b4444e20da5b0f57 (v6.22) the bindings/pyroot/pythonizations/test/ttree_branch_attr.py was extended to include an additional test. This test fails on Intel 32 bit Fedora Linux: The error is: symbol '__atomic_fetch_add_8' unresolved. It does not fail on any other Fedora architectures including 32 bit arm. Fedora koji scratch build: https://koji.fedoraproject.org/koji/taskinfo?taskID=55575382. ```; 50/1028 Test #11: pyunittests-pyroot-pyz-ttree-branch-attr ............................***Failed 1.24 sec; test_alias_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_basic_type_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_char_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ntuples (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch_leaflist (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr) ... IncrementalExecutor::executeFunction: symbol '__atomic_fetch_add_8' unresolved while linking symbol '__cf_16'!; ERROR; test_vector_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; ======================================================================; ERROR: test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.22.04/bindings/pyroot/pythonizations/test/ttree_branch_attr.py"", line 139, in test_ttree_subclass_in_namespace; t = ROOT.Foo.MyTree(); TypeError: Foo::MyTree constructor failed; ----------------------------------------------------------------------; Ran 9 tests in 0.509s; FAILED (errors=1); CMake Error at /builddir/build/BUILD/root-6.22.04/cmake/mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6813:237,extend,extended,237,https://root.cern,https://github.com/root-project/root/issues/6813,1,['extend'],['extended']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; It seems that in pyROOT, the NLL variable created from `RooAbsPdf.createNLL` does not get disposed of properly when the variable went out of scope, causing a memory leak. ### To Reproduce; ```Python; import ROOT. ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Minimization). ws = ROOT.RooWorkspace(); ws.factory(""Gaussian::pdf(x[0,10],mu[4,0,10],sigma[1.0,0.1,10.0])""); pdf = ws.pdf(""pdf""); x = ws.var(""x""); x.setRange(""SideBandLo"", 0, 2); x.setRange(""SideBandHi"", 6, 10); ds = pdf.generate(ROOT.RooArgSet(x), 11000). import psutil. def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""); ; def test(pdf, ds):; nll = pdf.createNLL(ds); ; proc = psutil.Process(); mem0 = proc.memory_info(); for i in range(int(1e4)):; test(pdf, ds); if (i%1000 == 0):; mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1; ```. This gives. ```; Memory stat: RSS=4009 MB, VMS=5170 MB. Delta RSS=0.00 MB VMS=0.00 MB; Memory stat: RSS=4116 MB, VMS=5278 MB. Delta RSS=107.25 MB VMS=107.15 MB; Memory stat: RSS=4224 MB, VMS=5386 MB. Delta RSS=108.02 MB VMS=108.10 MB; Memory stat: RSS=4333 MB, VMS=5495 MB. Delta RSS=109.05 MB VMS=109.21 MB; Memory stat: RSS=4439 MB, VMS=5601 MB. Delta RSS=106.48 MB VMS=106.48 MB; Memory stat: RSS=4547 MB, VMS=5709 MB. Delta RSS=108.02 MB VMS=107.85 MB; Memory stat: RSS=4656 MB, VMS=5820 MB. Delta RSS=109.05 MB VMS=110.36 MB; Memory stat: RSS=4764 MB, VMS=5927 MB. Delta RSS=108.02 MB VMS=107.75 MB; Memory stat: RSS=4872 MB, VMS=6035 MB. Delta RSS=108.02 MB VMS=107.95 MB; Memory stat: RSS=4979 MB, VMS=6144 MB. Delta RSS=106.81 MB VMS=108.52 MB; ```. ### Setup; ROOT 6.24, 6.26 (from LCG)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11397:85,variab,variable,85,https://root.cern,https://github.com/root-project/root/issues/11397,2,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10759:62,config,config,62,https://root.cern,https://github.com/root-project/root/issues/10759,13,['config'],['config']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976:200,extend,extended,200,https://root.cern,https://github.com/root-project/root/issues/8976,7,"['Config', 'extend']","['Configuration', 'extended']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7986:775,variab,variable,775,https://root.cern,https://github.com/root-project/root/issues/7986,2,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates; ### Describe the bug; `pyroot` installation with `c++17` does not find `optional` in namespace `std`:; ```python; >>> import ROOT; >>> hasattr(ROOT.std, ""optional""); False; ```; ### Expected behavior; ```python; >>> import ROOT; >>> hasattr(ROOT.std, ""optional""); True; ```; ### To Reproduce; 1. Install `root`; 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup; ROOT version: 6.26.00; OS: Arch Linux x86_64; GCC: 11.2.0; Python: 3.10.2; ### Additional context; ```bash; $ root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd; ```; ```bash; $ root-config --config; CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/libnppig.so CUDA_nppim_LIBRARY=/opt/cuda/lib64/libnppim.so CUDA_nppist_LIBRARY=/opt/cuda/lib64/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10221:533,config,config,533,https://root.cern,https://github.com/root-project/root/issues/10221,3,['config'],['config']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549; 549 if (!fRealDataClass->InheritsFrom(cl)) {; (gdb) bt; #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549; #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082; #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866; #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719; #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620; #5 0x00007fffefba86af in TBranchElement::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:826,Inherit,InheritsFrom,826,https://root.cern,https://github.com/root-project/root/issues/9564,1,['Inherit'],['InheritsFrom']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Build master with `builtin_llvm=OFF` using system LLVM. CMake configuration fails with:. ```; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Could NOT find Git (missing: GIT_EXECUTABLE) ; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/12:/usr/include/x86_64-linux-gnu/c++/12:/usr/include/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:520,config,configuration,520,https://root.cern,https://github.com/root-project/root/issues/12151,1,['config'],['configuration']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7662:464,config,config,464,https://root.cern,https://github.com/root-project/root/issues/7662,5,['config'],['config']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:512,sandbox,sandbox,512,https://root.cern,https://github.com/root-project/root/issues/10777,1,['sandbox'],['sandbox']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:639,variab,variable,639,https://root.cern,https://github.com/root-project/root/issues/12646,2,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10604:799,variab,variable,799,https://root.cern,https://github.com/root-project/root/issues/10604,1,['variab'],['variable']
Modifiability,"- add check if rms is NaN; - output value of rms (zero, negative, or NaN); - set rms to zero if it is NaN (before only done for zero or negative values). → I suspect the training will have problems in that situation anyway but **I think** it makes the message easier to digest:. before:; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : ------------------------------------------------------------------------------------------------------------------; : LifeTime: 0.0011344 -nan [ 8.5046e-05 0.024133 ]. …; : Some more output; : -nan -nan -nan -nan -nan -nan; <FATAL> : <GetSeparation> signal and background histograms have different or invalid dimensions:; ***> abort program execution; terminate called after throwing an instance of 'std::runtime_error'; what(): FATAL error. ```; after; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <WARNING> <WARNING> : Variable ""LifeTime"" has zero, negative, or NaN RMS^2: -nan ==> set to zero. Please check the variable content. ```; I.e. the nan does not appear in the table anymore (where I didn't spot it first) but the abnormal value gets pulled out into a WARNING message. (Where it also comes with variable name, as opposed to the long list of correlation matrix warning, which makes it non-trivial to understand which variables are problematic, if many, and comes w/o human readable names). tbh: I have not yet understood why NaN arrives there (… well a few lines before the √ of a negative number is computed … but I don't yet know why that arrived there. Still investigating, will follow up once I know more).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1669:379,variab,variables,379,https://root.cern,https://github.com/root-project/root/pull/1669,7,"['Variab', 'variab']","['Variable', 'variable', 'variables']"
Modifiability,"- better name for a variable, nNotRun -> nToRun; - substitute raw for loop with count_if (for readability); - substitute raw for loop with for_each (for consistency with the multi-thread version, which uses TThreadExecutor::Foreach)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11355:20,variab,variable,20,https://root.cern,https://github.com/root-project/root/pull/11355,1,['variab'],['variable']
Modifiability,"- dependency_versions.py: cannot run the root-config shell script on Windows; - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083:46,config,config,46,https://root.cern,https://github.com/root-project/root/pull/6083,1,['config'],['config']
Modifiability,- extend API in Factory to get the ROC curve for the training data; - this required to improve ResultsClassification to fill at the same time both output score; results and classID information. Before the classID info was set only later in; MethodBase::EvaluateAllMethod and done only for the testing data set.; Now it is done when the ResultsClassification object is filled; ( in MethodBase::AddClassifierOutput).; With these changes one can get a complete results for both training and testing data and being able to retrieve ROC curve in ; both cases. - fix also the code formatting for Factory class. Indentation was not correct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6724:2,extend,extend,2,https://root.cern,https://github.com/root-project/root/pull/6724,1,['extend'],['extend']
Modifiability,"- fill style in `RAttrFill`; - line style in `RAttrLine`; - font kind in `RAttrFont`; - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. ; One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner.; By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8629:138,config,configure,138,https://root.cern,https://github.com/root-project/root/pull/8629,2,['config'],"['configure', 'configured']"
Modifiability,"- include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:41525,variab,variable,41525,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"- include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: war",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:43886,variab,variable,43886,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"- include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: war",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:33668,variab,variable,33668,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,- initial port of physics-data -> EVE representation infrastructure from Fireworks;; - cleanup of TObject inheritance;; - first steps towards multi client synchronized selection support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3466:106,inherit,inheritance,106,https://root.cern,https://github.com/root-project/root/pull/3466,1,['inherit'],['inheritance']
Modifiability,"- the CUDA sm level can be set via CLING_TEST_CUDA_SM_LEVEL environment variable (e.g. ""35""), before running the tests; - this necessary, because the minimum sm level depends on the use CUDA SDK; - for example, CUDA 8.0 supports sm level 2.0, which is not support from CUDA 10.1 anymore",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7190:72,variab,variable,72,https://root.cern,https://github.com/root-project/root/pull/7190,1,['variab'],['variable']
Modifiability,-- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: arm-apple-darwin23.2.0; -- LLVM default target triple: arm-apple-darwin23.2.0; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: unknown; -- Targeting AArch64; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime. -- Cling will look for C++ headers in '' at runtime.; -- And then fallback to: 'clang'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration . System Darwin-23.2.0; Processor 10 core Apple M1 Max (arm64); Build type Release; Install path /Users/marcomeyer/Software/root/20240113; Compiler AppleClang 15.0.0.15000100; Compiler flags:; C -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -O3 -DNDEBUG; Linker flags:; Executable -mmacosx-version-min=14.2; Module ; Shared . -- Enabled support for: asimage builtin_afterimage builtin_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:4051,Config,Configuration,4051,https://root.cern,https://github.com/root-project/root/issues/14337,1,['Config'],['Configuration']
Modifiability,"-----; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068:1176,config,config,1176,https://root.cern,https://github.com/root-project/root/issues/14068,1,['config'],['config']
Modifiability,"-02/core/unix/src/TUnixSystem.cxx:2120; [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174; [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186; [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location; [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249; [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523; [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-913117485:1622,sandbox,sandbox,1622,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-913117485,2,['sandbox'],['sandbox']
Modifiability,-03-30T09:25:59.136Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T09:26:03.917Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:07.493Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:07.493Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:09.327Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:10.104Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:13.285Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:15.195Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490040073:1230,variab,variables,1230,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490040073,1,['variab'],['variables']
Modifiability,"-5f9cbb24787c); In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:; ```c++; using namespace RooFit;. TFile file{""test.root""};; auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));; auto x = workspace->var(""Jpsi_m_fitted"");; auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));; result->Print();; ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:; https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15196#issuecomment-2105738221:1203,inherit,inherits,1203,https://root.cern,https://github.com/root-project/root/issues/15196#issuecomment-2105738221,1,['inherit'],['inherits']
Modifiability,"-; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3838,config,configured,3838,https://root.cern,https://github.com/root-project/root/issues/7936,1,['config'],['configured']
Modifiability,"-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 881: Environment variables:; 881: ROOT_HIST=0; 881: Test timeout computed to be: 1500; 881: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 881: error code: -529697949; 881:; 881:; 4/16 Test #881: tutorial-dataframe-df004_cutFlowReport-py ................***Failed 4.53 sec; test 882; Start 882: tutorial-dataframe-df006_ranges-py. 882: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df006_ranges.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df007_snapshot.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 883: Environment variables:; 883: ROOT_HIST=0; 883: Test timeout computed to be: 1500; 883: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Fai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:3853,variab,variables,3853,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['variab'],['variables']
Modifiability,"-DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in the source directory. The default configuration is in `.ci/config.cmake`. It is used if no specific configuration is found for the detected OS. For example, on Ubuntu, a file named `ubuntu.cmake` will be used if present instead of `config.cmake`. The script also tries to detect a version, so, for example, on Alma, one could use `almalinux8.cmake` which would have higher precedence than `almalinux.cmake`. The default `config.cmake` tries to enable as many options as possible without failing if the dependencies are not installed. Sample `ubuntu.cmake` and `macos.cmake` are added in this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:1948,config,configuration,1948,https://root.cern,https://github.com/root-project/root/pull/14999,6,['config'],"['config', 'configuration']"
Modifiability,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```; cmake .. \; -Dalien=OFF -Dcuda=ON \; -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \; -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \; -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9; ```. The error message:. ```; /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:; /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope; return (char *) memcpy (__dest, __src, __n) + __n;; ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-257136223:2822,config,config,2822,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-257136223,1,['config'],['config']
Modifiability,-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.838Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:44.652Z] /Users/sftnight/build/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699608185:2366,variab,variable,2366,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699608185,1,['variab'],['variable']
Modifiability,"-Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCling.so.6.27 -o lib/libCling.so.6.27.99 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/BaseSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/ClassSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/LinkdefReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/Scanner.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/SelectionRules.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/TModuleGenerator.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/VariableSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/rootclingTCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingBaseClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallbacks.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallFunc.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDiagnostics.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodArgInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:3287,Variab,VariableSelectionRule,3287,https://root.cern,https://github.com/root-project/root/issues/12152,2,['Variab'],['VariableSelectionRule']
Modifiability,"-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy beca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:4963,variab,variable,4963,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:59.560Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:740:8: warning: unused variable 'i' [-Wunused-variable] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:750:8: warning: unused variable 'i' [-Wunused-variable] . And 4 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152974/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152974/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152974/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1230529190:2541,variab,variable,2541,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1230529190,4,['variab'],['variable']
Modifiability,"-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is alway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:21598,variab,variable,21598,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:40360,variab,variable,40360,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:30146,variab,variable,30146,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,-build/87960/console).; ### Warnings:; - [2020-06-25T09:41:22.316Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:22.316Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:22.316Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:22.316Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:25.302Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:25.302Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:30.975Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:30.975Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:30.975Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local variable [-Wreturn-local-addr] ; - [2020-06-25T09:41:30.975Z] /build/workspace/root-pullrequests-build/root/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:32:46: warning: function may return address of local varia,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5926#issuecomment-649440862:1363,variab,variable,1363,https://root.cern,https://github.com/root-project/root/pull/5926#issuecomment-649440862,1,['variab'],['variable']
Modifiability,-build/build/tree/treeplayer/G__TreePlayer.cxx:4707:113: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;float&gt;::TClaImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4707:168: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;float&gt;::TClaImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4725:85: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;unsigned int&gt;::TClaImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4725:136: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;unsigned int&gt;::TClaImpProxy()’ . And 42 more. ### Warnings:; - JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4684:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4705:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4726:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4747:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4768:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4789:4: warning: control reaches end of non-void function [-Wre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/674#issuecomment-310377486:2382,Plugin,Plugin,2382,https://root.cern,https://github.com/root-project/root/pull/674#issuecomment-310377486,2,['Plugin'],['Plugin']
Modifiability,-build/root/math/mathcore/src/TMath.cxx:3501:76: error: ‘DiLog_Split3_More’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3512:35: error: ‘DiLog_Iterations’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3513:1: error: expected ‘;’ before ‘}’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3519:49: error: ‘DiLog_Split4_Less’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3519:76: error: ‘DiLog_Split4_More’ was not declared in this scope . And 50 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3554:82: warning: unused parameter ‘pi6’ [-Wunused-parameter] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3671:19: warning: unused variable ‘p1’ [-Wunused-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3671:36: warning: unused variable ‘p2’ [-Wunused-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3671:53: warning: unused variable ‘p3’ [-Wunused-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3672:19: warning: unused variable ‘p4’ [-Wunused-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3672:36: warning: unused variable ‘p5’ [-Wunused-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3672:53: warning: unused variable ‘p6’ [-Wunused-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3672:69: warning: unused variable ‘p7’ [-Wunused-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3674:19: warning: unused variable ‘q1’ [-Wunused-variable] ; - /mnt/build/worksp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405234476:1900,variab,variable,1900,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405234476,2,['variab'],['variable']
Modifiability,-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are only available with ‘-std=c++17’ or ‘-std=gnu++17’ ; - [2023-03-30T09:55:28.175Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are only available with ‘-std=c++17’ or ‘-std=gnu++17’ ; - [2023-03-30T09:55:28.473Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are only available with ‘-std=c++17’ or ‘-std=gnu++17’ ; - [2023-03-30T09:55:29.095Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are only available with ‘-std=c++17’ or ‘-std=gnu++17’ ; - [2023-03-30T09:55:29.397Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are only available with ‘-std=c++17’ or ‘-std=gnu++17’ . And 45 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171682/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171682/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171682/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171682/testReport/projectroot.roottest.root/dataf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490070305:2424,variab,variables,2424,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490070305,1,['variab'],['variables']
Modifiability,-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_reread](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9283/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_reread/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1205#issuecomment-337970317:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1205#issuecomment-337970317,3,['portab'],['portable']
Modifiability,-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_reread](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9290/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_reread/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1197#issuecomment-337981222:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1197#issuecomment-337981222,3,['portab'],['portable']
Modifiability,-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_reread](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9304/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_reread/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1206#issuecomment-337984706:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1206#issuecomment-337984706,3,['portab'],['portable']
Modifiability,-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_reread](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9311/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_reread/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1187#issuecomment-338003015:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1187#issuecomment-338003015,3,['portab'],['portable']
Modifiability,-fedora-31-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97079/console).; ### Errors:; - [2020-09-28T08:24:28.530Z] /build/workspace/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-28T08:22:19.505Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:235:38: warning: unused parameter ‘C’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:14:55: warning: unused parameter ‘DGR’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:42: warning: unused parameter ‘PP’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:47:45: warning: unused parameter ‘Introducer’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:48:35: warning: unused parameter ‘PragmaTok’ [-Wunused-parameter] ; - [2020-09-28T08:22:27.177Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:59:13: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] ; - [2020-09-28T08:22:27.177Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:61:9: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] ; - [2020-09-28T08:22:27.177Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:61:9: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] ; - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699859788:1078,plugin,plugins,1078,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699859788,1,['plugin'],['plugins']
Modifiability,"-fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2065,plugin,plugins,2065,https://root.cern,https://github.com/root-project/root/issues/14492,2,"['config', 'plugin']","['configure', 'plugins']"
Modifiability,"-fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -Wno-nested-anon-types -Wno-covered-switch-default -Wno-unused-local-typedef -fno-rtti -O3 -fvisibility=default -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -fexceptions -frtti -MD -MT interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/Exception.cpp.o -MF interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/Exception.cpp.o.d -o interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/Exception.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Exception.cpp ; - [2020-12-10T13:50:41.238Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:14: error: ISO C++ forbids declaration of ‘Config’ with no type [-fpermissive] ; - [2020-12-10T13:50:41.238Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:17:18: error: only constructors take member initializers ; - [2020-12-10T13:50:41.499Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DCLING_VERSION=""ROOT_0.8~dev"" -DGTEST_HAS_RTTI=0 -DLLVM_BUILD_GLOBAL_ISEL -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/cling/lib/Interpreter -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -Iinterpreter/llvm/src/tools/cling/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928#issuecomment-742532822:6248,Config,Config,6248,https://root.cern,https://github.com/root-project/root/pull/6928#issuecomment-742532822,1,['Config'],['Config']
Modifiability,"-help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unuse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6956,variab,variables,6956,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['variab'],['variables']
Modifiability,"-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, double, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:23883,variab,variable,23883,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.interpreter.clingtest_check_cling](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9185/testReport/projectroot/interpreter/clingtest_check_cling/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1196#issuecomment-337503792:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1196#issuecomment-337503792,3,['portab'],['portable']
Modifiability,-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.interpreter.clingtest_check_cling](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9364/testReport/projectroot/interpreter/clingtest_check_cling/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1211#issuecomment-338154665:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1211#issuecomment-338154665,3,['portab'],['portable']
Modifiability,-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.interpreter.clingtest_check_cling](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9374/testReport/projectroot/interpreter/clingtest_check_cling/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1208#issuecomment-338175025:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1208#issuecomment-338175025,3,['portab'],['portable']
Modifiability,-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.interpreter.clingtest_check_cling](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9381/testReport/projectroot/interpreter/clingtest_check_cling/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1211#issuecomment-338177436:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1211#issuecomment-338177436,3,['portab'],['portable']
Modifiability,-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:10:42.193Z] include/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:10:42.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:15.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:16.808Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:12:16.341Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:08.276Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:10.525Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] . And 91 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/); - [projectroot.roottest.root.multicore.roottest_root_multicore_threadExecutor_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_threadExecutor_build/); - [projectroot.roottest.root.multicore.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-734365903:1553,variab,variable,1553,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-734365903,2,['variab'],['variable']
Modifiability,"-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:127:11: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:188:26: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T20:28:09.893Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:14.692Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] . And 36 more. ### Failing tests:; - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111499/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.test.test_stressroostats_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111499/testReport/projectroot/test/test_stressroostats_interpreted/); - [projectroot.roottest.root.roofitstats.vectorisedPDFs.gtesttest_root_roofitstats_vectorisedPDFs_testAddPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111499/testReport/projectroot.roottest.root.roofitstats/vectorisedPDFs/gtesttest_root_roofitstats_vectorisedPDFs_testAddPdf/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803131999:2954,Config,Configuration,2954,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803131999,1,['Config'],['Configuration']
Modifiability,"-pullrequests-build\build\tree\dataframe\test\dataframe_cache.vcxproj] ; - [2022-08-05T23:10:55.033Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\inc\ROOT/RDF/ActionHelpers.hxx(512,33): error C2672: 'std::end': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_cache.vcxproj] ; - [2022-08-05T23:10:55.033Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\inc\ROOT/RDF/ActionHelpers.hxx(512,18): error C2737: 'xrefend': const object must be initialized [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_cache.vcxproj] ; - [2022-08-05T23:10:55.033Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\inc\ROOT/RDF/ActionHelpers.hxx(523,1): error C3536: 'xrefend': cannot be used before it is initialized [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_cache.vcxproj] ; - [2022-08-05T23:10:55.033Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\inc\ROOT/RDF/ActionHelpers.hxx(523,7): error C2672: 'ROOT::Internal::RDF::FillHelper&lt;TH1D&gt;::ExecLoop': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_cache.vcxproj] ; - [2022-08-05T23:10:55.033Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\inc\ROOT/RDF/ActionHelpers.hxx(523,16): error C2971: 'ROOT::Internal::RDF::FillHelper&lt;TH1D&gt;::ExecLoop': template parameter 'ColIdx': 'colidx': a variable with non-static storage duration cannot be used as a non-type argument [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_cache.vcxproj] ; - [2022-08-05T23:11:00.787Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\inc\ROOT/RDF/ActionHelpers.hxx(507,36): error C2131: expression did not evaluate to a constant [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_histomodels.vcxproj] . And 36 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207081747:2929,variab,variable,2929,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207081747,1,['variab'],['variable']
Modifiability,"-reflex was deprecated because the flag was parsed but nothing was done after. Rootcling works in two modes. The first mode is when it is called directly. The second mode is when it was called from genreflex. Genreflex is essentially calling rootcling with the appropriate flag translation and it sets the isGenReflex variable to true. The argument translation mechanism of genreflex has a nice feature which can print the underlying rootcling invocation. This is helpful if we want to move away from reflex to rootcling. This might be reasonable to get access to the finer grained arguments and options rootcling provides. However, we should still call rootcling and set the isGenReflex to true as the variable alters the content of the dictionaries. In cmssw C++ modules IB we use rootcling instead of genreflex to have better control on the module generation provided by the rootcling option set. This patch implements a flag which can turn the rootcling invocation completely to genreflex. Using rootcling -reflex should fix the DataFormats/Provenance dictionary generation for cmssw. cc: @oshadura, @smuzaffar, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4547:318,variab,variable,318,https://root.cern,https://github.com/root-project/root/pull/4547,2,['variab'],['variable']
Modifiability,. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:12676,variab,variable,12676,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['variab'],['variable']
Modifiability,"... but even if it did come clean it would not necessarily prove that it is not needed. Order of tear down is notoriously fickled and may depends on many variable (version of python, compilation options, general order of operation). I.e. unless we unearth the actual commits and/or changes that make this step obsolete, I would not touch it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1156628253:154,variab,variable,154,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1156628253,1,['variab'],['variable']
Modifiability,... to avoid an `unused-but-set-variable` warning on Linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13073:32,variab,variable,32,https://root.cern,https://github.com/root-project/root/pull/13073,1,['variab'],['variable']
Modifiability,......... OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 47: Parallel Coordinates...................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; Test 48: Draw a pad and clone it................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 49: Ntuple drawing with alphanumeric variables................ OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; [TFile::Cp] Total -0.00 MB |====================| -0.00 % Cannot access usa.root. Is internet working ?; **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux debian-20220509 5.10.0-14-amd64 #1 SMP Debian 5.10.113; * SYS: Debian GNU/Linux 11 (bullseye); **********************************************************************; * stressGraphics: Real Time = 183.60 seconds Cpu Time = 23.17 seconds; **********************************************************************; * ROOTMARKS =1749.0 * Root 6.27/01 2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1128447944:19598,variab,variables,19598,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1128447944,1,['variab'],['variables']
Modifiability,......... OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 47: Parallel Coordinates...................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; Test 48: Draw a pad and clone it................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 49: Ntuple drawing with alphanumeric variables................ OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; [TFile::Cp] Total 0.95 MB	|====================| 100.00 % [77.1 MB/s]; Test 50: TH2Poly.(DrawClone() and remote file access).............. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1060686671:19412,variab,variables,19412,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1060686671,1,['variab'],['variables']
Modifiability,.........***Failed Error regular expression found in output. Regex=[: error:] 0.77 sec ; - [2022-09-21T11:59:35.138Z] 922/2349 Test #808: tutorial-multicore-mtbb201_parallelHistoFill ......................................................***Failed Error regular expression found in output. Regex=[: error:] 0.77 sec ; - [2022-09-21T12:01:10.225Z] 1072/2349 Test #962: tutorial-spectrum-Src .............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.66 sec ; - [2022-09-21T12:01:10.943Z] 1074/2349 Test #963: tutorial-spectrum-Src2 ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.67 sec . And 3 more. ### Warnings:; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253647669:2704,variab,variable,2704,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253647669,1,['variab'],['variable']
Modifiability,..................***Failed Error regular expression found in output. Regex=[: error:] 17.22 sec ; - 641/1649 Test #562: tutorial-r-DataFrame ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.15 sec ; - 644/1649 Test #563: tutorial-r-Function ...............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.31 sec ; - 980/1649 Test #911: tutorial-vecops-vo004_SortAndSelect-py ............................................................***Failed Error regular expression found in output. Regex=[: error:] 12.33 sec ; - 982/1649 Test #912: tutorial-vecops-vo005_Combinations-py .............................................................***Failed Error regular expression found in output. Regex=[: error:] 11.87 sec . ### Warnings:; - ../root/core/metacling/src/TCling.cxx:4990:9: warning: variable ‘hasModules’ set but not used [-Wunused-but-set-variable] . ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41365/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41365/testReport/projectroot.math.vecops/test/gtest_math_vecops_test_vecops_rvec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41365/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.runtutorials.tutorial_dataframe_df024_Display](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41365/testReport/projectroot/runtutorials/tutorial_dataframe_df024_Display/); - [projectroot.runtutorials.tutorial_r_DataFrame](https://epsft-jenkins.cern.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592#issuecomment-423917606:1218,variab,variable,1218,https://root.cern,https://github.com/root-project/root/pull/2592#issuecomment-423917606,2,['variab'],['variable']
Modifiability,..................***Failed Error regular expression found in output. Regex=[: error:] 18.93 sec ; - 638/1649 Test #562: tutorial-r-DataFrame ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.91 sec ; - 640/1649 Test #563: tutorial-r-Function ...............................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.06 sec ; - 987/1649 Test #911: tutorial-vecops-vo004_SortAndSelect-py ............................................................***Failed Error regular expression found in output. Regex=[: error:] 12.37 sec ; - 990/1649 Test #912: tutorial-vecops-vo005_Combinations-py .............................................................***Failed Error regular expression found in output. Regex=[: error:] 12.24 sec . ### Warnings:; - ../root/core/metacling/src/TCling.cxx:4990:9: warning: variable ‘hasModules’ set but not used [-Wunused-but-set-variable] . ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41233/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41233/testReport/projectroot.math.vecops/test/gtest_math_vecops_test_vecops_rvec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41233/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.runtutorials.tutorial_dataframe_df024_Display](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41233/testReport/projectroot/runtutorials/tutorial_dataframe_df024_Display/); - [projectroot.runtutorials.tutorial_r_DataFrame](https://epsft-jenkins.cern.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592#issuecomment-423594519:1218,variab,variable,1218,https://root.cern,https://github.com/root-project/root/pull/2592#issuecomment-423594519,2,['variab'],['variable']
Modifiability,"............................................. OK; 338: NestedStatements ........................................................ OK; 338: ****************************************************************************; 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds; 338: ****************************************************************************; 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0; 338: ****************************************************************************; 338: (bool) false; 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:; test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec; ```. New pass manager:; ```bash; dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Test project /home/dvalapar/work/root/newpassmanager; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanage",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:2778,Config,Config,2778,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,1,['Config'],['Config']
Modifiability,...refactoring the old way of obtaining it. Just for convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1018:3,refactor,refactoring,3,https://root.cern,https://github.com/root-project/root/pull/1018,1,['refactor'],['refactoring']
Modifiability,...with fixed namings of variables/types; This PR replaces #2062,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2070:25,variab,variables,25,https://root.cern,https://github.com/root-project/root/pull/2070,1,['variab'],['variables']
Modifiability,"../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':\r\n.../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]\r\n 595 | coutE(InputArguments) &lt;&lt; \""RooDataHist::adjustBinning(\"" &lt;&lt; GetName() &lt;&lt; \"") ERROR: dimension \"" &lt;&lt; ourVar-&gt;GetName() &lt;&lt; \"" must be real\"" &lt;&lt; endl ;\r\n | ^~~~~~~~~~~~~~~\r\n\r\n.../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':\r\n.../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]\r\n 156 | &lt;&lt; \"" is not of type RooAbsReal, fatal error\"" &lt;&lt; endl;\r\n | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader&lt;AData, TMVA::DNN::TReference&lt;AReal&gt; &gt;::CopyInput(TMatrixT&lt;AReal&gt;&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple&lt;const std::vector&lt;TMVA::Event*, std::allocator&lt;TMVA::Event*&gt; &gt;&, const TMVA::DataSetInfo&&gt;; AReal = float]':\r\n.../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]\r\n 131 | Int_t n = event-&gt;GetNVariables();\r\n | ~~~~~~~~~~~~~~~~~~~~^~\r\nIn file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,\r\n from .../tmva/tmva/inc/TMVA/Tools.h:58,\r\n from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,\r\n from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,\r\n from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,\r\n from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:\r\n.../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'\r\n 88 | UInt_t GetNVariables() const;\r\n | ^~~~~~~~~~~~~\r\n```\r\n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8368#issuecomment-856721179:3825,Variab,VariableTransformBase,3825,https://root.cern,https://github.com/root-project/root/pull/8368#issuecomment-856721179,1,['Variab'],['VariableTransformBase']
Modifiability,"../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. @Axel-Naumann I don't really understand why the const ref does not increase the lifetime of the temporary as usual in this case, but this is the warning: https://godbolt.org/z/ss4zz8v3M",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8301:70,variab,variable,70,https://root.cern,https://github.com/root-project/root/pull/8301,1,['variab'],['variable']
Modifiability,../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8398:70,variab,variable,70,https://root.cern,https://github.com/root-project/root/pull/8398,1,['variab'],['variable']
Modifiability,".0,; dual-stack: false, private IPv4: false, private IPv6: false; [2021-01-14 04:10:07.046851 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Wrote a message: (0x3cc60ff0), 134; bytes; [2021-01-14 04:10:07.052644 -0500][Dump ][XRootDTransport ] [msg:; 0x3cbf39a0] Expecting 49 bytes of message body; [2021-01-14 04:10:07.053325 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received message header, size: 8; [2021-01-14 04:10:07.053800 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received a message of 57 bytes; [2021-01-14 04:10:07.058654 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Logged in, session:; 7b7dbbd4cfaff647f020363a59db1b5c; [2021-01-14 04:10:07.059797 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Authentication is required:; &P=gsi,v:10400,c:ssl,ca:f5f0dfc2; ==2495== Can't extend stack to 0x414a7fc8 during signal delivery for thread 2:; ==2495== no stack segment; ==2495==; ==2495== Process terminating with default action of signal 11; (SIGSEGV): dumping core; ==2495== Access not within mapped region at address 0x414A7FC8; ==2495== at 0x6703DF7: vfprintf (in /usr/lib64/libc-2.17.so); ==2495== If you believe this happened as a result of a stack; ==2495== overflow in your program's main thread (unlikely but; ==2495== possible), you can try to increase the size of the; ==2495== main thread stack using the --main-stacksize= flag.; ==2495== The main thread stack size used in this run was 16777216.; ==2495==; ==2495== Process terminating with default action of signal 11 (SIGSEGV); ==2495== Bad permissions for mapped region at address 0x414A8E90; ==2495== at 0x4A245E5: _vgnU_freeres (vg_preloaded.c:59). Without suppress, this is not there at all so I still don`t understand much. Cheers,. Rod. On Thu, 14 Jan 2021 at 09:23, rdschaffer <notifications@github.com> wrote:. > The output from the job should have just BEFORE the section:; >; > === stderr ===; >; > H4lAnalRun2 INFO p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760074314:1394,extend,extend,1394,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760074314,1,['extend'],['extend']
Modifiability,".0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the output with and without this PR to a `.csv` file; that was analyzed with pandas:. ```Python; import pandas as pd. df = pd.read_csv(""interp.csv""). df[""diff_abs""] = df[""new""] - df[""ref""]; df[""diff_rel""] = (df[""new""] - df[""ref""]) / df[""ref""]. format_mapping = {""new"": ""{:.10f}"", ""ref"": ""{:.10f}"", ""diff_abs"": ""{:.10f}"", ""diff_rel"": ""{:.2E}""}. for key, value in format_mapping.items():; df[key] = df[key].apply(value.format). print(df); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3624,Flexible,FlexibleInterpVar,3624,https://root.cern,https://github.com/root-project/root/pull/13067,1,['Flexible'],['FlexibleInterpVar']
Modifiability,.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9855/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1236#issuecomment-339716823:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1236#issuecomment-339716823,3,['portab'],['portable']
Modifiability,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:2852,sandbox,sandbox,2852,https://root.cern,https://github.com/root-project/root/issues/10777,1,['sandbox'],['sandbox']
Modifiability,.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:399:5: error: expected primary-expression before ‘&lt;&lt;’ token ; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:399:7: error: expected primary-expression before ‘&lt;’ token ; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:399:9: error: ‘HEAD’ was not declared in this scope ; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:401:1: error: version control conflict marker in file ; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:401:3: error: expected primary-expression before ‘==’ token ; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:401:5: error: expected primary-expression before ‘==’ token ; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:401:7: error: expected primary-expression before ‘=’ token ; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:403:3: error: ‘AllocInfo’ was not declared in this scope . And 48 more. ### Warnings:; - [2022-12-09T09:14:53.687Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:371:10: warning: unused variable ‘ErrorReporter’ [-Wunused-variable] ; - [2022-12-09T09:15:02.427Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:476:1: warning: control reaches end of non-void function [-Wreturn-type],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11351#issuecomment-1344048913:2420,variab,variable,2420,https://root.cern,https://github.com/root-project/root/pull/11351#issuecomment-1344048913,2,['variab'],['variable']
Modifiability,.; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:104:26: error: no member named 'index_sequence' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:103:26: error: template parameter pack must be the last template parameter ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:104:49: error: a template declaration can only declare a single entity ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:133:22: error: no member named 'make_unique' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:133:34: error: 'Reader' does not refer to a value ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:189:53: error: no member named 'make_index_sequence' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:189:75: error: a template declaration can only declare a single entity ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libTMVA1640c70f1b_dictUmbrella.h) . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3716:13: warning: ‘bool FileExists(const char*)’ defined but not used [-Wunused-function] ; - cc1plus: warning: unrecognized command line option ‘-Wno-class-memaccess’ ; - /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1130:13: warning: ‘bool FileExists(const char*)’ defined but not used [-Wunused-function] ; - Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find the following specified headers in the module Core: ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RLegacyReader.hxx:104:48: warning: variable templates are a C++14 extension [-Wc++14-extensions],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321#issuecomment-457529942:2073,variab,variable,2073,https://root.cern,https://github.com/root-project/root/pull/3321#issuecomment-457529942,1,['variab'],['variable']
Modifiability,".; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; [ 69%] Built target rootcling_stage1; [ 69%] Generating G__Core.cxx, ../lib/libCore.rootmap; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; Subprocess aborted; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1674125810:20136,variab,variable,20136,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1674125810,1,['variab'],['variable']
Modifiability,".\r\nCall Stack (most recent call first):\r\n /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package)\r\n cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package)\r\n /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency)\r\n cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package)\r\n cmake/modules/FindArrow.cmake:206 (find_package)\r\n cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration)\r\n cmake/modules/FindArrow.cmake:350 (arrow_find_package)\r\n cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package)\r\n cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package)\r\n CMakeLists.txt:245 (include)\r\n```\r\nand\r\n```\r\nCMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):\r\n By not providing \""Findc-ares.cmake\"" in CMAKE_MODULE_PATH this project has\r\n asked CMake to find a package configuration file provided by \""c-ares\"", but\r\n CMake did not find one.\r\n\r\n Could not find a package configuration file provided by \""c-ares\"" with any\r\n of the following names:\r\n\r\n c-aresConfig.cmake\r\n c-ares-config.cmake\r\n\r\n Add the installation prefix of \""c-ares\"" to CMAKE_PREFIX_PATH or set\r\n \""c-ares_DIR\"" to a directory containing one of the above files. If \""c-ares\""\r\n provides a separate development package or SDK, be sure it has been\r\n installed.\r\nCall Stack (most recent call first):\r\n /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package)\r\n cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package)\r\n /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency)\r\n cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package)\r\n cmake/modules/FindArrow.cmake:206 (find_package)\r\n cmake/modules/FindArrow.cmake:313 (a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8832#issuecomment-896935659:2015,config,configuration,2015,https://root.cern,https://github.com/root-project/root/pull/8832#issuecomment-896935659,2,['config'],['configuration']
Modifiability,".b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; };; defaultPackage = pkgs-root.root;; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]);; };; });; }; ```. Generated lock file; `flake.lock`; ```json; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1623875721,; ""narHash"": ""sha256-A8BU7bjS5GirpAUv4QA+QnJ4CceLHkcXdRp4xITDB0s="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""f7e004a55b120c02ecb6219596820fcd32ca8772"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1628696776,; ""narHash"": ""sha256-K8+/IQNZDZltIu/KSf+Tz01OwNzTGgTch0ktMOWcxLg="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""927ce1afc1db40869a463a37ea2738c27d425f80"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""ref"": ""nixos-21.05"",; ""repo"": ""nixpkgs"",; ""type"": ""github",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:11065,inherit,inherit,11065,https://root.cern,https://github.com/root-project/root/issues/8857,2,['inherit'],['inherit']
Modifiability,.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-19T15:39:23.644Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-19T15:39:23.644Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-19T15:39:23.644Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-19T15:39:28.930Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-19T15:39:59.990Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:302:44: warning: parameter 'pymeth' set but not used [-Wunused-but-set-parameter] ; - [2022-11-19T15:40:09.646Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/io/io/src/TMemFile.cxx:180:13: warning: variable 'mode' set but not used [-Wunused-but-set-variable] ; - [2022-11-19T15:40:09.904Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfo.cxx:4095:11: warning: variable 'ninc' set but not used [-Wunused-but-set-variable] . And 64 more. ### Failing tests:; - [projectroot.roofit.histfactory.test.gtest_roofit_histfactory_test_testHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159527/testReport/projectroot.roofit.histfactory/test/gtest_roofit_histfactory_test_testHistFactory/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11748#issuecomment-1320914940:2008,variab,variable,2008,https://root.cern,https://github.com/root-project/root/pull/11748#issuecomment-1320914940,6,['variab'],['variable']
Modifiability,.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 1155 more. ### Warnings:; - include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:242:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:244:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] . And 10 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2705#issuecomment-425417346:2074,extend,extended,2074,https://root.cern,https://github.com/root-project/root/pull/2705#issuecomment-425417346,12,"['extend', 'variab']","['extended', 'variable']"
Modifiability,.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 4220 more. ### Warnings:; - include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:242:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:244:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] . And 82 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2711#issuecomment-425415808:2074,extend,extended,2074,https://root.cern,https://github.com/root-project/root/pull/2711#issuecomment-425415808,12,"['extend', 'variab']","['extended', 'variable']"
Modifiability,.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 4310 more. ### Warnings:; - include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:242:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:244:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - include/Rtypes.h:275:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] . And 71 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411303638:2074,extend,extended,2074,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411303638,12,"['extend', 'variab']","['extended', 'variable']"
Modifiability,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o; -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a; -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so; ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16668:3017,plugin,plugins,3017,https://root.cern,https://github.com/root-project/root/issues/16668,2,['plugin'],['plugins']
Modifiability,".cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582:3447,config,configurable,3447,https://root.cern,https://github.com/root-project/root/issues/8582,1,['config'],['configurable']
Modifiability,.cxx:155:21: 'newpytc' initialized here; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Assuming the condition is true; /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Taking true branch; /usr/include/python2.7/object.h:773:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Loop condition is false. Exiting loop; /usr/include/python2.7/object.h:772:5: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:157:21: Value assigned to 'pytc'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158:25: Assuming 'pytc' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158:21: Taking false branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163:17: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc'); /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163:17: warning: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: Assuming 'nArgs' is not equal to 0 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:128; 3: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:128; 4: Assuming 'i' is < 'nArgs' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:130; 5: Loop condition is true. Entering loop body in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:130; 6: Assuming 'pytc' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:137; 7: Taking false branch in /opt/root_src/bindin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:24512,variab,variable,24512,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,1,['variab'],['variable']
Modifiability,.cxx:846:37: error: call of overloaded ‘KolmogorovProb(Double_t&)’ is ambiguous ; - ../root/math/mathcore/src/TMath.cxx:2188:35: error: call of overloaded ‘NormQuantile(Double_t&)’ is ambiguous ; - ../root/math/mathcore/src/TMath.cxx:3266:4: error: expected unqualified-id before ‘const’ ; - ../root/math/mathcore/src/TMath.cxx:3298:4: error: ‘Mask’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3298:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3298:27: error: ‘mask1’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3299:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3299:27: error: ‘mask2’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3300:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3300:27: error: ‘mask3’ was not declared in this scope . And 64 more. ### Warnings:; - ../root/math/mathcore/src/TMath.cxx:3240:38: warning: unused variable ‘mask’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3296:21: warning: unused variable ‘ap’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3296:25: warning: unused variable ‘aq’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3296:29: warning: unused variable ‘h’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3296:32: warning: unused variable ‘hc’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3296:36: warning: unused variable ‘y’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3379:21: warning: unused variable ‘result’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3385:24: warning: unused variable ‘r’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3439:94: warning: unused parameter ‘q’ [-Wunused-parameter] ; - ../root/math/mathcore/src/TMath.cxx:3466:89: warning: unused parameter ‘q’ [-Wunused-parameter],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400734357:1245,variab,variable,1245,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400734357,16,['variab'],['variable']
Modifiability,.cxx;src/Reader.cxx;src/RegressionVariance.cxx;src/ResultsClassification.cxx;src/Results.cxx;src/ResultsMulticlass.cxx;src/ResultsRegression.cxx;src/ROCCalc.cxx;src/ROCCurve.cxx;src/RootFinder.cxx;src/RuleCut.cxx;src/Rule.cxx;src/RuleEnsemble.cxx;src/RuleFitAPI.cxx;src/RuleFit.cxx;src/RuleFitParams.cxx;src/SdivSqrtSplusB.cxx;src/SeparationBase.cxx;src/SimulatedAnnealing.cxx;src/SimulatedAnnealingFitter.cxx;src/SVEvent.cxx;src/SVKernelFunction.cxx;src/SVKernelMatrix.cxx;src/SVWorkingSet.cxx;src/TActivationChooser.cxx;src/TActivation.cxx;src/TActivationIdentity.cxx;src/TActivationRadial.cxx;src/TActivationReLU.cxx;src/TActivationSigmoid.cxx;src/TActivationTanh.cxx;src/Timer.cxx;src/TNeuron.cxx;src/TNeuronInputAbs.cxx;src/TNeuronInputChooser.cxx;src/TNeuronInput.cxx;src/TNeuronInputSqSum.cxx;src/TNeuronInputSum.cxx;src/Tools.cxx;src/TrainingHistory.cxx;src/TransformationHandler.cxx;src/TSpline1.cxx;src/TSpline2.cxx;src/TSynapse.cxx;src/Types.cxx;src/VariableDecorrTransform.cxx;src/VariableGaussTransform.cxx;src/VariableIdentityTransform.cxx;src/VariableImportance.cxx;src/VariableInfo.cxx;src/VariableNormalizeTransform.cxx;src/VariablePCATransform.cxx;src/VariableRearrangeTransform.cxx;src/VariableTransformBase.cxx;src/VariableTransform.cxx;src/VarTransformHandler.cxx;src/Volume.cxx;src/DNN/Architectures/Reference.cxx;src/DNN/Architectures/Reference/DataLoader.cxx;src/DNN/Architectures/Reference/TensorDataLoader.cxx;src/DNN/Architectures/Cpu.cxx;src/DNN/Architectures/Cpu/CpuBuffer.cxx;src/DNN/Architectures/Cpu/CpuMatrix.cxx;src/RBDT.cxx;$<$<BOOL:FALSE>:dummy.cxx>;$<TARGET_OBJECTS:G__TMVA>;src/DNN/Architectures/Cuda.cu;src/DNN/Architectures/Cuda/CudaBuffers.cxx;src/DNN/Architectures/Cuda/CudaMatrix.cu;src/DNN/Architectures/Cuda/CudaTensor.cu;src/DNN/Architectures/Cudnn/TensorDataLoader.cxx;src/DNN/Architectures/Cudnn.cu; TMVA SOURCE_DIR = /build/lcgsoft/root/tmva/tmva; TMVA SOURCE_DIR = /build/lcgsoft/root/tmva/tmva; TMVA SUFFIX = .so; TMVA TYPE = SHARED_LIBRARY; TMVA TYP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5598#issuecomment-627404942:13154,Variab,VariableGaussTransform,13154,https://root.cern,https://github.com/root-project/root/pull/5598#issuecomment-627404942,1,['Variab'],['VariableGaussTransform']
Modifiability,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:2236,Config,Configuring,2236,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Config'],['Configuring']
Modifiability,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:3151,Config,Configuring,3151,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Config'],['Configuring']
Modifiability,"/ previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; Double_t w=0, h=0, xl=0, yb=0;; TH1D* o=new TH1D();; TPad* c= new TPad();; c->PlaceBox(o,w,h,xl,yb);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad2.cxx $(root-config --glibs --cflags --libs) -o pad2 -g; ```; run; ```; ./pad2; ```. ## Setup. ROOT 6.22.02 CentOS7 gcc4.8.5 ; and ; lxplus with ; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```; Should also work with mac (not tested). ## Additional context. Hopefully this will be the last one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:4572,config,config,4572,https://root.cern,https://github.com/root-project/root/issues/6428,1,['config'],['config']
Modifiability,"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1661,Config,Configuring,1661,https://root.cern,https://github.com/root-project/root/issues/14113,1,['Config'],['Configuring']
Modifiability,"/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3265,extend,extended,3265,https://root.cern,https://github.com/root-project/root/issues/12427,1,['extend'],['extended']
Modifiability,/CMakeFiles/RooFitCore.dir/src/NumericalDerivatorMinuit2.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/NumericalDerivatorMinuit2.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/NumericalDerivatorMinuit2.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:91:14: error: ‘chrono’ is not a member of ‘std’ ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:91:19: error: ‘std::chrono’ has not been declared ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:91:46: error: ‘std::chrono’ has not been declared ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:92:22: error: ‘std::chrono’ has not been declared ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:25: error: variable or field ‘t1’ declared void ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:29: error: variable or field ‘t2’ declared void ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:33: error: variable or field ‘t3’ declared void ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:37: error: variable or field ‘t4’ declared void ; - [2021-07-02T07:11:17.460Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:41: error: variable or field ‘t5’ declared void . And 19 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-872774522:3896,variab,variable,3896,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-872774522,5,['variab'],['variable']
Modifiability,"/CMakeFiles/dataframe_datasetspec.dir/dataframe_datasetspec.cxx.o ; - [2022-07-25T19:35:53.011Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:53:1: error: ‘void RDatasetSpecTest_SimpleChainsCreation_Test::TestBody()’ marked ‘override’, but does not override ; - [2022-07-25T19:35:53.011Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:501:9: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:35:53.011Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:503:37: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:35:53.011Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:504:9: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:35:53.011Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:522:8: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:35:53.011Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:53:1: error: ‘class testing::internal::ParameterizedTestSuiteInfo&lt;RDatasetSpecTest&gt;’ has no member named ‘AddTestPattern’ ; - [2022-07-25T19:35:53.012Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:431:7: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest_SimpleChainsCreation_Test’ ; - [2022-07-25T19:35:53.012Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:434:9: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest_SimpleChainsCreation_Test’ ; - [2022-07-25T19:35:53.012Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:87:1: error: ‘void RDatasetSpecTest_Friends_Test::TestBody()’ marked ‘override’, but does not override . And 38 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11046#issuecomment-1194533445:1553,Parameteriz,ParameterizedTestSuiteInfo,1553,https://root.cern,https://github.com/root-project/root/pull/11046#issuecomment-1194533445,1,['Parameteriz'],['ParameterizedTestSuiteInfo']
Modifiability,"/CMakeFiles/dataframe_datasetspec.dir/dataframe_datasetspec.cxx.o ; - [2022-07-25T19:44:59.911Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:53:1: error: ‘void RDatasetSpecTest_SimpleChainsCreation_Test::TestBody()’ marked ‘override’, but does not override ; - [2022-07-25T19:44:59.911Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:501:9: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:44:59.911Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:503:37: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:44:59.911Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:504:9: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:44:59.911Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:522:8: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:44:59.911Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:53:1: error: ‘class testing::internal::ParameterizedTestSuiteInfo&lt;RDatasetSpecTest&gt;’ has no member named ‘AddTestPattern’ ; - [2022-07-25T19:44:59.911Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:431:7: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest_SimpleChainsCreation_Test’ ; - [2022-07-25T19:44:59.911Z] googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:434:9: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest_SimpleChainsCreation_Test’ ; - [2022-07-25T19:44:59.911Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:87:1: error: ‘void RDatasetSpecTest_Friends_Test::TestBody()’ marked ‘override’, but does not override . And 38 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11046#issuecomment-1194542975:1553,Parameteriz,ParameterizedTestSuiteInfo,1553,https://root.cern,https://github.com/root-project/root/pull/11046#issuecomment-1194542975,1,['Parameteriz'],['ParameterizedTestSuiteInfo']
Modifiability,"/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 9: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 10: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 11: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 12: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 14: Assuming field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 15: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 16: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 17: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 18: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 19: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 20: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 21: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 22: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:435; 24: Taking false branch in /opt/root_src/tmva/tmva/src/Classi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:27390,Config,Configurable,27390,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability,"/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]; Double_t yofs2 = 40;; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]; Double_t yofs2 = 40;; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;; ^~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;; ^; In file included from /opt/root_bld/include/RConfig.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:13508,variab,variable,13508,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,2,['variab'],['variable']
Modifiability,"/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:18526,plugin,plugins,18526,https://root.cern,https://github.com/root-project/root/issues/8931,1,['plugin'],['plugins']
Modifiability,/QuickMVAProbEstimator.h TMVA/Ranking.h TMVA/Reader.h TMVA/RegressionVariance.h TMVA/ResultsClassification.h TMVA/Results.h TMVA/ResultsMulticlass.h TMVA/ResultsRegression.h TMVA/ROCCalc.h TMVA/ROCCurve.h TMVA/RootFinder.h TMVA/RuleCut.h TMVA/RuleEnsemble.h TMVA/RuleFitAPI.h TMVA/RuleFit.h TMVA/RuleFitParams.h TMVA/Rule.h TMVA/SdivSqrtSplusB.h TMVA/SeparationBase.h TMVA/SimulatedAnnealingFitter.h TMVA/SimulatedAnnealing.h TMVA/SVEvent.h TMVA/SVKernelFunction.h TMVA/SVKernelMatrix.h TMVA/SVWorkingSet.h TMVA/TActivationChooser.h TMVA/TActivation.h TMVA/TActivationIdentity.h TMVA/TActivationRadial.h TMVA/TActivationReLU.h TMVA/TActivationSigmoid.h TMVA/TActivationTanh.h TMVA/Timer.h TMVA/TNeuron.h TMVA/TNeuronInputAbs.h TMVA/TNeuronInputChooser.h TMVA/TNeuronInput.h TMVA/TNeuronInputSqSum.h TMVA/TNeuronInputSum.h TMVA/Tools.h TMVA/TransformationHandler.h TMVA/TSpline1.h TMVA/TSpline2.h TMVA/TSynapse.h TMVA/Types.h TMVA/VariableDecorrTransform.h TMVA/VariableGaussTransform.h TMVA/VariableIdentityTransform.h TMVA/VariableImportance.h TMVA/VariableInfo.h TMVA/VariableNormalizeTransform.h TMVA/VariablePCATransform.h TMVA/VariableRearrangeTransform.h TMVA/VariableTransformBase.h TMVA/VariableTransform.h TMVA/VarTransformHandler.h TMVA/Version.h TMVA/Volume.h TMVA/RTensor.hxx TMVA/RTensorUtils.hxx /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:223:9: error: no member named 'reverse' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:226:9: error: no member named 'reverse' in namespace 'std' ; - Error: Had to build non-system module ROOTDataFrame implicitly. You first need to ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libTMVA5e23216ab9_dictUmbrella.h) . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3907#issuecomment-498800780:6682,Variab,VariableIdentityTransform,6682,https://root.cern,https://github.com/root-project/root/pull/3907#issuecomment-498800780,1,['Variab'],['VariableIdentityTransform']
Modifiability,"/RConfig.h:24:20: error: expected ‘,’ or ‘...’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected ‘,’ or ‘...’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected ‘}’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected unqualified-id before ‘!’ token ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:57:26: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:66:35: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:70:32: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:73:29: error: ‘clang::isAnyIdentifier’ declared as an ‘inline’ variable . And 22 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/873#issuecomment-324172396:1324,variab,variable,1324,https://root.cern,https://github.com/root-project/root/pull/873#issuecomment-324172396,1,['variab'],['variable']
Modifiability,"/RConfig.h:24:20: error: expected ‘,’ or ‘...’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected ‘,’ or ‘...’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected ‘}’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected unqualified-id before ‘!’ token ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:57:26: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:66:35: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:70:32: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:73:29: error: ‘clang::isAnyIdentifier’ declared as an ‘inline’ variable . And 30 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/873#issuecomment-324169807:1327,variab,variable,1327,https://root.cern,https://github.com/root-project/root/pull/873#issuecomment-324169807,1,['variab'],['variable']
Modifiability,"/RConfig.h:24:20: error: expected ‘,’ or ‘...’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected ‘,’ or ‘...’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected ‘}’ before ‘!’ token ; - include/RConfig.h:24:20: error: expected unqualified-id before ‘!’ token ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:57:26: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:66:35: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:70:32: error: ‘TokenKind’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Basic/TokenKinds.h:73:29: error: ‘clang::isAnyIdentifier’ declared as an ‘inline’ variable . And 52 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes after parenthesized initializer ignored [-Wattributes] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:159:48: warning: attributes a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/873#issuecomment-324169099:1324,variab,variable,1324,https://root.cern,https://github.com/root-project/root/pull/873#issuecomment-324169099,1,['variab'],['variable']
Modifiability,/ROOT/RStringView.hxx:32:37: error: ‘experimental’ in namespace ‘std’ does not name a type ; - include/ROOT/RStringView.hxx:35:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:36:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:37:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:38:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:48:28: error: ‘string_view’ is not a member of ‘std’ ; - include/ROOT/RStringView.hxx:48:52: error: expected primary-expression before ‘*’ token ; - include/ROOT/RStringView.hxx:48:53: error: ‘pos’ was not declared in this scope ; - include/ROOT/RStringView.hxx:48:56: error: expression list treated as compound expression in initializer [-fpermissive] . And 103 more. ### Warnings:; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:182:33: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:184:32: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:186:45: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:182:33: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:184:32: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:186:45: warning: inline variables are only available with -std=c++1z or -std=gnu++1z,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3183#issuecomment-447873922:1428,variab,variables,1428,https://root.cern,https://github.com/root-project/root/pull/3183#issuecomment-447873922,18,['variab'],['variables']
Modifiability,"/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, int, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warnin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:25851,variab,variable,25851,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:10086,sandbox,sandbox,10086,https://root.cern,https://github.com/root-project/root/issues/8857,1,['sandbox'],['sandbox']
Modifiability,"/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(methods, kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: INTERNALERROR> res = mc.execute(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: INTERNALERROR> res = method(**kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: INTERNALERROR> warn_about_missing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 13",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:2653,config,config,2653,https://root.cern,https://github.com/root-project/root/issues/6597,1,['config'],['config']
Modifiability,"/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, char, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:43106,variab,variable,43106,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222; 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50; 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26; 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303; 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116; 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0; 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15616#issuecomment-2214089615:1147,Variab,VariableMetricBuilder,1147,https://root.cern,https://github.com/root-project/root/pull/15616#issuecomment-2214089615,2,['Variab'],['VariableMetricBuilder']
Modifiability,/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159172/console).; ### Warnings:; - [2022-11-15T15:20:01.956Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-15T15:20:07.015Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-15T15:31:25.902Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-15T15:32:03.914Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-15T15:32:03.914Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-15T15:32:03.914Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-15T15:32:03.914Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11708#issuecomment-1315531864:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/pull/11708#issuecomment-1315531864,2,['variab'],['variable']
Modifiability,/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159379/console).; ### Warnings:; - [2022-11-17T13:52:53.056Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-17T13:52:54.991Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-17T14:04:02.778Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-17T14:04:26.970Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-17T14:04:26.970Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-17T14:04:26.970Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-17T14:04:27.231Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11733#issuecomment-1318737826:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/pull/11733#issuecomment-1318737826,2,['variab'],['variable']
Modifiability,/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159555/console).; ### Warnings:; - [2022-11-21T03:49:15.817Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-21T03:49:19.429Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-21T03:49:36.303Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-21T03:49:43.721Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-21T03:49:43.722Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-21T03:49:43.722Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-21T03:49:43.722Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11748#issuecomment-1321447355:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/pull/11748#issuecomment-1321447355,2,['variab'],['variable']
Modifiability,/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159790/console).; ### Warnings:; - [2022-11-24T09:07:51.257Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-24T09:07:53.439Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-24T09:14:56.463Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-24T09:15:35.400Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-24T09:15:35.400Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-24T09:15:35.400Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-24T09:15:35.400Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11766#issuecomment-1326210462:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/pull/11766#issuecomment-1326210462,2,['variab'],['variable']
Modifiability,/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161045/console).; ### Warnings:; - [2022-12-07T17:42:19.058Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-07T17:42:19.058Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-07T17:46:18.718Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-12-07T17:46:18.719Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-07T17:46:18.719Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-07T17:46:18.719Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-07T17:46:18.719Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11849#issuecomment-1341369571:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/pull/11849#issuecomment-1341369571,2,['variab'],['variable']
Modifiability,/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161174/console).; ### Warnings:; - [2022-12-08T16:16:20.034Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-08T16:16:21.911Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-08T16:26:01.662Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-12-08T16:26:31.329Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-08T16:26:31.588Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-08T16:26:31.588Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-08T16:26:31.588Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11846#issuecomment-1343024910:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/pull/11846#issuecomment-1343024910,2,['variab'],['variable']
Modifiability,/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162693/console).; ### Warnings:; - [2022-12-19T11:24:27.822Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-19T11:24:30.207Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-19T11:34:37.662Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11928#issuecomment-1357568395:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/pull/11928#issuecomment-1357568395,2,['variab'],['variable']
Modifiability,"/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 878: Environment variables:; 878: ROOT_HIST=0; 878: Test timeout computed to be: 1500; 878: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 878: error code: -529697949; 878:; 878:; 1/16 Test #878: tutorial-dataframe-df001_introduction-py .................***Failed 5.63 sec; test 879; Start 879: tutorial-dataframe-df002_dataModel-py. 879: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df002_dataModel.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 879: Environment variables:; 879: ROOT_HIST=0; 879: Test timeout computed to be: 1500; 879: Error in <TChain::LoadTree>: Cannot find tree with name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df003_profiles.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 880: Environment variables:; 880: ROOT_HIST=0; 880: Test timeout computed to be: 1500; 880: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:1366,variab,variables,1366,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['variab'],['variables']
Modifiability,/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171684/console).; ### Warnings:; - [2023-03-30T10:32:29.480Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:35.992Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:37.408Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:38.498Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:39.279Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:40.051Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:41.176Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:41.758Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T10:32:43.135Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490137331:1042,variab,variables,1042,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490137331,1,['variab'],['variables']
Modifiability,/build/jenkins/workspace/root-pullrequests-build/root/builtins/zstd/compress/zstd_compress_superblock.c:412:12: warning: variable 'litLengthSum' set but not used [-Wunused-but-set-variable] ; - [2022-11-11T13:52:28.200Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T13:52:30.329Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T14:01:57.252Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.956Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11690#issuecomment-1311772207:1271,variab,variable,1271,https://root.cern,https://github.com/root-project/root/pull/11690#issuecomment-1311772207,2,['variab'],['variable']
Modifiability,/build/jenkins/workspace/root-pullrequests-build/root/builtins/zstd/compress/zstd_compress_superblock.c:412:12: warning: variable 'litLengthSum' set but not used [-Wunused-but-set-variable] ; - [2022-11-11T22:51:07.410Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T22:51:07.411Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T22:55:33.998Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-11T22:55:34.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T22:55:34.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T22:55:34.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T22:55:34.782Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11693#issuecomment-1312259746:1271,variab,variable,1271,https://root.cern,https://github.com/root-project/root/pull/11693#issuecomment-1312259746,2,['variab'],['variable']
Modifiability,/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:22:35: error: range-based ‘for’ loops are not allowed in C++98 mode . And 332557 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/res/TSchemaType.h:14:23: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:18:62: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:20:86: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:20:86: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:22:12: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:24:10: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:25:10: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/foundation/src/RConversionRuleParser.cxx:22:25: warning: unused variable ‘subPair’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2917#issuecomment-440734689:2805,extend,extended,2805,https://root.cern,https://github.com/root-project/root/pull/2917#issuecomment-440734689,1,['extend'],['extended']
Modifiability,"/builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #7 0x00007fff7c7ac09c in TUnixSystem::DispatchSignals (this=0x16573fa50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3610; #8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #9 0x00007fff7c7a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #10 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffc4480180) at /usr/include/c++/8/new:169; #12 llvm::orc::ExecutionSession::lookup (this=0x1656ebc10, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #13 0x00007fff78004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:28470,variab,variable,28470,https://root.cern,https://github.com/root-project/root/issues/12372,1,['variab'],['variable']
Modifiability,/cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6221-mac1014-python3&date=2020-08-22).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/console).; ### Warnings:; - [2020-08-22T08:31:46.140Z] /ec/build/workspace/root-pullrequests-build/root/core/zip/src/Bitshuffle.c:56:14: warning: 'LZ4_compress' is deprecated: use LZ4_compress_default() instead [-Wdeprecated-declarations] ; - [2020-08-22T08:31:46.674Z] /ec/build/workspace/root-pullrequests-build/root/core/zip/src/Bitshuffle_iochain.c:24:29: warning: unused parameter 'C' [-Wunused-parameter] ; - [2020-08-22T08:31:48.440Z] /ec/build/workspace/root-pullrequests-build/root/core/lz4/src/ZipLZ4.cxx:173:77: warning: format specifies type 'long' but the argument has type 'int64_t' (aka 'long long') [-Wformat] ; - [2020-08-22T08:38:35.230Z] /ec/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable 'leaves' [-Wunused-variable] . ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cache/roottest_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-678618866:1122,variab,variable,1122,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-678618866,2,['variab'],['variable']
Modifiability,"/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TApplication* theApp = new TApplication(""App"", &argc, argv);; auto *G= new TGMainFrame(gClient->GetRoot(), 768, 1024);; theApp->Run();; return 0;; }. ```; compiled with ; ```; c++ $(root-config --cflags --glibs) -g -O1 frame.cxx -o frame.exe; ```; and executed as ; ```; ./frame.exe; ```; ### Setup; ROOT master MacOSX 10.15; and ROOT night build ; root_v6.22.99.macosx64-10.15-clang120 MacOSX 10.15. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:4516,config,config,4516,https://root.cern,https://github.com/root-project/root/issues/6758,1,['config'],['config']
Modifiability,/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore -I/mnt/build/workspace/root-pullrequests-build/build/externals//mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/build/externals//mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncM,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675#issuecomment-565386571:21238,Adapt,AdaptiveIntegratorMultiDim,21238,https://root.cern,https://github.com/root-project/root/pull/4675#issuecomment-565386571,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore -I/mnt/build/workspace/root-pullrequests-build/build/externals//mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/build/externals//mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:2874,Adapt,AdaptiveIntegratorMultiDim,2874,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,5,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,/core/zip/src/inflate.c:1507:61: warning: shifting a negative signed value is undefined [-Wshift-negative-value] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable pa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1535#issuecomment-359405947:1204,portab,portable,1204,https://root.cern,https://github.com/root-project/root/pull/1535#issuecomment-359405947,2,['portab'],['portable']
Modifiability,/cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11693/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_simple/); - [projectroot.roottest.root.tree.split.roottest_root_tree_split_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11693/testReport/projectroot.roottest.root.tree/split/roottest_root_tree_split_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1326#issuecomment-344275076:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1326#issuecomment-344275076,2,['portab'],['portable']
Modifiability,/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/roofit/histfactory/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/xmlparser/inc -I/usr/include/libxml2 -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT roofit/hs3/CMakeFiles/HS3.dir/src/RYMLParser.cxx.o -MF roofit/hs3/CMakeFiles/HS3.dir/src/RYMLParser.cxx.o.d -o roofit/hs3/CMakeFiles/HS3.dir/src/RYMLParser.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/RYMLParser.cxx ; - [2020-08-31T10:29:59.001Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/RYMLParser.cxx:5:20: fatal error: ryml.hpp: No such file or directory . ### Warnings:; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:40:8: warning: ‘{anonymous}::_rooprodpdffactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:81:8: warning: ‘{anonymous}::_rooaddpdffactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:109:8: warning: ‘{anonymous}::_roosimultaneousfactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:136:8: warning: ‘{anonymous}::_roosimultaneousstreamer’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:152:8: warning: ‘{anonymous}::_roohistfuncstreamer’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6254#issuecomment-683698309:3691,variab,variable,3691,https://root.cern,https://github.com/root-project/root/pull/6254#issuecomment-683698309,1,['variab'],['variable']
Modifiability,/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_classesDictSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10448/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_classesDictSelection/); - [projectroot.roottest.root.meta.fwdDecls.roottest_root_meta_fwdDecls_fwdDeclarations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10448/testReport/projectroot.roottest.root.meta/fwdDecls/roottest_root_meta_fwdDecls_fwdDeclarations/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1268#issuecomment-341277108:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1268#issuecomment-341277108,2,['portab'],['portable']
Modifiability,/jenkins/workspace/root-pullrequests-build/root/geom/gdml/src/TGDMLWrite.cxx:1996:18: warning: explicitly assigning value of variable of type 'TString' to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/vmatrix.cxx:583:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/vmatrix.cxx:604:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:810:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:831:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:2592:6: warning: explicitly assigning value of variable of type 'TMatrixDSparse' (aka 'TMatrixTSparse&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:2610:6: warning: explicitly assigning value of variable of type 'TMatrixDSparse' (aka 'TMatrixTSparse&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:3447:6: warning: explicitly assigning value of variable of type 'TVectorD' (aka 'TVectorT&lt;double&gt;') to itself [-Wself-assign] . And 4 more. ### Failing tests:; - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.test.test_periodic_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1861#issuecomment-381665481:3110,variab,variable,3110,https://root.cern,https://github.com/root-project/root/pull/1861#issuecomment-381665481,1,['variab'],['variable']
Modifiability,/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 12 more. ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15556/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1535#issuecomment-359854573:1950,portab,portable,1950,https://root.cern,https://github.com/root-project/root/pull/1535#issuecomment-359854573,3,['portab'],['portable']
Modifiability,/lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156492/console).; ### Warnings:; - [2022-10-05T15:33:15.209Z] /data/sftnight/workspace/root-pullrequests-build/build/include/TNamed.h:54:22: warning: ‘virtual void TNamed::ls(Option_t*) const’ was hidden [-Woverloaded-virtual] ; - [2022-10-05T15:33:15.209Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/inc/RooBrowser.h:16:10: warning: by ‘void RooBrowser::ls(const char*)’ [-Woverloaded-virtual] ; - [2022-10-05T15:35:41.350Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode.cxx:1: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas] ; - [2022-10-05T15:35:41.350Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode.cxx:2: warning: ignoring #pragma ide diagnostic [-Wunknown-pragmas] ; - [2022-10-05T15:35:41.606Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode.cxx:6198: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas] ; - [2022-10-05T15:35:41.864Z] /data/sftnight/workspace/root-pullrequests-build/root/core/base/inc/TNamed.h:54:22: warning: ‘virtual void TNamed::ls(Option_t*) const’ was hidden [-Woverloaded-virtual] ; - [2022-10-05T15:35:41.864Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/inc/RooBrowser.h:16:10: warning: by ‘void RooBrowser::ls(const char*)’ [-Woverloaded-virtual] ; - [2022-10-05T15:35:42.429Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode_interactive.cxx:36:16: warning: unused variable ‘_y’ [-Wunused-variable] ; - [2022-10-05T15:35:42.429Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode_interactive.cxx:116:9: warning: unused variable ‘pxold’ [-Wunused-variable] ; - [2022-10-05T15:35:42.429Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode_interactive.cxx:118:9: warning: unused variable ‘py’ [-Wunused-variable] . And 91 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499#issuecomment-1268616559:1745,variab,variable,1745,https://root.cern,https://github.com/root-project/root/pull/11499#issuecomment-1268616559,6,['variab'],['variable']
Modifiability,/math/mathcore/src/TMath.cxx:3263:4: error: expected unqualified-id before ‘const’ ; - ../root/math/mathcore/src/TMath.cxx:3295:4: error: ‘Mask’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3295:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3295:27: error: ‘mask1’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3296:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3296:27: error: ‘mask2’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3297:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3297:27: error: ‘mask3’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3307:4: error: ‘MaskedAssign’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3307:33: error: expected primary-expression before ‘&gt;’ token . And 62 more. ### Warnings:; - ../root/math/mathcore/src/TMath.cxx:3238:38: warning: unused variable ‘mask’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:21: warning: unused variable ‘ap’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:25: warning: unused variable ‘aq’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:29: warning: unused variable ‘h’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:32: warning: unused variable ‘hc’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:36: warning: unused variable ‘y’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3404:21: warning: unused variable ‘result’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3410:24: warning: unused variable ‘r’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3464:94: warning: unused parameter ‘q’ [-Wunused-parameter] ; - ../root/math/mathcore/src/TMath.cxx:3491:89: warning: unused parameter ‘q’ [-Wunused-parameter],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401594204:1221,variab,variable,1221,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401594204,16,['variab'],['variable']
Modifiability,"/nix/store/yf93brl22riibk7sq50sdkdflvc02pgy-xz-5.4.1/lib/liblzma.so - found; -- Found LibLZMA: /nix/store/yf93brl22riibk7sq50sdkdflvc02pgy-xz-5.4.1/lib/liblzma.so (found version ""5.4.1"") ; -- Looking for xxHash; -- Found xxHash: /nix/store/iad1hr7zcdvhi3nh3bcqq0z5i5h19can-xxHash-0.8.1/lib/libxxhash.so (found version ""0.8.1"") ; -- Looking for ZSTD; -- Found ZSTD: /nix/store/r9p4axi2yi93c7r0q622dav3861zmr42-zstd-1.5.2/lib/libzstd.so ; -- Looking for LZ4; -- Found LZ4: /nix/store/akhdv5hm8cg1p1nlzbgna2wsf31mxfvr-lz4-1.9.4/lib/liblz4.so (found version ""1.9.4"") ; -- Looking for X11; Package expat was not found in the pkg-config search path.; Perhaps you should add the directory containing `expat.pc'; to the PKG_CONFIG_PATH environment variable; Package 'expat', required by 'fontconfig', not found; Package expat was not found in the pkg-config search path.; Perhaps you should add the directory containing `expat.pc'; to the PKG_CONFIG_PATH environment variable; Package 'expat', required by 'fontconfig', not found; Package expat was not found in the pkg-config search path.; Perhaps you should add the directory containing `expat.pc'; to the PKG_CONFIG_PATH environment variable; Package 'expat', required by 'fontconfig', not found; Package expat was not found in the pkg-config search path.; Perhaps you should add the directory containing `expat.pc'; to the PKG_CONFIG_PATH environment variable; Package 'expat', required by 'fontconfig', not found; -- Found X11: /nix/store/swvn5v81pn7x0gah3xcyw02vj3qk8zzk-xorgproto-2021.5/include ; -- Looking for XOpenDisplay in /nix/store/m1msaw85h2nwkqid3m06znr1i0195j83-libX11-1.8.1/lib/libX11.so;/nix/store/473r6968sp355b1azhrq53vwn8l6ajh9-libXext-1.3.4/lib/libXext.so; -- Looking for XOpenDisplay in /nix/store/m1msaw85h2nwkqid3m06znr1i0195j83-libX11-1.8.1/lib/libX11.so;/nix/store/473r6968sp355b1azhrq53vwn8l6ajh9-libXext-1.3.4/lib/libXext.so - found; -- Looking for gethostbyname; -- Looking for gethostbyname - found; -- Looking for connect; --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:8763,variab,variable,8763,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,2,"['config', 'variab']","['config', 'variable']"
Modifiability,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54535,variab,variable,54535,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:51143,variab,variable,51143,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:63006,variab,variable,63006,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,"/root-project/root/74ab7b0df345dbf4c3aec710a4d01e906862811b/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) found:. - :information_source: **1** minor issue. :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">No catch method for promise. This may result in an unhandled promise rejection. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/74ab7b0df345dbf4c3aec710a4d01e906862811b/ui5/eve7/lib/GlViewerRCore.js#L54"">GlViewerRCore.js:54</a></li> <li><a href=""https://github.com/root-project/root/blob/74ab7b0df345dbf4c3aec710a4d01e906862811b/ui5/eve7/lib/GlViewerRCore.js#L60"">GlViewerRCore.js:60</a></li> <li><a href=""https://github.com/root-project/root/blob/74ab7b0df345dbf4c3aec710a4d01e906862811b/ui5/eve7/lib/GlViewerRCore.js#L277"">GlViewerRCore.js:277</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/d356dc18b256eeed3728fc8fc82f4ab840594d37/root-project/root/74ab7b0df345dbf4c3aec710a4d01e906862811b/pr/_/%2Fui5%2Feve7%2Flib%2FGlViewerRCore.js/javascript%2Fdc_interfile_project%2FPromiseNotCaughtGeneral/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d356dc18b256eeed3728fc8fc82f4ab840594d37/root-project/root/74ab7b0df345dbf4c3aec710a4d01e906862811b/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8676#issuecomment-880156760:1971,plugin,plugins,1971,https://root.cern,https://github.com/root-project/root/pull/8676#issuecomment-880156760,3,['plugin'],"['plugin', 'plugins']"
Modifiability,/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/io/io/res -I/mnt/build/workspace/root-pullrequests-build/root/io/xml/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/xml -writeEmptyRootPCM TMVA/BDTEventWrapper.h TMVA/BinarySearchTree.h TMVA/BinarySearchTreeNode.h TMVA/BinaryTree.h TMVA/CCPruner.h TMVA/CCTreeWrapper.h TMVA/Classification.h TMVA/ClassifierFactory.h TMVA/ClassInfo.h TMVA/Config.h TMVA/Configurable.h TMVA/ConvergenceTest.h TMVA/CostComplexityPruneTool.h TMVA/CrossEntropy.h TMVA/CrossValidation.h TMVA/CvSplit.h TMVA/DataInputHandler.h TMVA/DataLoader.h TMVA/DataSetFactory.h TMVA/DataSet.h TMVA/DataSetInfo.h TMVA/DataSetManager.h TMVA/DecisionTree.h TMVA/DecisionTreeNode.h TMVA/Envelope.h TMVA/Event.h TMVA/ExpectedErrorPruneTool.h TMVA/Executor.h TMVA/Factory.h TMVA/FitterBase.h TMVA/GeneticAlgorithm.h TMVA/GeneticFitter.h TMVA/GeneticGenes.h TMVA/GeneticPopulation.h TMVA/GeneticRange.h TMVA/GiniIndex.h TMVA/GiniIndexWithLaplace.h TMVA/HyperParameterOptimisation.h TMVA/IFitterTarget.h TMVA/IMethod.h TMVA/Interval.h TMVA/IPruneTool.h TMVA/KDEKernel.h TMVA/LDA.h TMVA/LogInterval.h TMVA/LossFunction.h TMVA/MCFitter.h TMVA/MethodANNBase.h TMVA/MethodBase.h TMVA/MethodBayesClassifier.h TMVA/MethodBDT.h TMVA/MethodBoost.h TMVA/MethodCategory.h TMVA/MethodCFMlpANN_def.h TMVA/MethodCFMlpANN.h TMVA/MethodCFMlpANN_Utils.h TMVA/MethodCompositeBase.h TMVA/MethodCrossValidation.h TMVA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3907#issuecomment-498800780:3707,Config,Configurable,3707,https://root.cern,https://github.com/root-project/root/pull/3907#issuecomment-498800780,2,['Config'],['Configurable']
Modifiability,/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mlp/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/builtins -I/mnt/build/workspace/root-pullrequests-build/root/io/xml/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/usr/include -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc TMVA/BDTEventWrapper.h TMVA/BinarySearchTree.h TMVA/BinarySearchTreeNode.h TMVA/BinaryTree.h TMVA/CCPruner.h TMVA/CCTreeWrapper.h TMVA/Classification.h TMVA/ClassifierFactory.h TMVA/ClassInfo.h TMVA/Config.h TMVA/Configurable.h TMVA/ConvergenceTest.h TMVA/CostComplexityPruneTool.h TMVA/CrossEntropy.h TMVA/CrossValidation.h TMVA/CvSplit.h TMVA/DataInputHandler.h TMVA/DataLoader.h TMVA/DataSetFactory.h TMVA/DataSet.h TMVA/DataSetInfo.h TMVA/DataSetManager.h TMVA/DecisionTree.h TMVA/DecisionTreeNode.h TMVA/Envelope.h TMVA/Event.h TMVA/ExpectedErrorPruneTool.h TMVA/Executor.h TMVA/Factory.h TMVA/FitterBase.h TMVA/GeneticAlgorithm.h TMVA/GeneticFitter.h TMVA/GeneticGenes.h TMVA/GeneticPopulation.h TMVA/GeneticRange.h TMVA/GiniIndex.h TMVA/GiniIndexWithLaplace.h TMVA/HyperParameterOptimisation.h TMVA/IFitterTarget.h TMVA/IMethod.h TMVA/Interval.h TMVA/IPruneTool.h TMVA/KDEKernel.h TMVA/LDA.h TMVA/LogInterval.h TMVA/LossFunction.h TMVA/MCFitter.h TMVA/MethodANNBase.h TMVA/MethodBase.h TMVA/MethodBayesClassifier.h TMVA/MethodBDT.h TMVA/MethodBoost.h TMVA/MethodCategory.h TMVA/MethodCFMlpANN_def.h TMVA/MethodCFMlpANN.h TMVA/MethodCFMlpANN_Utils.h TMVA/MethodCompositeBase.h TMVA/MethodCrossValidation.h TMVA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873#issuecomment-903615278:4193,Config,Configurable,4193,https://root.cern,https://github.com/root-project/root/pull/8873#issuecomment-903615278,1,['Config'],['Configurable']
Modifiability,/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T09:23:10.132Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T09:23:12.077Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T09:23:12.650Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] ; - [2023-03-30T09:23:19.423Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:1: warning: inline variables are a C++17 extension [-Wc++17-extensions] . And 44 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171683/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171683/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171683/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171683/testReport/projectroot.roottest.root/dataframe/roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490016920:2414,variab,variables,2414,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490016920,1,['variab'],['variables']
Modifiability,/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:4981,Adapt,AdaptiveIntegratorMultiDim,4981,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:69796,variab,variable,69796,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Assuming fi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136983,Variab,VariableImportance,136983,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableImportance']
Modifiability,/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:34: error: variable or field ‘CancelSpecialInputMode’ declared void ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:34: error: ‘Range’ was not declared in this scope; did you mean ‘textinput::Range’? ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:41: error: ‘DisplayR’ was not declared in this scope ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:3: error: ‘Editor’ has not been declared ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:43: error: variable or field ‘CancelAndRevertSpecialInputMode’ declared void . And 28 more. ### Warnings:; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:114:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation] ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:112:11: warning: unused variable ‘Line’ [-Wunused-variable] ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:113:20: warning: variable ‘NewHistEntry’ set but not used [-Wunused-but-set-variable] ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:110:41: warning: unused parameter ‘R’ [-Wunused-parameter] ; - [2022-03-30T20:56:08.467Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:128:5: warning: control reaches end of non-void function [-Wreturn-type],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1083617662:2481,variab,variable,2481,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1083617662,4,['variab'],['variable']
Modifiability,"/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: INTERNALERROR> res = method(**kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: INTERNALERROR> warn_about_missing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: res = mc.execute(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: res = method(**kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: warn_about_missing_assertion(mode); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: assert False; 1312: AssertionError; 1312: ; 1312: -- END TEST OUTPUT --; 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):; 1312: got exit code 3 but expected 0; 1312: ; 1312: ; 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:4087,config,config,4087,https://root.cern,https://github.com/root-project/root/issues/6597,1,['config'],['config']
Modifiability,/sofie/test/RangeFloat_FromONNX.hxx:18:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:19:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:27:21: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:29:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:32:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope . And 17 more. ### Warnings:; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:423:8: warning: unused variable ‘op_0_n’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:424:8: warning: unused variable ‘op_0_k’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:425:10: warning: unused variable ‘op_0_alpha’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:426:10: warning: unused variable ‘op_0_beta’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:427:8: warning: unused variable ‘op_0_lda’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:428:8: warning: unused variable ‘op_0_ldb’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/L,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1949290178:1756,variab,variable,1756,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1949290178,2,['variab'],['variable']
Modifiability,/src/CPPMethod.cxx:240; 17: 'errtype' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 18: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 19: Assuming 'pyname' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 20: '?' condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 21: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 22: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 23: Access to field 'fTopMessage' results in a dereference of a null pointer (loaded from variable 'evalue') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:276; 24: expanded from macro 'Py_XDECREF' in /usr/include/python2.7/object.h:825; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176:9: warning: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: 'pyobj' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 4: Calling 'IsPyCArgObject' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087; 5: 'pycarg_type' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 6: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 7: 'ctmod' initialized here in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165; 8: Assuming 'ctmod' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 9: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 10: Access to field 'ob_refcnt' results in a dereference of a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-824715675:2973,variab,variable,2973,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-824715675,1,['variab'],['variable']
Modifiability,/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:6368,Plugin,PluginManager,6368,https://root.cern,https://github.com/root-project/root/issues/11765,1,['Plugin'],['PluginManager']
Modifiability,"/src/RSQLiteDS.cxx:443:1: error: use of undeclared identifier 'RSqliteDS' ; - [2022-12-12T09:31:23.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/src/RSQLiteDS.cxx:456:33: error: use of undeclared identifier 'RSqliteDS' ; - [2022-12-12T09:31:23.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/src/RSQLiteDS.cxx:463:1: error: use of undeclared identifier 'RDataSource' ; - [2022-12-12T09:31:23.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/src/RSQLiteDS.cxx:463:23: error: use of undeclared identifier 'RSqliteDS' . And 24 more. ### Warnings:; - [2022-12-12T09:31:21.164Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:14:2: warning: ""RSqliteDS.hxx was renamed to RSQLiteDS.hxx. Please change your includes accordingly."" [-W#warnings] ; - [2022-12-12T09:31:21.164Z] &lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;:55:10: warning: non-portable path to file '""ROOT/RSqliteDS.hxx""'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - [2022-12-12T09:31:21.164Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:14:2: warning: ""RSqliteDS.hxx was renamed to RSQLiteDS.hxx. Please change your includes accordingly."" [-W#warnings] ; - [2022-12-12T09:31:21.164Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:15:10: warning: non-portable path to file '""RSqliteDS.hxx""'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - [2022-12-12T09:31:23.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/src/RSQLiteDS.cxx:11:10: warning: non-portable path to file '&lt;ROOT/RSqliteDS.hxx&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - [2022-12-12T09:31:23.869Z] /Users/sftnigh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11125#issuecomment-1346161330:2410,portab,portable,2410,https://root.cern,https://github.com/root-project/root/pull/11125#issuecomment-1346161330,1,['portab'],['portable']
Modifiability,"/src/RSQLiteDS.cxx:443:1: error: use of undeclared identifier 'RSqliteDS' ; - [2022-12-12T14:24:39.873Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/src/RSQLiteDS.cxx:456:33: error: use of undeclared identifier 'RSqliteDS' ; - [2022-12-12T14:24:39.873Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/src/RSQLiteDS.cxx:463:1: error: use of undeclared identifier 'RDataSource' ; - [2022-12-12T14:24:39.873Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/src/RSQLiteDS.cxx:463:23: error: use of undeclared identifier 'RSqliteDS' . And 24 more. ### Warnings:; - [2022-12-12T14:24:37.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:14:2: warning: ""RSqliteDS.hxx was renamed to RSQLiteDS.hxx. Please change your includes accordingly."" [-W#warnings] ; - [2022-12-12T14:24:37.869Z] &lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;:55:10: warning: non-portable path to file '""ROOT/RSqliteDS.hxx""'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - [2022-12-12T14:24:37.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:14:2: warning: ""RSqliteDS.hxx was renamed to RSQLiteDS.hxx. Please change your includes accordingly."" [-W#warnings] ; - [2022-12-12T14:24:37.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:15:10: warning: non-portable path to file '""RSqliteDS.hxx""'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - [2022-12-12T14:24:38.129Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/tree/dataframe/G__ROOTDataFrame.cxx:92:10: warning: non-portable path to file '""ROOT/RSqliteDS.hxx""'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - [2022-12-12T14:24:38.129Z] /Users/sftnight/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11125#issuecomment-1346599181:2410,portab,portable,2410,https://root.cern,https://github.com/root-project/root/pull/11125#issuecomment-1346599181,1,['portab'],['portable']
Modifiability,/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variables.cxx:186; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h; /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h; /opt/root_src/tmva/tmva/src/Classification.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx; /opt/root_src/tmva/tmva/src/DataInputHandler.cxx; /opt/root_src/tmva/tmva/src/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DataSetInfo.cxx; /opt/root_src/tmva/tmva/src/DataSetManager.cxx; /opt/root_src/tmva/tmva/src/DecisionTree.cxx; /opt/root_src/tmva/tmva/src/ExpectedErrorPruneTool.cxx; /opt/root_src/tmva/tmva/src/KDEKernel.cxx; /opt/root_src/tmva/tmva/src/MethodBDT.cxx; /opt/root_src/tmva/tmva/src/MethodBase.cxx; /opt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/Me,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:144877,variab,variablesMultiClass,144877,https://root.cern,https://github.com/root-project/root/issues/7526,1,['variab'],['variablesMultiClass']
Modifiability,"/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 24: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 25: Field 'fModelPersistence' is true in /opt/root_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:24942,Config,Configurable,24942,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability,/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDeco,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:135541,Variab,VariableDecorrTransform,135541,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,"/usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:; ```; set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root); set(VDT_LIBRARY vdt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1883,CONFIG,CONFIG,1883,https://root.cern,https://github.com/root-project/root/issues/14113,1,['CONFIG'],['CONFIG']
Modifiability,"/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT:; Custom build with Nix package manager against the Nixpkgs revision [60e709069fa2fbcfca943d8f6df8dc6d33c67025](https://github.com/ShamrockLee/nixpkgs/tree/60e709069fa2fbcfca943d8f6df8dc6d33c67025), a custom fork against the master branch of [NixOS/Nixpkgs](https://github.com/NixOS/nixpkgs), with the root source overrided. The gcc version is `10.3.0`. ### Additional context; Nix Flake setup to build ROOT:. `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{self, nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; version = ""2021-09-01"";; src = root-source;; cmakeFlags = (map (oldFlag:; if oldFlag == ""-Dimt=OFF"" then ""-Dimt=ON""; else if oldFlag == ""-Dssl=OFF"" then ""-Dssl=ON""; # else if oldFlag == ""-Dgfal=OFF"" then ""-Dgfal=ON""; # else if oldFlag == ""-Dxrootd=OFF"" then ""-Dxrootd=ON""; else oldFlag; ) oldAttrs.cmakeFlags) ++ [; ""-DCMAKE_BUILD_TYPE=RelWithDebInfo""; ];; buildInputs = oldAttrs.buildInputs ++ (with pkgs-root; [; tbb # for implicit multithreading; openssl # for ssl support; ]);; });; }); ];; };; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]) ++ (with pkgs;[; gawk; gitAndTools.gitFull; ]);; };; packagesSub = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; inherit (pkgs.gitAndTools) git gitFull;; };; run = pkgs.writeShellScriptBin ""run"" ''; export PATH=""${ with packagesSub; pkgs.lib.makeBinPath [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:11647,inherit,inherit,11647,https://root.cern,https://github.com/root-project/root/issues/9240,1,['inherit'],['inherit']
Modifiability,"/workspace/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-27T08:56:19.837Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.837Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:343:3: warning: 'LegacyIRCompileLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use the ORCv2 IRCompileLayer instead [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.837Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:3: warning: 'LazyEmittingLayer' is deprecated: ORCv1 layers (including LazyEmittingLayer) are deprecated. Please use ORCv2, where lazy emission is the default [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.838Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699608185:1372,layers,layers,1372,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699608185,1,['layers'],['layers']
Modifiability,/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:44.652Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:44.652Z] /Users/sftnight/build/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699608185:2781,variab,variable,2781,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699608185,1,['variab'],['variable']
Modifiability,"/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:243:4: error: use of undeclared identifier 'plotEfficienciesMulticlass1vsRest' ; - /Volumes/MacintoshHD2/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:254:12: error: out-of-line definition of 'plotEfficienciesMulticlass1vsRest' does not match any declaration in namespace 'TMVA' ; - /Volumes/MacintoshHD2/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:279:49: error: no matching constructor for initialization of 'TMVA::EfficiencyPlotWrapper' ; - /Volumes/MacintoshHD2/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:298:12: error: out-of-line definition of 'efficienciesMulticlass1vs1' does not match any declaration in namespace 'TMVA' ; - /Volumes/MacintoshHD2/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:332:12: error: out-of-line definition of 'plotEfficienciesMulticlass1vs1' does not match any declaration in namespace 'TMVA' ; - /Volumes/MacintoshHD2/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:353:49: error: no matching constructor for initialization of 'TMVA::EfficiencyPlotWrapper' ; - /Volumes/MacintoshHD2/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:365:34: error: cannot initialize a variable of type 'TMVA::EfficiencyPlotWrapper *' with an lvalue of type 'mapped_type' (aka 'EfficiencyPlotWrapper *') ; - /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:634:11: error: no matching constructor for initialization of 'value_type' (aka 'pair&lt;const TString, EfficiencyPlotWrapper *&gt;') . And 1 more. ### Warnings:; - JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707#issuecomment-311798092:2161,variab,variable,2161,https://root.cern,https://github.com/root-project/root/pull/707#issuecomment-311798092,3,"['Plugin', 'plugin', 'variab']","['Plugin', 'plugin', 'variable']"
Modifiability,/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97081/console).; ### Errors:; - [2020-09-28T09:13:44.789Z] /ec/build/workspace/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-28T08:59:10.478Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:14:55: warning: unused parameter 'DGR' [-Wunused-parameter] ; - [2020-09-28T08:59:10.478Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:42: warning: unused parameter 'PP' [-Wunused-parameter] ; - [2020-09-28T08:59:10.478Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:47:45: warning: unused parameter 'Introducer' [-Wunused-parameter] ; - [2020-09-28T08:59:10.478Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:48:35: warning: unused parameter 'PragmaTok' [-Wunused-parameter] ; - [2020-09-28T09:02:00.373Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/Display.cpp:146:59: warning: unused parameter 'compiler' [-Wunused-parameter] ; - [2020-09-28T09:02:00.373Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/Display.cpp:146:81: warning: unused parameter 'decl' [-Wunused-parameter] ; - [2020-09-28T09:02:00.373Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/Display.cpp:1163:41: warning: unused parameter 'D' [-Wunused-parameter] ; - [2020-09-28T09:02:00.373Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:235:38: warning: unused parameter 'C' [-Wunused-parameter] ; - [2020-09-28T09:06:15.024Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/Inte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699885057:1099,plugin,plugins,1099,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699885057,1,['plugin'],['plugins']
Modifiability,/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 810 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:242:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:244:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:62:29: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:25: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: extended initializer lists only available with -std=c++,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2505#issuecomment-415342099:2271,extend,extended,2271,https://root.cern,https://github.com/root-project/root/pull/2505#issuecomment-415342099,3,['extend'],['extended']
Modifiability,0%) 0.15 ( 4%) 0.31 ( 0%) 26106 kB ( 1%); tree switch lowering : 0.01 ( 0%) 0.00 ( 0%) 0.00 ( 0%) 0 kB ( 0%); dominance frontiers : 0.05 ( 0%) 0.00 ( 0%) 0.04 ( 0%) 0 kB ( 0%); dominance computation : 0.80 ( 0%) 0.01 ( 0%) 0.83 ( 0%) 0 kB ( 0%); out of ssa : 0.39 ( 0%) 0.01 ( 0%) 0.36 ( 0%) 3829 kB ( 0%); expand vars : 0.05 ( 0%) 0.00 ( 0%) 0.06 ( 0%) 14241 kB ( 1%); expand : 1.28 ( 0%) 0.08 ( 2%) 1.37 ( 0%) 323252 kB ( 17%); post expand cleanups : 0.49 ( 0%) 0.01 ( 0%) 0.50 ( 0%) 45997 kB ( 2%); varconst : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 31 kB ( 0%); jump : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); loop init : 4.00 ( 1%) 0.02 ( 1%) 4.00 ( 1%) 20377 kB ( 1%); loop fini : 0.05 ( 0%) 0.00 ( 0%) 0.06 ( 0%) 0 kB ( 0%); mode switching : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); integrated RA : 172.04 ( 54%) 0.76 ( 20%) 173.04 ( 53%) 158446 kB ( 8%); LRA non-specific : 3.26 ( 1%) 0.10 ( 3%) 3.35 ( 1%) 8175 kB ( 0%); LRA virtuals elimination : 1.16 ( 0%) 0.01 ( 0%) 1.17 ( 0%) 19987 kB ( 1%); LRA reload inheritance : 0.03 ( 0%) 0.00 ( 0%) 0.00 ( 0%) 26 kB ( 0%); LRA create live ranges : 108.01 ( 34%) 0.14 ( 4%) 108.24 ( 33%) 3724 kB ( 0%); LRA hard reg assignment : 0.18 ( 0%) 0.00 ( 0%) 0.19 ( 0%) 0 kB ( 0%); reload : 0.03 ( 0%) 0.00 ( 0%) 0.02 ( 0%) 0 kB ( 0%); thread pro- & epilogue : 1.19 ( 0%) 0.00 ( 0%) 1.26 ( 0%) 3682 kB ( 0%); machine dep reorg : 0.03 ( 0%) 0.00 ( 0%) 0.05 ( 0%) 0 kB ( 0%); shorten branches : 0.75 ( 0%) 0.01 ( 0%) 0.77 ( 0%) 0 kB ( 0%); reg stack : 0.01 ( 0%) 0.00 ( 0%) 0.00 ( 0%) 0 kB ( 0%); final : 1.78 ( 1%) 0.05 ( 1%) 1.79 ( 1%) 73058 kB ( 4%); early local passes : 0.00 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); rest of compilation : 2.25 ( 1%) 0.04 ( 1%) 2.33 ( 1%) 64482 kB ( 3%); repair loop structures : 0.01 ( 0%) 0.00 ( 0%) 0.02 ( 0%) 0 kB ( 0%); TOTAL : 320.48 3.74 324.68 1902063 kB; 322.67user 3.97system 5:27.17elapsed 99%CPU (0avgtext+0avgdata 3751416maxresident)k; 56328inputs+131416outputs (192major+1027012minor)pagefaults 0swaps; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-802860588:2632,inherit,inheritance,2632,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-802860588,1,['inherit'],['inheritance']
Modifiability,"00); 	libROOTVecOps.so => /SMASH/root_install/lib/libROOTVecOps.so (0x00007f21941b1000); 	libTree.so => /SMASH/root_install/lib/libTree.so (0x00007f2193e65000); 	libTreePlayer.so => /SMASH/root_install/lib/libTreePlayer.so (0x00007f2193b41000); 	libRint.so => /SMASH/root_install/lib/libRint.so (0x00007f2193ae4000); 	libPostscript.so => /SMASH/root_install/lib/libPostscript.so (0x00007f2193953000); 	libMatrix.so => /SMASH/root_install/lib/libMatrix.so (0x00007f21935d5000); 	libPhysics.so => /SMASH/root_install/lib/libPhysics.so (0x00007f2193539000); 	libMathCore.so => /SMASH/root_install/lib/libMathCore.so (0x00007f2193113000); 	libThread.so => /SMASH/root_install/lib/libThread.so (0x00007f2193072000); 	libMultiProc.so => /SMASH/root_install/lib/libMultiProc.so (0x00007f219305b000); 	libROOTDataFrame.so => /SMASH/root_install/lib/libROOTDataFrame.so (0x00007f2192dd3000); 	libHepMC3rootIO.so.3 => /SMASH/hepmc3_install/lib/libHepMC3rootIO.so.3 (0x00007f2192bb0000); 	libtbb.so.2 => /SMASH/root_install/lib/libtbb.so.2 (0x00007f2184ecd000); 	libvdt.so => /SMASH/root_install/lib/libvdt.so (0x00007f2184910000); 	libGenVector.so => /SMASH/root_install/lib/libGenVector.so (0x00007f21847b9000); 	libROOTNTuple.so => /SMASH/root_install/lib/libROOTNTuple.so (0x00007f218455a000); ```; makes the sanitiser running the test still complain as above. 🤔 I guess I could create a standalone hello-world C++ code and compile it with the sanitiser linking to ROOT as our unit test does and I should get the same report. Let me know if you need so. Now, this behaviour (leaking just linking) should make it not too difficult to locate the issue. Do you do something [with globals or static variables](https://stackoverflow.com/a/8353892/14967071)? Or do you have [a `_init` and/or `_fini` function](https://stackoverflow.com/a/6412445/14967071)?. By the way, I think we might reduce which ROOT libraries we link against and we have an issue about this, although it is not a urgent aspect at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1816003128:3227,variab,variables,3227,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1816003128,1,['variab'],['variables']
Modifiability,"01-11-0800/pyRelValMatrixLogs/run/134.807_RunDoubleEGPrpt2015C+RunDoubleEGPrpt2015C+HLTDR2_25ns+RECODR2_25nsreHLT_HIPM+HARVESTDR2/step2_RunDoubleEGPrpt2015C+RunDoubleEGPrpt2015C+HLTDR2_25ns+RECODR2_25nsreHLT_HIPM+HARVESTDR2.log#/; ```; cmsRun: /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/997e45a2cab6f1aa8d23229a1e263b28/opt/cmssw/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT626_X_2022-01-11-0800/src/FWCore/Concurrency/src/WaitingTaskList.cc:57: void edm::WaitingTaskList::reset(): Assertion `m_head == nullptr' failed. A fatal system signal has occurred: abort signal; The following is the call stack containing the origin of the signal. Tue Jan 11 18:56:50 CET 2022; Thread 10 (Thread 0x2b61c6c00700 (LWP 19510) ""cmsRun""):; #0 0x00002b6177e159fd in nanosleep () from /lib64/libc.so.6; #1 0x00002b6177e15894 in sleep () from /lib64/libc.so.6; #2 0x00002b617d88eca0 in sig_pause_for_stacktrace () from /cvmfs/cms-ib.cern.ch/nweek-02715/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT626_X_2022-01-11-0800/lib/slc7_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 <signal handler called>; #4 0x00002b61752e3570 in check_match () from /lib64/ld-linux-x86-64.so.2; #5 0x00002b61752e3dbb in do_lookup_x () from /lib64/ld-linux-x86-64.so.2; #6 0x00002b61752e409f in _dl_lookup_symbol_x () from /lib64/ld-linux-x86-64.so.2; #7 0x00002b61752e8dee in _dl_fixup () from /lib64/ld-linux-x86-64.so.2; #8 0x00002b61752f09ea in _dl_runtime_resolve_xsave () from /lib64/ld-linux-x86-64.so.2; #9 0x00002b61754a9961 in edm::WaitingTaskList::reset() () from /cvmfs/cms-ib.cern.ch/nweek-02715/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT626_X_2022-01-11-0800/lib/slc7_amd64_gcc10/libFWCoreConcurrency.so; #10 0x00002b61757aa998 in edm::Worker::reset() () from /cvmfs/cms-ib.cern.ch/nweek-02715/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT626_X_2022-01-11-0800/lib/slc7_amd64_gcc10/libFWCoreFramework.so; #11 0x00002b61757a9624 in edm::WorkerManager::resetAll() () from /cvmfs/cms-ib.cern.ch/nweek-02715/slc7_amd64_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7837#issuecomment-1010312773:1315,plugin,pluginFWCoreServicesPlugins,1315,https://root.cern,https://github.com/root-project/root/pull/7837#issuecomment-1010312773,1,['plugin'],['pluginFWCoreServicesPlugins']
Modifiability,"011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. /bin/sh: lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:7767,variab,variable,7767,https://root.cern,https://github.com/root-project/root/issues/12957,1,['variab'],['variable']
Modifiability,"011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. The lines be",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:4238,variab,variable,4238,https://root.cern,https://github.com/root-project/root/issues/12957,1,['variab'],['variable']
Modifiability,012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_zeroentries](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9243/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_zeroentries/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1200#issuecomment-337895383:1962,portab,portable,1962,https://root.cern,https://github.com/root-project/root/pull/1200#issuecomment-337895383,3,['portab'],['portable']
Modifiability,012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_zeroentries](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9276/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_zeroentries/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/956#issuecomment-337953204:1970,portab,portable,1970,https://root.cern,https://github.com/root-project/root/pull/956#issuecomment-337953204,3,['portab'],['portable']
Modifiability,012/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11137/console).; ### Warnings:; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/readerarray_iterator.cxx:52:6: warning: expression result unused [-Wunused-value] ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/readerarray_iterator.cxx:38:15: warning: unused variable 'it2' [-Wunused-variable] ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/root/tree/treeplayer/test/readerarray_iterator.cxx:118:6: warning: expression result unused [-Wunused-value] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warni,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259#issuecomment-342910345:1014,portab,portable,1014,https://root.cern,https://github.com/root-project/root/pull/1259#issuecomment-342910345,1,['portab'],['portable']
Modifiability,"088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3f6a277fex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ThreadSafety.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\clangAnalysis.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Bitcode/BitstreamReader.h(55,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_cc044460db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\FrontendActions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\clangFrontend.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\DeltaTree.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\clangRewrite.dir\Release\DeltaTree.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\clangRewrite.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale(288,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7b314e6dsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\TokenRewriter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\clangRewrite.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\build\workspace\root-pullrequests-buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5607#issuecomment-628614684:2587,Rewrite,Rewrite,2587,https://root.cern,https://github.com/root-project/root/pull/5607#issuecomment-628614684,1,['Rewrite'],['Rewrite']
Modifiability,09-21T13:25:11.266Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:25:11.266Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:25:20.638Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: ; - [2022-09-21T13:26:01.345Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:27:32.268Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:35:51.587Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T13:35:51.588Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . And 2 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1253768170:1703,variab,variable,1703,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1253768170,1,['variab'],['variable']
Modifiability,09:26:10.104Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:13.285Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:15.195Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z . And 49 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testRepor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490040073:2290,variab,variables,2290,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490040073,1,['variab'],['variables']
Modifiability,"0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:2990,Config,ConfigurableParamHelper,2990,https://root.cern,https://github.com/root-project/root/issues/8180,2,['Config'],['ConfigurableParamHelper']
Modifiability,"0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2; #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2; #7 0x00007f107aeedf3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:30026,variab,variable,30026,https://root.cern,https://github.com/root-project/root/issues/15970,1,['variab'],['variable']
Modifiability,"1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`.; By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang.; When configuring:; ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```; There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```; Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:; Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build; Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx; clang: error: the clang compiler does not support '-march=native'; make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1; make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9687:1972,config,configuring,1972,https://root.cern,https://github.com/root-project/root/issues/9687,1,['config'],['configuring']
Modifiability,"1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.837Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:343:3: warning: 'LegacyIRCompileLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use the ORCv2 IRCompileLayer instead [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.837Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:3: warning: 'LazyEmittingLayer' is deprecated: ORCv1 layers (including LazyEmittingLayer) are deprecated. Please use ORCv2, where lazy emission is the default [-Wdeprecated-declarations] ; - [2020-09-27T08:56:19.838Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:9: warning: 'LegacyRTDyldObjectLinkingLayer' is deprecated: ORCv1 layers (layers with the 'Legacy' prefix) are deprecated. Please use ORCv2 (see docs/ORCv2.rst) [-Wdeprecated-declarations] ; - [2020-09-27T08:56:23.152Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T08:56:33.713Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699608185:1719,layers,layers,1719,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699608185,2,['layers'],['layers']
Modifiability,"1. Create TWebCanvas from TRootGuiFactory if nothing else is configured; 2. Add warning message when web-based canvas started by default; 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back; 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`.; If no extra command-line arguments are specified, web canvas will be started and warning message will appear.; Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13107:61,config,configured,61,https://root.cern,https://github.com/root-project/root/pull/13107,2,['config'],"['configure', 'configured']"
Modifiability,"1. Create `ui5` folder with all related openui5 code, move code from `etc\eve7`; 2. Create `js` folder with JavaScript ROOT code, move code from `etc/http`; 3. Introduce `webui` build config parameter, enabled when root7 or c++14 are enabled; 4. Folder `js` copied into build directory when `http` is enabled; 5. Folder `ui5` copies into build directory when `webui` is enabled; 6. When ROOT installed, `js` and `ui5` directories copied into `<prefix>` directory (platform-specific), identified as `TROOT::GetDataDir()`; 7. Try to use Component.js and manifest.json in openui5 projects, organize code with ui5-typical subfolders names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3498:184,config,config,184,https://root.cern,https://github.com/root-project/root/pull/3498,1,['config'],['config']
Modifiability,1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget; 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry; 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14054:154,config,configure,154,https://root.cern,https://github.com/root-project/root/pull/14054,1,['config'],['configure']
Modifiability,1. Detect OpenSSL version and activate v1.1 API when required; 2. Do not let load ssl libraries by civetweb - they already linked to libRHTTP.so; 3. Suppress compiler warnings in civetweb.c; 4. Use upper case for OPENSSL_VERSION variable - same as in standard FindOpenSSL.cmake script,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1836:229,variab,variable,229,https://root.cern,https://github.com/root-project/root/pull/1836,1,['variab'],['variable']
Modifiability,1. Do not expose special parameters to URL string - now in default HTML file special attributes can be inserted together with `JSROOT.ConnectWebWindow` call; 2. Correctly handle `#` in WebWindow URL. Such symbol used for routing inside webpage and will be often used with openui5; 3. Unify handling of URL options with RWebDisplayArgs. For now only `key` and `batch_mode` parameters are exposed to web window URL; 4. Update/extend doxygen docu; 5. Fix error in v7 CanvasPainter - v616 already fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3561:424,extend,extend,424,https://root.cern,https://github.com/root-project/root/pull/3561,1,['extend'],['extend']
Modifiability,"1. Do not show hidden files by default (can be changed via settings); 2. Sort items by names by default (can be changed via settings); 3. Let sort by name, by size or kept items unsorted; 4. Items can be shown in reverse order (can be configure via settings); 5. Fix - do not open same file twice; 6. Fix - let draw other object on same RCanvas/TCanvas (was broken due to jsroot v6 migration); 7. Fix - do not close RBrowser when embed RCanvas closed via menu command; 8. Let browse and draw trees with `TBranchElement` branches (like example file from @eguiraud); 9. Show object JSON when double-click object with active code editor; 10. Update JSROOT with correspondent RCanvas/TWebCanvas fixes, close to final 6.0.0 version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7028:235,config,configure,235,https://root.cern,https://github.com/root-project/root/pull/7028,1,['config'],['configure']
Modifiability,"1. Do not use `Form` ; 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`; 3. Use JS module in `httptextlog.C` demo for custom class; 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro; 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15251:194,config,configure,194,https://root.cern,https://github.com/root-project/root/pull/15251,1,['config'],['configure']
Modifiability,1. Fix - correctly set visibility level for geo drawing; 2. Fix - use more factor for number of nodes in geo drawing; 3. Fix - add missing Chebyshev0 function; 4. Fix - provide Gaus with normalization; 5. Fix - call 3D rendering after adding TPolyLine3D; 6. Fix - properly add interactive resize elements; 7. Fix - drop handling on tabs layout; 8. Fix - member-wise streaming of std::map #262; 9. Fix - typo in expandItem; 10. Fix - add missing import in RPavePainter; 11. Fix - prevent drawing of empty TGraph; 12. Fix - use semicolon in RH3; 13. Fix - prevent zero division when drawing TGraph exclusion; 14. Fix - draw th2 col bins with configured y bar; 15. Fix - let handle derived classes from TH1/TH2 #269; 16. Fix - add support of #mp symbol; 17. Fix - support TMath::Sq() function; 18. Fix - prevent drawing of empty TGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13980:640,config,configured,640,https://root.cern,https://github.com/root-project/root/pull/13980,1,['config'],['configured']
Modifiability,1. Fix - interactive zooming on log color palette; 2. Fix - keyboard handling while input dialog active; 3. Fix - legend entry with not configured fill attributes; 4. Fix - prevent that color palette exceed graphical range; 5. Fix - exponential log axis labels with kMoreLogLabels bit set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15885:136,config,configured,136,https://root.cern,https://github.com/root-project/root/pull/15885,1,['config'],['configured']
Modifiability,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10843:505,variab,variables,505,https://root.cern,https://github.com/root-project/root/pull/10843,1,['variab'],['variables']
Modifiability,"1. Fix problem with fragmented websocket messages - some browsers can split messages on 120KB chunks. Now message merged together before delivered to the user.; 2. Solve problem with Google Chrome run in headless mode. ; Now chrome browser can run in headless mode without any special debugging flags, which opens some http ports. Now THttpServer provides special ""dummy"" script, which timedout until batch job is not finished.; 3. Try to correctly handle situation when browser hangs and does not reply for a long time. After pre-configured timeout (default 50 sec) such browser application will be closed.; 4. Let identify connecting websocket at the very beginning - with the first connect request. Allows to reject not allowed connection. Also for the future simplifies re-connection.; 5. In TWebWindow clearly identify batch job connection, let reuse if for consequent jobs, close it after 20 sec of idle time; 6. Use std::recursive_mutex in WebWindowsManager to protect methods which creates THttpServer / creates new window / starts new web browser. Comment out special manager guard - useless without special threading functionality; 7. Correspondent changes in JSROOT. ; 8. Special handling of 2d/3d canvas when producing PNG images - now is more consistent, no need to use THREE.SVGRenderer for that; 9. Add canvas size to the RPadDisplayItem class, used only in batch mode to configure image size; 10. Use workaround with static mutex to protect I/O in canvas painter in multi-threaded environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603:531,config,configured,531,https://root.cern,https://github.com/root-project/root/pull/2603,2,['config'],"['configure', 'configured']"
Modifiability,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12463:887,config,configure,887,https://root.cern,https://github.com/root-project/root/pull/12463,1,['config'],['configure']
Modifiability,1. Introduce new `EvalBackend()` command argument that will supersede `BatchMode()`; 2. Improve documentation of `RooAbsPdf::fitTo()` and `createNLL()`; 3. Make it clear what functions need to be overload when one wants to customize the behavior of `RooAbsPdf::fitTo()` and `createNLL()` polymorphically; 4. Add documentation for the new `EvalBackend()` command argument. More detail in the commit descriptions. This is how the new documentation on the evaluation backends will look like in the doxygen (I fixed the word-order-typo in the first sentence after taking the screenshot...):. ![eval_backend](https://github.com/root-project/root/assets/6578603/f23ef6e1-2cd2-4291-b5f5-da731e5883fd),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12716:288,polymorphi,polymorphically,288,https://root.cern,https://github.com/root-project/root/pull/12716,1,['polymorphi'],['polymorphically']
Modifiability,"1. Introduce special timer to send data to clients. If not everything can be send at once, after short timeout will be tried again; 2. Extend functionality of control message, manage it per connection. All special messages like enabling editor, moving web browser, enable/disable tooltip - all belong now to control message; 3. Change message priority, try to send as much as possible. First one sends control message, then specially requests for menu or projection and finally update for canvas drawing.; 4. Implement `Raise() / Iconify()` methods, they fully depend on the web browser",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13285:135,Extend,Extend,135,https://root.cern,https://github.com/root-project/root/pull/13285,1,['Extend'],['Extend']
Modifiability,1. Let access histogram from TF1 on the client; 2. Histogram used as axes attributes storage; 3. Always convert TF1 into histogram on client; 4. Fix several problems in function calculation; 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured; 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13138:257,config,configured,257,https://root.cern,https://github.com/root-project/root/pull/13138,1,['config'],['configured']
Modifiability,"1. Let configure `--web` also in batch mode; 2. Support `--web=server:port`; 3. Support `.mjs` extension, will be required for latest JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10089:7,config,configure,7,https://root.cern,https://github.com/root-project/root/pull/10089,1,['config'],['configure']
Modifiability,"1. Let interactively change configuration for draw object selection - like visibility level or maximal number of nodes. All these parameters combined together in configuration object, which can be send to server as JSON.; 2. Show actual statistic about number of meshes and faces in produced three.js geometry; 3. Let configure different light source (like in normal geometry viewer); 4. Provide JSROOT with correspondent changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4249:28,config,configuration,28,https://root.cern,https://github.com/root-project/root/pull/4249,3,['config'],"['configuration', 'configure']"
Modifiability,"1. List all windows volumes like C:, Q:,...; 2. Resolve windows links when appears; 3. Let configure file types in FileDialog (also when starts from client)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4744:91,config,configure,91,https://root.cern,https://github.com/root-project/root/pull/4744,1,['config'],['configure']
Modifiability,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14119:59,config,configured,59,https://root.cern,https://github.com/root-project/root/pull/14119,1,['config'],['configured']
Modifiability,1. Make CEF display working with latest CEF code; 2. Copy all necessary CEF files into ROOT binary directory - no need to have extra shell variables when ROOT is running; 3. Adjust Qt5WebEngine code - latest Qt 5.12 more strict with custom scheme definitions; 4. Let use CEF and Qt5 displays for any http address - not only RWebWindow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3548:139,variab,variables,139,https://root.cern,https://github.com/root-project/root/pull/3548,1,['variab'],['variables']
Modifiability,"1. Memory leak - when ""pie"" draw option is used, created TPie object is not destroyed; 2. When tf3 draw option provided to histogram, it crashes `h3->Draw(""tf3"")` ; 3. ""TF3"" and ""ISO"" strings does not correctly suppressed from options when decoded; 4. TF3 pointer remains in global variable and not cleared when TF3 is deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4943:282,variab,variable,282,https://root.cern,https://github.com/root-project/root/pull/4943,1,['variab'],['variable']
Modifiability,1. Move openui5 package to `builtins/openui5` subdirectory; 2. Let install full openui5 library version from web when builtin_openui5=OFF; Can be required when users want to used other openui5 components which are not included in provided package.; 3. For developers let configure `$ENV{OPENUI5DIR}` when just via symbolic link existing version can be used,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6710:271,config,configure,271,https://root.cern,https://github.com/root-project/root/pull/6710,1,['config'],['configure']
Modifiability,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11727:129,config,configured,129,https://root.cern,https://github.com/root-project/root/pull/11727,1,['config'],['configured']
Modifiability,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11822:568,plugin,plugin,568,https://root.cern,https://github.com/root-project/root/pull/11822,5,"['config', 'plugin']","['configured', 'plugin', 'plugins']"
Modifiability,"1. String always used as storage for `RColor`. Following values are supported:; * `#00FF00` - which is standard RGB ; * `#00FF0088` - standard RGBA; * `grey` - color name; * `[0.5]` - ordinal value to select color from current palette ; * `auto` - automatic color, calculated on client side using current palette and drawable index; 2. By this change simplify CSS syntax - now any color value can be assigned as; ```; line_color: blue; fill_color: auto; marker_color: [0.3]; ``` ; 3. Introduce `RAttrOnFrame`. It has extra `onframe` attribute which indicates where drawable drawn. ; Implement first for `RLine` class, which can be now inside or outside frame; 4. Support user coordinates for drawable inside frame, provide testing with `RLine` in draw_frame.cxx tutorial; 5. Let configure all margins with single parameter, called `margin_all` in CSS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8109:779,config,configure,779,https://root.cern,https://github.com/root-project/root/pull/8109,1,['config'],['configure']
Modifiability,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14002:53,Extend,Extend,53,https://root.cern,https://github.com/root-project/root/pull/14002,2,"['Extend', 'inherit']","['Extend', 'inherited']"
Modifiability,"1. Support unix sockets in `THttpServer`, fix civetweb warning; 2. Let configure unix socket for webgui widgets; 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket.; In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable.; This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes!. `rootssh.sh` also creates listener which get informed when new window is started on remote session; and automatically popup web browser using `xdg-open $url` command. Typical session should look like:; ```; [localhost] rootssh.sh user@remotehost; [remotehost] root --web=server -e ""new Browser""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11810:71,config,configure,71,https://root.cern,https://github.com/root-project/root/pull/11810,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,"1. Support web-based geometry viewer. When clicking TGeoManager from the file, new tab with geometry viewer will be shown; 2. Make RBrowserWidget class - entity to handle different views in modular way; - RCanvas; - TCanvas; - Geometry viewer; - Code editor; - Image viewer; 3. Functionality of each RBrowserWidget loaded only when required. When RBrowser started neither TCanvas nor RCanvas is loaded. Only when any object is clicked, small internal plugin is loaded and canvas is instantiated. Same with geometry viewer.; 4. Small JSROOT optimization for generic embeding of web widgets; 5. Always handle mouse double-click on server side. Only `RBrowsable` class can provide necessary information that is the best way to handle double-click. It either display object in current editor/viewer/canvas or will start new widget.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7088:451,plugin,plugin,451,https://root.cern,https://github.com/root-project/root/pull/7088,1,['plugin'],['plugin']
Modifiability,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8274:99,inherit,inherit,99,https://root.cern,https://github.com/root-project/root/pull/8274,1,['inherit'],['inherit']
Modifiability,1. Update name of in geopainter plugin; 2. Fix two errors in JSROOT; 3. Fix name of tree viewer in plugin; 4. Fix documentaion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13867:32,plugin,plugin,32,https://root.cern,https://github.com/root-project/root/pull/13867,2,['plugin'],['plugin']
Modifiability,"1. Use TString instead of plain char* in TCanvas methods; 2. Use std::vector<Bool_t> for TPad::fCollideGrid; 3. Fix memory leak in `TPad::DrawCollideGrid` and `TPad::DrawColorTable` methods; 4. Fix many-many memory leaks with usage of `<TPrimitive>::Draw<Primitive>` methods like `TLatex::DrawLatex` in tutorials, tests. In all these cases temporary object instance was not deleted. Now just using stack variable instead. ; 5. Improve some `TSpectrum2` tutorials - release allocated memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10852:404,variab,variable,404,https://root.cern,https://github.com/root-project/root/pull/10852,1,['variab'],['variable']
Modifiability,"1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before.; 2. Fix position of `#grave` and `#acute` symbols; 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up; 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:; ```; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.8);; l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");; }; ```. Here is old output:; ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:; ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:; ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3); ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14045:125,config,configured,125,https://root.cern,https://github.com/root-project/root/pull/14045,1,['config'],['configured']
Modifiability,1. Use std::vector instead of plain arrays; 2. More use of `nullptr`; 3. Avoid usage of global variables for local data in `TGraphPainter` class; 4. Test gPad before call gPad->GetView(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10831:95,variab,variables,95,https://root.cern,https://github.com/root-project/root/pull/10831,1,['variab'],['variables']
Modifiability,1. Using latest libpng; 2. Redefine Hash in image plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12797:50,plugin,plugin,50,https://root.cern,https://github.com/root-project/root/pull/12797,1,['plugin'],['plugin']
Modifiability,1. webgui batch only configured when no any extra args specified with `--web` call; 2. Let configure server port with argument like `--web=server:9200`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10080:21,config,configured,21,https://root.cern,https://github.com/root-project/root/pull/10080,2,['config'],"['configure', 'configured']"
Modifiability,"1.Let start fit panel from web-based canvas; 2. Let start TBrowser from web-based canvas; 3. Remove ""Experimental"" from TBrowser plugin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13527:129,plugin,plugin,129,https://root.cern,https://github.com/root-project/root/pull/13527,1,['plugin'],['plugin']
Modifiability,1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12272/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_snapshot/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1351#issuecomment-346142687:2018,portab,portable,2018,https://root.cern,https://github.com/root-project/root/pull/1351#issuecomment-346142687,3,['portab'],['portable']
Modifiability,102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 810 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:242:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:244:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:62:29: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:25: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:62:27: warning: extended initializer lists only available with -s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2505#issuecomment-415342099:2463,extend,extended,2463,https://root.cern,https://github.com/root-project/root/pull/2505#issuecomment-415342099,3,['extend'],['extended']
Modifiability,"11:52:13.880Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:113:13: error: no matching function for call to ‘ROOT::Fit::BinData::Add(ROOT::Experimental::Detail::RHistBinRef&lt;ROOT::Experimental::Detail::RHistImplBase&lt;ROOT::Experimental::Detail::RHistData&lt;1, double, std::vector&lt;double&gt;, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty&gt; &gt; &gt;::CoordArray_t, double)’ ; - [2020-07-31T11:52:13.880Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:116:35: error: cannot bind non-const lvalue reference of type ‘double&’ to an rvalue of type ‘double’ ; - [2020-07-31T11:52:13.880Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:118:13: error: no matching function for call to ‘ROOT::Fit::BinData::Add(ROOT::Experimental::Detail::RHistBinRef&lt;ROOT::Experimental::Detail::RHistImplBase&lt;ROOT::Experimental::Detail::RHistData&lt;1, double, std::vector&lt;double&gt;, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty&gt; &gt; &gt;::CoordArray_t, double, double)’ ; - [2020-07-31T11:52:13.881Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:173:26: error: no matching function for call to ‘BinContentToBinData(ROOT::Experimental::RHist&lt;1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty&gt;&, std::shared_ptr&lt;ROOT::Fit::BinData&gt;&, TF1*&, ROOT::Fit::DataOptions&, ROOT::Fit::DataRange&)’ . ### Warnings:; - [2020-07-31T11:52:13.880Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/test/fit.cxx:25:14: warning: variable ‘chi2ref’ set but not used [-Wunused-but-set-variable] ; - [2020-07-31T11:52:13.881Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/test/fit.cxx:78:4: warning: control reaches end of non-void function [-Wreturn-type]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6103#issuecomment-667082453:2605,variab,variable,2605,https://root.cern,https://github.com/root-project/root/pull/6103#issuecomment-667082453,2,['variab'],['variable']
Modifiability,12-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11428/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1148#issuecomment-343740411:2018,portab,portable,2018,https://root.cern,https://github.com/root-project/root/pull/1148#issuecomment-343740411,3,['portab'],['portable']
Modifiability,121; 35: Assuming 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 36: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 37: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 38: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 39: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 41: Assuming 'i1' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 42: Left side of '&&' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 43: Loop condition is false. Execution continues on line 1198 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:95580,variab,variable,95580,https://root.cern,https://github.com/root-project/root/issues/7432,1,['variab'],['variable']
Modifiability,"139;FileName=AliAOD.root is 418 GB on Grid, and ~10 GB filtered on SAF1…; > ; > Question: did this approach work for you (again, see this: 34bb2e2 https://github.com/root-mirror/root/commit/34bb2e2b5f21a2917f0821946a90a5d9b51e3fa1)? If it did not, why? If it is just a matter of typing less awkward strings for an extremely custom use case, then your patch cannot be accepted and I suggest replacing it with some good documentation for the end user :-). So no, the approach as it is does not work for us as :. a) we rarely stage full archives (that’s for sure); b) out of my head right now I cannot find back why but I kind of remember the proto://xxx?filter_aliversion#…. syntax did cause an issue somewhere. > As an alternative, you can provide them with a macro that generates the Query= part for you, if it is less awkward for them.; > ; > Ah, I also see that between your patches there is an option to ""stat"" the file if filtered. I can see the point there: stating a file which is not there would trigger a download on a specifically configured xrootd storage. This specific patch cannot be accepted by any means as it goes against a concept we have been trying to establish since a long time: ROOT's dataset manager is about managing lists of files. Staging files is a job that must be done elsewhere, for instance by a storage system or by a mechanism interacting with it.; > ; > Well, the intent of this part of the patch was to get a correct feed back (for the user) about the actual size of the file (as the size in the collection is the alien catalog size, i.e. before filtering). What you say here is that I cannot do that with a stat as this would trigger a download (in case the file is not there), do I get it correctly ? Any idea on how to achieve what I want ?; > Thing is, we let data management in ROOT out of the door for a reason, and we don't want it to come in again through the window :-); > ; > Well, yes, except that users do need data management at some point…. One other w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/63#issuecomment-99367114:3111,config,configured,3111,https://root.cern,https://github.com/root-project/root/pull/63#issuecomment-99367114,1,['config'],['configured']
Modifiability,"13:19:46.916Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:113:13: error: no matching function for call to ‘ROOT::Fit::BinData::Add(ROOT::Experimental::Detail::RHistBinRef&lt;ROOT::Experimental::Detail::RHistImplBase&lt;ROOT::Experimental::Detail::RHistData&lt;1, double, std::vector&lt;double&gt;, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty&gt; &gt; &gt;::CoordArray_t, double)’ ; - [2020-07-30T13:19:46.916Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:116:35: error: cannot bind non-const lvalue reference of type ‘double&’ to an rvalue of type ‘double’ ; - [2020-07-30T13:19:46.916Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:118:13: error: no matching function for call to ‘ROOT::Fit::BinData::Add(ROOT::Experimental::Detail::RHistBinRef&lt;ROOT::Experimental::Detail::RHistImplBase&lt;ROOT::Experimental::Detail::RHistData&lt;1, double, std::vector&lt;double&gt;, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty&gt; &gt; &gt;::CoordArray_t, double, double)’ ; - [2020-07-30T13:19:46.916Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/inc/ROOT/RFitImpl.hxx:173:26: error: no matching function for call to ‘BinContentToBinData(ROOT::Experimental::RHist&lt;1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty&gt;&, std::shared_ptr&lt;ROOT::Fit::BinData&gt;&, TF1*&, ROOT::Fit::DataOptions&, ROOT::Fit::DataRange&)’ . ### Warnings:; - [2020-07-30T13:19:46.915Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/test/fit.cxx:25:14: warning: variable ‘chi2ref’ set but not used [-Wunused-but-set-variable] ; - [2020-07-30T13:19:46.917Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/histv7/test/fit.cxx:78:4: warning: control reaches end of non-void function [-Wreturn-type]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6103#issuecomment-666360735:2708,variab,variable,2708,https://root.cern,https://github.com/root-project/root/pull/6103#issuecomment-666360735,2,['variab'],['variable']
Modifiability,"14.10.1.2; See ""; Performance Benchmarks""; \- redundant newline; 14.10.2; If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:; \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:; 14.12; the entry in the collection becomes in turn top level branches, etc.; \- a top level branch; IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:; \- reconsider formatting.; 14.14.1.1 Creating Branches with A single Variable; \- a single variable; 14.14.1.2; the number of existing entries is null.; \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785791789:757,Variab,Variable,757,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785791789,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:6044,variab,variable,6044,https://root.cern,https://github.com/root-project/root/issues/12957,1,['variab'],['variable']
Modifiability,"1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")...; 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping; 1874: sh: Syntax error: Unterminated quoted string; 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed!; 1874: __cxa_thread_cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13080:1996,plugin,plugins,1996,https://root.cern,https://github.com/root-project/root/issues/13080,1,['plugin'],['plugins']
Modifiability,"19:49:46.072Z] /data/sftnight/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:503:60: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:49:46.072Z] /data/sftnight/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:504:78: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest’ ; - [2022-07-25T19:49:46.073Z] /data/sftnight/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:522:8: error: no type named ‘ParamType’ in ‘class RDatasetSpe[ 93%] Building CXX object tree/ntuple/v7/test/CMakeFiles/rfield_string.dir/rfield_string.cxx.o ; - [2022-07-25T19:49:46.073Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:53:1: error: ‘class testing::internal::ParameterizedTestSuiteInfo&lt;RDatasetSpecTest&gt;’ has no member named ‘AddTestPattern’ ; - [2022-07-25T19:49:46.073Z] /data/sftnight/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:431:7: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest_SimpleChainsCreation_Test’ ; - [2022-07-25T19:49:46.073Z] /data/sftnight/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-param-util.h:434:50: error: no type named ‘ParamType’ in ‘class RDatasetSpecTest_SimpleChainsCreation_Test’ ; - [2022-07-25T19:49:46.073Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:87:1: error: ‘void RDatasetSpecTest_Friends_Test::TestBody()’ marked ‘override’, but does not override ; - [2022-07-25T19:49:46.073Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_datasetspec.cxx:87:1: error: ‘class testing::internal::Parameteri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11046#issuecomment-1194547886:1729,Parameteriz,ParameterizedTestSuiteInfo,1729,https://root.cern,https://github.com/root-project/root/pull/11046#issuecomment-1194547886,1,['Parameteriz'],['ParameterizedTestSuiteInfo']
Modifiability,"19;; float mu, Delta, Ng, Ec, h, epsilon_c, ng, Gamma, L_M_5;; TMVA::Reader *reader = new TMVA::Reader(""!Color:!Silent"");; reader->AddVariable( ""mu"", &mu );; reader->AddVariable( ""Delta"", &Delta );; reader->AddVariable( ""Ng"", &Ng );; reader->AddVariable( ""Ec"", &Ec );; reader->AddVariable( ""h"", &h );; reader->AddVariable( ""epsilon_c"", &epsilon_c );; reader->AddVariable( ""ng"", &ng );; reader->AddVariable( ""Gamma"", &Gamma );; reader->AddVariable( ""L-5"", &L_M_5 );; reader->BookMVA( ""MLP method"", Form(""/eos/user/j/jfeng5/work/quantum_computing/mc/tmva/weights/qc_MLP_%d.weights.xml"",t_i ));; TFile tf_fi(Form(""/afs/cern.ch/work/j/jfeng/private/quantum_computing/analysis/tmva/regression/t_%d.root"",t_i));; TF1 * tf = (TF1*) tf_fi.Get(""tf"");; double var_mean[8] = {-700, 250, 0.1, 100, 400, 6000, 0.1, 0.8};; mu = -700;; Delta = 250;; Ng = 0.1;; Ec = 100;; h = 400;; epsilon_c = 6000;; ng = 0.1;; Gamma = 0.8;. double MLP = reader->EvaluateMVA( ""MLP method"" );; double PI = tf->Eval(MLP);; cout << ""MLP = "" << MLP << endl;; cout << ""PI = "" << PI << endl;; //TFile fo(Form(""%10d.root"",irun), ""recreate"");; //fo.Close();; return 0;; }. In the MakeFile:. CXX=$(shell root-config --cxx); ROOTLIB=$(shell root-config --libs --glibs); ROOTLIB += -lRFIO -lMinuit -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT; FLIBS := -lifcore -static-libgcc -static-libstdc++ -std=c++11. all: generate; generate: ; $(CXX) generate.C -D__ROOTSHAREDLIBRARY__ -I$(ROOTSYS)/include -I./ $^ -o $@.exe $(ROOTLIB) $(FLIBS) -lMathMore -lCling; dump:; @echo $(ROOTSYS); clean: rm *.exe. I run it like:; make;; ./generate.exe. ### Setup; <!--; 1. ROOT version; 2. Operating system ; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: root6-14-04-icc19; Operating system: cc7 in lxplus7.cern.ch machines; ROOT is at /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904:2565,config,config,2565,https://root.cern,https://github.com/root-project/root/issues/6904,2,['config'],['config']
Modifiability,1: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-08T12:50:34.976Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T12:50:34.976Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T12:50:34.976Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T12:50:34.976Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T12:50:35.235Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T12:50:35.235Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T12:50:35.235Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:58:11: warning: ‘return_value’ may be used uninitialized in this function [-Wmaybe-uninitialized] ; - [2021-09-08T12:51:21.432Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx:46:29: warning: ‘test_env’ defined but not used [-Wunused-variable],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915211032:6730,variab,variable,6730,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915211032,1,['variab'],['variable']
Modifiability,1: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-08T15:34:08.827Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T15:34:08.827Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T15:34:08.827Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T15:34:08.827Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T15:34:08.828Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T15:34:09.085Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T15:34:09.085Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:58:11: warning: ‘return_value’ may be used uninitialized in this function [-Wmaybe-uninitialized] ; - [2021-09-08T15:34:50.441Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx:46:29: warning: ‘test_env’ defined but not used [-Wunused-variable],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915346328:6730,variab,variable,6730,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915346328,1,['variab'],['variable']
Modifiability,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:36339,config,config,36339,https://root.cern,https://github.com/root-project/root/issues/10676,1,['config'],['config']
Modifiability,"2 observations. If I understood correctly, fASTProperty is only set via the TClass construction in a dictionary file. One consequence is that the improvement does not apply to purely interpreted class (at the moment this is a minor concern but might the issue might not be re-noticed when we increase support for I/O of interpreted classes). fASTProperty is very similar to fProperty and even more to fClassProperty (where the fASTProperty might actually belong *if* there is space there). Currently fProperty and fClassProperty are set via the TProtoClass (for all classes except the Core/IO classes). So a few question to answer before merging. a) Should fASTProperty be inside fClassProperty, (and if not why)?; b) Should fASTProperty be set via TProtoClass? (for consistency); or; c) Should fProperty and fClassProperty be set through the TClass constructor? (to benefit from the same ""all classes"" speed-up?; d) Shouldn't this multiple-inheritance flag be set via/in TClass::Property (via ClassInfo_ClassProperty for example)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405634503:941,inherit,inheritance,941,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405634503,1,['inherit'],['inheritance']
Modifiability,2-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:19:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:27:21: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:29:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:32:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T20:30:16.319Z] tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope . And 17 more. ### Warnings:; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:423:8: warning: unused variable ‘op_0_n’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:424:8: warning: unused variable ‘op_0_k’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:425:10: warning: unused variable ‘op_0_alpha’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:426:10: warning: unused variable ‘op_0_beta’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:427:8: warning: unused variable ‘op_0_lda’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:428:8: warning: unused variable ‘op_0_ldb’ [-Wunused-variable] ; - [2024-02-16T20:30:16.318Z] tmva/sofie/test/Linear_16_FromONNX.hxx:437:9: warning: unused variable ‘op_2_transA’ [-Wunused-variable] . And 301 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1949290178:1892,variab,variable,1892,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1949290178,16,['variab'],['variable']
Modifiability,2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_splitcoll_arrayview](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11249/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_splitcoll_arrayview/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readerarray](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11249/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readerarray/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1303#issuecomment-343206137:2285,portab,portable,2285,https://root.cern,https://github.com/root-project/root/pull/1303#issuecomment-343206137,2,['portab'],['portable']
Modifiability,2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12441/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1359#issuecomment-346894796:2018,portab,portable,2018,https://root.cern,https://github.com/root-project/root/pull/1359#issuecomment-346894796,3,['portab'],['portable']
Modifiability,2020-08-18).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92996/console).; ### Warnings:; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:56:67: warning: declaration of ‘high’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:56:67: warning: declaration of ‘low’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:56:67: warning: declaration of ‘nominal’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:91:71: warning: declaration of ‘high’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:91:71: warning: declaration of ‘low’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:91:71: warning: declaration of ‘nominal’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:142:26: warning: declaration of ‘high’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:142:26: warning: declaration of ‘low’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:33:38.471Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:142:26: warning: declaration of ‘nominal’ shadows a member of 'this' [-Wshadow],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6204#issuecomment-675378891:1381,Flexible,FlexibleInterpVar,1381,https://root.cern,https://github.com/root-project/root/pull/6204#issuecomment-675378891,5,['Flexible'],['FlexibleInterpVar']
Modifiability,2020-08-18).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93004/console).; ### Warnings:; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:56:67: warning: declaration of ‘high’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:56:67: warning: declaration of ‘low’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:56:67: warning: declaration of ‘nominal’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:91:71: warning: declaration of ‘high’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:91:71: warning: declaration of ‘low’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:91:71: warning: declaration of ‘nominal’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:142:26: warning: declaration of ‘high’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:142:26: warning: declaration of ‘low’ shadows a member of 'this' [-Wshadow] ; - [2020-08-18T09:12:37.363Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/histfactory/src/FlexibleInterpVar.cxx:142:26: warning: declaration of ‘nominal’ shadows a member of 'this' [-Wshadow],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6203#issuecomment-675368158:1381,Flexible,FlexibleInterpVar,1381,https://root.cern,https://github.com/root-project/root/pull/6203#issuecomment-675368158,5,['Flexible'],['FlexibleInterpVar']
Modifiability,22-03-30T20:56:08.192Z] FAILED: core/textinput/CMakeFiles/TextInput.dir/src/textinput/Editor.cpp.o ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:129:5: error: expected unqualified-id before ‘if’ ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:144:5: error: ‘fCurHistEntry’ does not name a type ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:145:5: error: expected unqualified-id before ‘return’ ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:3: error: ‘Editor’ has not been declared ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:34: error: variable or field ‘CancelSpecialInputMode’ declared void ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:34: error: ‘Range’ was not declared in this scope; did you mean ‘textinput::Range’? ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:41: error: ‘DisplayR’ was not declared in this scope ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:3: error: ‘Editor’ has not been declared ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:43: error: variable or field ‘CancelAndRevertSpecialInputMode’ declared void . And 28 more. ### Warnings:; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:114:5: warning: this ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1083617662:1237,variab,variable,1237,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1083617662,1,['variab'],['variable']
Modifiability,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428:6351,variab,variable,6351,https://root.cern,https://github.com/root-project/root/issues/16428,1,['variab'],['variable']
Modifiability,"243:71: error: ‘plotEfficienciesMulticlass1vsRest’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:254:115: error: ‘void TMVA::plotEfficienciesMulticlass1vsRest(TString, TMVA::EEfficiencyPlotType, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:279:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:298:67: error: ‘void TMVA::efficienciesMulticlass1vs1(TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:332:94: error: ‘void TMVA::plotEfficienciesMulticlass1vs1(TString, TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:353:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:365:75: error: cannot convert ‘std::map&lt;TString, EfficiencyPlotWrapper*&gt;::mapped_type {aka EfficiencyPlotWrapper*}’ to ‘TMVA::EfficiencyPlotWrapper*’ in initialization ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.9.3/x86_64-slc6/include/c++/4.9.3/ext/new_allocator.h:120:4: error: no matching function for call to ‘std::pair&lt;const TString, EfficiencyPlotWrapper*&gt;::pair(const char*, TMVA::EfficiencyPlotWrapper*&)’ . And 2 more. ### Warnings:; - JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707#issuecomment-311790217:2673,plugin,plugin,2673,https://root.cern,https://github.com/root-project/root/pull/707#issuecomment-311790217,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"2607947ee3 [RF][HF] Add missing LinkDefs for systematics classes in HistFactory; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; 1b886c3e77 [RF] Improve Copy Constructor of HypoTestResult; 2e4b30b8c2 [RF] Better server redirection in compileForNormSet without attributes; d5ca98077e [RF] New function for server changing without setting attributes; 1f8a1666d1 [RF] Factor out marking compiled args in `NormalizationHelpers`; 7db5be20e9 [RF] Support multiple NLL with BatchMode existing at the same time; 24f1ca4fc1 [RF] Add exception if `RooAbsArg::_dataToken` is corrupted; ef69ad7633 [RF] Refactor BatchMode likelihood creation code; 364f67393d [RF] Disable RooFit multiprocess ProcessTimer test; e7d4ec3a69 [RF] Introduce `ROOFIT_MEMORY_SAFE_INTERFACES` macro; 3fd6057316 [RF] Use `RooFit::OwningPtr<>` also for RooAbsReal::createIntegral(); 8ad7711af6 [RF] Fix several memory leaks in `RooProdPdf::rearrangeProduct()`; ab420820bb [RF] Remove unused `binb` variable in RooBinnedGenContext; 81fbc904d4 [RF] Less manual memory management in RooFit; ff32c33446 [RF] Modernize memory management in RooStats; d89d54ce65 [RF] Fix `getPropagatedError()` negative parameter case for zero error; 4542e761eb [RF] Flag `RooAbsArg::getObservables()` as returning owning pointer; c246acb066 [RF] Always use `addOwned()` overload that takes `unique_ptr`; f17180742c [RF] Add `ExternalConstraints`, createNLL() and fitTo() to ModelConfig; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:2113,variab,variable,2113,https://root.cern,https://github.com/root-project/root/pull/12905,1,['variab'],['variable']
Modifiability,"27820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #107 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555624ea80, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #108 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555697ff60, b=..., ; pointer=0x555557627820 ""\200q\025\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #109 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555697fd90, b=..., arr=@0x7fffffffc670: 0x7fffffffc668, ; compinfo=0x55555761ab08, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #110 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #111 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557627820, buffer=..., ; this=0x55555761b130) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #112 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557627820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #113 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #114 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x555556983c10, b=..., ; pointer=0x555557627820 ""\200q\025\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #115 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x555556983a4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:24722,config,config,24722,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,"27820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #113 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #114 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x555556983c10, b=..., ; pointer=0x555557627820 ""\200q\025\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #115 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x555556983a40, b=..., arr=@0x7fffffffc8a0: 0x7fffffffc898, ; compinfo=0x555557649b28, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #116 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #117 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557627820, buffer=..., ; this=0x555557649e60) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #118 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557627820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #119 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555631fd20, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #120 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x55555631fd20); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #121 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:26097,config,config,26097,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,"2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FAL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:2445,variab,variable,2445,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['variab'],['variable']
Modifiability,"2ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:3308,variab,variable,3308,https://root.cern,https://github.com/root-project/root/issues/12957,2,['variab'],['variable']
Modifiability,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:1987,variab,variable,1987,https://root.cern,https://github.com/root-project/root/issues/11333,6,['variab'],['variable']
Modifiability,3-01-27T09:08:57.855Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-01-27T09:08:57.855Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-01-27T09:09:27.416Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-01-27T09:09:31.760Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-01-27T09:13:11.366Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:302:44: warning: parameter 'pymeth' set but not used [-Wunused-but-set-parameter] ; - [2023-01-27T09:13:52.026Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfoActions.cxx:3981:13: warning: variable 'asize' set but not used [-Wunused-but-set-variable] ; - [2023-01-27T09:13:52.026Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfoActions.cxx:4086:16: warning: variable 'asize' set but not used [-Wunused-but-set-variable] ; - [2023-01-27T09:14:04.755Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/tpython/src/TPython.cxx:333:48: warning: parameter 'argc' set but not used [-Wunused-but-set-parameter] . And 13 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12126#issuecomment-1406266083:2246,variab,variable,2246,https://root.cern,https://github.com/root-project/root/pull/12126#issuecomment-1406266083,4,['variab'],['variable']
Modifiability,"33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:4303,plugin,pluginIOPoolInput,4303,https://root.cern,https://github.com/root-project/root/issues/8008,1,['plugin'],['pluginIOPoolInput']
Modifiability,"351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 're",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:19309,Adapt,AdaptiveIntegratorMultiDim,19309,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"37a93dbd6a in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /tmp/root/lib/libCling.so; #24 0x00007f37af2f92e0 in TRint::ProcessLineNr(char const*, char const*, int*) () from /tmp/root/lib/libRint.so.6.29; #25 0x00007f37af2f97dc in TRint::HandleTermInput() () from /tmp/root/lib/libRint.so.6.29; #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29; #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29; #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29; #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29; #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29; #31 0x000055669a43b2f3 in main (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so; #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so; #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so; #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so; #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140#issuecomment-1365035386:5212,variab,variable,5212,https://root.cern,https://github.com/root-project/root/issues/10140#issuecomment-1365035386,1,['variab'],['variable']
Modifiability,3:24:46.098Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-21T13:25:03.923Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:25:11.266Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:25:11.266Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:25:20.638Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: ; - [2022-09-21T13:26:01.345Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:27:32.268Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-21T13:35:51.587Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T13:35:51.588Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . And 2 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154874/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1253768170:1449,variab,variable,1449,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1253768170,1,['variab'],['variable']
Modifiability,3T14:11:35.246Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:11:35.246Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:11:35.247Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:11:41.238Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:24.474Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:28.038Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1224198610:1206,variab,variable,1206,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1224198610,1,['variab'],['variable']
Modifiability,3T14:11:35.246Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:11:35.247Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:11:41.238Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:24.474Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:28.038Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:06.595Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1224198610:1473,variab,variable,1473,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1224198610,1,['variab'],['variable']
Modifiability,3T14:11:35.247Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:11:41.238Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:24.474Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:28.038Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:06.595Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:21.148Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1224198610:1740,variab,variable,1740,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1224198610,1,['variab'],['variable']
Modifiability,3T14:11:41.238Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:24.474Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:28.038Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:06.595Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:21.148Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] . And 1 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1224198610:2007,variab,variable,2007,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1224198610,1,['variab'],['variable']
Modifiability,3T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:24.474Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:28.038Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:06.595Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:21.148Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] . And 1 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152659/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1224198610:2274,variab,variable,2274,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1224198610,1,['variab'],['variable']
Modifiability,3T14:12:05.846Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:24.474Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:12:28.038Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:06.595Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-23T14:14:21.148Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] . And 1 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152659/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152659/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1224198610:2541,variab,variable,2541,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1224198610,1,['variab'],['variable']
Modifiability,"3f5dc in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so.6.22; #3 0x00007f731534206a in TUnixSystem::DispatchSignals(ESignals) () from /usr/lib64/root/libCore.so.6.22; #4 <signal handler called>; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.22; #7 0x0000000000400c6d in main (argc=1, argv=0x7ffd71ee3b98) at pad.cxx:9; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.22; #7 0x0000000000400c6d in main (argc=1, argv=0x7ffd71ee3b98) at pad.cxx:9; ===========================================================. [user@lxplus733 ~]$ ; ```. ## Expected behavior; No FPE. ## To Reproduce; Code; ```; #include <TCanvas.h>; #include <TPad.h>; #include <fenv.h>. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad(""my"",""my"",0,1,0,1);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad.cxx $(root-config --glibs --cflags --libs) -o pad -g; ```; run. ```; ./pad; ```. ## Setup; ROOT 6.22.02 and gcc as installed on lxplus machines. ## Additional context; A piece of #6344",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6374:2555,config,config,2555,https://root.cern,https://github.com/root-project/root/issues/6374,1,['config'],['config']
Modifiability,4 or -std=gnu++14 compiler options. ; - include/ROOT/RStringView.hxx:32:37: error: ‘experimental’ in namespace ‘std’ does not name a type ; - include/ROOT/RStringView.hxx:35:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:36:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:37:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:38:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:48:28: error: ‘string_view’ is not a member of ‘std’ ; - include/ROOT/RStringView.hxx:48:52: error: expected primary-expression before ‘*’ token ; - include/ROOT/RStringView.hxx:48:53: error: ‘pos’ was not declared in this scope . And 190 more. ### Warnings:; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:182:33: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:184:32: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:186:45: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3441#issuecomment-464705675:1364,variab,variables,1364,https://root.cern,https://github.com/root-project/root/pull/3441#issuecomment-464705675,1,['variab'],['variables']
Modifiability,"44 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2378; 17: Calling 'KOrdStat<double, int>' in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2444; 18: Assuming 'work' is null in /opt/root_src/math/mathcore/inc/TMath.h:1347; 19: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:18839,Adapt,AdaptiveIntegratorMultiDim,18839,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,49:3: error: ‘Editor’ has not been declared ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:34: error: variable or field ‘CancelSpecialInputMode’ declared void ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:34: error: ‘Range’ was not declared in this scope; did you mean ‘textinput::Range’? ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:41: error: ‘DisplayR’ was not declared in this scope ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:3: error: ‘Editor’ has not been declared ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:43: error: variable or field ‘CancelAndRevertSpecialInputMode’ declared void . And 28 more. ### Warnings:; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:114:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation] ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:112:11: warning: unused variable ‘Line’ [-Wunused-variable] ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:113:20: warning: variable ‘NewHistEntry’ set but not used [-Wunused-but-set-variable] ; - [2022-03-30T20:56:08.466Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:110:41: warning: unused parameter ‘R’ [-Wunused-parameter] ; - [2022-03-30T20:56:08.467Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Edi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1083617662:2023,variab,variable,2023,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1083617662,1,['variab'],['variable']
Modifiability,4T09:16:04.198Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:04.199Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:05.632Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:09.666Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:52.811Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:56.269Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1225503417:1206,variab,variable,1206,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1225503417,1,['variab'],['variable']
Modifiability,4T09:16:04.199Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:05.632Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:09.666Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:52.811Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:56.269Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1225503417:1473,variab,variable,1473,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1225503417,1,['variab'],['variable']
Modifiability,4T09:16:05.632Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:09.666Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:52.811Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:56.269Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1225503417:1740,variab,variable,1740,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1225503417,1,['variab'],['variable']
Modifiability,4T09:16:09.666Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:52.811Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:56.269Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] . And 2 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1225503417:2007,variab,variable,2007,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1225503417,1,['variab'],['variable']
Modifiability,4T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:52.811Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:56.269Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] . And 2 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152703/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1225503417:2274,variab,variable,2274,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1225503417,1,['variab'],['variable']
Modifiability,4T09:16:35.009Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:52.811Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:16:56.269Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-24T09:18:34.933Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] . And 2 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152703/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152703/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1225503417:2541,variab,variable,2541,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1225503417,1,['variab'],['variable']
Modifiability,"4d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:1222,Config,Configuration,1222,https://root.cern,https://github.com/root-project/root/issues/11787,1,['Config'],['Configuration']
Modifiability,5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11369/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1311#issuecomment-343530588:2018,portab,portable,2018,https://root.cern,https://github.com/root-project/root/pull/1311#issuecomment-343530588,3,['portab'],['portable']
Modifiability,5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11783/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1329#issuecomment-344511122:2018,portab,portable,2018,https://root.cern,https://github.com/root-project/root/pull/1329#issuecomment-344511122,3,['portab'],['portable']
Modifiability,5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1013-clang90-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1535#issuecomment-359405947:1702,portab,portable,1702,https://root.cern,https://github.com/root-project/root/pull/1535#issuecomment-359405947,4,['portab'],['portable']
Modifiability,5094-ROOT-fedora31-noimt&date=2020-06-03).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/console).; ### Errors:; - [2020-06-03T16:22:16.268Z] 650/1987 Test #339: tutorial-dataframe-df024_Display ..................................................................***Failed Error regular expression found in output. Regex=[: error:] 4.98 sec ; - [2020-06-03T16:23:08.513Z] 932/1987 Test #631: tutorial-math-quasirandom .........................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.29 sec ; - [2020-06-03T16:23:18.049Z] 951/1987 Test #653: tutorial-roofit-rf105_funcbinding .................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.33 sec . ### Warnings:; - [2020-06-03T16:15:25.847Z] /build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1151:36: warning: unused variable ‘FE’ [-Wunused-variable] . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_display](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_display/); - [projectroot.runtutorials.tutorial_dataframe_df024_Display](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/runtutorials/tutorial_dataframe_df024_Display/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://lcgapp-services.cern.ch/root-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-638312769:1229,variab,variable,1229,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-638312769,2,['variab'],['variable']
Modifiability,"5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848; #8 0x00007fffa43c802a in ?? (); #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):; #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502; #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655; #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock() () from /opt/root/lib/libThread.so; #5 0x00007ffff709ec6b in TApplication::Class() () from /opt/root/lib/libCore.so; #6 0x00007ffff6f3a04d in TObject::InheritsFrom(char const*) const () from /opt/root/lib/libCore.so; #7 0x00007ffff76d1770 in TGCommandPlugin::CheckRemote(char const*) () from /opt/root/lib/libGui.so; #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so; #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so; #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so; #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so; #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so; #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so; #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so; #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112; (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex; No symbol ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:2676,Inherit,InheritsFrom,2676,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['Inherit'],['InheritsFrom']
Modifiability,532/console).; ### Warnings:; - [2021-12-02T14:48:44.414Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:47:6: warning: ‘{anonymous}::_rooprodpdffactory’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:44.414Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:89:6: warning: ‘{anonymous}::_rooaddpdffactory’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:44.414Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:117:6: warning: ‘{anonymous}::_roosimultaneousfactory’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:44.414Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:146:6: warning: ‘{anonymous}::_roosimultaneousstreamer’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:44.414Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:164:6: warning: ‘{anonymous}::_roohistfuncstreamer’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:45.790Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:262:6: warning: ‘{anonymous}::_roohistogramfactory’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:45.790Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:428:6: warning: ‘{anonymous}::_roorealsumpdffactory’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:45.790Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:450:6: warning: ‘{anonymous}::_flexibleinterpvarstreamer’ defined but not used [-Wunused-variable] ; - [2021-12-02T14:48:45.790Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:633:6: warning: ‘{anonymous}::_histfactorystreamer’ defined but not used [-Wunused-variable],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9367#issuecomment-984720589:1327,variab,variable,1327,https://root.cern,https://github.com/root-project/root/pull/9367#issuecomment-984720589,5,['variab'],['variable']
Modifiability,"539443 0.9586769214 0.0004229771 4.41E-04; 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04; 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04; 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04; 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04; 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04; 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the output with and without this PR to a `.csv` file; that was analyzed with pandas:. ```Python; im",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3123,Flexible,FlexibleInterpVar,3123,https://root.cern,https://github.com/root-project/root/pull/13067,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"55767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #35 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555624ea80, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #36 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555697ff60, b=..., ; pointer=0x55555767cdb0 ""\030F\333\344\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #37 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555697fd90, b=..., arr=@0x7fffffffafb0: 0x7fffffffafa8, ; compinfo=0x55555761ab08, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #38 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #39 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555767cdb0, buffer=..., this=0x55555761b130); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #40 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x55555767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #41 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #42 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x5555572eb940, b=..., ; pointer=0x55555767cdb0 ""\030F\333\344\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #43 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x5555572eb800, b=.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:8810,config,config,8810,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,"55767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #41 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #42 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x5555572eb940, b=..., ; pointer=0x55555767cdb0 ""\030F\333\344\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #43 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x5555572eb800, b=..., arr=@0x7fffffffb1e0: 0x7fffffffb1d8, ; compinfo=0x5555572ebae8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #44 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #45 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555767cdb0, buffer=..., this=0x5555572ec0c0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #46 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x55555767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #47 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556597160, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #48 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556597160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #49 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:10178,config,config,10178,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,"55:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]; Double_t yofs2 = 40;; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]; Double_t yofs2 = 40;; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;; ^~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;; ^; In file included from /opt/root_bld/include/RConfig.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:13314,variab,variable,13314,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,2,['variab'],['variable']
Modifiability,58/console).; ### Errors:; - [2020-09-27T11:38:00.559Z] FAILED: hist/hist/G__Hist.cxx lib/Hist.pcm ; - [2020-09-27T11:38:00.559Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-27T11:28:26.423Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T11:28:26.424Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T11:28:29.724Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T11:28:29.724Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:2332:49: warning: loop variable 'Assoc' is always a copy because the range of type 'clang::GenericSelectionExpr::association_range' (aka 'iterator_range&lt;AssociationIteratorTy&lt;false&gt; &gt;') does not return a reference [-Wrange-loop-analysis] ; - [2020-09-27T11:28:36.931Z] /Users/sftnight/build/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699623812:1103,variab,variable,1103,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699623812,1,['variab'],['variable']
Modifiability,6 kB ( 1%); parser (global) : 0.17 ( 0%) 0.35 ( 9%) 0.56 ( 0%) 84152 kB ( 4%); parser struct body : 0.23 ( 0%) 0.06 ( 2%) 0.18 ( 0%) 30489 kB ( 2%); parser function body : 2.16 ( 1%) 0.41 ( 11%) 2.59 ( 1%) 241801 kB ( 13%); parser inl. func. body : 0.04 ( 0%) 0.03 ( 1%) 0.06 ( 0%) 4215 kB ( 0%); parser inl. meth. body : 0.22 ( 0%) 0.06 ( 2%) 0.29 ( 0%) 24817 kB ( 1%); template instantiation : 1.30 ( 0%) 0.41 ( 11%) 1.76 ( 1%) 216538 kB ( 11%); constant expression evaluation : 0.04 ( 0%) 0.00 ( 0%) 0.02 ( 0%) 323 kB ( 0%); early inlining heuristics : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); inline parameters : 0.49 ( 0%) 0.00 ( 0%) 0.49 ( 0%) 18471 kB ( 1%); tree gimplify : 0.73 ( 0%) 0.03 ( 1%) 0.77 ( 0%) 97609 kB ( 5%); tree eh : 0.77 ( 0%) 0.05 ( 1%) 0.83 ( 0%) 146994 kB ( 8%); tree CFG construction : 0.35 ( 0%) 0.00 ( 0%) 0.35 ( 0%) 78117 kB ( 4%); tree CFG cleanup : 0.80 ( 0%) 0.01 ( 0%) 0.81 ( 0%) 0 kB ( 0%); tree PHI insertion : 0.46 ( 0%) 0.01 ( 0%) 0.49 ( 0%) 30685 kB ( 2%); tree SSA rewrite : 0.51 ( 0%) 0.02 ( 1%) 0.52 ( 0%) 52404 kB ( 3%); tree SSA other : 0.13 ( 0%) 0.14 ( 4%) 0.34 ( 0%) 314 kB ( 0%); tree SSA incremental : 1.06 ( 0%) 0.00 ( 0%) 1.07 ( 0%) 1 kB ( 0%); tree operand scan : 0.21 ( 0%) 0.15 ( 4%) 0.31 ( 0%) 26106 kB ( 1%); tree switch lowering : 0.01 ( 0%) 0.00 ( 0%) 0.00 ( 0%) 0 kB ( 0%); dominance frontiers : 0.05 ( 0%) 0.00 ( 0%) 0.04 ( 0%) 0 kB ( 0%); dominance computation : 0.80 ( 0%) 0.01 ( 0%) 0.83 ( 0%) 0 kB ( 0%); out of ssa : 0.39 ( 0%) 0.01 ( 0%) 0.36 ( 0%) 3829 kB ( 0%); expand vars : 0.05 ( 0%) 0.00 ( 0%) 0.06 ( 0%) 14241 kB ( 1%); expand : 1.28 ( 0%) 0.08 ( 2%) 1.37 ( 0%) 323252 kB ( 17%); post expand cleanups : 0.49 ( 0%) 0.01 ( 0%) 0.50 ( 0%) 45997 kB ( 2%); varconst : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 31 kB ( 0%); jump : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); loop init : 4.00 ( 1%) 0.02 ( 1%) 4.00 ( 1%) 20377 kB ( 1%); loop fini : 0.05 ( 0%) 0.00 ( 0%) 0.06 ( 0%) 0 kB ( 0%); mode switching : 0.01 ( 0%) 0.00 ( 0%) 0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-802860588:1396,rewrite,rewrite,1396,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-802860588,1,['rewrite'],['rewrite']
Modifiability,"6-24-02/core/unix/src/TUnixSystem.cxx:2411; [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174; [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186; [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location; [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249; [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523; [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316; ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-913117485:1981,sandbox,sandbox,1981,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-913117485,4,['sandbox'],['sandbox']
Modifiability,"6.22.02 build error on mac OS 10.15. Building 6.22.02 from source on macOS fails. Note I maintain the ROOT6 port in MacPorts, and my ultimate aim here is to update that build to 6.22.02 (currently 6.22.00). We use a number additional options and dependencies, hence the cmake configure command is a bit long (apologies). 6.22.00 builds just fine using the exact same configuration, so the issue is new to 6.22.02. I have attached the output from the configure and build steps (as outlined below). [configure.log](https://github.com/root-project/root/files/5231518/configure.log). [build.log](https://github.com/root-project/root/files/5231520/build.log). Unfortunately the build log error messages aren't hugely helpful (at least to me) in pointing to the issue, so I am hoping someone can offer suggestions as to where to look. First indication of a problem is; ```; [ 74%] Linking CXX shared library ../lib/libCore.so; <snip>; make[1]: *** read jobs pipe: Resource temporarily unavailable. Stop.; make[1]: *** Waiting for unfinished jobs....[ 74%] Linking CXX shared library ../lib/libCore.so; ```. ## Expected behavior; Builds OK. ## To Reproduce; ```; git clone git@github.com:root-project/root.git; cd root; git checkout v6-22-02; cd ..; mkdir install build; cd build; cmake -G ""CodeBlocks - Unix Makefiles"" -DCMAKE_BUILD_TYPE=MacPorts -DCMAKE_INSTALL_PREFIX=""/opt/local"" -DCMAKE_INSTALL_NAME_DIR=""/opt/local/lib"" -DCMAKE_SYSTEM_PREFIX_PATH=""/opt/local;/usr"" -DCMAKE_C_COMPILER=""$CC"" -DCMAKE_CXX_COMPILER=""$CXX"" -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_POLICY_DEFAULT_CMP0060=NEW -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_COLOR_MAKEFILE=ON -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_MODULE_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_PREFIX_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON -DCMAKE_INSTALL_RPATH=""/opt/local/lib"" -Wno-dev -Dgnuinstall=ON -Drpath=ON -DCMAKE_INSTALL_PREFIX=""/opt/local/libex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366:276,config,configure,276,https://root.cern,https://github.com/root-project/root/issues/6366,5,['config'],"['configuration', 'configure']"
Modifiability,6.22/06 also does not work macOS BigSur with `intel64`; ```; $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log ; ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1; ld: library not found for -ldl; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[4]: *** [libtbb_debug.dylib] Error 1; make[3]: *** [tbb] Error 2; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6903#issuecomment-737480339:141,CONFIG,CONFIG,141,https://root.cern,https://github.com/root-project/root/issues/6903#issuecomment-737480339,1,['CONFIG'],['CONFIG']
Modifiability,"6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/libstdc++.so.6; #9 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920:1134,variab,variable,1134,https://root.cern,https://github.com/root-project/root/issues/10920,1,['variab'],['variable']
Modifiability,"64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16668:2355,plugin,plugins,2355,https://root.cern,https://github.com/root-project/root/issues/16668,1,['plugin'],['plugins']
Modifiability,"646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #71 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555624ea80, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #72 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555697ff60, b=..., ; pointer=0x555557646050 ""\030\320\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #73 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555697fd90, b=..., arr=@0x7fffffffbb10: 0x7fffffffbb08, ; compinfo=0x55555761ab08, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #74 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #75 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557646050, buffer=..., this=0x55555761b130); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #76 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #77 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #78 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555690bff0, b=..., ; pointer=0x555557646050 ""\030\320\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #79 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555690be20, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:16761,config,config,16761,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,"646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #77 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #78 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555690bff0, b=..., ; pointer=0x555557646050 ""\030\320\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #79 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555690be20, b=..., arr=@0x7fffffffbd40: 0x7fffffffbd38, ; compinfo=0x55555767aad8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #80 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #81 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557646050, buffer=..., this=0x55555767aba0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #82 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #83 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555571ee160, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #84 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x5555571ee160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #85 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:18132,config,config,18132,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52624,variab,variable,52624,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:652; 27: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 28: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 29: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 30: Loop condition is false. Execution continues on line 668 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 31: 'fitter' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:668; 32: Control jumps to the 'default' case at line 683 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:670; 33: Assuming field 'fInteractive' is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 34: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 35: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:689; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818:4: warning: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818; /opt/root_src/tmva/tmva/src/MethodDL.cxx:1348:52: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1174; 2: Assuming 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 3: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 4: Assuming 'batchDepth' is not equal to 1 in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 5: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 6: 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:84616,Variab,Variable,84616,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['Variable']
Modifiability,6; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136317,Variab,VariableDecorrTransform,136317,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,6; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never re,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136405,Variab,VariableDecorrTransform,136405,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,6Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:114:11: warning: unused variable ‘index’ [-Wunused-variable] ; - [2022-09-20T11:31:20.446Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-20T11:31:21.031Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:114:11: warning: unused variable ‘index’ [-Wunused-variable] ; - [2022-09-20T11:31:28.543Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-20T11:31:33.005Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-20T11:31:33.526Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:114:11: warning: unused variable ‘index’ [-Wunused-variable] ; - [2022-09-20T11:31:53.114Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Shape_FromONNX.hxx:20:35: warning: unused parameter ‘tensor_X’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154713/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154713/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154713/testReport/projectroot.roottest.root.meta/MakeProjec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11309#issuecomment-1252237185:1431,variab,variable,1431,https://root.cern,https://github.com/root-project/root/pull/11309#issuecomment-1252237185,2,['variab'],['variable']
Modifiability,"6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L132), where I found that RooFit actually adds `1e-6` to either side of that comparison. I couldn't find this documented anywhere, and I'm not really sure why it's there to begin with, but maybe someone here with more knowledge of the code has a reason for why this is the way it is. This is less of a bug and more a lack of documentation. I would also consider the second implementation of `inRange` [here](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L493) troubling, as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`. Again, maybe this is intentional, but these will certainly give different results in edge cases. The assignment operator uses the first one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the following behavior:; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000998;; cout << t1.getVal() << endl;; // returns 0.001 since it's outside the range specified; t1 = 0.000999;; cout << t1.getVal() << endl;; // should also return 0.001, since it's outside the range; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000999;; cout << t1.getVal() << endl;; // returns 0.000999; // lest this be attributed to some floating point arithmetic:; t1 = 0.0009990000;; cout << t1.getVal() << endl;; // yields 0.000999 but; t1 = 0.0009999999;; cout << t1.getVal() << endl;; // yields 0.0001 as expected; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:1990,variab,variable,1990,https://root.cern,https://github.com/root-project/root/issues/11954,1,['variab'],['variable']
Modifiability,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:1212,extend,extended,1212,https://root.cern,https://github.com/root-project/root/pull/13842,1,['extend'],['extended']
Modifiability,"7, kBits = 15 /* for compatibility with TStreamerInfo */,; | ^; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:; In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]; 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,; | ^; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here; 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,; | ^; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:; /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]; 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,; | ^; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here; 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,; | ^; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:; /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]; 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,; | ^; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here; 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,; | ^; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:; /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declara",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15379#issuecomment-2083159907:3222,variab,variable,3222,https://root.cern,https://github.com/root-project/root/pull/15379#issuecomment-2083159907,1,['variab'],['variable']
Modifiability,"70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #166 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556a0eca0, pointer=0x555556982270, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #167 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x555556965f40, b=..., ; pointer=0x555556982270 ""\220\335\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #168 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x555556965d70, b=..., arr=@0x7fffffffd8b0: 0x7fffffffd8a8, ; compinfo=0x55555701e3e8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #169 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #170 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555556982270, buffer=..., ; this=0x55555700e330) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #171 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555556982270); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #172 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556a0e300, pointer=0x555556982270, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #173 0x00007ffff7a846e4 in TStreamerInfo::ReadBuffer<char**> (this=0x555556944f10, b=..., arr=@0x7fffffffdab0: 0x7fffffffdaa8, ; compinfo=0x5555575ca9e8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:37819,config,config,37819,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,"705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep the code simple, but the performance drop is opt-in. If no filters are used, then there is no performance loss. The filters work correctly whether or not the full prefix is displayed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:1399,Variab,VariableMetrixBuilder,1399,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,2,['Variab'],"['VariableMetricBuilder', 'VariableMetrixBuilder']"
Modifiability,"76>: casalb w8, w9, [x22]; 0x107bac678 <+80>: cmp w8, #0x2; 0x107bac67c <+84>: b.ne 0x107bac6f4 ; <+204>; 0x107bac680 <+88>: mov x8, #-0x100000000 ; =-4294967296; Target 0: (repro.out) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); * frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; frame #1: 0x0000000107c0c444 libclang_rt.asan_osx_dynamic.dylib`wrap__ZdaPv + 232; frame #2: 0x00000001044d4a60 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x000060e00010ef00, object=0x0000602000056bd0) const at TStreamerInfoActions.h:123:17; frame #5: 0x0000000103ca9ef8 libRIO.so`TBufferFile::ApplySequence(this=0x000060e00010ef00, sequence=0x000060600011ac20, obj=0x0000602000056bd0) at TBufferFile.cxx:3702:10; frame #6: 0x00000001064bc570 libTree.so`TBranchElement::ReadLeavesMemberBranchCount(this=0x0000619000566380, b=0x000060e00010ef00) at TBranchElement.cxx:4603:6; frame #7: 0x0000000106455ce4 libTree.so`TBranch::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranch.cxx:1753:4; frame #8: 0x00000001064a1764 libTree.so`TBranchElement::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranchElement.cxx:2783:27; frame #9: 0x000000010739915c libTreePlayer.so`ROOT::Detail::TBranchProxy::Read(this=0x00006110000c9580) at TB",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:5246,config,config,5246,https://root.cern,https://github.com/root-project/root/pull/16501,1,['config'],['config']
Modifiability,79/console).; ### Errors:; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_PyTorch.cxx:200:30: error: ‘ROperator_Leaky_Relu’ does not name a type; did you mean ‘ROperator_Relu’? ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_PyTorch.cxx:200:51: error: expected primary-expression before ‘float’ ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_PyTorch.cxx:278:30: error: ‘ROperator_Softmax’ does not name a type; did you mean ‘ROperator_Slice’? ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_PyTorch.cxx:278:48: error: expected primary-expression before ‘float’ ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:287:23: error: ‘ROperator_Leaky_Relu’ does not name a type; did you mean ‘ROperator_Relu’? ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:287:44: error: expected primary-expression before ‘float’ ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:371:23: error: ‘ROperator_Softmax’ does not name a type; did you mean ‘ROperator_Slice’? ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:371:41: error: expected primary-expression before ‘float’ . ### Warnings:; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_PyTorch.cxx:271:19: warning: unused variable ‘fInputs’ [-Wunused-variable] ; - [2022-03-29T09:23:12.038Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_PyTorch.cxx:272:19: warning: unused variable ‘fOutputs’ [-Wunused-variable],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10261#issuecomment-1081636746:2010,variab,variable,2010,https://root.cern,https://github.com/root-project/root/pull/10261#issuecomment-1081636746,4,['variab'],['variable']
Modifiability,"7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMult",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:1087,plugin,pluginFWCoreServicesPlugins,1087,https://root.cern,https://github.com/root-project/root/issues/10732,1,['plugin'],['pluginFWCoreServicesPlugins']
Modifiability,"8 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Set",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:4066,Config,Configuring,4066,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Config'],['Configuring']
Modifiability,8.2/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 332558 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/span.hxx:196:5: warning: identifier ‘static_assert’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:246:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:248:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default] . And 8435 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2917#issuecomment-440725109:2221,extend,extended,2221,https://root.cern,https://github.com/root-project/root/pull/2917#issuecomment-440725109,8,"['extend', 'variab']","['extended', 'variable']"
Modifiability,8.2/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 332625 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/span.hxx:196:5: warning: identifier ‘static_assert’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:246:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:248:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default] . And 8504 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3005#issuecomment-440733246:2221,extend,extended,2221,https://root.cern,https://github.com/root-project/root/pull/3005#issuecomment-440733246,8,"['extend', 'variab']","['extended', 'variable']"
Modifiability,8.2/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 336450 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/span.hxx:196:5: warning: identifier ‘static_assert’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:246:68: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:248:77: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:279:69: warning: unused variable ‘fgHashConsistency’ [-Wunused-variable] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 [enabled by default] . And 8504 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3011#issuecomment-440736032:2221,extend,extended,2221,https://root.cern,https://github.com/root-project/root/pull/3011#issuecomment-440736032,8,"['extend', 'variab']","['extended', 'variable']"
Modifiability,82; 54: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:276; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445:4: warning: Value stored to 'type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'type' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446:4: warning: Value stored to 'is_link' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'is_link' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741:10: warning: Value stored to 'item' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'item' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741; /opt/root_src/gui/gui/src/TGFileDialog.cxx:63:1: warning: non-POD static (TGFileInfo) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFont.cxx:849:11: warning: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') [clang-analyzer-core.NullDereference]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:741; 11: Assuming 'special' is < 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 12: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:18773,variab,variable,18773,https://root.cern,https://github.com/root-project/root/issues/7533,1,['variab'],['variable']
Modifiability,"8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.; This had to be worked around by setting the environment variable; FC=gfortran before running Cmake. To fix this, check_language is only used to determine whether a Fortran; compiler exists at all. If a compiler is found, then the; CMAKE_Fortran_COMPILER variable is reset, and enable_language again; performs a search of the compiler, this time prefering a compiler from; the same vendor as the C++ compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:1530,variab,variable,1530,https://root.cern,https://github.com/root-project/root/pull/891,3,['variab'],['variable']
Modifiability,86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9150/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1192#issuecomment-337400929:2017,portab,portable,2017,https://root.cern,https://github.com/root-project/root/pull/1192#issuecomment-337400929,3,['portab'],['portable']
Modifiability,"86_64-redhat-linux/12/../../../../include/c++/12; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward; clang version 13.0.0; Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: ; Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8; Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include""; ignoring nonexistent directory ""/include""; ignoring duplicate directory ""/opt/o2/include""; ignoring duplicate directory ""/opt/o2/include""; #include ""..."" search starts here:; #include <...> search starts here:; /opt/o2/include/vmc; /opt/o2/include/QualityControl; /opt/o2/include/fairmq; /opt/o2/include/GPU; /opt/o2/include; /opt/o2/etc; /opt/o2/etc//cling; /opt/o2/etc//cling/plugins/include; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux; /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward; /opt/o2/etc//cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'; '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'; '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/modul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2152743428:1926,plugin,plugins,1926,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2152743428,1,['plugin'],['plugins']
Modifiability,8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kDouble32_t:' at line 127 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:139:13: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:39277,variab,variable,39277,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,"8: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds; 338: ****************************************************************************; 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0; 338: ****************************************************************************; 338: (bool) false; 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:; test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec; ```. New pass manager:; ```bash; dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Test project /home/dvalapar/work/root/newpassmanager; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:2996,Config,Config,2996,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,1,['Config'],['Config']
Modifiability,8T08:24:28.530Z] /build/workspace/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-28T08:22:19.505Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:235:38: warning: unused parameter ‘C’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:14:55: warning: unused parameter ‘DGR’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:46:42: warning: unused parameter ‘PP’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:47:45: warning: unused parameter ‘Introducer’ [-Wunused-parameter] ; - [2020-09-28T08:22:23.679Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:48:35: warning: unused parameter ‘PragmaTok’ [-Wunused-parameter] ; - [2020-09-28T08:22:27.177Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:59:13: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] ; - [2020-09-28T08:22:27.177Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:61:9: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] ; - [2020-09-28T08:22:27.177Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:61:9: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] ; - [2020-09-28T08:22:28.535Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifier,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699859788:1277,plugin,plugins,1277,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699859788,1,['plugin'],['plugins']
Modifiability,"8b70); at /home/sftnight/build/manual/build/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:201; #10 0x00000000005d9991 in RScanner::TraverseDeclContextHelper (this=0x7fffffffb5c0, DC=0x9dd5c50) at /home/sftnight/build/manual/root/core/dictgen/src/Scanner.cxx:970; #11 0x00000000005e1b29 in clang::RecursiveASTVisitor<RScanner>::TraverseNamespaceDecl (this=0x7fffffffb5c0, D=0x9dd5c20); at /home/sftnight/build/manual/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1513; #12 0x00000000005dd046 in clang::RecursiveASTVisitor<RScanner>::TraverseDecl (this=0x7fffffffb5c0, D=0x9dd5c20); at /home/sftnight/build/manual/build/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:105; #13 0x00000000005d9991 in RScanner::TraverseDeclContextHelper (this=0x7fffffffb5c0, DC=0x863dcd0) at /home/sftnight/build/manual/root/core/dictgen/src/Scanner.cxx:970; #14 0x00000000005e73f3 in clang::RecursiveASTVisitor<RScanner>::TraverseTranslationUnitDecl (this=0x7fffffffb5c0, D=0x863dca8); at /home/sftnight/build/manual/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1489; #15 0x00000000005ddccb in clang::RecursiveASTVisitor<RScanner>::TraverseDecl (this=0x7fffffffb5c0, D=0x863dca8); at /home/sftnight/build/manual/build/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:577; #16 0x00000000005d9f5c in RScanner::Scan (this=0x7fffffffb5c0, C=...) at /home/sftnight/build/manual/root/core/dictgen/src/Scanner.cxx:1058; #17 0x00000000005a99a0 in RootClingMain (argc=19, argv=0x7fffffffe028, isGenreflex=false) at /home/sftnight/build/manual/root/core/dictgen/src/rootcling_impl.cxx:4806; #18 0x00000000005afd6a in ROOT_rootcling_Driver (argc=19, argv=0x7fffffffe028, config=...) at /home/sftnight/build/manual/root/core/dictgen/src/rootcling_impl.cxx:6147; #19 0x00000000004a4f75 in main (argc=19, argv=0x7fffffffe028) at /home/sftnight/build/manual/root/core/rootcling_stage1/src/rootcling_stage1.cxx:46; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11329#issuecomment-1239648424:3938,config,config,3938,https://root.cern,https://github.com/root-project/root/issues/11329#issuecomment-1239648424,1,['config'],['config']
Modifiability,8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 11 more. ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9509/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1223#issuecomment-338777522:1996,portab,portable,1996,https://root.cern,https://github.com/root-project/root/pull/1223#issuecomment-338777522,3,['portab'],['portable']
Modifiability,952:10: warning: Value stored to 'rg1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg1' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:952; /opt/root_src/math/mathcore/src/TMath.cxx:961:10: warning: Value stored to 'rg2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg2' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:961; /opt/root_src/math/mathcore/src/TMath.cxx:975:10: warning: Value stored to 'rg3' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg3' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:975; /opt/root_src/math/mathcore/src/TMath.cxx:1782:13: warning: Value stored to 'v' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'v' during its initialization is never read in /opt/root_src/math/mathcore/src/TMath.cxx:1782; /opt/root_src/math/mathcore/src/TMath.cxx:2091:4: warning: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/math/mathcore/src/TMath.cxx:2091; /opt/root_src/math/mathcore/src/triangle.c:4961:10: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming field 'verbose' is <= 2 in /opt/root_src/math/mathcore/src/triangle.c:8862; 2: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8862; 3: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 4: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:8872; 5: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:8876; 6: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8876; 7: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 8: Loop condition is true. Entering ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:29297,Variab,Variable,29297,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Variab'],['Variable']
Modifiability,"9: Environment variables:; 879: ROOT_HIST=0; 879: Test timeout computed to be: 1500; 879: Error in <TChain::LoadTree>: Cannot find tree with name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df003_profiles.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 880: Environment variables:; 880: ROOT_HIST=0; 880: Test timeout computed to be: 1500; 880: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 880: error code: -529697949; 880:; 880:; 3/16 Test #880: tutorial-dataframe-df003_profiles-py .....................***Failed 4.47 sec; test 881; Start 881: tutorial-dataframe-df004_cutFlowReport-py. 881: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df004_cutFlowReport.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 881: Environment variables:; 881: ROOT_HIST=0; 881: Test timeout computed to be: 1500; 881: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 881: error code: -529697949; 881:; 881:; 4/16 Test #881: tutorial-dataframe-df004_cutFlowReport-py ............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:2295,variab,variables,2295,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['variab'],['variables']
Modifiability,9:13: warning: 'if' initialization statements are a C++17 extension [-Wc++17-extensions] ; - [2022-10-05T15:05:21.906Z] /mnt/build/workspace/root-pullrequests-build/build/include/RooFit/Detail/RooNode.h:67:52: warning: 'if' initialization statements are a C++17 extension [-Wc++17-extensions] ; - [2022-10-05T15:05:23.967Z] /mnt/build/workspace/root-pullrequests-build/build/include/TNamed.h:54:22: warning: ‘virtual void TNamed::ls(Option_t*) const’ was hidden [-Woverloaded-virtual] ; - [2022-10-05T15:05:23.967Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/inc/RooBrowser.h:16:10: warning: by ‘void RooBrowser::ls(const char*)’ [-Woverloaded-virtual] ; - [2022-10-05T15:05:23.967Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/inc/RooFit/Detail/RooNode.h:49:13: warning: init-statement in selection statements only available with -std=c++1z or -std=gnu++1z ; - [2022-10-05T15:05:23.968Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/inc/RooFit/Detail/RooNode.h:67:52: warning: init-statement in selection statements only available with -std=c++1z or -std=gnu++1z ; - [2022-10-05T15:05:52.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/inc/RooFit/Detail/RooNode.h:49:13: warning: init-statement in selection statements only available with -std=c++1z or -std=gnu++1z ; - [2022-10-05T15:05:52.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/inc/RooFit/Detail/RooNode.h:67:52: warning: init-statement in selection statements only available with -std=c++1z or -std=gnu++1z ; - [2022-10-05T15:05:52.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode_interactive.cxx:80:17: warning: init-statement in selection statements only available with -std=c++1z or -std=gnu++1z ; - [2022-10-05T15:05:52.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/RooNode_interactive.cxx:36:16: warning: unused variable ‘_y’ [-Wunused-variable] . And 394 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499#issuecomment-1268572924:4100,variab,variable,4100,https://root.cern,https://github.com/root-project/root/pull/11499#issuecomment-1268572924,2,['variab'],['variable']
Modifiability,9:34: error: variable or field ‘CancelSpecialInputMode’ declared void ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:34: error: ‘Range’ was not declared in this scope ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:149:41: error: ‘DisplayR’ was not declared in this scope ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:3: error: ‘Editor’ has not been declared ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:43: error: variable or field ‘CancelAndRevertSpecialInputMode’ declared void ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:160:43: error: ‘EditorRange’ was not declared in this scope . And 27 more. ### Warnings:; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:114:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation] ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:112:11: warning: unused variable ‘Line’ [-Wunused-variable] ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:113:20: warning: variable ‘NewHistEntry’ set but not used [-Wunused-but-set-variable] ; - [2022-03-30T20:56:21.568Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:110:41: warning: unused parameter ‘R’ [-Wunused-parameter] ; - [2022-03-30T20:56:21.888Z] /data/sftnight/workspace/root-pullrequests-build/root/core/textinput/src/textinput/Editor.cpp:128:5: warning: control reaches end of non-void function [-Wreturn-type],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1083619007:2461,variab,variable,2461,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1083619007,4,['variab'],['variable']
Modifiability,9T15:25:45.118Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:25:59.059Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:25:59.059Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:07.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:32.774Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:59.560Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1230529190:1206,variab,variable,1206,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1230529190,1,['variab'],['variable']
Modifiability,9T15:25:59.059Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:25:59.059Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:07.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:32.774Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:59.560Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:740:8: warni,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1230529190:1473,variab,variable,1473,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1230529190,1,['variab'],['variable']
Modifiability,9T15:25:59.059Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:07.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:32.774Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:59.560Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:740:8: warning: unused variable 'i' [-Wunused-variable] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:750:8: warning: unused variable 'i' [-Wunused-variable] . And 4 more. ### Failing tests:; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1230529190:1740,variab,variable,1740,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1230529190,1,['variab'],['variable']
Modifiability,9T15:26:07.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:32.774Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:59.560Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:740:8: warning: unused variable 'i' [-Wunused-variable] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:750:8: warning: unused variable 'i' [-Wunused-variable] . And 4 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152974/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1230529190:2007,variab,variable,2007,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1230529190,1,['variab'],['variable']
Modifiability,9T15:26:32.774Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:36.220Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:26:59.560Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1175:34: warning: variable 'n' is uninitialized when passed as a const reference argument here [-Wuninitialized-const-reference] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:740:8: warning: unused variable 'i' [-Wunused-variable] ; - [2022-08-29T15:27:40.431Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_simple.cxx:750:8: warning: unused variable 'i' [-Wunused-variable] . And 4 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152974/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152974/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.datafr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1230529190:2274,variab,variable,2274,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1230529190,1,['variab'],['variable']
Modifiability,9f73 (/lib64/libpython3.6m.so.1.0+0xdff73) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #94 0x562b1934eb95 in main (/usr/libexec/platform-python3.6+0xb95) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148: #95 0x7f7b13594d84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f65c85bfdb904b623d4fe2139b4d7c25cf8c0b58); 1148: #96 0x562b1934ed1d in _start (/usr/libexec/platform-python3.6+0xd1d) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148:; 1148: 0x7f7b0e15ea65 is located 59 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1353:110' (0x7f7b0e15eaa0) of size 12; 1148: '<string literal>' is ascii string 'JSON_object'; 1148: 0x7f7b0e15ea65 is located 27 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:33' (0x7f7b0e15ea80) of size 6; 1148: '<string literal>' is ascii string 'false'; 1148: 0x7f7b0e15ea65 is located 0 bytes to the right of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629:16123,variab,variable,16123,https://root.cern,https://github.com/root-project/root/issues/11629,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49234,variab,variable,49234,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57714,variab,variable,57714,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54319,variab,variable,54319,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:66185,variab,variable,66185,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,": Error fetching remote repo 'origin' ; - ../root/math/mathcore/src/TMath.cxx:3263:4: error: expected unqualified-id before ‘const’ ; - ../root/math/mathcore/src/TMath.cxx:3295:4: error: ‘Mask’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3295:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3295:27: error: ‘mask1’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3296:25: error: expected primary-expression before ‘&gt;’ token ; - ../root/math/mathcore/src/TMath.cxx:3296:27: error: ‘mask2’ was not declared in this scope ; - ../root/math/mathcore/src/TMath.cxx:3297:25: error: expected primary-expression before ‘&gt;’ token . And 65 more. ### Warnings:; - ../root/core/newdelete/src/NewDelete.cxx:217:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) ; - ../root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) ; - ../root/core/newdelete/src/NewDelete.cxx:263:6: warning: the program should also define ‘void operator delete(void*, std::size_t)’ [-Wsized-deallocation] ; - ../root/core/newdelete/src/NewDelete.cxx:367:6: warning: the program should also define ‘void operator delete [](void*, std::size_t)’ [-Wsized-deallocation] ; - ../root/math/mathcore/src/TMath.cxx:3238:38: warning: unused variable ‘mask’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:21: warning: unused variable ‘ap’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:25: warning: unused variable ‘aq’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:29: warning: unused variable ‘h’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:32: warning: unused variable ‘hc’ [-Wunused-variable] ; - ../root/math/mathcore/src/TMath.cxx:3293:36: warning: unused variable ‘y’ [-Wunused-variable] . And 4 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401593642:1689,variab,variable,1689,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401593642,12,['variab'],['variable']
Modifiability,": class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:40.470Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:42.092Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:43.329Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:45.741Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:46.571Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:47.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803056268:1328,Config,Configuration,1328,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803056268,1,['Config'],['Configuration']
Modifiability,": class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:42.092Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:43.329Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:45.741Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:46.571Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:47.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:49.019Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803056268:1634,Config,Configuration,1634,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803056268,1,['Config'],['Configuration']
Modifiability,": class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:43.329Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:45.741Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:46.571Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:47.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:49.019Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:54.463Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803056268:1940,Config,Configuration,1940,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803056268,1,['Config'],['Configuration']
Modifiability,": class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:45.741Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:46.571Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:47.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:49.019Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:54.463Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:56.706Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] . And 29 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803056268:2246,Config,Configuration,2246,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803056268,1,['Config'],['Configuration']
Modifiability,": class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:46.571Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:47.349Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:49.019Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:54.463Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T18:31:56.706Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] . And 29 more. ### Failing tests:; - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111452/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullreq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803056268:2552,Config,Configuration,2552,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803056268,1,['Config'],['Configuration']
Modifiability,": class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:26.911Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:29.010Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:30.668Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:32.630Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:32.899Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:127:11: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T21:05:32.900Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:188:26: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T21:05:33.731Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803155706:1328,Config,Configuration,1328,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803155706,1,['Config'],['Configuration']
Modifiability,": class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:29.010Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:30.668Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:32.630Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:32.899Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:127:11: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T21:05:32.900Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:188:26: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T21:05:33.731Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:34.896Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803155706:1634,Config,Configuration,1634,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803155706,1,['Config'],['Configuration']
Modifiability,: error: ‘experimental’ in namespace ‘std’ does not name a type ; - include/ROOT/RStringView.hxx:35:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:36:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:37:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:38:12: error: ‘basic_string_view’ does not name a type; did you mean ‘basic_streambuf’? ; - include/ROOT/RStringView.hxx:48:28: error: ‘string_view’ is not a member of ‘std’ ; - include/ROOT/RStringView.hxx:48:52: error: expected primary-expression before ‘*’ token ; - include/ROOT/RStringView.hxx:48:53: error: ‘pos’ was not declared in this scope . And 190 more. ### Warnings:; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:182:33: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:184:32: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/TClassEdit.h:186:45: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - include/ROOT/RStringView.hxx:48:28: warning: inline variables are only available with -std=c++1z or -std=gnu++1z . And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3441#issuecomment-464705675:1481,variab,variables,1481,https://root.cern,https://github.com/root-project/root/pull/3441#issuecomment-464705675,9,['variab'],['variables']
Modifiability,": error: ‘plotEfficienciesMulticlass1vsRest’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:254:115: error: ‘void TMVA::plotEfficienciesMulticlass1vsRest(TString, TMVA::EEfficiencyPlotType, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:279:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:298:67: error: ‘void TMVA::efficienciesMulticlass1vs1(TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:332:94: error: ‘void TMVA::plotEfficienciesMulticlass1vs1(TString, TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:353:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:365:75: error: cannot convert ‘std::map&lt;TString, EfficiencyPlotWrapper*&gt;::mapped_type {aka EfficiencyPlotWrapper*}’ to ‘TMVA::EfficiencyPlotWrapper*’ in initialization ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120:4: error: no matching function for call to ‘std::pair&lt;const TString, EfficiencyPlotWrapper*&gt;::pair(const char*, TMVA::EfficiencyPlotWrapper*&)’ . And 4 more. ### Warnings:; - JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707#issuecomment-311792672:2679,plugin,plugin,2679,https://root.cern,https://github.com/root-project/root/pull/707#issuecomment-311792672,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:32:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:21: error: template argument 1 is invalid . And 16 more. ### Warnings:; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:423:8: warning: unused variable ‘op_0_n’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:424:8: warning: unused variable ‘op_0_k’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:425:10: warning: unused variable ‘op_0_alpha’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:426:10: warning: unused variable ‘op_0_beta’ [-Wunused-variable] ; - [2024,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1948984768:2481,variab,variable,2481,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1948984768,2,['variab'],['variable']
Modifiability,: error:] 1.63 sec ; - 749/1709 Test #657: tutorial-roostats-rs_numbercountingutils ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.72 sec ; - 831/1709 Test #750: tutorial-dataframe-tdf002_dataModel-py ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.44 sec . ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/net/http/civetweb/civetweb.c:2701:8: warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tree/treeplayer/src/TArrowDS.cxx:315:30: warning: lambda capture 'table' is not used [-Wunused-lambda-capture] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/geom/gdml/src/TGDMLWrite.cxx:1996:18: warning: explicitly assigning value of variable of type 'TString' to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/vmatrix.cxx:583:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/vmatrix.cxx:604:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:810:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:831:6: warning: explicitly assigning value of variable of type 'TMatrixD' (aka 'TMatrixT&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:2592:6: warning: explicitly assigning value of vari,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1861#issuecomment-381665481:2292,variab,variable,2292,https://root.cern,https://github.com/root-project/root/pull/1861#issuecomment-381665481,1,['variab'],['variable']
Modifiability,: unknown type name 'TText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more. ### Warnings:; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336695809:1632,portab,portable,1632,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336695809,1,['portab'],['portable']
Modifiability,: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:5855; /opt/root_src/math/mathcore/src/triangle.c:6363:42: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:6363; /opt/root_src/math/mathcore/src/triangle.c:9471:7: warning: Value stored to 'farrightapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farrightapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9471; /opt/root_src/math/mathcore/src/triangle.c:9570:11: warning: Value stored to 'farleftapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farleftapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9570; /opt/root_src/math/mathcore/src/triangle.c:14976:7: warning: Dereference of null pointer (loaded from variable 'vpointlist') [clang-analyzer-core.NullDereference]; 1: Calling 'parsecommandline' in /opt/root_src/math/mathcore/src/triangle.c:15695; 2: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:3300; 3: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:3304; 4: Loop condition is false. Execution continues on line 3300 in /opt/root_src/math/mathcore/src/triangle.c:3304; 5: Loop condition is false. Execution continues on line 3496 in /opt/root_src/math/mathcore/src/triangle.c:3300; 6: Field 'poly' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 7: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 8: Field 'refine' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 9: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 10: Field 'quality' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 11: Left side of '||' is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:109201,variab,variable,109201,https://root.cern,https://github.com/root-project/root/issues/7458,1,['variab'],['variable']
Modifiability,": warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:27:55.658Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:27:58.401Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:27:58.401Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:03.753Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:127:11: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803131999:1318,Config,Configuration,1318,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803131999,1,['Config'],['Configuration']
Modifiability,": warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:27:58.401Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:27:58.401Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:03.753Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:127:11: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:188:26: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T20:28:09.893Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803131999:1621,Config,Configuration,1621,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803131999,1,['Config'],['Configuration']
Modifiability,": warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:27:58.401Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:03.753Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:127:11: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T20:28:07.752Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooChi2Var.cxx:188:26: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2021-03-19T20:28:09.893Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T20:28:14.692Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803131999:1924,Config,Configuration,1924,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803131999,1,['Config'],['Configuration']
Modifiability,: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:10:42.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:15.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:16.808Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:12:16.341Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:08.276Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:10.525Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] . And 91 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/); - [projectroot.roottest.root.multicore.roottest_root_multicore_threadExecutor_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_threadExecutor_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_threadExecutor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_threadExecutor/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-734365903:1937,variab,variable,1937,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-734365903,2,['variab'],['variable']
Modifiability,"://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=CERN>; CERN-T0 (3); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=CERN-T0>; IN2P3-CPPM (3); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=IN2P3-CPPM>; ROMANIA07_HTCondor (4); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=ROMANIA07_HTCondor>; TOKYO (7); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=TOKYO>; I see 2 dcache, 1 EOS and 3 DPM, which is also not enlightening. Cheers,; Rod. On Mon, 11 Jan 2021 at 11:13, Attila Krasznahorkay <notifications@github.com>; wrote:. > As for the ""VM"": We have an image of AnalysisBase-21.2.139 here:; >; >; > https://hub.docker.com/layers/atlas/analysisbase/21.2.139/images/sha256-cf69e10defa9cb564dcb60c9ca723f0de9e7a1813f588bdde1d1a06a944c1e3e?context=repo; >; > But the issue does not show up in it. So it's of not much help...; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-757851295>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRWKLEYGZQMPUNMJHJLSZLFL3ANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757865767:2665,layers,layers,2665,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757865767,1,['layers'],['layers']
Modifiability,:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:10:42.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:15.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:16.808Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:12:16.341Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:08.276Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:10.525Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] . And 91 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/); - [projectroot.roottest.root.multicore.roottest_root_multicore_threadExecutor_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_threadExecutor_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_threadExecutor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_threadExe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-734365903:1745,variab,variable,1745,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-734365903,2,['variab'],['variable']
Modifiability,":16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:63: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""libMyLibrary dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ROOT_prompt_0:1:1: error: must use 'class' tag to refer to type 'MyClass' in this scope; MyClass c;; ^; class ; ROOT_prompt_0:1:1: note: class 'MyClass' is hidden by a non-type declaration of 'MyClass' here; ROOT_prompt_0:1:9: error: variable has incomplete type 'MyClass'; MyClass c;; ^; libMyLibrary dictionary forward declarations' payload:5:62: note: forward declaration of 'MyClass'; class __attribute__((annotate(""$clingAutoload$MyClass.h""))) MyClass;; ^; root [1]; ```. ## Expected behavior. When using the same demonstrator code on Linux, everything goes as expected. ```; [bash][Legolas]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; root [1]; ```. ## To Reproduce. Just take the demonstrator code from https://github.com/krasznaa/root-boost-dictionary-error, tweak its [Makefile](https://github.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:10039,variab,variable,10039,https://root.cern,https://github.com/root-project/root/issues/6454,1,['variab'],['variable']
Modifiability,:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136510,Variab,VariableDecorrTransform,136510,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T06:54:48.379Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T06:54:48.652Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T06:54:48.652Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T06:54:49.786Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] . And 42 more. ### Failing tests:; - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171949/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_readcomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171949/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_readcomplex/); - [projectroot.roottest.root.io.TFile.roottest_root_io_TFile_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171949/testReport/projectroot.roottest.root.io/TFile/roottest_root_io_TFile_make/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171949/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1493829922:2548,variab,variable,2548,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1493829922,1,['variab'],['variable']
Modifiability,:23.304Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T07:26:23.869Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T07:26:24.128Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T07:26:24.425Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T07:26:26.649Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] ; - [2023-04-03T07:26:26.925Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tree/ntuple/v7/inc/ROOT/RColumnElement.hxx:195:27: warning: variable 'val' may be uninitialized when used here [-Wconditional-uninitialized] . And 42 more. ### Failing tests:; - [projectroot.hist.histdrawv7.test.gtest_hist_histdrawv7_test_histhistdrawv7testUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171953/testReport/projectroot.hist.histdrawv7/test/gtest_hist_histdrawv7_test_histhistdrawv7testUnit/); - [projectroot.roottest.root.meta.tuple.roottest_root_meta_tuple_exec_configtype_unload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171953/testReport/projectroot.roottest.root.meta/tuple/roottest_root_meta_tuple_exec_configtype_unload_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1493872553:2345,variab,variable,2345,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1493872553,2,['variab'],['variable']
Modifiability,":243:71: error: ‘plotEfficienciesMulticlass1vsRest’ was not declared in this scope ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:254:115: error: ‘void TMVA::plotEfficienciesMulticlass1vsRest(TString, TMVA::EEfficiencyPlotType, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:279:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:298:67: error: ‘void TMVA::efficienciesMulticlass1vs1(TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:332:94: error: ‘void TMVA::plotEfficienciesMulticlass1vs1(TString, TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:353:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:365:75: error: cannot convert ‘std::map&lt;TString, EfficiencyPlotWrapper*&gt;::mapped_type {aka EfficiencyPlotWrapper*}’ to ‘TMVA::EfficiencyPlotWrapper*’ in initialization ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.9.3/x86_64-cc7/include/c++/4.9.3/ext/new_allocator.h:120:4: error: no matching function for call to ‘std::pair&lt;const TString, EfficiencyPlotWrapper*&gt;::pair(const char*, TMVA::EfficiencyPlotWrapper*&)’ . And 2 more. ### Warnings:; - JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707#issuecomment-311790215:2675,plugin,plugin,2675,https://root.cern,https://github.com/root-project/root/pull/707#issuecomment-311790215,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,":355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:3890,Inherit,InheritsFrom,3890,https://root.cern,https://github.com/root-project/root/issues/11259,1,['Inherit'],['InheritsFrom']
Modifiability,":402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:111839,variab,variable,111839,https://root.cern,https://github.com/root-project/root/issues/7526,1,['variab'],['variable']
Modifiability,":418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] . ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.test.test_stressHistFactory_interpreted](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls2](https://phsft-jenkins.cern.ch/job/root-pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301834954:81603,variab,variable,81603,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301834954,1,['variab'],['variable']
Modifiability,:9: warning: implicit declaration of function 'close' is invalid in C99 [-Wimplicit-function-declaration] ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/root/core/zip/src/gzread.c:30:15: warning: implicit declaration of function 'read' is invalid in C99 [-Wimplicit-function-declaration] ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/root/core/zip/src/gzread.c:591:11: warning: implicit declaration of function 'close' is invalid in C99 [-Wimplicit-function-declaration] ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/root/core/zip/src/inflate.c:1507:61: warning: shifting a negative signed value is undefined [-Wshift-negative-value] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 16 more. ### Failing tests:; - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsZA](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10127/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsZA/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1253#issuecomment-340497930:1718,portab,portable,1718,https://root.cern,https://github.com/root-project/root/pull/1253#issuecomment-340497930,3,['portab'],['portable']
Modifiability,"::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x5555575cfe78); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #130 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556b015f0, pointer=0x5555575cfe78, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #131 0x00007ffff7a84dd9 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556b015f0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #132 TStreamerInfo::ReadBuffer<char**> (this=0x555556977820, b=..., arr=@0x7fffffffcd20: 0x7fffffffcd18, compinfo=0x555557621438, ; first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1316; #133 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #134 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x5555575cfe30, buffer=..., ; this=0x5555574e8d10) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #135 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x5555575cfe30); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #136 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=this@entry=0x7fffffffdd60, cl=0x555555ea1490, ; pointer=pointer@entry=0x5555575cfe30, onFileClass=onFileClass@entry=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #137 0x00007ffff5c3a4e9 in RooAbsArg::Streamer (this=0x5555575cfe30, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooAbsArg.cxx:2429; #138 0x00007ffff7e0cee8 in TStreamerBase::ReadBuffer (this=this@entry=0x555556b94bc0, b=..., ; pointer=0x55555",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:29760,config,config,29760,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['config'],['config']
Modifiability,"::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregula",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:68441,variab,variable,68441,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:76568,variab,variable,76568,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:47294,variab,variable,47294,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/roottest/root/hist/v7unit/biniter.cxx:14:15: warning: loop variabl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/578#issuecomment-301810421:7878,variab,variable,7878,https://root.cern,https://github.com/root-project/root/pull/578#issuecomment-301810421,2,['variab'],['variable']
Modifiability,"::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/roottest/root/hist/v7unit/biniter.cxx:14:15: warning: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:7878,variab,variable,7878,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,2,['variab'],['variable']
Modifiability,"::RDF::TH1DModel& model = {"""", """", 128U, 0., 0.}, experimental::__ROOT::basic_string_view<char,char_traits<char> > vName = """") =>; 887: TypeError: could not convert argument 2; 887: Failed to instantiate ""Histo1D(ROOT::RDF::TH1DModel*,std::string)""; 887: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 887: error code: 1; 887:; 887:; 10/16 Test #887: tutorial-dataframe-df014_CSVDataSource-py ................***Failed 5.75 sec; test 888; Start 888: tutorial-dataframe-df016_vecOps-py. 888: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df016_vecOps.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df017_vecOpsHEP.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:11353,variab,variables,11353,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['variab'],['variables']
Modifiability,"::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110; #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33; #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120; #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242; #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973; #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957; #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871; #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447; #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141; #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275; #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146; #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132; #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956; #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:19297,Inherit,InheritsFrom,19297,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['Inherit'],['InheritsFrom']
Modifiability,"::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow, ROOT::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:62215,variab,variable,62215,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrreg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:66207,variab,variable,66207,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,::_rooprodpdffactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:81:8: warning: ‘{anonymous}::_rooaddpdffactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:109:8: warning: ‘{anonymous}::_roosimultaneousfactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:136:8: warning: ‘{anonymous}::_roosimultaneousstreamer’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:152:8: warning: ‘{anonymous}::_roohistfuncstreamer’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:02.311Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/HistFactoryJSONTool.cxx:171:64: warning: unused parameter ‘os’ [-Wunused-parameter] ; - [2020-08-31T10:30:03.249Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:240:8: warning: ‘{anonymous}::_roohistogramfactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:03.249Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:365:8: warning: ‘{anonymous}::_roorealsumpdffactory’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:03.249Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:385:8: warning: ‘{anonymous}::_flexibleinterpvarstreamer’ defined but not used [-Wunused-variable] ; - [2020-08-31T10:30:03.249Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_HistFactory.cxx:487:8: warning: ‘{anonymous}::_histfactorystreamer’ defined but not used [-Wunused-variable],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6254#issuecomment-683698309:4965,variab,variable,4965,https://root.cern,https://github.com/root-project/root/pull/6254#issuecomment-683698309,4,['variab'],['variable']
Modifiability,"::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2; (...); ```; It seems that the problem is related to the system provided ""`libzmq`"".; The configuration step says:; `-- ZeroMQ not found. Switching on builtin_zeromq option`; but it also finds:; `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`; and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:3765,config,configuration,3765,https://root.cern,https://github.com/root-project/root/issues/10107,1,['config'],['configuration']
Modifiability,:; - include/ROOT/RField.hxx:377:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:384:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:422:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:429:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:462:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:469:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:501:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:508:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:540:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] ; - include/ROOT/RField.hxx:547:14: warning: local variable 'v' will be copied despite being returned by name [-Wreturn-std-move] . And 134 more. ### Failing tests:; - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59480/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.root.io.heritstl.roottest_root_io_heritstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59480/testReport/projectroot.roottest.root.io/heritstl/roottest_root_io_heritstl_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59480/testReport/projectroot.roottest.root/meta/roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3830#issuecomment-493457241:1102,variab,variable,1102,https://root.cern,https://github.com/root-project/root/pull/3830#issuecomment-493457241,1,['variab'],['variable']
Modifiability,":DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>) (this=0x8eb600, this@entry=0xbcb8b0, K=K@entry=llvm::orc::LookupKind::Static, SearchOrder=std::vector of length 1, capacity 1 = {...}, Symbols=..., RequiredState=llvm::orc::SymbolState::Ready, NotifyComplete=..., RegisterDependencies=...); at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:1974; #53 0x00007fffefd9cdaa in llvm::orc::ExecutionSession::lookup(std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > > const&, llvm::orc::SymbolLookupSet const&, llvm::orc::LookupKind, llvm::orc::SymbolState, std::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>) (this=this@entry=0xbcb8b0, SearchOrder=<error reading variable: Cannot access memory at address 0x8>, ; Symbols=..., K=K@entry=llvm::orc::LookupKind::Static, RequiredState=llvm::orc::SymbolState::Ready, RegisterDependencies=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2011; #54 0x00007fffefd9d0c5 in llvm::orc::ExecutionSession::lookup (this=0xbcb8b0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=llvm::orc::SymbolState::Ready) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2036; #55 0x00007fffefdbe05c in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /home/j",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:13163,variab,variable,13163,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['variab'],['variable']
Modifiability,":Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisIrreg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:65756,variab,variable,65756,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,":Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:48658,variab,variable,48658,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,":Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:57263,variab,variable,57263,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,":Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:73427,variab,variable,73427,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,":Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:78827,variab,variable,78827,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,":thinking: My approach here may be wrong... Looking more at the `CMakeCache.txt` file generated for my build on ARM, I see these values when I set up the build of ROOT 6.18/04 with the system's GCC 6.3:. ```cmake; //Test HAVE_CXX_ATOMICS64_WITHOUT_LIB; HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=1; //Test HAVE_CXX_ATOMICS_WITHOUT_LIB; HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1; ```. While in my GCC 8 build of the master branch I see this:. ```cmake; //Test HAVE_CXX_ATOMICS64_WITHOUT_LIB; HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=; //Test HAVE_CXX_ATOMICS64_WITH_LIB; HAVE_CXX_ATOMICS64_WITH_LIB:INTERNAL=1; //Test HAVE_CXX_ATOMICS_WITHOUT_LIB; HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1; //Have library atomic; HAVE_CXX_LIBATOMICS64:INTERNAL=1; ```. The number of internal CMake variables actually differs between the two cases. In the first case, with the system's GCC 6.3 it does seem to detect things correctly. Since there is no `libatomic.so` file anywhere under `/usr/lib`. But in the second case, with GCC 8, CMake seems to falter. It seems that since only for the 64-bit atomic operations is a library needed, CMake gets confused about how to compile the code. Mind you, I'm pretty sure that the Raspberry Pi has a 32-bit ARM CPU. So I have no clue what the 64-bit atomic operations are doing. :confused:. I also tried to google these cache variables, but surprisingly I didn't find much useful. Still, I can't help but think now that this linking issue in ROOT should rather be attacked by fixing CMake somehow, and not by linking against `libatomic` ourselves. Then again, doing this is definitely getting the job done...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-544677066:773,variab,variables,773,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-544677066,2,['variab'],['variables']
Modifiability,; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/7269/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_callbacks/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/7269/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-333247929:2284,portab,portable,2284,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-333247929,2,['portab'],['portable']
Modifiability,; - [2020-11-26T15:10:20.748Z] include/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:10:39.359Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:10:42.193Z] include/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:10:42.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:15.454Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:11:16.808Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:12:16.341Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:08.276Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] ; - [2020-11-26T15:15:10.525Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TSequentialExecutor.hxx:145:16: warning: unused variable 'i' [-Wunused-variable] . And 91 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102918/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/); - [projectroot.roottest.root.multicore.roottest_root_multicore_threadExecutor_build](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-734365903:1361,variab,variable,1361,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-734365903,2,['variab'],['variable']
Modifiability,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:108305,variab,variable,108305,https://root.cern,https://github.com/root-project/root/issues/7526,1,['variab'],['variable']
Modifiability,"; 1: Calling 'Classification::TrainMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:374; 2: Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Class",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:24548,Config,Configurable,24548,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability,; 8: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:897; 9: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 10: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 11: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 12: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:133594,Variab,VariableDecorrTransform,133594,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,"; <tbody>; <tr>; <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/47e2b3ecc225486ce6b293605a153d09788429be/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/05d10d2127282c5ec11b1330763dc0b43a93a6df/root-project/root/47e2b3ecc225486ce6b293605a153d09788429be/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/47e2b3ecc225486ce6b293605a153d09788429be/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/05d10d2127282c5ec11b1330763dc0b43a93a6df/root-project/root/47e2b3ecc225486ce6b293605a153d09788429be/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/05d10d2127282c5ec11b1330763dc0b43a93a6df/root-project/root/47e2b3ecc225486ce6b293605a153d09788429be/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8770#issuecomment-889092371:2256,plugin,plugins,2256,https://root.cern,https://github.com/root-project/root/pull/8770#issuecomment-889092371,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"; <tbody>; <tr>; <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-799274381:2256,plugin,plugins,2256,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-799274381,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"; File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>; main(); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main; IPKernelApp.launch_instance(kernel_class=ROOTKernel); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance; app.initialize(argv); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner; return method(app, *args, **kwargs); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize; self.init_kernel(); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel; kernel = kernel_factory(parent=self, session=self.session,; File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance; inst = cls(*args, **kwargs); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__; self.magicloader = MagicLoader(self); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__; raise Exception(""Error importing Magic: %s""%module_path); Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic; ```; And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:; ```; input_line_37:1:10: fatal error: 'dlfcn.h' file not found; ^~~~~~~~~; input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'; (dlopen(""libRint.so"", RTLD_NOW)); ^; ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12951:1927,config,config,1927,https://root.cern,https://github.com/root-project/root/pull/12951,2,['config'],"['config', 'configurable']"
Modifiability,; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121547/console).; ### Errors:; - [2021-07-02T07:14:34.663Z] FAILED: roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/NumericalDerivatorMinuit2.cxx.o ; - [2021-07-02T07:14:35.598Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:91:19: error: ‘std::chrono’ has not been declared ; - [2021-07-02T07:14:35.598Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:91:46: error: ‘std::chrono’ has not been declared ; - [2021-07-02T07:14:35.599Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:92:22: error: ‘std::chrono’ has not been declared ; - [2021-07-02T07:14:35.599Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:25: error: variable or field ‘t1’ declared void ; - [2021-07-02T07:14:35.599Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:29: error: variable or field ‘t2’ declared void ; - [2021-07-02T07:14:35.599Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:33: error: variable or field ‘t3’ declared void ; - [2021-07-02T07:14:35.599Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:37: error: variable or field ‘t4’ declared void ; - [2021-07-02T07:14:35.599Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:41: error: variable or field ‘t5’ declared void ; - [2021-07-02T07:14:35.599Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/NumericalDerivatorMinuit2.cxx:95:45: error: variable or field ‘t6’ declared void . And 17 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-872776323:1113,variab,variable,1113,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-872776323,6,['variab'],['variable']
Modifiability,"; cd ./roottest/root/meta/cmsUnload/; make cleantest V=1. cat scripts/case3.script; ```. ```cpp; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. ```bash; root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script; ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```; ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'; SiStripCluster obj;; ^; libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'; ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;; ^; ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there?. PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-433640932:1460,variab,variable,1460,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-433640932,1,['variab'],['variable']
Modifiability,"; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cases, restart the next buffer from the last valid; entry + 1 rather than the previous event boundary. This would result in a 'slightly' over-read; (some baskets might be read twice) rather than the wild useless over-read we had.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:1967,enhance,enhancement,1967,https://root.cern,https://github.com/root-project/root/pull/1778,1,['enhance'],['enhancement']
Modifiability,";, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;1, float, Detail::THistDataDefaultStorage, THistStatContent&gt;, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/roottest/root/hist/v7unit/biniter.cxx:14:15: warning: loop variable 'bin' is always a copy because the range of type 'TH2F' (aka 'THist&lt;2, float, THistStatContent, THistStatUncertainty&gt;') does not return a reference [-Wrange-loop-analysis] ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/roottest/root/hist/v7unit/biniter.cxx:49:15: warning: loop variable 'bin' is always a copy because the range of type 'TH2F' (aka 'THist&lt;2, float, THistStatContent, THistStatUncertainty&gt;') does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;2, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:9356,variab,variable,9356,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,2,['variab'],['variable']
Modifiability,";; // this should triggr the snapshot; *act;; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if ; https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690; is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on ; ```; ROOT Version: 6.28/08; Built for linuxx8664gcc on Oct 13 2023, 09:48:14; From tags/v6-28-08@v6-28-08; ```; and; ```; ROOT Version: 6.30/00; Built for linuxx8664gcc on Nov 26 2023, 23:25:40; From heads/v6-30-patches@tags/v6-30-00; ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora releas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14132:1896,config,config,1896,https://root.cern,https://github.com/root-project/root/issues/14132,1,['config'],['config']
Modifiability,";ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:55449,variab,variable,55449,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,";ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisEquidistant&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:411:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisEquidistant, ROOT::Experimental::TAxisGrow&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:404:42: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301812104:71613,variab,variable,71613,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301812104,4,['variab'],['variable']
Modifiability,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;; range.AddRange(5,7);; assert(range.Size() == 1);; std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);; assert(range(0,0).second == 7);; std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;; range.AddRange(20,25);; assert(range.Size() == 2);; std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);; assert(range(0,0).second == 7);; std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);; assert(range(0,1).second == 25);; std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;; range.AddRange(24,26);; assert(range.Size() == 2);; std::cout << ""Size = 2 = "" << range.Size() << std::endl;; assert(range(0,1).first == 20);; assert(range(0,1).second == 26);; std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;; range.AddRange(19,20);; assert(range(0,1).first == 19);; assert(range(0,1).second == 26);; std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;; range.AddRange(6,20);; assert(range.Size() == 1);; std::cout << ""Size = 1 = "" << range.Size() << std::endl;; assert(range(0,0).first == -2);; assert(range(0,0).second == 26);; std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;; ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10101#issuecomment-1080761923:3191,extend,extending,3191,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080761923,1,['extend'],['extending']
Modifiability,"< Use new instance of all the pass/analysis managers every time . If this commit works out, please enhance the commit log with an explanation of why this change is improving things.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1863176284:99,enhance,enhance,99,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1863176284,1,['enhance'],['enhance']
Modifiability,"<TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of the diagnostics;. I figured this is worth an issue. Originally discovered in: https://github.com/key4hep/EDM4hep/issues/42#issuecomment-721167821",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:2582,plugin,plugin,2582,https://root.cern,https://github.com/root-project/root/issues/6791,1,['plugin'],['plugin']
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/350f5360909f8db1309a0b8500a4582a05b30b95/root-project/root/fbbf2e554f6f29efaa87c9c61e5870f33006dde9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 3.451 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/350f5360909f8db1309a0b8500a4582a05b30b95/root-project/root/fbbf2e554f6f29efaa87c9c61e5870f33006dde9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8751#issuecomment-887637402:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8751#issuecomment-887637402,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/491740ec32dad8da25df828a6fd0cac8cbaeb788/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 4.742 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/491740ec32dad8da25df828a6fd0cac8cbaeb788/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7907#issuecomment-821567065:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/7907#issuecomment-821567065,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/4731acb7de0162cfcf7faa4a77c6d09d6ddab705/root-project/root/5e4f50834a0c05547823b76f40d09cd24baebb02/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.054 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/4731acb7de0162cfcf7faa4a77c6d09d6ddab705/root-project/root/5e4f50834a0c05547823b76f40d09cd24baebb02/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7544#issuecomment-800320659:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/7544#issuecomment-800320659,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-858647686:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-858647686,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/6de8aef9e97adb926e33961825f8aa90de66e4ed/root-project/root/15bb785ee62b71d6e671c7a9c12897fc4aac89bf/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 3.946 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/6de8aef9e97adb926e33961825f8aa90de66e4ed/root-project/root/15bb785ee62b71d6e671c7a9c12897fc4aac89bf/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8699#issuecomment-883541289:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8699#issuecomment-883541289,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8429#issuecomment-868883317:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8429#issuecomment-868883317,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/8341e59956b08e78aea43bdcdb0ada478be7018b/root-project/root/2b779a51db67ad75a8b748797e789efe2d7257dc/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 1.077 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/8341e59956b08e78aea43bdcdb0ada478be7018b/root-project/root/2b779a51db67ad75a8b748797e789efe2d7257dc/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8623#issuecomment-875555355:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8623#issuecomment-875555355,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/8354698f743214e9cbde935acecc0221b127d025/root-project/root/ddbf65608c21a005300aea848d5238610a4738d3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.993 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/8354698f743214e9cbde935acecc0221b127d025/root-project/root/ddbf65608c21a005300aea848d5238610a4738d3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8526#issuecomment-867425164:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8526#issuecomment-867425164,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/968f152c5cebe557208086d7ba0d01b10c876fd9/root-project/root/5c7511d04e16f42f04b9a5695cebc1c3494e2229/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.623 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/968f152c5cebe557208086d7ba0d01b10c876fd9/root-project/root/5c7511d04e16f42f04b9a5695cebc1c3494e2229/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8613#issuecomment-874710854:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8613#issuecomment-874710854,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/c7a05db3d71f3640428ca3bc8ceefc2890d72784/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 3.542 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/c7a05db3d71f3640428ca3bc8ceefc2890d72784/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8658#issuecomment-879201526:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8658#issuecomment-879201526,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/af32d2bff297d795083ebe51ce92a890420106c3/root-project/root/561bf28e2aedfa55412caef8d9fda80d23429236/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 4.617 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/af32d2bff297d795083ebe51ce92a890420106c3/root-project/root/561bf28e2aedfa55412caef8d9fda80d23429236/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-889768638:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-889768638,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8454#issuecomment-863014340:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8454#issuecomment-863014340,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8430#issuecomment-861046767:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8430#issuecomment-861046767,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/e1bdaf6163a34a65f86a8bc7f9c49a0255f85987/root-project/root/272666867e9bf021fe79ad59236b3366202577e1/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.806 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/e1bdaf6163a34a65f86a8bc7f9c49a0255f85987/root-project/root/272666867e9bf021fe79ad59236b3366202577e1/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8510#issuecomment-866103238:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8510#issuecomment-866103238,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/e7c18cd5995deb03e618a179d10151b52c450c90/root-project/root/5112859d636abe1ccf1fb5b599aaa10202a28c61/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.964 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/e7c18cd5995deb03e618a179d10151b52c450c90/root-project/root/5112859d636abe1ccf1fb5b599aaa10202a28c61/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8776#issuecomment-889750593:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8776#issuecomment-889750593,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/fb72c0ef18b8d5e3d7d037195dd58ed2bfafc02e/root-project/root/80df257929e2686b7264e63284b6d701a11c0c09/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 4.639 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/fb72c0ef18b8d5e3d7d037195dd58ed2bfafc02e/root-project/root/80df257929e2686b7264e63284b6d701a11c0c09/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project); #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ !; If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876227801:972,plugin,plugins,972,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876227801,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"<pre>@@ -49,6 +49,14 @@; &lt;/div&gt;; &lt;script&gt;; if (typeof require !== &apos;undefined&apos;) {{; + try {{; + var base_url = JSON.parse(document.getElementById(&apos;jupyter-config-data&apos;).innerHTML).baseUrl;; + }} catch(_) {{; + var base_url = &apos;/&apos;;; + }};; + require.config({{; + baseUrl: base_url + &apos;static/&apos;; + }});; ; // All requirements met (we are in jupyter notebooks or we loaded requirejs before).; display_{jsDivId}();; </pre>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8459#issuecomment-863161884:181,config,config-data,181,https://root.cern,https://github.com/root-project/root/issues/8459#issuecomment-863161884,2,['config'],"['config', 'config-data']"
Modifiability,"=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================; ```. ## Expected behavior; No crash. ## To Reproduce; Code. ```; #include <TCanvas.h>; #include <TLine.h>; #include <TPad.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->cd();; TLine* l= new TLine(0,1,0,1);; l->Paint();; delete l;; delete c;; delete C;; return 0;; }; ```. compile; ```; g++ pad3.cxx $(root-config --glibs --cflags --libs) -o pad3 -g; ```; run. ```; ./pad3; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7; and. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; on lxplus. ## Possible fix; Replace. ```; if (!gPad->IsBatch()); GetPainter()->DrawLine(x[0], y[0], x[1], y[1]);. ```; with. ```; if (!gPad->IsBatch() && GetPainter() ); GetPainter()->DrawLine(x[0], y[0], x[1], y[1]);; ```. in ``void TPad::PaintLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)``",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6446:2457,config,config,2457,https://root.cern,https://github.com/root-project/root/issues/6446,1,['config'],['config']
Modifiability,=[: error:] 0.74 sec ; - 772/1835 Test #522: tutorial-mlp-mlpRegression ........................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.82 sec . ### Warnings:; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3803:17: warning: declaration of ‘f1’ shadows a previous local [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3797:9: warning: shadowed declaration is here [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3807:17: warning: declaration of ‘f2’ shadows a previous local [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3798:9: warning: shadowed declaration is here [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3811:17: warning: declaration of ‘f3’ shadows a previous local [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3799:9: warning: shadowed declaration is here [-Wshadow] ; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3798:9: warning: unused variable ‘f2’ [-Wunused-variable] ; - /data/sftnight/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:3799:9: warning: unused variable ‘f3’ [-Wunused-variable] . ### Failing tests:; - [projectroot.runtutorials.tutorial_mlp_mlpHiggs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60623/testReport/projectroot/runtutorials/tutorial_mlp_mlpHiggs/); - [projectroot.runtutorials.tutorial_mlp_mlpRegression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60623/testReport/projectroot/runtutorials/tutorial_mlp_mlpRegression/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60623/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3906#issuecomment-498733896:1562,variab,variable,1562,https://root.cern,https://github.com/root-project/root/pull/3906#issuecomment-498733896,4,['variab'],['variable']
Modifiability,"=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:1039,variab,variables,1039,https://root.cern,https://github.com/root-project/root/issues/8435,1,['variab'],['variables']
Modifiability,"> * If I go all the way down to the last entry, I need press twice 'up' key to go the second entry. Probably, some issue between index 0 and index 1. I'll check. > * Maybe, index 0 should correspond to the 'empty' comannd line window, or whatever the user had typed in the beginning before pressing the arrows. For example, if (te) { fCommand->SetText(te->GetText()->GetString()); } else { fCommand->SetText(temporaryString); }, where temporaryString was whatever was in the TGTextEntry before scrolling in the history. OK, I'll see what I can do. > * The ROOT history is still not saved even if I call plugin->SetHistAdd(); which means that somehow Gl_histadd((char *)string); is not working in a standalone CMake TApplication?. That might well be. But if it's the case then I'm afraid there is not much I can do..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-779805526:603,plugin,plugin,603,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-779805526,1,['plugin'],['plugin']
Modifiability,> * TFitterMinuit should have a deprecation warning. Does it refer to `etc/plugins/TVirtualFitter/P030_TFitterMinuit.C` or to what class exactly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14556#issuecomment-1948908633:75,plugin,plugins,75,https://root.cern,https://github.com/root-project/root/issues/14556#issuecomment-1948908633,1,['plugin'],['plugins']
Modifiability,"> * Test skipping non-persistent members. Done. See check in test `ntuple_types.cxx`, line 155. > * Test the most complicated (artificial) example for a class hierarchy, e.g. diamond inheritance and members that have types of the inherited classes. Done. Also, I have added a test for types inheriting from a templated class, based on the mails exchanged with Marcin Nowak.; ; > * Trying to read/write polymorphic classes: perhaps we can detect with TClass if we have a derived class in our hands. In which case... I guess we want to warn? Or silently slice?. Currently, we throw -see test `ntuple_types.cxx:165`-. For a future PR, maybe we can change this behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8552#issuecomment-927349101:183,inherit,inheritance,183,https://root.cern,https://github.com/root-project/root/pull/8552#issuecomment-927349101,4,"['inherit', 'polymorphi']","['inheritance', 'inherited', 'inheriting', 'polymorphic']"
Modifiability,"> - [ ] ""./keyword"" search keyword in help information. IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for?. > - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). Not sure whether this is useful, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084793000:297,variab,variables,297,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084793000,2,['variab'],['variables']
Modifiability,"> . Could we put something like the following in RMakeUnique.hxx instead?. Actually, rather than guessing which platform it is available on, we ought to have a test in CMakeList.txt and the corresponding #define in the configuration header file. We do this for std::string_view and the always_inline attibute for example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1203#issuecomment-337983024:219,config,configuration,219,https://root.cern,https://github.com/root-project/root/pull/1203#issuecomment-337983024,1,['config'],['configuration']
Modifiability,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution.; > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,; > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`.; > And try to provide proper solution for MySQL. Otherwise method only will be implemented in; > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-506537340:396,inherit,inherited,396,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-506537340,1,['inherit'],['inherited']
Modifiability,"> 29 ns/number is still an excellent time!. I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6794#issuecomment-726084280:112,portab,portable,112,https://root.cern,https://github.com/root-project/root/pull/6794#issuecomment-726084280,1,['portab'],['portable']
Modifiability,"> ; > ; > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have...; > ; > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if; > ; > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option.; > ; > Is that an acceptable approach?. Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-863959906:560,config,config,560,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-863959906,1,['config'],['config']
Modifiability,"> > > > @vgvassilev Great!; > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.; > > > ; > > > ; > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ?; > > ; > > ; > > Yes; > ; > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?. Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1979007390:647,refactor,refactor,647,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1979007390,1,['refactor'],['refactor']
Modifiability,"> > > It should also be mentioned explicitly somewhere that if a pythonization is defined after the class has been instantiated for the first time by PyROOT, it is ignored.; > ; > > I think we should either get an exception if the class was already instantiated (but what about name prefixes?) or make sure pythonizations are applied also to already instantiated classes.; > ; > I would be more in favour of documenting well that pythonizations should be registered at the beginning of the application, before classes are used, instead of complicating the implementation by looking for already instantiated classes that match the class names / prefixes. The problem I see is that we are not always in control of the order modules are loaded. I may take care that I first configure the pythonizations I need then load the classes I want, but if somebody loads those classes before importing my module, then the code relying on the pythonizations is broken in unpredictable ways.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-972647280:771,config,configure,771,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-972647280,1,['config'],['configure']
Modifiability,"> > @guitargeek please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks; > ; > Hi @bellenot, I have now forked [roottest](https://github.com/root-project/roottest), but the Windows build is still failing. Should I do something else besides just forking? Thanks for your help!. Hi @guitargeek No, now the failure is a real one, see the build log:; ```; 17:41:07 CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-configure-Release.cmake:49 (message):; 17:41:07 Command failed: 1; 17:41:07 ; 17:41:07 'devenv.exe' '/useenv' '/upgrade' 'build/vs2013/makefile.sln'; 17:41:07 ; 17:41:07 See also; 17:41:07 ; 17:41:07 C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-configure-*.log; 17:41:07 ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7126#issuecomment-775010584:523,config,configure-Release,523,https://root.cern,https://github.com/root-project/root/pull/7126#issuecomment-775010584,2,['config'],"['configure', 'configure-Release']"
Modifiability,"> > @pcanal has suggested leveraging the old behavior to disable optimizations before, so I would wait for his ok before merging.; > EDIT: just to be clear, I am convinced the old behavior is a bug. The old behavior was:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g (and default compiler optimization); + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; The new behavior seems to be:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g -O3 ; + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; So this is fine as we **MUST** have a way to completely disable optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7382#issuecomment-791547695:338,config,configuration,338,https://root.cern,https://github.com/root-project/root/pull/7382#issuecomment-791547695,2,['config'],['configuration']
Modifiability,"> > A possibility might be:; > ; > ```c++; > #ifdef R__USE_IMT; > # define R__EXECUTOR_THREAD ROOT::TThreadExecutor; > #else; > # define R__EXECUTOR_THREAD ROOT::TSequentialExecutor; > #endif; > #ifndef R__WIN32; > # define R__EXECUTOR_PROCESS ROOT::TProcessExecutor; > #else; > # define R__EXECUTOR_PROCESS ROOT::TSequentialExecutor; > #endif; > std::unique_ptr<R__EXECUTOR_THREAD> fThreadExecutor;; > std::unique_ptr<R__EXECUTOR_PROCESS> fProcessExecutor;; > ```; > ; > Hm, but you cannot have multiple `std::unique_ptr` reference the same object on the heap, which is what the current `define`s do. Maybe that's fine though, I didn't look into the code... In this solution we would only have a single `std::unique_ptr` reference. The ifdef conditions are on definitions that depend on the configuration of the root build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7039#issuecomment-760115226:792,config,configuration,792,https://root.cern,https://github.com/root-project/root/issues/7039#issuecomment-760115226,1,['config'],['configuration']
Modifiability,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing; > ; > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-655020201:259,adapt,adapt,259,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-655020201,1,['adapt'],['adapt']
Modifiability,"> > As far as I can see, just from looking at the code,; > ; > I assume it should be in the generated dictionary and not in the code, isn't it?. My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT.; > ; > Do you mean both the `older` libceleritas_root.so and the new one or something else?. I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > ; > > Both of them load just fine in a PowerPC build of ROOT.; > ; > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1079019110:415,refactor,refactoring,415,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1079019110,1,['refactor'],['refactoring']
Modifiability,"> > Because TVector3 has some properties that are better in some cases than GenVector.; > ; > Which properties are you referring to ? ; > The only think missing is inheritance of TObject and a virtual destructor. This can cause some slowdown in TVector3 when creating many temporary vector objects. ; > You should be able to use the Genvector as a TVector3. If some functionality is missing, please let me know. Ah, my bad, I mustve gotten it confused with another class. Thanks for your patience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8558#issuecomment-877056263:164,inherit,inheritance,164,https://root.cern,https://github.com/root-project/root/pull/8558#issuecomment-877056263,1,['inherit'],['inheritance']
Modifiability,"> > Can you do: `nm $ROOTSYS/lib/*.so | grep TString | grep kNPOS | wc -l`; > ; > Sure!; > ; > ```; > # Before patch; > $: nm $ROOTSYS/lib/*.so | grep TString | grep kNPOS | wc -l; > 0; > # After patch; > $: nm $ROOTSYS/lib/*.so | grep TString | grep kNPOS | wc -l; > 1; > ```; > ; > In particular, that one symbol is found in `libCore.so`; > ; > ```; > $: nm libCore.so | grep _ZN7TString5kNPOSE; > 0000000000591508 R _ZN7TString5kNPOSE; > ```. I meant with the inline patch -- just to make sure that if we mark the variable `inline` it does not mangle in a slightly different way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860745035:517,variab,variable,517,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860745035,1,['variab'],['variable']
Modifiability,"> > Changes ok.; > ; > Thanks! From my side, the only thing left is improving the documentation of Laplacian, try copy-pasting from Gradient and adapting. Thank you for providing suggestions and taking your time to review the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15100#issuecomment-2054060118:145,adapt,adapting,145,https://root.cern,https://github.com/root-project/root/pull/15100#issuecomment-2054060118,1,['adapt'],['adapting']
Modifiability,"> > Globally assume at least GTest version ..; > ; > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`?. Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15355#issuecomment-2079402579:390,config,configuration,390,https://root.cern,https://github.com/root-project/root/pull/15355#issuecomment-2079402579,1,['config'],['configuration']
Modifiability,"> > I am almost certain that non-critical changes won’t make it back upstream.; > ; > I think all of us appreciate the time and brain power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:970,variab,variable,970,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,1,['variab'],['variable']
Modifiability,"> > I think llvm discourages that setup generally; > ; > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.).; > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2128017265:726,config,config,726,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2128017265,2,['config'],['config']
Modifiability,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :); > ; > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?. They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654934046:509,rewrite,rewrite,509,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654934046,1,['rewrite'],['rewrite']
Modifiability,"> > I will definitely disable root7; > ; > `nlomann/json.hpp` used also in i/o classes of ROOT, therefore one need to have proper configuration anyway. Dear Sergey,. I just compiled it with the `-Dbuiltin_nlohmannjson=ON` flag, also I've disabled `root7` and specified the C++14 standard. It worked fine. Many thank for your help. With best regards,; Denys.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1476558478:130,config,configuration,130,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1476558478,1,['config'],['configuration']
Modifiability,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?; > ; > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And; ```cpp; #ifdef R__LESS_INCLUDES; class TList;; #else; #include ""TList.h""; #endif; ```; in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13840#issuecomment-1760285333:80,variab,variable,80,https://root.cern,https://github.com/root-project/root/pull/13840#issuecomment-1760285333,1,['variab'],['variable']
Modifiability,"> > If it is incompatible, it should detect this when CMake runs; > ; > I don't think it's feasible to write CMake detection logic for every single patch that we distribute on top of LLVM and Clang. Doing a catchall should be doable. Add some extra version variable to llvm-config, or similar. But also, doing such detection for every single modification would actually help in long term maintenance, making any expected deviation in behavior explicit. Though, adding this in retrospective for something on the way out is probably not time spent well.; ; > > If if is known to be incompatible, it should be mentioned in the documenation. Compare https://root.cern/install/build_from_source/#all-build-options; > ; > I _think_ this list of options is autogenerated, but not sure. We could add another warning similar to `builtin_clang`'s; > ; > https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/CMakeLists.txt#L2-L4; > ; > but the situation will again change with the upgrade to LLVM 13, where it should _hopefully_ again be possible to build against vanilla LLVM... Support for vanilla LLVM 13 (and hopefully newer) would be a very welcome change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11146#issuecomment-1208151017:257,variab,variable,257,https://root.cern,https://github.com/root-project/root/issues/11146#issuecomment-1208151017,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"> > In the TLegend::AddEntry method, a TLegendEntry is added to the TList (fPrimitives). When I try to do this, it tells me that > > the Add() method of TList takes in an Object and I provided a TFeynmanEntry . How did TLegend do this?; > ; > Ah yes TFeynman and TFeynmanEntry should inherits from TObject like TLegendEntry. See the inheritance graph here:; > ; > https://root.cern/doc/master/classTLegendEntry.html. Ahhhh okay. This makes sense. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-820334196:284,inherit,inherits,284,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-820334196,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"> > LGTM!; > ; > Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope. The easiest way would be to configure ROOT with `-Dclingtest=On -Dtesting=On` and run it within ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9272#issuecomment-2053640480:204,config,configure,204,https://root.cern,https://github.com/root-project/root/pull/9272#issuecomment-2053640480,1,['config'],['configure']
Modifiability,"> > Moving towards a generic explicit implementation based on a markers is; > ; > I cannot follow - who's proposing to move to something, which explicit markers? I'm arguing that the status quo (last top-level expression's value is printed if missing trailing semicolon) should be kept for consistency and simplicity reasons.; > ; > Let's hear some other opinions here, e.g. @SimeonEhrig @jalopezg-uc3m @pcanal ?. I do realize my post was terse. Here is more text as the discussion went in another direction. Since early days, as you already mentioned, the rule seems to be ""the last expression without a trailing semicolon should print"". If that is the rule, then it clearly does not handle short-hand operators. Namely, `if (x) expr`. That rule does not extend to your examples `do 1 while(true)` as `while` is not really an user-defined expression. `if (x) { expr }` does not fall there either as it is in a compound statement. It is pretty clear where we stop. The construct `if(x) expr`, as shown in the example, enables an interactive programming pattern wrt error handling where in case of an error we can just ask cling to print details. > I'd prefer to keep value printing simple. The implementation of what I propose requires 2-3 lines [here](https://github.com/vgvassilev/cling/blob/856f8e92f82f9037b3dbb27ae7f94add2ed6121f/lib/Utils/AST.cpp#L141-L152). And actually makes the value printing rule more comprehensible. It took me some time to realize what's wrong and I implemented it, so I'd say it would be less comprehensible to other people. > and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks . We have had that in the past. I do not think having not user requests should be an argument against this bug. > I'm not yet convinced that it's worth the effort (and yes, that's an additional counter ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713756223:756,extend,extend,756,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713756223,1,['extend'],['extend']
Modifiability,"> > Pointing to what alternatives there are, if any, either through the legacy alias, or in > the body doc, would be additionally helpful.; > ; > We cannot test the existence of an input variable in an alias therefore we cannot handle with the same alias the case where there is another solution and the case where there is not. I guess if there are possible alternatives they should be mentioned in the body of the class documentation. I guess one could use:; `ALIASES = ""legacy{2}=\htmlonly<div class=\""legacybox\""><h2>Legacy Code</h2> \1 is a legacy interface: there will be no bug fixes nor new developments. But depending on the context using \1 might still be a valid solution. \2</div>\endhtmlonly""; `. and then e.g.:; `\legacy{TSpectrum,Some parts of this class are superseded by RooFit.}`. or:; `\legacy{TTreeReader,RDataFrame is recommended as replacement.}`. Second argument can be also left empty `{TTreeReader,}`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237828753:187,variab,variable,187,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237828753,1,['variab'],['variable']
Modifiability,"> > Rather than not generating the rdict file we could use it only in the cases when it will improve things.; > ; > What are the cases where it doesn't?. See the performance data. It doesn't improve things basically for entire roottest -- on the contrary it shows 2% slowdown. > ; > > What is the best way to detect if we are in MakeProject mode?; > ; > What is special about the ""MakeProject mode""?. I was hoping you to be able to tell. You crafted an example on top of roottest's MakeProject which was able to demonstrate the usefulness of rdicts. None of that so far is obvious to me. > ; > I don't think we can (really) detect it. What MakeProject does is generate a set of header files, a linkdef file and a build script. Except for the fact that there no function besides the constructor and destructor, it is distinguishable from regular user code. The struct are not even guaranteed to be POD because of inheritance. In addition, the user could take the initial generation and start developing a full library based on it. So even heuristic bases on the way MakeProject generates the code would detect that you are ""really"" in MakeProject mode. Sigh... Are you saying that the 'patched' version of MakeProject had many more headers thus read data beyond some threshold which makes rdicts significantly improve the situation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-649813095:912,inherit,inheritance,912,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-649813095,1,['inherit'],['inheritance']
Modifiability,"> > Thanks, this is useful! In a similar vein, perhaps it would also be nice to have a `HasMetricsEnabled` method for the reader itself, especially if this option is inherited when cloning.; > ; > @enirolf I'm not sure that's necessary because one can already get that information with `reader->GetMetrics().IsEnabled()`. Ah yes, you're right! I missed that method in the docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15953#issuecomment-2199345198:166,inherit,inherited,166,https://root.cern,https://github.com/root-project/root/pull/15953#issuecomment-2199345198,1,['inherit'],['inherited']
Modifiability,"> > That will hide the underlying problem where static const class members are not materialized in the jit. It will help cms but make the issue more subtle to debug and properly solve.; > ; > Indeed, the main goal is helping out the experiments' framework. The latest commit boils down the patch to a single line of code, after discussion with @hahnjo . We should open a issue in parallel to keep track of the situation and address it more properly as you suggest.; > ; > For completeness, the current status of the PR, which only changes; > ; > ```; > --- a/core/base/src/TString.cxx; > +++ b/core/base/src/TString.cxx; > @@ -54,6 +54,7 @@ as a TString, construct a TString from it, eg:; > #include ""TVirtualMutex.h""; > #include ""ThreadLocalStorage.h""; > ; > +const Ssiz_t TString::kNPOS;; > ```; > ; > Shows exactly the same numbers as the first attempt (out of class definition). That’s nice we had an undefined class static variable which was initialized and never odr-used… Can we check for more wonders like this one in the codebase?. Further reading: https://stackoverflow.com/questions/55250168/static-data-member-initialization-in-the-class-definition",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860456363:928,variab,variable,928,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860456363,1,['variab'],['variable']
Modifiability,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI?; > ; > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16548#issuecomment-2381281651:1035,config,configuration,1035,https://root.cern,https://github.com/root-project/root/pull/16548#issuecomment-2381281651,1,['config'],['configuration']
Modifiability,"> > The remaining issues would seem to be related to the way Clang is built for our ecosystem relative to how ROOT's internal Clang is built/configured.; > ; > So you're not using the builtin clang then? I missed that so far. No, we're using the builtin Clang for Cling. However, the Clang we're using to build everything is configured in a way that is incompatible with the way ROOT's builtin Clang is built. In order to avoid dependency on a non-native GCC on SLF7 we use a bootstrapped build of Clang with `cxxabi`, `libc++` and the Clang runtime instead of GCC's. > Are there any patches coming out of this issue that ROOT would need to take care of?. Don't think so. We'll revisit the issue when we're more advanced with our migration from UPS to Spack.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1549937644:141,config,configured,141,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1549937644,2,['config'],['configured']
Modifiability,"> > This looks quite good already, but consider removing the helper class.; > > ```c++; > > if (templateParameter); > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > won't have any runtime overhead with any decent compiler, and both `dynamic_cast` and `static_cast` are syntactically correct code paths, so no `if constexpr` required.; > ; > > This looks quite good already, but consider removing the helper class.; > > ```c++; > > if (templateParameter); > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > won't have any runtime overhead with any decent compiler, and both `dynamic_cast` and `static_cast` are syntactically correct code paths, so no `if constexpr` required.; > ; > Thanks for the comments! Before I address the other comments: just one answer to this comment. No, it seems that `dynamic_cast<T*>` is not syntactically correct if T is not polymorphic, e.g. it has not virtual method.; > ; > You can for example see that this code doesn't compile:; > ; > ```c++; > struct A {; > void foo() {}; > };; > ; > struct B : public A {; > void bar() {}; > };; > ; > int main() {; > ; > A* ptr = new B;; > dynamic_cast<B*>(ptr);; > delete ptr;; > }; > ```; > ; > Here is the error:; > ; > ```; > collection_cast.cc: In function ‘int main()’:; > collection_cast.cc:95:5: error: cannot ‘dynamic_cast’ ‘ptr’ (of type ‘struct A*’) to type ‘struct B*’ (source type is not polymorphic); > 95 | dynamic_cast<B*>(ptr);; > | ; > ```; > ; > So we have to find a way to make the decision static_cast/dynamic_cast at compile time. That's correct. I think whether or not you can use it depends on whether you want to use it only for RooFit collections or for other things as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891000129:913,polymorphi,polymorphic,913,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891000129,2,['polymorphi'],['polymorphic']
Modifiability,"> > This seems to be a generic feature and I think it is worth documenting a little more. I do not see a lot of tests. I believe we should add some be it only for documentation purposes of this PR. I'd be interested to see what is the exact transformation happening and why only the definitions are hidden.; > ; > As requested, I have extended the Doxygen documentation. This PR does not include tests, though (to be added in a future PR). IMO that’s a prerequisite for this new feature. We usually do not have new features without a good amount of tests. Delaying them for future seems like a bad idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-529620191:335,extend,extended,335,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-529620191,1,['extend'],['extended']
Modifiability,"> > To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.; > ; > Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change?. Replacing should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2130776949:56,config,config,56,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2130776949,2,['config'],['config']
Modifiability,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory; > ; > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-778312591:17,variab,variable,17,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-778312591,1,['variab'],['variable']
Modifiability,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons.; > ; > Isn't that solved/avoided by having a complete set of explicit comparison operator?. Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1479713682:95,rewrite,rewrite,95,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1479713682,1,['rewrite'],['rewrite']
Modifiability,"> > what is ODR-using kNPOS?; > ; > https://godbolt.org/z/4EYM6nrnn. Thanks Vassil; as you are well aware, I know what ODR-using means. What I'm asking you is where *in ROOT* the code is taking the pointer of `kNPOS` (see below). > > With C++17, they are automatically inline and should not need the definition out-of-line.; > ; > You can make a variable inline which does not need a definition outside of the class but they do not become inline automatically, iiuc. In C++17, `constexpr` is *automatically* `inline`, that's what I'm saying. > I expect if you make it inline to pollute all .o files and .so files. However, we do not seem to have an odr-use of this anywhere so the symbol is elided. Correct. > So when python asks for `TString::kNPOS` we cannot promise that somebody throughout a codebase would have odr-used it - instead, the JIT should be able to force codegen of its symbol and provide it. The problem with the current cppyy is that it would exhaustively enumerate all of the members of a class which triggers that error. It's probably not worth fixing this as it is already fixed by design with the rework of cppyy we are doing... So if I understand this correctly, cppyy will actively break `inline` and `constexpr` variables with C++17? Now that would be really, really bad and IMHO must be fixed immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860674934:346,variab,variable,346,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860674934,2,['variab'],"['variable', 'variables']"
Modifiability,"> >> Should fASTProperty be inside fClassProperty, (and if not why)?; > > How to manage the setting of the property together with the ones in the protoclass (see above)? I am thinking to state transitions.; > ; > How is the state transition for the properties covered by fASTProperty differs from that of the properties covered by fClassProperty?. The difference is in the classes which are not associated to ROOT pcms. For those, fClassProperty is filled via an interpreter lookup.; ; > >> Should fASTProperty be set via TProtoClass? (for consistency); > > This leaves out the classes in the libraries with an empty pcm such as Core, RIO and Thread.; > ; > Sorta, this would also mean a second path to setting (as it is already the case for fProperty and fClassProperty). See above: the worry here is to avoid the lookup, i.e. one of these two paths. > >> Shouldn't this multiple-inheritance flag be set via/in TClass::Property (via ClassInfo_ClassProperty for example)?; > > I think I do not fully understand. ; > ; > This PR introduces a completely different paths/pattern for setting the ASTProperties and all the other properties. Technically the 'nature' of the information is similar to that of stored in ClassInfo_ClassProperty). This question was one of the way to explore why/if the ASTProperties should be treated differently. I now understand. To be checked, I do not have an answer now.; ; > >> Should fProperty and fClassProperty be set through the TClass constructor? (to benefit from the same ""all classes"" speed-up?; > > I do not understand this question :(; > ; > Similarly to the above, this question is asking *if* the fASTProperties is 'better' than the old one then shouldn't the other two be moved towards the same pattern (and the speed-up that this PR introduced would, possibly, benefit the Property and fClassProperty usage too). From this last comments and the above (which may need a few other iterations) I distil that we agree on trying to avoid a 3rd place where proper",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-412846950:881,inherit,inheritance,881,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-412846950,1,['inherit'],['inheritance']
Modifiability,"> @Axel-Naumann I get a segfault when I try to compile `compile_20k.cxx` with gcc + libc++ following the instructions at https://releases.llvm.org/11.0.0/projects/libcxx/docs/UsingLibcxx.html#using-libc-with-gcc, i.e.:; > ; > ```shell; > $ g++ -nostdinc++ -I/usr/include/c++/v1 compile_20k.cxx -nodefaultlib; > s -lc++ -lc++abi -lm -lc -lgcc_s -lgcc -c $(root-config --cflags); > <tons of compile warnings>; > g++: internal compiler error: Segmentation fault signal terminated program cc1plus; > Please submit a full bug report, ...; > ```. I also tried and completely failed already at figuring out all the compiler flags to make this work. I would mark this as ""not feasible"" 😅",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-804154609:360,config,config,360,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-804154609,1,['config'],['config']
Modifiability,"> @Axel-Naumann that seems a clang codegen/jit issue -- I'd rather have it properly fixed in the relevant places of llvm. Am I missing something?. It might be an issue of `RuntimeDyldMachO` not being able to handle more than one text section. On the other hand, one could argue that Clang should not use more than one section when generating code for JITting (which it doesn't know AFAICT). In the end, the ""root cause"" is that `TCling` can catch exceptions for constructors of global variables. This is impossible in compiled C++ programs. So the only component that know about this is Cling (hoisting the values), which is why I implemented the fix where I put it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7100#issuecomment-767654480:485,variab,variables,485,https://root.cern,https://github.com/root-project/root/pull/7100#issuecomment-767654480,1,['variab'],['variables']
Modifiability,"> @HDembinski : can you provide some of the tests that are failing. I 'll be happy to include them in ROOT.; > ; > Without [ae9f8ae](https://github.com/root-project/root/commit/ae9f8ae62553f9150fdee1f8739be6996d539694) I see instead many fit not converging or talking a long time to converge because the initial seed is completly off when not using the numerical gradient. With analytical gradient only the first derivatives are provided, and the seed is computed using only step sizes that oftern are not correct. By using the numerical gradient at the beginning one can compute second derivatives and correct step sizes. Right, I also noticed that this. My tests are in Python, we would have to rewrite these in C++ to add them, but it would certainly be good to add more tests upstream in ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7085#issuecomment-770015914:697,rewrite,rewrite,697,https://root.cern,https://github.com/root-project/root/pull/7085#issuecomment-770015914,1,['rewrite'],['rewrite']
Modifiability,"> @HDembinski thanks! Could you rewrite this branch so we have meaningful commits to merge? That reduces the chances that one of us hits ""Rebase & merge"" instead of ""Squash & merge"" :-). Sure, I assumed that the branch is going to be squashed, sorry.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719692907:32,rewrite,rewrite,32,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719692907,1,['rewrite'],['rewrite']
Modifiability,"> @agheata What do we need to do to solve:; > ; > ```; > Error in <TVirtualGeoConverter::Instance()>: ; > +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++; > It appears that you are missing or having outdated support for VecGeom package. To enable it, configure ROOT with:; > -Dvecgeom -DCMAKE_PREFIX_PATH=<vecgeom_prefix_path>/lib/CMake/VecGeom; > ```. This is the intended behavior for this macro, i.e. it cannot work as intended if the VecGeom converter cannot be instantiated. However, I can make it issue a warning instead, and do raytracing using the unconverted shape.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12315#issuecomment-1430921131:269,config,configure,269,https://root.cern,https://github.com/root-project/root/pull/12315#issuecomment-1430921131,1,['config'],['configure']
Modifiability,"> @andriish I was thinking of a test on the model of those in core/base/test. Hi @couet , I've wrote that . > Will try to adapt the reproducer to it, but it will take some time. But so far I don't have any progress there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6684#issuecomment-723020267:122,adapt,adapt,122,https://root.cern,https://github.com/root-project/root/pull/6684#issuecomment-723020267,1,['adapt'],['adapt']
Modifiability,"> @bellenot I'm not sure what to do about windows, the configure command is empty there?. liblzma.lib is shipped pre-build on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6144#issuecomment-671257120:55,config,configure,55,https://root.cern,https://github.com/root-project/root/pull/6144#issuecomment-671257120,1,['config'],['configure']
Modifiability,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ?. I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11894#issuecomment-1352719582:228,config,configuration,228,https://root.cern,https://github.com/root-project/root/pull/11894#issuecomment-1352719582,1,['config'],['configuration']
Modifiability,"> @bellenot do you know why linux does not see this issue?. Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:; ```; const auto nFolds = clustersInThisFileSize / maxTasksPerFile;; ```; is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583405770:105,variab,variable,105,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583405770,1,['variab'],['variable']
Modifiability,"> @bellenot do you think we should add a check to detect this configuration (`xrootd AND NOT builtin_xrootd AND builtin_openssl`) and emit a hard error? The tricky part is that this can end up being the automatic choice, as I witnessed... As you wish, feel free to create a PR for this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1436560046:62,config,configuration,62,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1436560046,1,['config'],['configuration']
Modifiability,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches.; > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5503#issuecomment-621669526:179,config,configuration,179,https://root.cern,https://github.com/root-project/root/pull/5503#issuecomment-621669526,1,['config'],['configuration']
Modifiability,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`?. Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:; ```c++; #ifndef WIN32; // To avoid ambiguities.; inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }; inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }; #endif; ```; fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked .; I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refacto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1479606106:353,rewrite,rewrite,353,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1479606106,3,['rewrite'],['rewrite']
Modifiability,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here?. They are; ```; 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660); a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658); 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24; 94239712eb17 Fix typos in comments of ExecutionEngine (NFC); b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink; d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target; 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64; 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le; ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34; 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object; 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC.; 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC; 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment.; 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC.; 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64; 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph; 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC; 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend.; ```; `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1864265043:1160,variab,variable,1160,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1864265043,1,['variab'],['variable']
Modifiability,"> @dpiparo, since you wrote this code last year: #13532; > ; > You have any idea why `Py_GetProgramName` was necessary?. I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16785#issuecomment-2446725220:152,evolve,evolve,152,https://root.cern,https://github.com/root-project/root/pull/16785#issuecomment-2446725220,1,['evolve'],['evolve']
Modifiability,"> @ellert It is strange that the uring warning appears only in this unit test. Other unit tests use uring, too, and I would expect all of them to report uring issues consistently. Could you give me the full printout of the failed unit test?. ```; 472/1232 Test #423: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 29.66 sec; Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix; [==========] Running 3 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 3 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&) The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RNTupleSerialize.cxx:1105 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&) Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (8502 ms); [ RUN ] RNTuple.RandomAccess; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&) The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RNTupleSerialize.cxx:1105 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Exper",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1100792435:300,extend,extended,300,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1100792435,1,['extend'],['extended']
Modifiability,"> @etejedor small idea: lets add that it is deprecated from 6.22, so in 6.24 we can put a FATAL.; """"pyroot_experimental is a deprecated flag starting from 6.22.00. To build the new PyROOT, just configure with -Dpyroot=ON."""". As I pointed out in another review (where I might have been wrong, too :-) my understanding is that `pyroot_experimental` was always experimental and never the default one. So IMO we can just remove it. This PR seems to be about `pyroot_legacy`. I assumed (in line with other modules) that `pyroot` and `pyroot_legacy` are mutually exclusive, i.e. `pyroot_legacy` turns on a different module than `pyroot`. That's my naive expectation; I understand that @etejedor sees `pyroot_legacy` as a modifier to `pyroot`. It's sufficient if the ReleaseNotes state the behavior. In any case, this is a legacy flag; we should soon deprecate it, so let's not make it too perfect :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5790#issuecomment-639365294:194,config,configure,194,https://root.cern,https://github.com/root-project/root/pull/5790#issuecomment-639365294,1,['config'],['configure']
Modifiability,> @guitargeek I think one also needs to take care of the option here: `.github/workflows/root-ci-config/buildconfig/global.txt`. Thanks for pointing that out!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14830#issuecomment-1966242280:97,config,config,97,https://root.cern,https://github.com/root-project/root/pull/14830#issuecomment-1966242280,1,['config'],['config']
Modifiability,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?. Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1486534839:431,config,configuration,431,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1486534839,1,['config'],['configuration']
Modifiability,"> @hageboeck; > ; > > LGTM, I would advise squashing on merge.; > ; > Why? These are three independent plugins and three commits.; > It would be easier to patch if I will made failure in one. I see. Makes sense now. When you do a shallow review, it looks all the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5255#issuecomment-606474611:103,plugin,plugins,103,https://root.cern,https://github.com/root-project/root/pull/5255#issuecomment-606474611,1,['plugin'],['plugins']
Modifiability,"> @hahnjo hm that's an interesting clue, but then I still don't fully understand why `RooFit::TestStatistics::RooUnbinnedL` would give a different answer, because it also just calls `RooAbsPdf::extendedTerm`, so it should still get the exact same result... Yes, you are absolutely right, I got carried away by finding the first / one of the differences by comparing x86 to mac13arm. Looking some more why `RooUnbinnedL` gives two different results on the same platform, it is actually closely related: in `RooUnbinnedL::evaluatePartition`, the `extendedTerm` is added to the first partition, if `events.begin_fraction == 0`. With one big partition, this is added at the very end, just before returning. For the sub event sections, it is added to the first partition and the other partitions are later added on top. This exhibits different rounding, which is *triggered* by mac13arm using the FMA instructions and having a different `extendedTerm` than x86. One solution to this would be to add the `extendedTerm` to the last partition, that is if `events.end_fraction == 1`. This fixes `SimBinnedConstrainedTest.SubEventSections` on `mac13arm`, but makes it fail on x86 (didn't investigate why). It also makes `SimBinnedConstrainedTest.EventSections` fail (both on `mac13arm` and x86) - this test looks even worse in terms of floating point arithmetic, since it expects summing up two partitions individually and then adding the result being bitwise identical to summing up the whole range at once. From what I can see, this is only working by chance right now. > Or is the problem that the FMA operation on the different parts of the sum (the likelihood is calculated over multiple event ranges in the test that is failing, which are summed afterwards) has higher rounding errors on non-x86 so that in the end the result indeed differs?. See above; the additional problem is that the (optimizing) compiler will insert FMA operations if it sees fit (and is allowed to do so). So depending on how the c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1545342170:194,extend,extendedTerm,194,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1545342170,3,['extend'],['extendedTerm']
Modifiability,"> @hahnjo which of the variable in core/io were you concerned about?. The ones you commented on, at least these instances felt odd...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11157#issuecomment-1216342041:23,variab,variable,23,https://root.cern,https://github.com/root-project/root/pull/11157#issuecomment-1216342041,1,['variab'],['variable']
Modifiability,"> @hahnjo, is your build incremental? Like, you built the master, then rebuild the PR code? If so, clad won't be rebuilt as any of the other `ExternalProject_Add`s in cmake... Yes, I'm building incrementally, but even removing `interpreter/cling/tools/plugins/clad/clad-prefix/` and forcing a rebuild of Clad doesn't solve the issue. I think ASan found an issue in Clad, but now I need to rebuild with debug symbols in order to locate it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-824675837:252,plugin,plugins,252,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-824675837,1,['plugin'],['plugins']
Modifiability,"> @hahnjo; > ; > > Hm, but you cannot have multiple std::unique_ptr reference the same object on the heap; > ; > I don't see that being the case, neither for master nor for my proposed change. What am I overlooking?; > ; > @xvallspl; > ; > > In this solution we would only have a single std::unique_ptr reference.; > ; > I don't know what you mean by ""reference"", I don't have lvalue references anywhere here. With my proposal, for all ROOT configuration cases we'd have a definition of three members, `fSequentialExecutor`, `fThreadExecutor`, `fProcessExecutor`. Their types differ depending on ROOT's configuration. Note that I'm using the (assumed) feature that having one or many `ROOT::TSequentialExecutor` doesn't make any difference; that might be wrong. Shouldn't make any difference. These ifdefs are for compilation purposes. The execution policies available in these specific cases will ensure we never call a method from the fallbacks to TSequentialExecutor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7039#issuecomment-760128510:441,config,configuration,441,https://root.cern,https://github.com/root-project/root/issues/7039#issuecomment-760128510,2,['config'],['configuration']
Modifiability,"> @hahnjo; > ; > How can I reproduce this build:; > ; > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull; > ; > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750#issuecomment-1953617510:224,config,configurations,224,https://root.cern,https://github.com/root-project/root/pull/14750#issuecomment-1953617510,1,['config'],['configurations']
Modifiability,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17?; > ; > Windows build seems to be ""green"":; > ; > ```; > Error(s) when building project; > 0 Compiler errors; > 51 or more Compiler warnings; > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4945#issuecomment-586127294:95,config,configuration,95,https://root.cern,https://github.com/root-project/root/pull/4945#issuecomment-586127294,2,['config'],['configuration']
Modifiability,"> @olemorud, is it expected that the Jenkins bot doesn't work for the patch release branches?. I don't manage the Jenkins bot, but I'm fairly sure this is a bug as no one has changed the configuration recently. (unless it's always been this way)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681#issuecomment-1514677376:187,config,configuration,187,https://root.cern,https://github.com/root-project/root/pull/12681#issuecomment-1514677376,1,['config'],['configuration']
Modifiability,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds?. Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/567#issuecomment-300789905:118,config,configure,118,https://root.cern,https://github.com/root-project/root/pull/567#issuecomment-300789905,2,['config'],['configure']
Modifiability,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time.; > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds.; > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-); > ; > @Axel-Naumann @oshadura ping?. So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly?. I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-821808128:233,variab,variables,233,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-821808128,1,['variab'],['variables']
Modifiability,"> @vepadulano I've integrated the support for subnames in TChains, see the adapted output at the bottom of the summary above. Looks ok thanks!. > Finally, I would add this to the top of Describe. What do you think?. I think it's the correct place, although my previous doubt still stands: if a tree has 100s of files the output would become very long, although it's a similar problem to the case where the dataset has 1000s of columns that we already discussed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7829#issuecomment-821078554:75,adapt,adapted,75,https://root.cern,https://github.com/root-project/root/issues/7829#issuecomment-821078554,1,['adapt'],['adapted']
Modifiability,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:; > ; > ```; > set(LLVM_VERSION_MAJOR 16) ; > set(LLVM_VERSION_MINOR 0) ; > set(LLVM_VERSION_PATCH 6) ; > set(LLVM_VERSION_SUFFIX ) ; > set(LLVM_PACKAGE_VERSION 2.13.2) ; > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) ; > ```; > ; > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1943802848:598,variab,variable,598,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1943802848,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-946480280:125,config,configure,125,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-946480280,1,['config'],['configure']
Modifiability,"> Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations 😬. I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654965490:243,adapt,adapt,243,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654965490,1,['adapt'],['adapt']
Modifiability,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later.; For instance TFrame object always must be first in list of primitives.; Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162863196:375,inherit,inherits,375,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162863196,1,['inherit'],['inherits']
Modifiability,"> Also some time ago we discuss functionality to resize left area in the SplitApp (where files list is shown). Did you found correspondent components?. Yes and no, the component that you showed me on the demo was a very big and complex component that would have need a complete refactor of a lot of things. https://openui5.hana.ondemand.com/entity/sap.f.tutorial.fiori2/sample/sap.f.tutorial.fiori2.12 . The other solution that i found that would have been custom resize will not fit also because of the Tree table :. https://openui5.hana.ondemand.com/entity/sap.tnt.ToolPage/sample/sap.tnt.sample.ToolPage. So for now i don't think this is possible with a UI5 component, i thinks that we can recode the functionality of the SplitApp using just a Splitter, but it will be complexe for the Responsive",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4646#issuecomment-575607722:278,refactor,refactor,278,https://root.cern,https://github.com/root-project/root/pull/4646#issuecomment-575607722,1,['refactor'],['refactor']
Modifiability,"> Also, before merging, can we rebase and rewrite as 3 commits,. Thanks to you for the review. I rebased as suggested :). (Side note: if you are going ahead with the merge, the corresponding roottest PR https://github.com/root-project/roottest/pull/865 should be merged at the same time, too.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10350#issuecomment-1097905126:42,rewrite,rewrite,42,https://root.cern,https://github.com/root-project/root/pull/10350#issuecomment-1097905126,1,['rewrite'],['rewrite']
Modifiability,"> And oddly enough, the exact inverse operation was introduced by [3900b83](https://github.com/root-project/root/commit/3900b83fda07d9b2e5ba03088939615caef4140a) with log; > ; > ```; > Provide the definition of kDimension before use.; > ```. Yes, we need a *declaration* or the compiler will start complaining (ie it wants to know that the template is instantiated somewhere). However, a non-`inline`able *definition* (and that's the case for all variable definitions until C++17) is always wrong in header files, as can be observed by `#include`ing this header into multiple TUs and then trying to link the resulting object files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10617#issuecomment-1134244376:447,variab,variable,447,https://root.cern,https://github.com/root-project/root/pull/10617#issuecomment-1134244376,1,['variab'],['variable']
Modifiability,"> Are you suggesting we collect everything from all these files - and what is their relative priority?. Yes, `system.rootrc` would contain a line like `import /etc/rootrc.d/*.rootrc` or similar. Relative priority could be resolved by sorting by filename (same as shell wildcard expansion) (e.g. can be used with xxx numeric prefix and such - not perfect, but probably practical enough). Examples:; * In autofs maps one can write `+dir:/etc/auto.master.d`, or; * in apache config [`IncludeOptional conf.d/*.conf`](https://httpd.apache.org/docs/2.4/mod/core.html#include). I mean, one could also modify the `system.rootrc` file in some postinstall/preremove pkg hooks ... but that could be tricky and require more sophisticated logic than desirable in such scripts. But then again, spack, aliBuild, and other *user-space pkg managers* install each package into their own prefix and have no or limited concepts of shared directories across packages ... In the end, I am looking for a good way to *bake-in* some default search paths at install time and from a package that depends on root, ideally without setting up environment variables at all. But having `ROOT_LIBRARY_PATH` would already go a long way for us to be able to resolve some conflicts we have when being forced to use `LD_LIBRARY_PATH`, so I don't want to stall progress on that aspect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-802032258:472,config,config,472,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-802032258,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"> Are your referring to dataframe here or all the tree subsystem?. dataframe. > would this not break usercode where people are further inheriting from the overriding classes?. In RDF, the only public classes that are designed for inheritance are `RActionImpl` and `RDataSource` (they should not be final or have methods marked final, but they do not have a base class either so I don't think this PR touches them). All other classes are in namespace `Detail` or `Internal` and I cannot think of any case where I designed them for multiple levels of inheritance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11285#issuecomment-1231801972:135,inherit,inheriting,135,https://root.cern,https://github.com/root-project/root/pull/11285#issuecomment-1231801972,3,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"> As I said before, we should have just a TArrayL, a TH1L and THnSparseL all based on Long64_t. We could use as typedef TArrayL64 to TArrayL. It does not make any sense to keep a TArrayL based on Long_t that is not portable, using a 32 bit integer on a 32 bit machine and a 64 bit integrated on a 64 bit machine. @Axel-Naumann , @pcanal do you agree with this ?. Note: there are some functions within ROOT that use explicitly Long_t and TArrayL. If the change is performed, then these functions would need to be modified, too. For example: https://github.com/root-project/root/blob/master/graf2d/asimage/src/TASImage.cxx#L2405. But still not sure if any of these could break backward compatibility. Maybe it's easier to just mark TArrayL as deprecated in the documentation, recommending instead TArrayL64??",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1320906798:215,portab,portable,215,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1320906798,1,['portab'],['portable']
Modifiability,"> As a refrence, this is the actual ATLAS analysis: https://arxiv.org/pdf/1609.03920.pdf; > ; > ![Screenshot from 2020-07-31 15-23-20](https://user-images.githubusercontent.com/6951222/89039105-cc2c1f00-d341-11ea-8338-c85fe0ea19de.png); > ; > The reference analysis from the ATLAS Open Data release uses much stronger cuts than in the original analysis to get rid of the QCD multijet background. At least I think this is what happened. Why not extend your plot to e.g. 400 GeV? The original looks a bit better in my opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107#issuecomment-667879118:444,extend,extend,444,https://root.cern,https://github.com/root-project/root/pull/6107#issuecomment-667879118,1,['extend'],['extend']
Modifiability,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?. Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5324#issuecomment-673436556:166,refactor,refactor,166,https://root.cern,https://github.com/root-project/root/pull/5324#issuecomment-673436556,1,['refactor'],['refactor']
Modifiability,"> As to where these come from, my primary suspect would be fused-multiply-add instructions or other optimized floating point instructions that are not fully IEEE-754 compliant. I don't know exactly where, but I also don't think that you want to disable them globally and pay the performance penalty... Yep: At least for the first difference in `testRooAbsL` that I hunted down, mac13arm has a fused instruction in `RooAbsPdf::extendedTerm`. If instead of; https://github.com/root-project/root/blob/b7b8646c53724503b3c603de4cf633bc78270b5f/roofit/roofitcore/src/RooAbsPdf.cxx#L820-L822; I put; ```c++; printf("" expected = %.17g, log = %.17g\n"", expected, std::log(expected));; double test = sumEntries * std::log(expected);; printf("" test = %.17g\n"", test);; test = expected - test;; printf("" test = %.17g\n"", test);; #if 0; double extra = doOffset; ? (expected - sumEntries) - sumEntries * (std::log(expected) - std::log(sumEntries)); : expected - sumEntries * std::log(expected);; #endif; double extra = expected - sumEntries * std::log(expected);; printf("" extra = %.17g\n"", extra);; ```; I get the following output:; ```; test = 2390.5943542960845; test = -1990.5943542960845; extra = -1990.5943542960847; ```; with the corresponding assembly code being (with some annotations; the `fmsub` is at `ca518`); ```; ca4d0: 00 41 60 1e fmov d0, d8; ca4d4: c9 1c 07 94 bl 0x2917f8 <_write+0x2917f8> # likely the call to std::log; ca4d8: 0b 40 60 1e fmov d11, d0; ca4dc: e0 07 00 fd str d0, [sp, #8]; ca4e0: e8 03 00 fd str d8, [sp]; ca4e4: 20 10 00 f0 adrp x0, 0x2d1000 <RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&)+0x6e8>; ca4e8: 00 78 36 91 add x0, x0, #3486; ca4ec: ff 1c 07 94 bl 0x2918e8 <_write+0x2918e8> # print ""expected = %.17g, log = %.17g""; ca4f0: 6c 09 6a 1e fmul d12, d11, d10 # test = sumEntries * std::log(expected); ca4f4: ec 03 00 fd str d12, [sp]; ca4f8: 33 10 00 f0 adrp x19, 0x2d1000 <RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&)+0x6fc>; ca4fc: 73 16 37 91 add x1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1540239366:426,extend,extendedTerm,426,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1540239366,1,['extend'],['extendedTerm']
Modifiability,> Awesome 😃! Does this finally fix the crashes in some build configurations?. Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14312#issuecomment-1939254728:61,config,configurations,61,https://root.cern,https://github.com/root-project/root/pull/14312#issuecomment-1939254728,1,['config'],['configurations']
Modifiability,"> Awesome, @AniqJaved - thanks a lot for all your work!; > ; > * Could you please reduce the number of commits to something like 5 max? I'm happy to. show you how to rewrite the commit history.; > ; > * `.github/workflows/root-ci-config/__pycache__/build_utils.cpython-39.pyc`, `patch.txt`, and `.github/workflows/root-ci-config/test_file.py` won't be needed in the repo, please don't add them.; > ; > * `.github/workflows/test-coverage.yml` needs only one platform iiuc? Why does it have e.g. `build-macos`?; > ; > ; > I will have a closer look at the code after we chat tomorrow :-). Thank you for your help along the way @Axel-Naumann 💯 🙌,; I have made the proposed changes relating to the files, but I am not sure how to decrease the number of commits, would love to have your guidance on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13394#issuecomment-1665533318:166,rewrite,rewrite,166,https://root.cern,https://github.com/root-project/root/pull/13394#issuecomment-1665533318,3,"['config', 'rewrite']","['config', 'rewrite']"
Modifiability,"> BTW can you define what a ""Slot"" is somewhere in the RDataFrame documentation? Sorry if I just missed it. ctrl-f'ing it, it's said in a bunch of places but never ""officially"", we might want to fix that.; the best description is that slot is an integer that will take a different value, 0 to nThreads - 1, for each thread of execution. It is meant to be used as a helper to write thread-safe transformations and actions (e.g. you could write a `Foreach` function that hammers a different output variable per slot, making it inherently thread-safe).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2291#issuecomment-402814118:496,variab,variable,496,https://root.cern,https://github.com/root-project/root/pull/2291#issuecomment-402814118,1,['variab'],['variable']
Modifiability,"> Because TVector3 has some properties that are better in some cases than GenVector. Which properties are you referring to ? ; The only think missing is inheritance of TObject and a virtual destructor. This can cause some slowdown in TVector3 when creating many temporary vector objects. ; You should be able to use the Genvector as a TVector3. If some functionality is missing, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8558#issuecomment-877038888:153,inherit,inheritance,153,https://root.cern,https://github.com/root-project/root/pull/8558#issuecomment-877038888,1,['inherit'],['inheritance']
Modifiability,"> Build failed on ROOT-fedora29/python3.; > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build; > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29).; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console).; > ; > ### Errors:; > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):; > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5496#issuecomment-621306656:731,adapt,adapt,731,https://root.cern,https://github.com/root-project/root/pull/5496#issuecomment-621306656,1,['adapt'],['adapt']
Modifiability,> Build failed on mac1014/cxx17.; > [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71275/console).; > ; > ### Errors:; > * CMake Error at cmake/modules/RootBuildOptions.cmake:396 (message):; > * CMake Error at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):; > ; > ### Warnings:; > * CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message):. Fails because it configures more than once (don't know why) and if the python executable changes we need to specify also the other two flags PYTHON_LIBRARY and PYTHON_INCLUDE_DIR. Manual build needed on this machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547601898:497,config,configures,497,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547601898,1,['config'],['configures']
Modifiability,"> But the builtin -I should always have higher ""priority"" (come first) - that seems like a bug?. It would be nice to reproduce such error, but I do not have such configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1478008919:162,config,configuration,162,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1478008919,1,['config'],['configuration']
Modifiability,> By improve the collection you mean changing all while loops to range fors?. Not quite (as this might be a good thing for the code refactoring tool to do). . I mean to enable something like:. ```; for (auto item : ContaineeIs<TBaseClass*>(GetListOfBases())); if (auto base = item->GetClassPointer()); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/908#issuecomment-326024259:132,refactor,refactoring,132,https://root.cern,https://github.com/root-project/root/pull/908#issuecomment-326024259,1,['refactor'],['refactoring']
Modifiability,"> By the way, why do we need to specify `DOXYGEN_EXECUTABLE` ? If a valid oxygen version is in `$PATH` we should not be obliged to specify this variable. Thanks, good idea. I just added a commit to support that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2075096119:144,variab,variable,144,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2075096119,1,['variab'],['variable']
Modifiability,"> Can I just run the test macros and take the results as new reference values or do they need to be calculated on a specific system with specific configurations?. You should be able to run it on almost any system. If the results changed across systems, we would constantly see a lot of failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-572457405:146,config,configurations,146,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-572457405,1,['config'],['configurations']
Modifiability,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT?. Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3843#issuecomment-495124333:140,variab,variables,140,https://root.cern,https://github.com/root-project/root/pull/3843#issuecomment-495124333,2,"['config', 'variab']","['configures', 'variables']"
Modifiability,"> Can you come up with a reproducer for what you see?. @Axel-Naumann : The following simple test case; ```; #include <TROOT.h>; int main(int argc, char** argv) {; gROOT->GetInterpreter();; return 0;; }; ```; compiled via; `c++ -o test -O0 -ggdb `root-config --libs` -I`root-config --incdir` -std=c++17 test.cpp /usr/lib64/libgandiva.so`; yields the error for me. I have a system installation of arrow with gandiva. If I remove the libgandiva.so from the command line, it works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-566586924:251,config,config,251,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-566586924,2,['config'],['config']
Modifiability,"> Can you elaborate a bit: what is the purpose of this change or the benefits/changes to the code using views?. Sure, `RNTupleGlobalRange` and `RNTupleClusterRange` before this PR are defined as forward ranges. So they can basically be used in a range-for loop and for STL algorithms, but they will use slower versions in some cases, because of the less capable iterator category. A good example is that `std::distance(globalRange.begin(), globalRange.end())` unnecessarily has linear complexity, although it could easility be constant. This effects us a lot as well for the parallel STL. E.g. spanning a parallel index space:; ```c++; std::for_each(std::execution::par, globalRange.begin(), globalRange.end(), [](NTupleSize_t i) { ... });; ```; This has unnecessary complex setup time, because partitioning the index space has linear complexity due to the iterator category. The support for C++20 ranges is orthogonal to these usuability improvements, but should fall out for free. Allowing the refactored types to be used with ranges is just a cherry-on-top to allow the client using the RNTuple API to combine it with a larger set of the C++ standard library. So this changeset is mainly about broadening the usability of these types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12140#issuecomment-1410407239:996,refactor,refactored,996,https://root.cern,https://github.com/root-project/root/pull/12140#issuecomment-1410407239,1,['refactor'],['refactored']
Modifiability,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`?. Sure. 6.16:; ```; -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic; ```; 6.24/06:; ```; root-config --libs; -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic; ```. > Are you building against ROOT v6.16 in the above example?. In my previous message it was against 6.24/06 built with the same gcc:; ```; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF; ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9422#issuecomment-992342989:56,config,config,56,https://root.cern,https://github.com/root-project/root/issues/9422#issuecomment-992342989,2,['config'],['config']
Modifiability,"> Changes LGTM, but Windows isn't happy. I suppose this is because of the `static` variable... @bellenot can you help here?. I'll take a look",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14731#issuecomment-1947883935:83,variab,variable,83,https://root.cern,https://github.com/root-project/root/pull/14731#issuecomment-1947883935,1,['variab'],['variable']
Modifiability,"> Changes ok. Thanks! From my side, the only thing left is improving the documentation of Laplacian, try copy-pasting from Gradient and adapting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15100#issuecomment-2054046449:136,adapt,adapting,136,https://root.cern,https://github.com/root-project/root/pull/15100#issuecomment-2054046449,1,['adapt'],['adapting']
Modifiability,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`?. So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is; ```c++; class Empty {};; class Inner : private Empty {; int i;; };; class Outer1 {; Inner i;; };; class Outer2 : private Empty {; Inner i;; };. static_assert(sizeof(Outer1) == 4);; static_assert(sizeof(Outer2) == 8);; ```; (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534#issuecomment-2133063596:105,inherit,inheritance,105,https://root.cern,https://github.com/root-project/root/issues/15534#issuecomment-2133063596,3,['inherit'],"['inherit', 'inheritance']"
Modifiability,"> Ctrl Right move cursor to next word, as in the linux terminal; > Ctrl Left move to previous. This was already implemented in PR #9753. :slightly_smiling_face: . > Ctrl Backspace delete previous. Supporting this portably is not trivial (see https://unix.stackexchange.com/a/264871). As a workaround, ESC Backspace (or Alt + Backspace) can be used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10091#issuecomment-1064285383:213,portab,portably,213,https://root.cern,https://github.com/root-project/root/pull/10091#issuecomment-1064285383,1,['portab'],['portably']
Modifiability,"> Do we like the name of the function?. Yes, I'm pretty sure all physicists understand ""schema"" as ""the structure of the dataset/TTree"" . > Do we like that it returns a string rather than printing to stdout?. Yes, why not? It's more flexible than a printout. > Should we add a header to the table?. Yes, definitely. > Should we add any other information (see TTree::Print)?. Probably. About the rest:. * Friend branches: I agree with Stefan the should not be treated specially, they are just more columns.; * Total number of entries: does not generalize to datasources, it might not be cheap in general. However there is no reason why we cannot print a datasource-dependant heading, with a more complete heading for TTree/TChain and less info for other datasources.; * Size in memory of the TTree and the columns: that's not a thing, TTree knows at most the compressed size of branches; * null values are not a thing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-801373555:233,flexible,flexible,233,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-801373555,1,['flexible'],['flexible']
Modifiability,"> Do you have the asan report available?. I can re-generate it :smile: ; ```; =================================================================; ==4081163==ERROR: AddressSanitizer: use-after-poison on address 0x62100013a218 at pc 0x7fa3a1d48622 bp 0x7ffc1d2cc110 sp 0x7ffc1d2cc100; READ of size 8 at 0x62100013a218 thread T0; #0 0x7fa3a1d48621 in clang::LookupResult::configure() (/home/jhahnfel/ROOT/build-asan/lib/libCling.so+0xae72621); #1 0x7fa39cedfa0c in clad::plugin::CladPlugin::ShouldProcessDecl(clang::DeclGroupRef) (/home/jhahnfel/ROOT/build-asan/lib/libCling.so+0x6009a0c). 0x62100013a218 is located 1304 bytes inside of 4096-byte region [0x621000139d00,0x62100013ad00); allocated by thread T0 here:; #0 0x7fa3b6ba0ba8 in __interceptor_malloc (/lib64/libasan.so.5+0xefba8); #1 0x7fa39cfca34e in llvm::safe_malloc(unsigned long) (/home/jhahnfel/ROOT/build-asan/lib/libCling.so+0x60f434e); #2 0x7fa39f9c1d4e in llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul>::Allocate(unsigned long, unsigned long) [clone .constprop.3114] (/home/jhahnfel/ROOT/build-asan/lib/libCling.so+0x8aebd4e); #3 0x7fa39fbd2245 in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) (/home/jhahnfel/ROOT/build-asan/lib/libCling.so+0x8cfc245); #4 0x7fa39e60ef42 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) (/home/jhahnfel/ROOT/build-asan/lib/libCling.so+0x7738f42); #5 0x7fa3acfbd1fb in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) (/home/jhahnfel/ROOT/build-asan/lib/libCling.so+0x160e71fb); #6 0x7fa3acfc5f6b in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::Direc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7968#issuecomment-829238105:368,config,configure,368,https://root.cern,https://github.com/root-project/root/issues/7968#issuecomment-829238105,2,"['config', 'plugin']","['configure', 'plugin']"
Modifiability,> Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...). @ponyisi yes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8390#issuecomment-859622020:56,extend,extended,56,https://root.cern,https://github.com/root-project/root/pull/8390#issuecomment-859622020,1,['extend'],['extended']
Modifiability,"> Does `/usr/local/bin/root-config --etcdir` state the right thing?. Yes, it states `/usr/local/etc/root`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435#issuecomment-868308867:28,config,config,28,https://root.cern,https://github.com/root-project/root/issues/8435#issuecomment-868308867,1,['config'],['config']
Modifiability,"> Does it mean that they are optional requirement?. Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2051098946:456,config,configuration,456,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2051098946,2,['config'],['configuration']
Modifiability,"> Does the crash go away if you're extending the relevant if statement like this?. Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2371039171:35,extend,extending,35,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2371039171,1,['extend'],['extending']
Modifiability,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-790698646:520,variab,variable,520,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-790698646,1,['variab'],['variable']
Modifiability,"> Evolve == break for current users. Not _necessarily_, right?. It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..?. P.S.; just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856227664:2,Evolve,Evolve,2,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856227664,1,['Evolve'],['Evolve']
Modifiability,"> Example:; > ; > ```; > #include <TROOT.h>; > int main(int argc, char** argv) {; > gROOT->GetInterpreter();; > return 0;; > }; > ```; > ; > with the following command (using a system-installation of apache-arrow width gandiva):; > ; > ```; > c++ -o test -O0 -ggdb `root-config --libs` -I`root-config --incdir` -std=c++17 test.cpp /usr/lib64/libgandiva.so.14.1.0 && ./test; > ```; > ; > will show the `...please hide them or dlopen() them after the call to TROOT::InitInterpreter()` error.; > ; > The problem with the opencl runtime is analogous. So, would the error still be there if you change the example to something like:; ```; #include <TROOT.h>; static auto force_init = gROOT->GetInterpreter();; int main(int argc, char** argv) {; return 0;; }; ```; why is `/usr/lib64/libgandiva.so.14.1.0 ` initialized/dlopened first?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564004143:271,config,config,271,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564004143,2,['config'],['config']
Modifiability,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14444#issuecomment-1914297511:2,Extend,Extending,2,https://root.cern,https://github.com/root-project/root/pull/14444#issuecomment-1914297511,1,['Extend'],['Extending']
Modifiability,> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). This is probably the best albeit there is yet another alternative:; ```; template <typename T = char *>; T* GetObject();; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14444#issuecomment-1915731952:2,Extend,Extending,2,https://root.cern,https://github.com/root-project/root/pull/14444#issuecomment-1915731952,1,['Extend'],['Extending']
Modifiability,"> Finally, `.rootrc` entries replace `system.rootrc` entries. So any package level configuration would be gone the moment, that the user sets `Unix.*.Root.DynamicPath`. Just for my curiosity, if it would be possible (and if not would be desired to have):. Does the file-based rootrc-System already have the primitives (like an ""include/merge other rootrc file"" of sorts) to construct something like `/etc/rootrc.d/<pkgname>.rootrc` where each package could store its own rootrc file with [ap,pre]pend semantics for a search path entry like `Root.DynamicPath`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-801979016:83,config,configuration,83,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-801979016,1,['config'],['configuration']
Modifiability,"> For future reference, the ugly use of environment variables instead of CMake option for MPI options in the main ROOT::Minuit2 CMakeLists.txt needs to be fixed, and also could be moved to FindMPI instead of the current hardcoded method. Yes, this is one of the reasons why I think that your additions to the build system of Minuit2 will fit better in the main CMakeLists.txt of Minuit2 itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689#issuecomment-369575191:52,variab,variables,52,https://root.cern,https://github.com/root-project/root/pull/1689#issuecomment-369575191,1,['variab'],['variables']
Modifiability,"> For the `TObject` documentation I would add something along the line of:; > ; > ```; > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly.; > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2151703325:644,maintainab,maintainable,644,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2151703325,1,['maintainab'],['maintainable']
Modifiability,"> Have you returned the check, when 'size' variable is greater than 'maxsize', in the new version?. Yes, here is it: https://github.com/root-project/root/commit/e550ca8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-776499211:43,variab,variable,43,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-776499211,1,['variab'],['variable']
Modifiability,"> Having ROOT libraries in <libdir>/ROOT/ isn't an option for Debian?. This is what I currently do for my private builds, but this requires changing the linker's search path, which isn't allowed in official Debian packages as it breaks Debian's tools to automatically detect dependencies (the policy specifies that libraries in `<libdir>/<something>/` are private libraries (e.g. plugins), so dependency checking is turned off on purpose). > The main issue is backwards compatibility - all those Makefiles that just link against -lCore. Right, maintaining backwards compatibility is probably a necessity for such a change. Maybe one can add a (by default enabled) option to symlink from the old libraries to the new ones? I.e. `libCore.so -> libROOTCore.so`? For the average ROOT user this won't make any difference, and in Debian we can disable the option (I don't expect anyone running ROOT software that is still written with Makefiles instead of CMake using Debian system packages). This could be achieved in CMake by adding a new option to the `ROOT_STANDARD_LIBRARY_PACKAGE` marco, looking something like:; ```cmake; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTGui; HEADERS; ...; SOURCES; ...; DICTIONARY_OPTIONS; ...; DEPENDENCIES; ...; BACKWARDS_COMPAT; Gui; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10985#issuecomment-1188985620:380,plugin,plugins,380,https://root.cern,https://github.com/root-project/root/issues/10985#issuecomment-1188985620,1,['plugin'],['plugins']
Modifiability,"> Here are more details from my local builds:. They feel like the opaque typedef (`Double32_t`) are (at the very least partially) no longer opaque (See in particular the ""new"" duplicate definitions complaint from the linker). In https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160, I see:; ```; TemplateDecl *TD = T->getTemplateName().getAsTemplateDecl();; ...; printTemplateArgumentList(OS, T->template_arguments(), Policy,; TD->getTemplateParameters());; ```; From the text in the long discussion, I am guessing that `TD` is now used to inform the printer on how to spell the template argument. I would bet that `TD` has neither the opaque typedef kept nor the default argument being made explicit (all done by `Utils/AST.cpp` and part of T (if I read correctly)). This would explain both the sudden need to request the default template argument and the error related to `Double32_t`. One solution might be to remove those 2 patches and instead to deal with the suffixes in `Utils/AST.cpp`. [Reminder the spelling of the normalized name is essential for backward compatibility; if the name must change to be more accurate, we might need to extend TClass/TStreamerInfo to smooth out the conversion. Testing this is ""easy"", create a file with v6.28/00 contains just an object with the name-that-will-changed and try to read it with a ROOT with the new name]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136445744:1175,extend,extend,1175,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136445744,1,['extend'],['extend']
Modifiability,"> Here is an example from my code. This is the snippet I use to retrieve the workspace (download here: [example workspace](https://www.physik.uzh.ch/~davide/exampleWorkspace.root)) after the fit and plot the pdf components stacked onto each other.; > ; > ```; > fw=r.TFile(""exampleWorkspace.root""); > ws=fw.Get(""workspaceDataFitForPlotTrig0""); > ; > ; > #retrieve model and dataset ; > B_plus_M=ws.var(""B_plus_DTFM_M_zero""); > data=ws.data(""dataTrig0""); > modelTot = ws.pdf(""modelTot0""); > ; > ; > B_plus_M.setBins(80); ; > frame = B_plus_M.frame(); > data.plotOn(frame); > modelTot.plotOn(frame, r.RooFit.LineColor(r.kRed)); > ; > #retrieve model variables; > modelTot.getVariables(); > ; > # here is the list of variables I want to plot; > for i, v in enumerate(modelTot.getVariables()): ; > if not v.isConstant() and v.GetName() != B_plus_M.GetName():; > print(v.GetTitle()); > v.SetName(v.GetTitle()); > ```; > ; > This will output the var titles I gave to the variables when I defined them, in LaTeX formatting and set them as var names for plotting:; > ; > ```; > N_{comb.}; > f_{0#gamma}; > f_{1#gamma}; > N_{charm}/N_{strange}; > N_{#pi}/N_{K}; > #lambda; > #Delta_{#mu}; > N_{prc}; > N_{sig}; > s_{#sigma}; > ```; > ; > Now if I continue with:; > ; > ```; > ; > trigCatPrc = ""Trig0Phot-1"";; > trigCatS = ""Trig0"";; > ; > modelTot.plotOn(frame, r.RooFit.Name(""Piee""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateRarePrc""+trigCatPrc+"",templateCharmPrc""+trigCatPrc+"",modelPieeTot""+trigCatS), ; > r.RooFit.FillColor(93), r.RooFit.LineColor(93), r.RooFit.DrawOption(""F""));; > modelTot.plotOn(frame, r.RooFit.Name(""RarePrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc+"",templateRarePrc""+trigCatPrc), ; > r.RooFit.FillColor(95), r.RooFit.LineColor(95), r.RooFit.DrawOption(""F""));; > modelTot.plotOn(frame, r.RooFit.Name(""CharmPrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc), ; > r.RooFit.FillColor(94), r.RooFit.LineColor(94)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-787116795:648,variab,variables,648,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-787116795,3,['variab'],['variables']
Modifiability,"> Hi @eguiraud and @hageboeck, thanks a lot for your reviews!; > ; > I implemented almost everything you requested in the new fixup commits, except for two things:; > ; > 1. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#issuecomment-891036930): I didn't generalize TRangeDynCast and TRangeStaticCast. They are tied to TCollection and fulfill a different purpose because of that. They are also part of `ROOT::Internal`, while my new functions are supposed to be also used by the RooFit users. I would suggest we leave them as they are, but if you think the new `static_range_cast` and `dynamic_range_cast` are useful for everyone we can move the new file if you want. But where?. I was already expecting that it would be difficult to adapt those, but there will be ways to adapt them. I think it would be *better* if there's one good solution for all, but you have to decide how much time you want to invest. > 2. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#discussion_r680892053): I didn't add the `assert(dynamic_cast)` to the `static_range_cast` because the performance penalty it introduces in debug mode is not probably not expected by non-RooFit developers. There's not many loops out there in the world that will depend on this. If somebody uses it, they might be glad to have the extra safety. About the performance:; - When you run from the interpreter, you don't care about the performance of your loop as much.; - When you compile, you probably know what `NDEBUG` is.; - When you ACLIC-compile, I would have hoped that you get an automatic `NDEBUG` in release builds of ROOT, or when you `+O` a file. You don't, unfortunately. My preferred solution would have been to fix that and use the asserts, but it's your project now. > 3. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (com",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891155267:822,adapt,adapt,822,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891155267,2,['adapt'],['adapt']
Modifiability,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits.; > ; > I addressed all of your comments, but for one comment I'm not sure if I made the right choice.; > ; > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice?. The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > ; > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself.; Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class?. NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344#issuecomment-792681797:294,variab,variables,294,https://root.cern,https://github.com/root-project/root/pull/7344#issuecomment-792681797,1,['variab'],['variables']
Modifiability,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11090#issuecomment-1202401228:311,variab,variable,311,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228,1,['variab'],['variable']
Modifiability,"> Hi Stephan, thanks for taking a look!; > ; > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool.; > ; > Do you happen to know other locations where things are cached based on the RooDataSet?; No, sorry. You can only really now with a static code analyser or clang plugin.; > ; > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter.; > ; I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right?; > ; Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8324#issuecomment-859719866:846,plugin,plugin,846,https://root.cern,https://github.com/root-project/root/pull/8324#issuecomment-859719866,1,['plugin'],['plugin']
Modifiability,"> Hi,; > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-618259224:125,config,configuration,125,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-618259224,1,['config'],['configuration']
Modifiability,> How about a `~/.cling.d` folder where we glob all files and execute?; ; Sounds good to me too. I will enumerate `.C` files in `.cling.d/` (if dir exists) with `llvm::vfs::directory_iterator` like [CompilerInstance.cpp](https://clang.llvm.org/doxygen/CompilerInstance_8cpp_source.html#l00248). So the enumeration does not guarantee specific orderings. Search order of `.cling.d/` is still; 1. ${CLING_HOME} envvar; 2. ${XDG_CONFIG_HOME}/cling/; 3. ${HOME}/.config/cling/; 4. ${HOME}/. Does that look good to you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1256155643:458,config,config,458,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1256155643,1,['config'],['config']
Modifiability,"> How does it mess things up?. IIUC, if I have `class MyClass{} m;` on the prompt, currently we will recognize the `class` token and we will ask clang to compile it as is. With the new PR we will be playing with the lookup rules (hideDecl and more) to make sure if we unload it in future it would rewire correctly the declarations and the definitions.; > ; > > with no tests; > ; > As I said that won't be the case.; > ; > > to improve the less used feature of unloading; > ; > I don't understand this part - do you mean unloading isn't used a lot? That's totally incorrect - it's the major missing feature of cling for physicists. Not even talking about all of cling's notebook users here. I proposed to enable it for physicists within ROOT. I am opposed to enabling it by default for cling standalone with no usage experience gathered neither through the physicists nor via the notebook users. . > ; > > make this feature configurable; > ; > Do you really believe we need a flag beyond `.rawInput`? Could you argue for this, please? Too many options kill usability... As I said, I am not sure if the implementation does not force the regular person (not using unloading) to pay for something he does not use. Secondly, while I understand the test will come at some point in future, I cannot judge on the implementation without any test. Those are two points which we should always consider when enabling something of this size by default for cling standalone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532596881:924,config,configurable,924,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532596881,1,['config'],['configurable']
Modifiability,"> How one can avoid it?. Finally I just use dummy variable like ` ClassName(*((__void__)arena))`. ; Not nice, but seems to be work. Now v7 histogram works with both kinds of constructor signature",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5133#issuecomment-598208018:50,variab,variable,50,https://root.cern,https://github.com/root-project/root/pull/5133#issuecomment-598208018,1,['variab'],['variable']
Modifiability,"> However, it will not solve the same problem at deployment time. You assume that build and deployment have a similar settings; not sure that's the case. As another argument for specifying this during ROOT's build, we also specify `LD_LIBRARY_PATH` and select which `root.exe` to run during the `hsimple` check. How is `ROOT_INCLUDE_PATH` different from that?. > I am not sure if we have that information in the right places in the build system. We can do it on a case by case basis. We know which ""builtins"" we depend on wrt runtime includes, and we know where they are during configure / build time. For Vc it's `Vc_INCLUDE_DIR`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1025642794:578,config,configure,578,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1025642794,1,['config'],['configure']
Modifiability,"> I ... can help with it from TBB side. Awesome, thanks, much appreciated!. We need to offer `find_package`, and - if no external package is found or if configured to use builtin tbb - pull tbb from somewhere and build it as part of ROOT (""builtin""). @oshadura will correct me / add to this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7063#issuecomment-818748054:153,config,configured,153,https://root.cern,https://github.com/root-project/root/issues/7063#issuecomment-818748054,1,['config'],['configured']
Modifiability,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray!; > ; > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171#issuecomment-524868233:1490,refactor,refactoring,1490,https://root.cern,https://github.com/root-project/root/pull/4171#issuecomment-524868233,2,"['flexible', 'refactor']","['flexible', 'refactoring']"
Modifiability,"> I am convinced that it should. If you want to oversubscribe then that env var is your only chance. Since the `cgroup` limit will actually prevent the process from using more than the configured amount, I agree that you are right. Using the env var, is a way to tell `ROOT` to use more threads than the effective number of core it will be allowed to use (i.e. oversubscribing).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1609817738:185,config,configured,185,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1609817738,1,['config'],['configured']
Modifiability,"> I am not in favour of this solution.; I don't think is bringing any advantages, we were using a plugin manager that was based on the interpreter and there were no direct dependency on fftw3.; Now you require people to directly install fftw3 and they would need to set also the include path. It is an over complication for the users. You are right, when building ROOT with `fftw3=ON`, it brings zero advantages but only makes if more fragile because `fftw3.h` needs to be in the path. *Edit*: it just came to my mind that this might actually be a rare case. Right now, `builtin_fftw3*` is always `OFF` by default, also on cfmfs. So the `fftw3.h` header was already found in the include path at build time, which means it's probably found when running ROOT too. However, in case where ROOT is built with `fftw3=OFF`, this makes the difference between the `RooFFTConvPdf` even working or not. And this case is relevant because we release the ROOT binaries like this. Since we need to make sure that FFTs work in RooFit when people install ROOT on their laptops with the binaries, I think a fix like this is necessary. Maybe as a compromise, I could apply the these changes only in case where `fftw3=OFF` by using preprocessor macros? The downside of this would be two different code branches thought.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14174#issuecomment-1838939107:98,plugin,plugin,98,https://root.cern,https://github.com/root-project/root/pull/14174#issuecomment-1838939107,1,['plugin'],['plugin']
Modifiability,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system.; > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14747#issuecomment-1985342111:919,inherit,inheritance,919,https://root.cern,https://github.com/root-project/root/pull/14747#issuecomment-1985342111,1,['inherit'],['inheritance']
Modifiability,"> I am not sure using `RooAbsReal::Ref` is a good idea, it might confuse some users. Why not adding an extra constructors taking double for some of these pdf's In addition I would make this only for the pdf variables that make sense to use numbers, and this should not be the `x` of a Gaussian or Landau. Okay, I have now kept also all the original constructors now, I hope this can prevent any confusion. For consistency, I think in the new constructors with the `RooAbsReal::Ref`s, all of the variables should have it, including the `x` variables. There can be cases where the observables are constant global observables, and also it's still convenient for quick prototyping, debugging and testing if numbers can be passed for the observables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12036#issuecomment-1384262553:207,variab,variables,207,https://root.cern,https://github.com/root-project/root/pull/12036#issuecomment-1384262553,3,['variab'],['variables']
Modifiability,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/583#issuecomment-302389835:270,variab,variable,270,https://root.cern,https://github.com/root-project/root/pull/583#issuecomment-302389835,2,['variab'],['variable']
Modifiability,"> I am using C++23,. We do not yet support C++23 as we are still using llvm 15 for the interpreter. But even in C++23, the ROOT build should have configured itself to NOT actually use `ROOT/span.hxx` (i.e. see the beginning of the file):; ```; #if __cplusplus >= 202002; # if __has_include(<span>); # include <span>; # endif; #endif. #if !defined(__cpp_lib_span); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595272962:146,config,configured,146,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595272962,1,['config'],['configured']
Modifiability,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/583#issuecomment-302392420:158,variab,variable,158,https://root.cern,https://github.com/root-project/root/pull/583#issuecomment-302392420,2,['variab'],['variable']
Modifiability,"> I checked your code... you did already; > ; > I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet?. I'm investigating, but since I work on Windows and ssh on Linux, it's difficult to disconnect it from internet ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872038851:176,variab,variable,176,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872038851,2,['variab'],['variable']
Modifiability,"> I do not understand why you have to have your FindROOT.cmake. We do provide ROOTConfig.cmake and this should be sufficient. If it is not, then this is a bug. **Be as native CMake as possible and of not try to complicate things by building additional interfaces.**. What we do in the `FindROOT.cmake` is as native and cmake idiomatic as it gets. [find_package](https://cmake.org/cmake/help/v3.0/command/find_package.html) has two modes. The one used here is the config mode which is intended to be used to find and include your package config file (`ROOTConfig.cmake`). > The functions like `ROOT_LINKER_LIBRARY` where intended for internal consumption. Does that mean you will not support usage in external projects? Or do you consider it now to support? If not, I suggest putting it in a different module, so its clearer which macros are meant to be for public use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916#issuecomment-326541844:463,config,config,463,https://root.cern,https://github.com/root-project/root/pull/916#issuecomment-326541844,2,['config'],['config']
Modifiability,"> I don't agree with these changes for two reasons:; > ; > * The default is `cuda=OFF`, and if the user passes `cuda=ON` explicitly, it can be annoying if it is switched off at compile time because for example some environment variables were missing. We had complaints about this in the past. That's why I suggested to not have this fallback for features that are by default `OFF`. See also: [[cmake] Some improvements related to feature detection #14834](https://github.com/root-project/root/pull/14834).; > ; > * I would argue that it's not correct to set `cuda=ON` if `all=ON`. Enabling cuda disables TMVA CPU, so clearly you don't get `all` features but different ones. That's why many distros like Arch Linux have a separate `root` and `root-cuda` package. Unless this is fixed, I think the right solution to the problem is to not switch cuda on if `all=ON`. Indeed, I was wrong with the second bullet point here. I remembered it wrongly because when building with `tmva-gpu`, some tutorials use the GPU backend of TMVA by default. This first argument still holds though!. I made an alternative suggestion: https://github.com/root-project/root/pull/15155. This one also fixes the problem that the `cuda` flag is checked before it is set. It simplifies the logic also a bit: the `cuda` flag is not determining anymore if CMake will look for the CUDA language and add it to the project. It only determines if ROOTs CUDA sources are actually built.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15149#issuecomment-2039816688:227,variab,variables,227,https://root.cern,https://github.com/root-project/root/pull/15149#issuecomment-2039816688,1,['variab'],['variables']
Modifiability,"> I don't agree with these changes for two reasons:; > ; > * The default is `cuda=OFF`, and if the user passes `cuda=ON` explicitly, it can be annoying if it is switched off at compile time because for example some environment variables were missing. We had complaints about this in the past. That's why I suggested to not have this fallback for features that are by default `OFF`. See also: [[cmake] Some improvements related to feature detection #14834](https://github.com/root-project/root/pull/14834).; > ; > * I would argue that it's not correct to set `cuda=ON` if `all=ON`. Enabling cuda disables TMVA CPU, so clearly you don't get `all` features but different ones. That's why many distros like Arch Linux have a separate `root` and `root-cuda` package. Unless this is fixed, I think the right solution to the problem is to not switch cuda on if `all=ON`. This sounds like a perfectly legitimate solution",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15149#issuecomment-2039583205:227,variab,variables,227,https://root.cern,https://github.com/root-project/root/pull/15149#issuecomment-2039583205,1,['variab'],['variables']
Modifiability,"> I don't know if I'm misinterpreting something, but I noticed something very interesting: For this compilation error, clang gives a note message:; > ; > ```; > /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; > ```; > ; > Is this enum type `EProperty` really only range from 0 - 63? clangd told me that the definition of first case `kIsClass` is from https://github.com/root-project/root/blob/master/core/meta/inc/TDictionary.h#L64 , but if I try the below cases, it told me that _this enum type `EProperty`_ from https://github.com/root-project/root/blob/master/core/cont/inc/TVirtualCollectionProxy.h#L49 ???; > ; > That may said, the compiler got confused about these two types that have same name?. That's interesting: `TGenCollectionStreamer` inherits from `TVirtualCollectionProxy` (via `TGenCollectionProxy`), so that `EProperty` is indeed ""closer"" than `::EProperty`. > > ""case value is not a constant expression"".; > ; > Humm ... either I don't understand the meaning or Clang is 'wrong' on this part. Both; > ; > ```; > EProperty(kIsPointer | kBIT_ISSTRING); > and; > kIsPointer | kBIT_ISSTRING; > ```; > ; > are ""constant"" (i.e calculatable at compile time). As discussed post-commit in https://reviews.llvm.org/D130058, the check is indeed questionable in a few corner cases. But that shouldn't stop us from finding a portable solution that avoids the problems altogether. > > ""note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type""; > > That may said, the compiler got confused about these two types that have same name?; > ; > That is likely the cause of the complaints albeit it is the developer (and possibly Coverity too) that got confused here as it was meant to be written as:; > ; > ```; > case ::EProperty(kBIT_ISSTRING):; > ```. The range checks of that new warning are also known bad for some cases, not sure if t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148#issuecomment-1208992073:866,inherit,inherits,866,https://root.cern,https://github.com/root-project/root/pull/11148#issuecomment-1208992073,1,['inherit'],['inherits']
Modifiability,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435#issuecomment-867119522:487,variab,variables,487,https://root.cern,https://github.com/root-project/root/issues/8435#issuecomment-867119522,2,['variab'],['variables']
Modifiability,"> I expect, that ClassDef and LinkDef.h changes are not necessary . Technically since the class inherits from `TObject` it ought to have a `ClassDef` but it could/should be a `ClassDefInline`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1615097899:96,inherit,inherits,96,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1615097899,1,['inherit'],['inherits']
Modifiability,"> I found line https://github.com/root-project/root/pull/15038/files#diff-c35e46fbb246941a30fd3fa261506e5eb03b601e3bf6734460f814fd3aa156c9R46 intriguing. We are doubling the compression level given in input. The ZSTD documentation does not say anything which could possibly justify this behaviour https://facebook.github.io/zstd/zstd_manual.html . This deserves a bit of caution/discussion I believe, also given the test of the compression level which has to be coherent with that. From the linked manual:. > The library supports regular compression levels from 1 up to ZSTD_maxCLevel(),; > which is currently 22. Levels >= 20, labeled `--ultra`, should be used with; > caution, as they require more memory. The library also offers negative; > compression levels, which extend the range of speed vs. ratio preferences.; > The lower the level, the faster the speed (at the cost of compression). So the doubling maps ROOT's single digit layer to the ""reasonable"" level 0 to 18.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15038#issuecomment-2017606324:770,extend,extend,770,https://root.cern,https://github.com/root-project/root/pull/15038#issuecomment-2017606324,1,['extend'],['extend']
Modifiability,"> I guess that if we just forward the arguments to Jupyter, then it will take into account our argument; > over what is specified in the Jupyter configuration file (although I am not 100% sure). Yes, this also works. Now I just forward all args to jupyter executable.; For me it still works when starting:; ```; root --notebook --ip=hostname; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4597#issuecomment-547903215:145,config,configuration,145,https://root.cern,https://github.com/root-project/root/pull/4597#issuecomment-547903215,1,['config'],['configuration']
Modifiability,> I have found a workaround that makes it work in dash now. You can give it a try by copying by hand the added parts into your thisroot.sh : https://github.com/root-project/root/pull/10332/files. Thank you. After implementing your fix got:. . bin/thisroot.sh; /bin/sh: 1: bin/thisroot.sh: root-config: Permission denied. To provide some clues: between build and this attempt root_install directory was copied forth/back to/from mounted Google drive via ; cp -a -R -f /content/drive/MyDrive/VM_backup/root_install/* /content/R/root_install. could this broke some permissions and how could I restore them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1089127180:294,config,config,294,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1089127180,1,['config'],['config']
Modifiability,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3807#issuecomment-492090162:64,config,configuration,64,https://root.cern,https://github.com/root-project/root/pull/3807#issuecomment-492090162,1,['config'],['configuration']
Modifiability,> I just saw that TCurlyLine has no Paint method. Is there an equivalent?. Look at the inheritance ... it gets it from TPolyline.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-822504751:87,inherit,inheritance,87,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-822504751,1,['inherit'],['inheritance']
Modifiability,"> I looked into doxygen for the chi2FitTo() https://root.cern/doc/master/classRooAbsPdf.html#a77be869c84f102f1fce246c6f01b5b7d and it doesn't mention `Extended()` at all. So I think this should be added with proper explanation of the behaviour.; > ; > Furthermore doxygen for fitTo() https://root.cern/doc/master/classRooAbsPdf.html#a52c4a5926a161bcb72eab46890b0590e specifies that `Extended()` is off by default, while it should rather say that it is on if pdf is extended and off if it is not. That's a good point! In the final commit of this PR, I improved the documentation of the `Extended()` command argument. I have also added three more commits:; * some refactor to avoid code duplication in RooAbsReal and RooAbsPdf; * don't recommend the use of `RooChi2Var` directly in RooPlot documentation; * a commit that just fixes typos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638#issuecomment-1715613915:151,Extend,Extended,151,https://root.cern,https://github.com/root-project/root/pull/13638#issuecomment-1715613915,5,"['Extend', 'extend', 'refactor']","['Extended', 'extended', 'refactor']"
Modifiability,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:; > ; > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen.; > ; That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8324#issuecomment-859722236:198,variab,variable-in-class-template,198,https://root.cern,https://github.com/root-project/root/pull/8324#issuecomment-859722236,1,['variab'],['variable-in-class-template']
Modifiability,"> I mean once this option goes to the rootling, it will be off by default. It is clear how to activate it when building with CMake. But I did not find any documentation on modifying the cling invocation options for ACLIC compilation of macros. That is a tough one. [Here](https://github.com/root-project/root/blob/master/core/base/src/TSystem.cxx#L3556-L3571) we configure the rootcling invocation which ACLiC does. [Here](https://github.com/root-project/root/blob/master/config/rootrc.in#L376-L391) we have a set of customization rules for ACLiC. We may want to extend this and if that configuration is set then we can call rootcling differently. On your side, you will 'just' need to alter the `.rootrc` configuration after building ROOT. Alternatively, if your framework qualifies everything and does not require `using namespace std` we may work towards a global cmake option `-Dstrict=On` where we delete all `using namespace std` cases [here](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L4344) and [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1278). This may require additional changes in ROOT and more investment in time but it is the right way to go IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-609575899:363,config,configure,363,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-609575899,5,"['config', 'extend']","['config', 'configuration', 'configure', 'extend']"
Modifiability,"> I meant with the inline patch -- just to make sure that if we mark the variable inline it does not mangle in a slightly different way. Ah yes, sorry for the confusion, this is the output with the `inline const` patch; ```; $: nm $ROOTSYS/lib/*.so | grep TString | grep kNPOS | wc -l; 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860824120:73,variab,variable,73,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860824120,1,['variab'],['variable']
Modifiability,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061744458:220,inherit,inherit,220,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458,1,['inherit'],['inherit']
Modifiability,"> I noticed that by default everything is linked using the static libraries from LLVM. As I [said](https://github.com/root-project/root/issues/12156#issuecomment-1662255320):; > if we link the static libraries we don't want to *also* link the shared library. And we prefer static libs. And what you suggest:; > In `llvm-config`, one needs to pass `--link-static`, and that's about it. Will try it... sounds both plausible and simple :-) Let us know, please!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666916384:320,config,config,320,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666916384,1,['config'],['config']
Modifiability,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for; > ; > ```; > Start 959: tutorial-v7-concurrentfill.cxx; > ```; > ; > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of; https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1916208136:463,config,configuration,463,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1916208136,2,['config'],"['config', 'configuration']"
Modifiability,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1479677945:405,rewrite,rewrite,405,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1479677945,1,['rewrite'],['rewrite']
Modifiability,"> I see the data member of the new struct are not initialised. The constructor is missing now. If we add a constructor, we cannot use aggregate initialization (it ceases to be a POD data type).; I initialized the variables now. > The member fROCAVG of HyperParameterOptimizationResult is also not initialised. This variable is initialized in the constructor's initialization list. There is no need to initialize it where I removed the code to do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/494#issuecomment-293558524:213,variab,variables,213,https://root.cern,https://github.com/root-project/root/pull/494#issuecomment-293558524,2,['variab'],"['variable', 'variables']"
Modifiability,"> I see, we can add that, thank you for the explanation. Why can't one add this environment variable to the invocation in the ROOT build in ROOT's cmake?. The build failure is a just a symptom of the issue. In fact, ROOT was already built and in its final step it runs a sanity check something like `root.exe -l -b -q tutorials/hsimple.C` to catch such basic issues early. I'd be happy if we could solve this in a nicer way, however I do not think ROOT has enough information about its build process (and I think it should not). For example, even if we detect where Vc (or other relevant information) was at build time, this does not mean a lot. We cannot be sure that it stays at the same place on the deployment node. For instance, CMSSW-like setups then, at install time, reshuffle things around quite a bit. That environment variable is there because of that - essentially provides a way for ""devops"" (to use a modern word here) to express extra knowledge which is (nearly) impossible to deduce at build time. In addition, I think it'd be pretty bad if ROOT modified users' environment unknowingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1025536441:92,variab,variable,92,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1025536441,2,['variab'],['variable']
Modifiability,"> I suppose just using PATH rather then REALPATH in the place linked . One of the intentional side-effect of using REALPATH was to document which compiler had been used to generated 'these' binaries version of ROOT. (This could technically be solved by storing the REALPATH in an additional variable). One negative side-effect of switching from REALPATH to PATH is that it no longer points to the 'actual' compiler that had been used and in practice we get a failure if:. * ROOT is build version g++ ""new"" version found in the path; * ROOT is run with a much older g++ in the path. (and yes, it sound like damned if we do, damned if we don't)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1128881960:291,variab,variable,291,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1128881960,1,['variab'],['variable']
Modifiability,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?. Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2127902486:93,config,config,93,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2127902486,2,['config'],['config']
Modifiability,"> I think a malformed ROOT_MAX_THREADS is an error as setting this specific variable is very unlikely to have been done 'casually/just-because' and hence the program is mis-behaving (using too many threads) compared to the user's expectations. In that case `Error()` is certainly appropriate, but then that's an argument for aborting execution rather than continuing with the wrong amount of threads.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1601270856:76,variab,variable,76,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1601270856,1,['variab'],['variable']
Modifiability,"> I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want. We reached an agreement to use ROOT_BINDIR and add a deprecation function for deprecating ROOT_BINARY_DIR variable when it is included...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3940#issuecomment-501676423:48,variab,variable,48,https://root.cern,https://github.com/root-project/root/pull/3940#issuecomment-501676423,4,"['config', 'variab']","['config', 'variable']"
Modifiability,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?. I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1342794108:331,variab,variable,331,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1342794108,2,['variab'],['variable']
Modifiability,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:; ```; ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'; SiStripCluster obj;; ^; libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'; ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;; ```; it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough?. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-435078550:283,variab,variable,283,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-435078550,1,['variab'],['variable']
Modifiability,"> I think you're truly missing how much cppyy has evolved. Totally. That said you either re-implement lookup rules or they don't work properly, there's not a lot of middle ground... Templated constructors? ADL? Friended operators? What about spaceship? So much fun!. > where ROOT/meta breaks things, like removing std::, or tries too hard to be smart, like with template instantiations or overload matching, where it doesn't even follow C++'s rules. How are we then not talking about the same issue? Is it because you believe that I blame cppyy, while I merely describe the behavior? I.e. yes exactly, and as I really don't feel like messing with ROOT's type names our best way out is lookup: pass the original name to clang, no name normalization, and see what it says. How's that not addressing these issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-478698922:50,evolve,evolved,50,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-478698922,1,['evolve'],['evolved']
Modifiability,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk; * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries.; * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2407232434:133,extend,extend,133,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2407232434,1,['extend'],['extend']
Modifiability,"> I understand this will be simplified when we can pass a configuration object to RDataFrame where we specify the range. When reading trees/chains, I'm not sure the configuration object will allow anything more than what we can already do with TEntryLists?. IIUC the redundant info is that `globalend = globalstart + (localends - localstarts).sum()` (i.e. we could avoid passing `globalend`). However: do you still need `globalstart` and `globalend` at all when using TEntryLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646#issuecomment-895318380:58,config,configuration,58,https://root.cern,https://github.com/root-project/root/pull/8646#issuecomment-895318380,2,['config'],['configuration']
Modifiability,"> I was just thinking that the same file is here in ROOT, and there might have been some updates inbetween changing something in the way it is built so that it does not rebuild every time. Sure, but if you look at https://github.com/llvm/llvm-project/commit/8eb4b3e2be008fc3455b3c2820b1b55d2a5c25f0 you see that the change to `TableGen.cmake` only adds an additional variable `LLVM_TARGET_DEPENDS` that the caller can set. This is done in one place of MLIR, but nowhere else in LLVM or ROOT so there won't be any difference. > mentioning that this part also runs always even if nothing was touched:; > ; > ```; > [ 49%] Copying /home/blue/ROOT/master/tutorials/CMakeLists.txt; > [ 49%] Copying /home/blue/ROOT/master/tutorials/dataframe/df017_vecOpsHEP.C; > [ 49%] Copying /home/blue/ROOT/master/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py; > [ 49%] Copying /home/blue/ROOT/master/tutorials/image/hsumanim.C; > ```. ""Copying"" files has nothing to do with TableGen. Furthermore, this looks like output from GNU Make. As I wrote above, *never* use GNU Make if you want fast incremental builds - use Ninja!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8624#issuecomment-1109394254:367,variab,variable,367,https://root.cern,https://github.com/root-project/root/issues/8624#issuecomment-1109394254,1,['variab'],['variable']
Modifiability,"> I will definitely disable root7. `nlomann/json.hpp` used also in i/o classes of ROOT, therefore one need to have proper configuration anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1476400838:122,config,configuration,122,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1476400838,1,['config'],['configuration']
Modifiability,"> I will try to test locally first, then I will merge it. For CEF you find instructions in gui/cefdisplay/readme.md file; For qt5 I did not provide info, just install Qt5WebEngine and Qt5WebEngineWidgets libraries.; And configure with command:. cmake -Droot7=ON -Dcxx14=ON -Dcefweb=ON -Dqt5web=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-365925950:220,config,configure,220,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-365925950,1,['config'],['configure']
Modifiability,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?. Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13840#issuecomment-1760218445:76,variab,variable,76,https://root.cern,https://github.com/root-project/root/pull/13840#issuecomment-1760218445,1,['variab'],['variable']
Modifiability,"> I would be happier of you could replace the #includes both for cling and the compiler by forward declarations where possible. Done. > we should reduce the asymmetry between cling and compiler, not increase it. Problem to keep external includes in such plugins - one never knows if such includes still there or at same place as they were before. Therefore if possible - I prefer to hide them from interpreter.; Also long time ago cint simply was not able to parse all them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5255#issuecomment-606468116:254,plugin,plugins,254,https://root.cern,https://github.com/root-project/root/pull/5255#issuecomment-606468116,1,['plugin'],['plugins']
Modifiability,"> I would still think we need to address: https://github.com/root-project/root/pull/16465/files#r1767367204. I think that's done. It now configures with:; ```diff; -- 191/247 python tutorials have been activated.; - error: No such remote 'origin'; + -- Searching for ""origin"" repo of roottest: error: No such remote 'origin'; -- Found roottest: /Users/shageboeck/code/root-src/../roottest; ```; What do you think @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16465#issuecomment-2418725599:137,config,configures,137,https://root.cern,https://github.com/root-project/root/pull/16465#issuecomment-2418725599,1,['config'],['configures']
Modifiability,> I'll go through the C++ source later... @bellenot and all other; It is really build test - I used very fancy forwarding of template declaration with 6 arguments.; Want to be sure that it works on all platforms.; On the meeting we should discuss how deep we want to refactor old code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2705#issuecomment-425104173:267,refactor,refactor,267,https://root.cern,https://github.com/root-project/root/pull/2705#issuecomment-425104173,1,['refactor'],['refactor']
Modifiability,"> I'm not sure that ROOT_MAX_THREADS should have precedence over cgroups. I am convinced that it should. If you want to oversubscribe then that env var is your only chance. > It would be good to document that ROOT honors that env variable in the docs of `EnableImplicitMT`,. Excellent point, will do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1602772318:230,variab,variable,230,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1602772318,1,['variab'],['variable']
Modifiability,"> I'm relatively sure it can be made work if we also pass `-DCLANG_DIR=${Clang_DIR}` in `interpreter/cling/tools/plugins/clad/CMakeLists.txt`, but I won't be working on things touching `interpreter/llvm/` until I can properly revert Clang patches again. So yeah, we can go ahead with this PR for now. Any news on this? Just tested this again with your llvm16 branch and it's still required.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1659113144:113,plugin,plugins,113,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1659113144,1,['plugin'],['plugins']
Modifiability,"> Idea of the PR - if exactly same code runs twice, created binary files should be identical. Yes, but realistically the exact same code can be run on different machines in different directories. It shouldn't make a difference whether I run something in /home/username/ or in /tmp/tmpdir_q4qw3/sandbox. and usually to ensure atomic file updates I would even prefer to not be forced to create ROOT files with the final file name but be able to create the file with a temporary name and then rename them in an atomic operation after finishing creation. How about just adding an optional name to the option?. ```; new TFile(""name.root?reproducible=somename"",""recreate""); ```. and then I can choose the name to be stored in the file or, if just `?reproducible` is present the normal behavior is kept?. Of course this could also be decoupled from the reproducible feature by having this in a different option. ```; new TFile(""name.root?reproducible&fname=somename"",""recreate""); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-524219323:294,sandbox,sandbox,294,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-524219323,1,['sandbox'],['sandbox']
Modifiability,"> If I read this correctly, all entries in `ARG_ENVIRONMENT` reach CMD, PRE and POST (+ERR etc), and `CMD_ENV` only reaches CMD?. Correct, `ARG_ENVIRONMENT` is passed via the `ENV` argument and is used to modify the environment of the driver process, hence inherited by all child processes. The new `CMD_ENV` is only propagated to `CMD`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11226#issuecomment-1221887580:257,inherit,inherited,257,https://root.cern,https://github.com/root-project/root/pull/11226#issuecomment-1221887580,1,['inherit'],['inherited']
Modifiability,"> If it's disabled by default then I am positive nobody will go the extra mile to enable it in their builds. Which means we should remove the banner and the infrastructure to disable it, through rootrc or a CMake variable. I would agree. > would you be able to propose a PR?. I can outline the sections to be removed in this (or another) Issue for discussion and then make one if that's helpful @Axel-Naumann. Though I take it from @lmoneta's comment that they would prefer to wait. Is that correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954#issuecomment-1048983355:213,variab,variable,213,https://root.cern,https://github.com/root-project/root/issues/9954#issuecomment-1048983355,1,['variab'],['variable']
Modifiability,"> If not inheriting from TObject is desirable,. Yes, do not inherit from TObject unless you use one of its facility:; * Name/Title; * UniqueID and/or TRef; * storing in a ROOT collection; * Implicit shared ownership. In addition any class inheriting directly or indirectly from TObject **must** have a ClassDef.; Other classes should have a ClassDef (either NV or Override or Inline)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-299447323:9,inherit,inheriting,9,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-299447323,3,['inherit'],"['inherit', 'inheriting']"
Modifiability,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:; * python support is enabled ; * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run); * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:; * `X11` support is enabled.; * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code); * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2052136735:302,config,configured,302,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2052136735,2,['config'],"['configuration', 'configured']"
Modifiability,"> In ROOT it's not used anymore after the configure-based build system was removed. ; > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4127#issuecomment-516330348:42,config,configure-based,42,https://root.cern,https://github.com/root-project/root/pull/4127#issuecomment-516330348,2,"['config', 'variab']","['configure-based', 'variables']"
Modifiability,"> In general, I am still a little bit fuzzy about the interplay of the classes wrt. . There are several layers between `civetweb` and `RBrowser`.; But in this PR none of communication layers are touched or changed. Main idea of PR - change all defaults to none-webgui and do not let enable webgui with rootrc or `--web` flags. Plus closing two potential caveats: exposing currentdir and reconnection to RBrowser. And allow via API change loopback binding to false.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14189#issuecomment-1849746528:104,layers,layers,104,https://root.cern,https://github.com/root-project/root/pull/14189#issuecomment-1849746528,2,['layers'],['layers']
Modifiability,"> In my mind, we should provide real implementation ; > ```; > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&); > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&); > ```; > Otherwise these methods will be non-usable for other SQL plugins; > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`; > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:; 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp; `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`; has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds...; For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds.; 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:; `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`; But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-506253921:235,plugin,plugins,235,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-506253921,1,['plugin'],['plugins']
Modifiability,"> In particular, I tried to add a trivial unit test file [...] and compiling as the other ones, i.e. linking it to [...] makes the sanitiser running the test still complain as above. Depending on how you compile it, you might get `-fsanitize=address` from the ROOT C++ flags. But in general yes, the libraries are sanitized and will operate no matter if your application itself is built with sanitizers or not. > I guess I could create a standalone hello-world C++ code and compile it with the sanitiser linking to ROOT as our unit test does and I should get the same report. Let me know if you need so. That would be as expected, so I don't think it's worth the effort. > Now, this behaviour (leaking just linking) should make it not too difficult to locate the issue. Do you do something [with globals or static variables](https://stackoverflow.com/a/8353892/14967071)? Or do you have [a `_init` and/or `_fini` function](https://stackoverflow.com/a/6412445/14967071)?. As explained before, what the AddressSanitizer is complaining about is well understood and it also doesn't explain growing memory usage when not interacting with ROOT. This latter is what needs a clear reproducer to dig out the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1818478493:814,variab,variables,814,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1818478493,1,['variab'],['variables']
Modifiability,"> In the TLegend::AddEntry method, a TLegendEntry is added to the TList (fPrimitives). When I try to do this, it tells me that > > the Add() method of TList takes in an Object and I provided a TFeynmanEntry . How did TLegend do this?. Ah yes TFeynman and TFeynmanEntry should inherits from TObject like TLegendEntry. See the inheritance graph here:. https://root.cern/doc/master/classTLegendEntry.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-820333902:276,inherit,inherits,276,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-820333902,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1252761771:76,config,configured,76,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771,2,['config'],"['configure', 'configured']"
Modifiability,"> Indeed, you are right. I still want to give some hints though. How about; > ; > ```; > ImportError: cannot import module 'pyspark'. Try installing it with `pip install pyspark` or `conda install pyspark`. Refer to the PySpark documentation for more details.; > ```. I would just say `ImportError: cannot import module 'pyspark'. Please see the Spark documentation for installation instructions.`. Why referring to pip or conda? Probably people prefer apt, dnf, pacman, whatever? I'd keep it simple :). People *will* just write `pip/conda install pyspark` if you write this and may not result in a proper configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705#issuecomment-810141972:606,config,configuration,606,https://root.cern,https://github.com/root-project/root/pull/7705#issuecomment-810141972,1,['config'],['configuration']
Modifiability,"> Is that something related to Cling? . No this is C++ and this is a real issue. . > and also the implicit inline by having the method in the class definition). Indeed there is an implicit inline keyword *if and only if* the implementation is inside the class definition (i.e. the result of this PR for example). In the original code we have a header with:; ```; class SomeName {; public:; void somefunction();; };; void SomeName::somefunction() { ... };; ```; In this case, without the inline keyword, the compiler is ask (and has to) generate this function in every .o files that correspond to a source file that includes (directly or indirectly) this header file. I.e. it was only a matter of time until something complained about duplicated symbols. As far as the original error is concerned:; ```; IncrementalExecutor::executeFunction: symbol '_ZNK4ROOT15TThreadExecutor11GetPoolSizeEv' unresolved while linking symbol 'atexit'!; You are probably missing the definition of ROOT::TThreadExecutor::GetPoolSize() const; ```; It was indeed an accurate report (TThreadExecutor inherits from TExecutorCRTP and the `= delete` meant to require GetPoolSize implementation in the derived class ... but it was implement only in TExecutor and not in TThreadExecutor). If GetPoolSize is not part of the TExecutorCRTP interface then this PR's commit removing it from there is correct, if it is part then it probably should have been declared with:; ```; virtual unsigned GetPoolSize() const = 0;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033#issuecomment-759664054:1077,inherit,inherits,1077,https://root.cern,https://github.com/root-project/root/pull/7033#issuecomment-759664054,1,['inherit'],['inherits']
Modifiability,"> Is the nBinsX forced to be nBinsY as in the gsi-web example you sent, or are they separately customizable?. For the moment they are the same, one can provide more flexible solution in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12534#issuecomment-1481135031:165,flexible,flexible,165,https://root.cern,https://github.com/root-project/root/pull/12534#issuecomment-1481135031,1,['flexible'],['flexible']
Modifiability,"> Is the specification indicating that some column are stored little endian and some big endian (and/or some are 'platform' specific)? If not, then it would seem that all column are stored in little endian format, wouldn't it?. As per v1 specification, all column types are stored little-endian, but we _might_ (or not) extend the column model in the future to support big-endian columns. We could discuss this if you think it can be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10402#issuecomment-1109864962:320,extend,extend,320,https://root.cern,https://github.com/root-project/root/pull/10402#issuecomment-1109864962,1,['extend'],['extend']
Modifiability,"> Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start... No particular reason. I just copied the config from the build above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16526#issuecomment-2378794316:82,config,configuration,82,https://root.cern,https://github.com/root-project/root/pull/16526#issuecomment-2378794316,2,['config'],"['config', 'configuration']"
Modifiability,"> Is there maybe a way to get these root-config --auxlibs directly into the ACLiC command, without hardcoding the flags again behind various preprocessor guards for different platforms?. I do believe that is the right question to ask! Unfortunately, I have no idea about the answer :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13737#issuecomment-1737670222:41,config,config,41,https://root.cern,https://github.com/root-project/root/pull/13737#issuecomment-1737670222,1,['config'],['config']
Modifiability,"> Is this connected to #16202?. No, there is no transiency involved here, only inheritance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-2352167185:79,inherit,inheritance,79,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-2352167185,1,['inherit'],['inheritance']
Modifiability,"> It is a bit confusing, it is possible to run this code as standalone still? I would actually remove ; > everywhere this possibility (e.g remove -> find_package(ROOT REQUIRED) and etc.). I explained in Mattermost - `find_package(ROOT REQUIRED)` kept in two places while variables like `ROOT_vs_FOUND` or `ROOT_mathcore_FOUND` defined only after calling `ROOTConfigure.cmake`. One need to change a lot in `test/CMakeLists.txt` and `tutorials/CMakeLists.txt`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5577#issuecomment-625777738:271,variab,variables,271,https://root.cern,https://github.com/root-project/root/pull/5577#issuecomment-625777738,1,['variab'],['variables']
Modifiability,"> It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode. One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes. If @bellenot has nothing against it - I can propose PR. Thanks @linev ! Feel free to open a PR if you want 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10748#issuecomment-1159421157:69,variab,variable,69,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159421157,1,['variab'],['variable']
Modifiability,"> It is really simple to check what gets linked in with a debugger if you have the setup done already. If I can get ssh access to a node somewhere I can do that. Unfortunately I don't have a public instance where you get ssh into. I created a simple example that links against ROOT and a different LLVM version, that worked without issue. While doing that I noticed that by default everything is linked using the static libraries from LLVM. This is probably what we want?. In `llvm-config`, one needs to pass `--link-static`, and that's about it. Will try it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666915077:482,config,config,482,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666915077,1,['config'],['config']
Modifiability,> It may be more beneficial to solve the underlying JSON I/O problem (not supporting base/derived class aliasing). That do you mean?; Provide different layout for created JSON structures?; It will have huge side effect on JSROOT - one have to rewrite it from scratch complete JavaScript code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181#issuecomment-842271055:243,rewrite,rewrite,243,https://root.cern,https://github.com/root-project/root/pull/8181#issuecomment-842271055,1,['rewrite'],['rewrite']
Modifiability,"> It will have huge side effect on JSROOT - one have to rewrite it from scratch complete JavaScript code. Depends on how you do it. If you use the name as before, but `Derived::fMember` in case the derived re-uses a member name from a base, then it should be strictly an improvement, and backwards compatible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181#issuecomment-842296903:56,rewrite,rewrite,56,https://root.cern,https://github.com/root-project/root/pull/8181#issuecomment-842296903,1,['rewrite'],['rewrite']
Modifiability,"> LGTM for the RDF part.; > ; > Out of curiosity, can you share a link to the kind of errors you see?. ```; Start 878: tutorial-dataframe-df001_introduction-py. 878: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df001_introduction.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 878: Environment variables:; 878: ROOT_HIST=0; 878: Test timeout computed to be: 1500; 878: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 878: error code: -529697949; 878:; 878:; 1/16 Test #878: tutorial-dataframe-df001_introduction-py .................***Failed 5.63 sec; test 879; Start 879: tutorial-dataframe-df002_dataModel-py. 879: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df002_dataModel.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 879: Environment variables:; 879: ROOT_HIST=0; 879: Test timeout computed to be: 1500; 879: Error in <TChain::LoadTree>: Cannot find tree with name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:588,variab,variables,588,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['variab'],['variables']
Modifiability,"> LGTM! I agree much better to use `Taxis::FindBin`. You might want to use the const function `FindFixBin`, which does not modify the axis in the special case when the axis is extendable. Thank you very much for this suggestion! I followed it. > For curiosity, why was crashing before in the nightly?. I don't know, and since it only happened on 32-bit platforms I didn't think it was worth it to investigate this further",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13853#issuecomment-1762211119:176,extend,extendable,176,https://root.cern,https://github.com/root-project/root/pull/13853#issuecomment-1762211119,1,['extend'],['extendable']
Modifiability,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12009#issuecomment-1379349068:108,config,configurations,108,https://root.cern,https://github.com/root-project/root/pull/12009#issuecomment-1379349068,2,['config'],"['configuration', 'configurations']"
Modifiability,"> Lepton, CurvedPhoton, Photon, QuarkAntiQuark, Gluon, WeakBoson, Quark, CurvedGluon should not be methods of TFeynman but they should inherit from TFeynmanItem and from TAttLine and TAttText. The Add method of TFeynman then can be something like:; > ; > TFeynman::Add(TFeynman *item); > ; > The you can have the macro as I suggested. Ah ok. So instead of having them as methods of the class, where would I define them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-819428899:135,inherit,inherit,135,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-819428899,1,['inherit'],['inherit']
Modifiability,"> Looks like my first guess was correct (builtin OpenSSL was being used). Well ok, I didn't understand your comment to say that using both `builtin_ssl` and an XRootD linked against a system OpenSSL is a problem... > This does not look like a problem with XRootD, but with ROOT and the way it's handling builtins. Can this ticket be closed?. No, it's not a problem of XRootD, but I do think we should prevent users from shooting themselves into the foot with a ""broken"" ROOT configuration, see above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1455708976:475,config,configuration,475,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1455708976,1,['config'],['configuration']
Modifiability,"> Maybe it makes sense to open a new PR once this works, such that we get rid of the part ""make it work on all platforms""?. Yes I agree, this PR was just to check the state of the feature on all platforms from time to time and to provide a preview of the changes to you (the early commits are fixed, it's just that they cannot be merged on their own as they degrade performance). > Do you expect to significantly reduce the performance impact for a batch size of 1, or what's the path forward?. I don't know of a way to fix the performance degradation with batch/bulk size of 1, so the idea would be to use a larger bulk size by default when this is merged, but:; - performance is not always better at the moment: as TTree I/O does not provide bulks, I have to perform extra copies to w.r.t. the non-bulk case that sometimes are more expensive than the bulk processing gains; - since I have to copy values into contiguous buffers, a number of use cases break (polymorphic use of TBranches, branch types with no default constructor, move-only branch types, TClonesArrays, ...). The plan is to try to fix the use cases that break as well as the performance issues so we can always turn bulk processing (with bulk size >> 1) on. It's going to be difficult, fingers crossed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517#issuecomment-1422254977:960,polymorphi,polymorphic,960,https://root.cern,https://github.com/root-project/root/pull/11517#issuecomment-1422254977,1,['polymorphi'],['polymorphic']
Modifiability,> Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. `ClassDef` is already in the `PREDEFINED` variable in Doxyfile (line 2257). So I think doxygen should be instructed about its existence. May be that's not the right way to declare it ? may be it would be better to instruct doxygen to ignore it ? I am not sure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9596#issuecomment-1014575310:126,variab,variable,126,https://root.cern,https://github.com/root-project/root/issues/9596#issuecomment-1014575310,1,['variab'],['variable']
Modifiability,"> Maybe you can give me an advice on how to resolve this problem since am not fully familiar with the concept of virtual functions and the consequences of a particular implementation. In my mind - one should introduce new methods to configure extra marker attributes.; In that case old API remains, only new is introduced.; But we should wait for @couet - that he is thinking about it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-571221278:233,config,configure,233,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-571221278,1,['config'],['configure']
Modifiability,"> Might work for Streamer(). Even for Streamer, the test is looking for a 'local' definition and thus inheritance is not a guaranteed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1837#issuecomment-380137802:102,inherit,inheritance,102,https://root.cern,https://github.com/root-project/root/pull/1837#issuecomment-380137802,1,['inherit'],['inheritance']
Modifiability,"> My guess: ClassDef needs to be changed to become ClassDefOverride for all classes that use override, or else warnings (you hinted at that already). AFAIK I tried to apply this already in many places. > In general I'm not sure how much we actually benefit from dressing this old code with some new clothes, also given the extensiveness of this change, which will create conflicts when backporting changes across this commit. Could we have a discussion on the benefit/cost ratio?. Well, that raises an even more general question: if there is little commitment to touch/refactor/maintain old code, what is your long term strategy for these parts of ROOT then? Will these old codes be deprecated/removed then? Code rot is a fact and it gets only worse over time. And so far I have the feeling ROOT will still be there in the next decade or the one after. And if these codes stay around than they should be maintained and improved occasionally. Of course maintenance takes resources. And I know that nobody ever has time to do it. But leaving everything as is in the face of possible improvements also has a cost that we pay be doing nothing. For this particular PR, if I jump into a header file, I do not know which methods are overriding something from a base class. But this knowledge helps me when reading new code. Now I pay the cost for having to look this information up in the inheritance hierarchy. In recent years we are lucky enough to even have automatic refactoring tools. They are far from perfect. But they are good. And applying them has very little cost for a moderate benefit. So I think at least those automatic refactorings should be applied to old code. Regular manual refactoring of production code would be even better, but I know I live in a dream world here ;). There is also the broken window theory, stating that code with bad quality encourages people working on it to also tolerate new code to be bad. I just started here in ROOT and I already heard from a few people that RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669905387:569,refactor,refactor,569,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669905387,1,['refactor'],['refactor']
Modifiability,"> My question was: is it possible to modify the ROOT-cmake-find script, so that it only forces the nlohmann-json-dependency if you are going to use ROOT7 classes? So to say, that depending on the `REQUIRED COMPONENTS` that you use in the `find_package` statement in your user code, it is more or less 'requiring'. That's an interesting question. 🤔 CMake project's can't easily do this. I mean, nothing is impossible, but it's not simple to do. As long as externals are handled through imported library targets (which I'm not sure the nlohmann_json dependency is used with 😕), one would need to tweak the behaviour of CMake in a pretty fundamental way for this. 🤔 You see, when you tell in (in this case) ROOT's build that library `Foo` needs to publicly link against library `Bar::bar`, CMake exports this information in the `ROOTConfig-targets.cmake` file. (That is a file generated fully by CMake itself.) It will say that `Foo` depends on `Bar::bar`. So at that point `ROOTConfig.cmake` has to produce `Bar::bar` in some way. Even if the user's code itself never wants to use the `Foo` library. Because CMake will not like it that it has the `Foo` library defined (even if unused by others), without all of its requirements met. So even if `ROOTConfig.cmake` itself doesn't look for nlohmann_json, if any of the CMake code depends on the `nlhmann::json` target (yes, there is such a target in CMake 😄), the CMake configuration would still fail. With a complaint about `nlohmann::json` not being known. 😦. So generally, projects that publicly depend on something else, always look for all of those dependencies with [find_dependency(...)](https://cmake.org/cmake/help/latest/module/CMakeFindDependencyMacro.html). Regardless of which parts of the project the user wants to use. 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1845002083:1416,config,configuration,1416,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1845002083,1,['config'],['configuration']
Modifiability,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue?. In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2050660691:654,config,configuration,654,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2050660691,1,['config'],['configuration']
Modifiability,> Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted. Thanks! We're on it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10928#issuecomment-1947918617:152,adapt,adapted,152,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947918617,1,['adapt'],['adapted']
Modifiability,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:; ```; //check if element is a TRef or TRefArray; const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);; TClass* const type = GetClassPointer();; const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")); if (originalTest != newTest); 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", ; fTypeName.Data(), originalTest, newTest);; if (originalTest) return 0;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1989251733:293,Inherit,InheritsFrom,293,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1989251733,3,['Inherit'],['InheritsFrom']
Modifiability,"> No, that will not work. As i said protoc is actually configured correctly already. The issue is that /opt/homebrew/include is prepended to the search path for headers. I managed to fix it by doing [alisw@526782c](https://github.com/alisw/root/commit/526782cfe8b7a7fffa90ae0395521b01ae902cf7) which will make sure that my own protobuf comes earlier than the one from homebrew. I see in master protobuf will use a config file, so maybe I can simply patch it in my own build. So if it works we can implement it in ROOT. @lmoneta what do you think? Can you give it a try?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207#issuecomment-1851925257:55,config,configured,55,https://root.cern,https://github.com/root-project/root/issues/14207#issuecomment-1851925257,2,['config'],"['config', 'configured']"
Modifiability,"> Note that we might still face the problem with DLLs loaded from somewhere else, and for which there is no .lib,. Yes, I agree. This is clearly a problem/risk. > but it looks like an overkill to me, especially if I have to search all volumes (imagine NFS). Why ""all"" volumes? Wouldn't we be limited with the set of ""directory of the dll"" and directorys in %PATH% and other path variables?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156#issuecomment-672220061:379,variab,variables,379,https://root.cern,https://github.com/root-project/root/pull/6156#issuecomment-672220061,1,['variab'],['variables']
Modifiability,"> Now, the way you do it you will have the TLatex and the TCurly etc ... primitives in the TCanvas list (try gPad->ls()). The object TFeynman does not exits on its own. Why not having:; > ; > ```; > auto f = new TFeynman(...);; > f->Add(Lepton(10, 10, 30, 30, 7, 6, ""e"", true));; > f->Add(Lepton(10, 50, 30, 30, 5, 55, ""e"", false));; > f->Add(CurvedPhoton(30, 30, 12.5*sqrt(2), 135, 225, 7, 30));; > f->Add(Photon(30, 30, 55, 30, 42.5, 37.7));; > f->Add(QuarkAntiQuark(70, 30, 15, 55, 45, ""q""));; > f->Add(Gluon(70, 45, 70, 15, 77.5, 30)-);; > f->Add(WeakBoson(85, 30, 110, 30, 100, 37.5, ""Z^{0}""));; > f->Add(Quark(110, 30, 130, 50, 135, 55, ""q"", true));; > f->Add(Quark(110, 30, 130, 10, 135, 6, ""q"", false));; > f->Add(CurvedGluon(110, 30, 12.5*sqrt(2), 315, 45, 135, 30));; > f->Draw(); > ```; > ; > The Lepton CurvedPhoton etc ... would be some TFeynmanObject (we should find a good name), a bit like TLegend and TLegendItem. TFeynman should inherits from TAttLine and TAttText to define the global line and text attributes of the diagram and TFeynmanObject should also inherits from TAttLine and TAttText to change individual TFeynmanObject attributes. TFeynman will need a Draw(...) method and a Paint(...) method. The Paint(...) method will call all the Paint(...) methods of the TFeynmanObject building the TFeynman diagram. You may also what to implement TFeynman::SavePrimitive.; > ; > I also see that you need to define the position of the objects building the diagram. If you look at https://arxiv.org/pdf/1601.05437.pdf the diagram is defined without giving any absolute position. Would it be possible to do something similar ?. Thanks for the tips. I will try to do this. 😄",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-818659910:947,inherit,inherits,947,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-818659910,2,['inherit'],['inherits']
Modifiability,"> Ok I understand. I would wait for @ACA4DFA4 to tell us more about their configuration, including why do they need to build with Python2. Yesterday I just found that root-v6.28/00 was released on the Releases page, then downloaded the tarball and built it with `cmake` (`-DCMAKE_CXX_STANDARD=17`), since the binary distributions don't have ROOT7 features. The OS was Ubuntu 18.04 on Windows 10 (WSL1), and there were `python3.8.0`, `python3.7.5`, `python3.6.9` and `python2.7.17` installed. The default `python3` was `python3.6.9`, with `numpy` installed. The other 2 versions of python3 didn't have `numpy` or any other packages. The output of `cmake` configuration about python was:; ```; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.0""); -- Found Python2: /usr/bin/python2.7 (found version ""2.7.17"") found components: Interpreter Development NumPy Development.Module Development.Embed ; ...; -- Building with -fPIC; -- Found Python3: /usr/bin/python3.8 (found suitable version ""3.8.0"", minimum required is ""3.0"") found components: Interpreter ; ```; I don't know why `python3.6` was not chosen but `python3.8`, and why `python3` was not found at the first time. In fact, I have built root-v6.26/00 with `python3.6` successfully when `python3.7` and `python3.8` were not installed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12308#issuecomment-1429930567:74,config,configuration,74,https://root.cern,https://github.com/root-project/root/pull/12308#issuecomment-1429930567,2,['config'],['configuration']
Modifiability,"> One thing I noticed is that if I have the regular Qt4 options turned on, the build fails. Is that expected?. It is not expected behavior. In principle, plugins have nothing to do with each other.; Probably, you enabling qt5web option on the platform without qt5. Which options should I enable to reproduce it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-367654979:154,plugin,plugins,154,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-367654979,1,['plugin'],['plugins']
Modifiability,"> Only the PATH variable is needed on Windows. Okay, that sounds to me like Windows isn't affected by this PR. Is there anything I can do, so we get forward with this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-764570777:16,variab,variable,16,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-764570777,1,['variab'],['variable']
Modifiability,"> P.S. @olifre Note that there are still some potential issues without my changes: [...]. My feeling here is that the easiest approach might be to filter out the unary operators in general, i.e. exactly the one filtering line you also added in this PR :wink:. ; Another option would be to rewrite them before passing things to `TTreeFormula`, but I'm not sure it is really worth the effort — browsing into unary operators seems to be rarely useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13284#issuecomment-1642726093:289,rewrite,rewrite,289,https://root.cern,https://github.com/root-project/root/pull/13284#issuecomment-1642726093,1,['rewrite'],['rewrite']
Modifiability,> PR has no sense - fname1 is empty or null and cannot have any content inside. So does that mean that fname1 is the wrong variable for this case? Or is the whole PR (and thereby the issue) nonsensical?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10656#issuecomment-1139683538:123,variab,variable,123,https://root.cern,https://github.com/root-project/root/pull/10656#issuecomment-1139683538,1,['variab'],['variable']
Modifiability,"> Personally I would find it quite surprising that a TH1 setting impacts RooPlot behavior (I realize that RooPlot is implemented in terms of TH1, but RooPlot does not inherit from TH1, i.e. it is not a TH1), especially since there is a RooPlot-specific setting to control this behavior (that now will be trumped by the apparently unrelated TH1::SetDirectory). I would instead expect that `RooPlot::AddDirectory` exists, since `RooPlot` reimplements most of TH1's interface.; > ; > Also -- couldn't this change break existing code that relies on the current behavior (e.g. a user could set `TH1::AddDirectory(nullptr)` and then still rely on RooPlots being added to gDirectory)?. I see the point, but the users [here](https://root-forum.cern.ch/t/roofit-plot-not-showing-with-open-tfile/39380/6?u=stephanh) found it surprising. Funny enough, Wile_E on second thought now doesn't want it, any more either. Maybe save it for a 5-min discussion in the PPP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5614#issuecomment-628612395:167,inherit,inherit,167,https://root.cern,https://github.com/root-project/root/pull/5614#issuecomment-628612395,1,['inherit'],['inherit']
Modifiability,"> Please read my comments. You are removing -I from a variable that was constructed by adding -I to directories from another list... ${incdirs} may already be what you want. I read your comments - but you did not read my. ; `${incdirs}` do not have all entries as `${includedirs}`.; Therefore to provide all required include paths, I have to rebuild plain list from `${includedirs}`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600644838:54,variab,variable,54,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600644838,1,['variab'],['variable']
Modifiability,"> Pointing to what alternatives there are, if any, either through the legacy alias, or in > the body doc, would be additionally helpful. We cannot test the existence of an input variable in an alias therefore we cannot handle with the same alias the case where there is another solution and the case where there is not. I guess if there are possible alternatives they should be mentioned in the body of the class documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237811047:178,variab,variable,178,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237811047,1,['variab'],['variable']
Modifiability,"> Possibly `RooConst`s should be matched only by index?. Yes, I think this makes sense. Or maybe better: variables where the name is a number should only be matched by index. Because if the value is the name there is no need in substituting them anyway. If there is a variable with a name that is a number that is not a `RooConstVar` where the value is equal to the name, an exception will be thrown. Because at that point you're basically asking for trouble. Would this fix your usecas? I'm curious, what is your usecase for this anyway :)? Having constants as parameters of a RooFormulaVar sounds quite useless. Probably it happens in some bigger framework?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11992#issuecomment-1381030893:105,variab,variables,105,https://root.cern,https://github.com/root-project/root/issues/11992#issuecomment-1381030893,2,['variab'],"['variable', 'variables']"
Modifiability,"> Probably it could be a solution. How one can get these required components in `ROOTConfig.cmake` macro?. As I wrote, I don't think it would be the way. But still, you get the values specified by the user in `ROOT_FIND_COMPONENTS`. https://cmake.org/cmake/help/latest/command/find_package.html#package-file-interface-variables. For instance we use that in another project of ours, to check if the user is asking for one of the optional components of the project. https://github.com/acts-project/vecmem/blob/main/cmake/vecmem-config.cmake.in#L38-L45. Note that this logic is figuring out if something that the user asked for exists at all. This machinery is not meant to figure out whether the user wants to actively use something that (always?) does exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1845011209:318,variab,variables,318,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1845011209,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"> Probably, we should avoid use of `const char *`, especially as return values from the methods.; > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4140#issuecomment-517195382:184,config,configuration,184,https://root.cern,https://github.com/root-project/root/pull/4140#issuecomment-517195382,1,['config'],['configuration']
Modifiability,> Problem to keep external includes in such plugins - one never knows if such includes still there or at same place as they were before. Therefore if possible - I prefer to hide them from interpreter. If we cannot parse a header at runtime then ROOT is in a broken state (think ACLiC). Hiding this from the interpreter isn't a fix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5255#issuecomment-606483668:44,plugin,plugins,44,https://root.cern,https://github.com/root-project/root/pull/5255#issuecomment-606483668,1,['plugin'],['plugins']
Modifiability,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement?. > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time?. i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2050662999:468,config,configuration,468,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2050662999,2,['config'],['configuration']
Modifiability,"> Rather than not generating the rdict file we could use it only in the cases when it will improve things. . What are the cases where it doesn't?. > What is the best way to detect if we are in MakeProject mode?. What is special about the ""MakeProject mode""?. I don't think we can (really) detect it. What MakeProject does is generate a set of header files, a linkdef file and a build script. Except for the fact that there no function besides the constructor and destructor, it is distinguishable from regular user code. The struct are not even guaranteed to be POD because of inheritance. In addition, the user could take the initial generation and start developing a full library based on it. So even heuristic bases on the way MakeProject generates the code would detect that you are ""really"" in MakeProject mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-649807499:577,inherit,inheritance,577,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-649807499,1,['inherit'],['inheritance']
Modifiability,"> Right now, ESysConstants::kItimerResolution is not assignable at runtime. For this change, it might make more sense to use a compile time configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582#issuecomment-873323280:140,config,configuration,140,https://root.cern,https://github.com/root-project/root/issues/8582#issuecomment-873323280,1,['config'],['configuration']
Modifiability,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error.; > ; > I don't see this discussed here - what's the intent?. We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11922#issuecomment-1356793098:171,config,config,171,https://root.cern,https://github.com/root-project/root/pull/11922#issuecomment-1356793098,1,['config'],['config']
Modifiability,"> See also https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a for some description of a challenging use case. It is unclear to me what is the weight of the behaviour described in the comment and in the commit message w.r.t. the logic of what we need to do at atexit time. From my understanding, the current behaviour (before this PR) is:; 1. Run TROOT::EndOfProcessCleanups; 2. Python gc destroys variables, thus triggering any destructors of the corresponding C++ objects; 3. Run *again* TROOT::EndOfProcessCleanups. This logic seems faulty to me. I ran the reproducer of the [original issue](https://sft.its.cern.ch/jira/browse/ROOT-10295) linked in the commit you linked and it runs smoothly after the changes of this PR. Copying here the reproducer for reference:; ```python; import ROOT. def create():; f = ROOT.TFile(""file.root"", ""RECREATE""); t = ROOT.TTree(""tree"", """"); return f, t; f, t = create(); ```. Admittedly, I have only tried with Python 3.10, I will see if I can also try with other Python 3 minor versions. But irrespective of this, I don't think `TROOT::EndOfProcessCleanups` should be called twice. I believe that if there is indeed a behaviour that requires some *Python atexit* handler, that should be written in another function, separate from EndOfProcessCleanups, and called accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155514143:431,variab,variables,431,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155514143,1,['variab'],['variables']
Modifiability,"> Seeing how many places this code needed to be copied lets me thing it would be worthwhile to refactor the code to read and write axes in the HistFactory implementation to re-use the readBinnedData functionality from RooWSJSONFactoryTool via some to-be-defined interface.; > ; > What do you think @guitargeek ?. I agree, the variable management is probably the most intricate part of the RooFit HS3 code right now, and we should see how to improve it in one of the next PRs! I can also discuss this together with @yashnator who noticed the same problems when working on the pythonizations. For for this PR, let's merge it because it includes already quite a few developments. To your support of non-uniform binning, I added:. * merging `testHS3HistFactory` and `testHistFactory`, like this we test your non-uniform binning support for free; * correct global observables definition and import; * export all the HistFactory parameters (one of the things you noticed was not done and you told me on mattermost); * some improvements of the HistFactoryJSONTool",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13078#issuecomment-1608428520:95,refactor,refactor,95,https://root.cern,https://github.com/root-project/root/pull/13078#issuecomment-1608428520,2,"['refactor', 'variab']","['refactor', 'variable']"
Modifiability,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work.; > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > ; > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?; > ; > That `target_sources` call is not what made we want a new switch, though; > ; > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-588207137:867,refactor,refactoring,867,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-588207137,1,['refactor'],['refactoring']
Modifiability,"> So if I understand this correctly, cppyy will actively break `inline` and `constexpr` variables with C++17? Now that would be really, really bad and IMHO must be fixed immediately. This is not only cppyy but anything in ROOT using reflection to get a symbol address of these things.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860742283:88,variab,variables,88,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860742283,1,['variab'],['variables']
Modifiability,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly?. Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it.; And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-822265380:209,config,configure,209,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-822265380,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"> So this is actually a more general question: should we duplicate the cppyy tests as ROOT unit tests?. IMHO we should inherit cppyy's testing suite, upstreaming all ROOT's Python unit tests (that do not use specifically ROOT classes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16133#issuecomment-2262230374:119,inherit,inherit,119,https://root.cern,https://github.com/root-project/root/pull/16133#issuecomment-2262230374,1,['inherit'],['inherit']
Modifiability,"> So you mean extern template the new ExecImp?. Yes, this what I meant. > because you still have to instantiate the ""front-facing"" template . it is a trivial function, that we could even mark as 'force inline' to make it disappear. > Maybe, but I doubt that it actually achieves the goal of reducing compile time .... and neither [of the functions] seems particularly expensive to generate. . I started from the assumption that the existing code was there for a reason. Indeed if the functions are also simple/trivial, the extern template are not needed, however then the git log need to be enhanced to justify/explain that the existing optimization was in fact not needed (assuming this is the case :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176#issuecomment-2271543583:591,enhance,enhanced,591,https://root.cern,https://github.com/root-project/root/pull/16176#issuecomment-2271543583,1,['enhance'],['enhanced']
Modifiability,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request.; ; > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way.; ; > I think that fail-on-missing is only relevant in case there would be a non built-in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870570029:829,adapt,adapt,829,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870570029,1,['adapt'],['adapt']
Modifiability,"> Some further debugging (but really just dumping notes from some experiments):; > ; > * The problem of `histhistdrawv7testUnit` can be simplified, in some approximation, to:; > ; > ; > ```; > root [0] TClass::GetClass(""ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>""); > root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; > ```; > ; > * Even simpler, just trying to create an object of that template instantiation fails:; > ; > ; > ```; > root [0] ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> h;; > root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; > ```; > ; > * Funnily enough, the `using RH1D = RHist<1, double, RHistStatContent, RHistStatUncertainty>` works just fine; same if I remove the second `STAT` template and only leave `RHistStatContent`. I've been stumbling upon these before: this is not simple as it has some template parameter pack expansion as part of the class inheritance chain...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1419265262:1278,inherit,inheritance,1278,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1419265262,1,['inherit'],['inheritance']
Modifiability,"> Sorry - I'm missing why updating builtin tbb unconditionally is off the table? Is it?. Not really, for continuity this was a first proposal, also linked to some discussions in the LIM. The overall cost of maintaining just one TBB version would be much lower and I personally would be in favour of simplifying the configuration, if possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13724#issuecomment-1736762182:315,config,configuration,315,https://root.cern,https://github.com/root-project/root/pull/13724#issuecomment-1736762182,1,['config'],['configuration']
Modifiability,"> Sorry, coding conventions (I know it was already in the original code)... Sure, no problem. I suggested a new feature recently which would auto-format these https://github.com/root-project/root/issues/8797, I tend to forget about these because I have QtCreator configured with the default sytle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8673#issuecomment-893310182:263,config,configured,263,https://root.cern,https://github.com/root-project/root/pull/8673#issuecomment-893310182,1,['config'],['configured']
Modifiability,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme; (define llvm-cling; ;; To determine which version of LLVM a given release of Cling should use,; ;; consult the; ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt; ;; file.; (let ((base llvm-15)) ;for a DYLIB build; (package/inherit base; (name ""llvm-cling""); (version ""13-20240318-01""); (source; (origin; (inherit (package-source base)); (method git-fetch); (uri (git-reference; (url ""https://github.com/root-project/llvm-project""); (commit (string-append ""cling-llvm"" version)))); (file-name (git-file-name ""llvm-cling"" version)); (sha256; (base32; ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")); (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime; (let ((base clang-runtime-13)); (package/inherit base; (name ""clang-cling-runtime""); (version (package-version llvm-cling)); (source (package-source llvm-cling)); (arguments; (substitute-keyword-arguments (package-arguments base); ((#:phases phases '%standard-phases); #~(modify-phases #$phases; (add-after 'unpack 'change-directory; (lambda _; (chdir ""compiler-rt""))); (add-after 'install 'delete-static-libraries; ;; This reduces the size from 22 MiB to 4 MiB.; (lambda _; (for-each delete-file (find-files #$output ""\\.a$"")))))))); (inputs (modify-inputs (package-inputs base); (replace ""llvm"" llvm-cling)))))). (define clang-cling; (let ((base clang-13)); (package/inherit base; (name ""clang-cling""); (version (package-version llvm-cling)); (source (package-source llvm-cling)); (arguments; (substitute-keyword-arguments (package-arguments base); ((#:phases phases '%standard-phases); #~(modify-phases #$phases; (add-after 'unpack 'change-directory; (lambda _; (chdir ""clang""))); (add-after 'install 'delete-static-libraries; ;; This reduces the size by half, from 220 MiB to 112 MiB.; (lambda _; (for-each delete-file (find-files #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2125969791:379,inherit,inherit,379,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2125969791,2,['inherit'],['inherit']
Modifiability,"> Thank you so much for helping out, @langenbruch!; > ; > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests.; [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14751#issuecomment-1951345864:324,adapt,adapted,324,https://root.cern,https://github.com/root-project/root/pull/14751#issuecomment-1951345864,2,"['adapt', 'extend']","['adapted', 'extended']"
Modifiability,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely!; > ; > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:; ```; --enable-drafts Build and install draft classes and methods; [default=yes]; ```; However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13995#issuecomment-1790144241:338,config,configure,338,https://root.cern,https://github.com/root-project/root/pull/13995#issuecomment-1790144241,3,"['config', 'variab']","['configure', 'variable']"
Modifiability,"> Thanks a lot for this @ellert ! Out of curiosity: have you explored if it's feasible to migrate towards a CMakeLists and add_subdirectory, instead of a configure script?. libAfterImage uses two different build systems, one for windows (nmake) and one for the rest (autotools).; The one for windows uses a pre-generated configuration file win32/config.h and does not support any customizations.; The other one uses a configure script to generate the config.h from config,h,in.; The conversion of the windows build to cmake is easy, since there is no need to generate any files.; For the other platforms one has to generate config.h, which makes changing the build system a bigger task in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15191#issuecomment-2054168710:154,config,configure,154,https://root.cern,https://github.com/root-project/root/pull/15191#issuecomment-2054168710,7,['config'],"['config', 'configuration', 'configure']"
Modifiability,"> Thanks a lot! LGTM! Consider squashing on merge!. Actually I would prefer leaving the first commit because it ""just"" enables an existing test (that I happened to extend in the actual fix).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7100#issuecomment-768251646:164,extend,extend,164,https://root.cern,https://github.com/root-project/root/pull/7100#issuecomment-768251646,1,['extend'],['extend']
Modifiability,"> Thanks, @ianna !; > ; > * Could you please rewrite the history to combine the two commits?. Thanks, @Axel-Naumann. I'll do that. > * I don't see `gAnnotations` and `gCType` being read anywhere. I suspect that they are not needed and artifacts of a failed merge?. No, I think, these are the new features from @wlav's master branch. I think, they are harmless :-); but I'll leave it to @wlav to comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12580#issuecomment-1490108790:45,rewrite,rewrite,45,https://root.cern,https://github.com/root-project/root/pull/12580#issuecomment-1490108790,1,['rewrite'],['rewrite']
Modifiability,"> Thanks, this is useful! In a similar vein, perhaps it would also be nice to have a `HasMetricsEnabled` method for the reader itself, especially if this option is inherited when cloning. @enirolf I'm not sure that's necessary because one can already get that information with `reader->GetMetrics().IsEnabled()`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15953#issuecomment-2196896736:164,inherit,inherited,164,https://root.cern,https://github.com/root-project/root/pull/15953#issuecomment-2196896736,1,['inherit'],['inherited']
Modifiability,"> That looks correct diagnosis. Can we extend the lifetime of `clang::ExternalASTSource::Deserializing::~Deserializing` eg register a deserialization upon say `findScope` and then delay the odr hash checks after things were fully deserialized?. Very creative idea :sweat_smile: what we can do is create our own `Deserializing` RAII in `findScope` because `ASTReader::FinishedDeserializing` will only do ODR violation checking on the last matching call. However, this also skips a number of other actions. As a result, I end up with an assertion for a cast of `FunctionDecl` - probably because some internal state is not correctly updated. In general, this approach sounds like treating the symptoms instead of the underlying cause, no? If I look at the backtrace for https://github.com/root-project/root/issues/10291, `findScope` is not involved there... (but a `friend` decl is :thinking:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403525168:39,extend,extend,39,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403525168,1,['extend'],['extend']
Modifiability,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13917#issuecomment-1775479313:586,portab,portable,586,https://root.cern,https://github.com/root-project/root/issues/13917#issuecomment-1775479313,1,['portab'],['portable']
Modifiability,"> That's fair, but users who don't have either of them installed will get broken tests if they choose to run the tests. Well ... for what it is worth, I am one those users ... (and a minimal build would also be one of those users, wouldn't it be?). If the ROOT build configure successfully and build successfully, then ctest should be clean also. I.e. roottest failing because numba is not installed would, in my opinion, means that the cmake configure step of ROOT should fail if numba is not installed ... i.e. numba would become a hard dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5938#issuecomment-650352555:267,config,configure,267,https://root.cern,https://github.com/root-project/root/pull/5938#issuecomment-650352555,2,['config'],['configure']
Modifiability,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?; > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:; ```; root [0] auto func = [](const double doub) {; doub += 1.;; }; ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'; doub += 1.;; ~~~~ ^; ROOT_prompt_0:1:29: note: variable 'doub' declared const here; auto func = [](const double doub) {; ~~~~~~~~~~~~~^~~~; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6526#issuecomment-702104810:434,variab,variable,434,https://root.cern,https://github.com/root-project/root/pull/6526#issuecomment-702104810,2,['variab'],['variable']
Modifiability,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction.; > ; > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777286355:658,inherit,inherited,658,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777286355,1,['inherit'],['inherited']
Modifiability,"> The -Dccache option works without the need of replacing the compiler executable with a symlink. @dpiparo The problem is that `-Dccache=ON` works only for ROOT, while the symlink setup for ccache is quite common since it works transparently for all software, but doesn't work with ROOT anymore (it used to work). To reproduce this issue, just create a directory with two symlinks:; ```; gcc -> /usr/bin/ccache; g++ -> /usr/bin/ccache; ```; Then put it ahead of everything else in `$PATH` and set `-DCMAKE_C_COMPILER=gcc` and `-DCMAKE_CXX_COMPILER=g++` when configuring. When you try to run ROOT after the compilation, it will lead to the problem above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1931485301:558,config,configuring,558,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1931485301,1,['config'],['configuring']
Modifiability,"> The cost and complexity of going through lambdas seems fairly high to me. Let's see what @pcanal thinks about this. Seems to be, globals used very rarely through this list. At least, I did not found any macro there it would happen. May be only in python binding. Also question to @pcanal - which address is TGlobal::GetAddress() has to return? May be it should be address on global variable like gROOT - not the value of variable. In this case wrong casting was **intentionally wrong**. I will push extra commit to check this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-449365202:384,variab,variable,384,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-449365202,2,['variab'],['variable']
Modifiability,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-642579925:174,variab,variable,174,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-642579925,1,['variab'],['variable']
Modifiability,"> The explanation here on the PR page sounds reasonable. Could you add this to the commit message?; > When I looked only at the commit, I was puzzled why this was necessary. Commit message extended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5902#issuecomment-647773859:189,extend,extended,189,https://root.cern,https://github.com/root-project/root/pull/5902#issuecomment-647773859,1,['extend'],['extended']
Modifiability,"> The function returns a `Results *` that was allocated but never destroyed. hmmm but the function keeps track of it in the internal member variable fResults.; ` fResults[t][resultsName] = newresults;`. The Dataset destructor seems to delete then all those new's. ```; // delete results; for (std::vector< std::map< TString, Results* > >::iterator it = fResults.begin(); it != fResults.end(); ++it) {; for (std::map< TString, Results* >::iterator itMap = (*it).begin(); itMap != (*it).end(); ++itMap) {; delete itMap->second;; }; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14438#issuecomment-1968471338:140,variab,variable,140,https://root.cern,https://github.com/root-project/root/issues/14438#issuecomment-1968471338,1,['variab'],['variable']
Modifiability,"> The generation of our PCH/PCM file requires only the header files to be in; place. That's incorrect; check how the list of headers and the `-I` are generated. Please verify that this works with a `make -j32` build on a 32 core machine (or at least 16), using a freshly configured build (i.e. not incremental) and running `make onepcm`. That ensures you got the dependencies mostly right :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336704976:271,config,configured,271,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336704976,1,['config'],['configured']
Modifiability,"> The git log should be enhanced with the new 'procedure' for version update. That seems to be a weird place, I'd rather want to keep it at https://root.cern/for_developers/release_checklist/. > One seeming drawback is that it is now 'possible' to forget to update the version number when going through the branching and the tagging for new versions. How is that different than before, where `build/version_number` needed to be updated by hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620#issuecomment-1713700974:24,enhance,enhanced,24,https://root.cern,https://github.com/root-project/root/pull/13620#issuecomment-1713700974,1,['enhance'],['enhanced']
Modifiability,"> The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-795003958:647,config,configuration,647,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-795003958,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:; - not all compile time flags made it from the build of ROOT to ; - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:; - try the `CXXFLAGS` test I mention above; - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11922#issuecomment-1357340575:539,config,config,539,https://root.cern,https://github.com/root-project/root/pull/11922#issuecomment-1357340575,3,['config'],['config']
Modifiability,"> The number of fixed-sized elements is returned by GetLen(). You meant GetLenStatic. GetLen is the 'effective' number of element and is including the leaf count information, it gives information about the entry last read (via GetEntry). So. ```; TLeaf *l = GetALeaf();; if (l->GetLeafCount() != nullptr) {; // this is a variable-sized array; } else if (l->GetLenStatic() > 1) {; // this is a fixed-sized array; } else {; // l->GetLen() == 1 and this is a single element; }; ```. > It's possible to have more than one leaf per branch. Very rare, however (I believe one has to do this fairly explicitly in the internals of ROOT?). It is not that rare. Any code not supporting must be instrumented to explicitly print a error and/or warning message when the case is encountered.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359015662:321,variab,variable-sized,321,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359015662,1,['variab'],['variable-sized']
Modifiability,"> The problem I see is that we are not always in control of the order modules are loaded. I may take care that I first configure the pythonizations I need then load the classes I want, but if somebody loads those classes before importing my module, then the code relying on the pythonizations is broken in unpredictable ways. I see, thank you for pointing this out. Then I'll try to do something like this: before the pythonizor is registered, I can check what cppyy has cached in all the namespaces concerned by the pythonizor (cppyy stores class proxies in their namespaces the first time they are accessed). If I find some class proxy that matches the condition of the pythonizor, I run the pythonizor on that proxy. That should detect the classes that were already used before the pythonizor is registered and are concerned by the pythonizor. I'd also like to know your opinion on this discussion: https://github.com/root-project/root/pull/9128#discussion_r751289042 , thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-972801025:119,config,configure,119,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-972801025,1,['config'],['configure']
Modifiability,"> The problem is that LCG cannot use builtins. That's only half-true, of course we do have builtins that LGC builds with just fine (libAfterImage, llvm, etc). But then we must not expose it as ""override-able"". So either it's not configurable and we always build our ""hacked"" zmq (exporting neither headers nor symbols, so the world doesn't care), or we wait until it's released.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981750448:229,config,configurable,229,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981750448,1,['config'],['configurable']
Modifiability,"> The problems with the event display I debug for some time. I try to chop the problems into smaller pieces and it mostly works but not this time.; > But does that mean that essentially to break TList/TCollection one can just delete any element from it manually and there will be no way to iterate safely over them?. That's correct. Unless you use the (newish) smart pointers **\*any\*** collection (i.e. also std::vector of pointers for example) or even any variable or data member that is a pointer must be updated whenever the pointee/contained objects is deleted (the list of cleanups is one mechanism to do the update indirectly). Since this problem (might) involve use of delete objects, I recommend that you running the event display under valgrind (```valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp name_of_executable .....```) which should be able to pin point where the object is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6749#issuecomment-721383299:459,variab,variable,459,https://root.cern,https://github.com/root-project/root/pull/6749#issuecomment-721383299,1,['variab'],['variable']
Modifiability,> The remaining issues would seem to be related to the way Clang is built for our ecosystem relative to how ROOT's internal Clang is built/configured. So you're not using the builtin clang then? I missed that so far. Are there any patches coming out of this issue that ROOT would need to take care of?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1549737147:139,config,configured,139,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1549737147,1,['config'],['configured']
Modifiability,"> The solution for external applications would be to set the running environmental variable PYTHONPATH to /opt/root/lib. At the moment, yes. We always import ROOT in the initialization of TPython, this keeps compatibility with the old TPython that was part of the old PyROOT, which imported ROOT as well (some users might rely on it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7370#issuecomment-829196364:83,variab,variable,83,https://root.cern,https://github.com/root-project/root/pull/7370#issuecomment-829196364,1,['variab'],['variable']
Modifiability,"> The travis-ci/pr result (clang-tidy) seems relevant (point to potential pre-existing problem). @Axel-Naumann @pcanal . 80-90% of messages from clang-tidy are false positives or not very important (like unused variables). And in case of `travis-ci/pr` it only reports about lines which are changed in PRs. Therefore it useless now. Probably, one should enable only really important errors from clang-tidy (like memory leak or wrong delete operator), but make them more prominent in PRs - send message in the thread like Jenkins does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7508#issuecomment-800009586:211,variab,variables,211,https://root.cern,https://github.com/root-project/root/pull/7508#issuecomment-800009586,1,['variab'],['variables']
Modifiability,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that ; * remove the check on DestructiveSerialization.; * Collapse the 2 functions into a single Impl functions; * Extend the test to cover the new known-to-work cases.; * Create a new issue on the still failing one (char); * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6558#issuecomment-703954227:424,Extend,Extend,424,https://root.cern,https://github.com/root-project/root/pull/6558#issuecomment-703954227,1,['Extend'],['Extend']
Modifiability,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-861746872:47,variab,variable,47,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-861746872,1,['variab'],['variable']
Modifiability,"> There is now a hard coded limit on the input size, is that the intent?. It is hard coded ""initial"" size of the buffer. ; Now it is the same as in a case when XML file is parsed.; If required, buffer will be extend.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2472#issuecomment-412568293:209,extend,extend,209,https://root.cern,https://github.com/root-project/root/pull/2472#issuecomment-412568293,1,['extend'],['extend']
Modifiability,"> This is (of course) the intent. Reading/writing to a variable across thread where there is no synchronization going on is C++ undefined behavior. A program with undefined behavior cannot be reasoned about as the compiler/CPU are not required to behave in a manner you expect. > Nonetheless, can you try the following patch to see if it helps:. Given the failure is 1 in 10^4-10^6 range, we have no good way to reproduce and therefore a patch to test isn't really likely to be conclusive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15090#issuecomment-2027521011:55,variab,variable,55,https://root.cern,https://github.com/root-project/root/issues/15090#issuecomment-2027521011,1,['variab'],['variable']
Modifiability,"> This looks quite good already, but consider removing the helper class.; > ; > ```c++; > if (templateParameter); > ```; > ; > won't have any runtime overhead with any decent compiler, and both `dynamic_cast` and `static_cast` are syntactically correct code paths, so no `if constexpr` required. > This looks quite good already, but consider removing the helper class.; > ; > ```c++; > if (templateParameter); > ```; > ; > won't have any runtime overhead with any decent compiler, and both `dynamic_cast` and `static_cast` are syntactically correct code paths, so no `if constexpr` required. Thanks for the comments! Before I address the other comments: just one answer to this comment. No, it seems that `dynamic_cast<T*>` is not syntactically correct if T is not polymorphic, e.g. it has not virtual method. You can for example see that this code doesn't compile:. ```C++; struct A {; void foo() {}; };. struct B : public A {; void bar() {}; };. int main() {. A* ptr = new B;; dynamic_cast<B*>(ptr);; delete ptr;; }; ```; Here is the error:; ```; collection_cast.cc: In function ‘int main()’:; collection_cast.cc:95:5: error: cannot ‘dynamic_cast’ ‘ptr’ (of type ‘struct A*’) to type ‘struct B*’ (source type is not polymorphic); 95 | dynamic_cast<B*>(ptr);; | ; ```. So we have to find a way to make the decision static_cast/dynamic_cast at compile time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-890998817:765,polymorphi,polymorphic,765,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-890998817,2,['polymorphi'],['polymorphic']
Modifiability,"> This means, that they remain open but zero bytes are served,; > (I'm getting data for some files but zero bytes for other files). Do you know if the xrootd routine just ""hang"" in that case or return with request to retry later? If they just hang there is not much I can see doing to detect the case unless there is an xrootd routine that detect/support this case that we could replace the current call with. (and we would need some help to update the xrootd plugin in ROOT to support and test this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11276#issuecomment-1253892312:460,plugin,plugin,460,https://root.cern,https://github.com/root-project/root/issues/11276#issuecomment-1253892312,1,['plugin'],['plugin']
Modifiability,"> This seems to be a generic feature and I think it is worth documenting a little more. I do not see a lot of tests. I believe we should add some be it only for documentation purposes of this PR. I'd be interested to see what is the exact transformation happening and why only the definitions are hidden. As requested, I have extended the Doxygen documentation. This PR does not include tests, though (to be added in a future PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-527495903:326,extend,extended,326,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-527495903,1,['extend'],['extended']
Modifiability,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2167916383:253,variab,variables,253,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2167916383,2,['variab'],['variables']
Modifiability,"> Those cases could occur, but I think it is probably a misuse of the API. I have updated the test cases to include that. Let me know what you think; otherwise, as you said, we could just remove that possible per-column vector write optimization. That's a nice way to test it! Still, for reasons of maintainability I'd be more in favor of removing the per-column vector write optimization. It's quite some code that is most likely never executed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775#issuecomment-1169652245:299,maintainab,maintainability,299,https://root.cern,https://github.com/root-project/root/pull/10775#issuecomment-1169652245,1,['maintainab'],['maintainability']
Modifiability,"> To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you. Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2130644418:54,config,config,54,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2130644418,2,['config'],['config']
Modifiability,"> To my understanding, ClassDef required either for I/O and/or if class used with interpreter. Not only. If an object inherits from `TObject`, it gets the member functions `IsA` and `Class`. If the derived class does have a `ClassDef` those will returns the wrong answer (i.e `this is object is a TObject` rather than `this object is a derived class`). In practice this means that the behavior will be inconsistent and ***some things*** will fail silently (for example the Graphical interface will not be able to know which type object this is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638492051:118,inherit,inherits,118,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638492051,1,['inherit'],['inherits']
Modifiability,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:; ZLIB decompression is already doing the right thing.; ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different.; ; > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:; ```; Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap; ```; and used via; ```; char *bufcur = &fBuffer[fKeylen];; ```; so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:; * why are those added?; * why doesn't RNTuple need it?. 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932803605:253,config,configuration,253,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932803605,1,['config'],['configuration']
Modifiability,"> Try to change these lines. on Windows, the binaries are in the `$<CONFIG>/bin` directory, `$<CONFIG>` being only known at build time. Thanks @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628#issuecomment-1935903222:68,CONFIG,CONFIG,68,https://root.cern,https://github.com/root-project/root/pull/14628#issuecomment-1935903222,2,['CONFIG'],['CONFIG']
Modifiability,"> Very good. How did you notice?. The `cmake` configure output didn't show the options that I was expecting, in particular `-std=c++17` for macOS... The `CMAKE_BUILD_TYPE` override isn't really nice because we are changing it behind the script's back; it would be nicer if the binary cache was also put into the correct directory, right now it's always `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14108#issuecomment-1826088590:46,config,configure,46,https://root.cern,https://github.com/root-project/root/pull/14108#issuecomment-1826088590,1,['config'],['configure']
Modifiability,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 ; And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build?. That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16715#issuecomment-2435518243:311,variab,variables,311,https://root.cern,https://github.com/root-project/root/issues/16715#issuecomment-2435518243,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415#issuecomment-793966296:240,config,configure,240,https://root.cern,https://github.com/root-project/root/pull/7415#issuecomment-793966296,1,['config'],['configure']
Modifiability,"> We should make sure that inside we use `int64_t` (represented in ROOT as Long64_t) instead of just long which is not portable. Wouldn't this break backward compatibility of TArrayL vs TArrayL64, or be inconsistent with that naming convention?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1279199373:119,portab,portable,119,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1279199373,1,['portab'],['portable']
Modifiability,"> What does git blame says about the code we remove? Was that added separately to address some specific problem?. Regarding forcing symbol emission, this was added all the way back in 2016 / 2017 by commits https://github.com/root-project/root/commit/189025d7682ad27614f32dd00cabf221046b71ea and https://github.com/root-project/root/commit/1c19e0ab4a039c83821d10169c5f0c1877c89ba4. You tried to reduce this during the upgrade to LLVM 9 (https://github.com/root-project/root/commit/696d5428d7a8863e72f4ad12b32c43fa1110eabd#diff-6e2f3604a761eaec5f5cda89a7dda68ab5a46e4369278267764daff49efaff74), Axel added back the full loop for Windows: https://github.com/root-project/root/commit/2c4a756d38d9b5f0348f645a116b3014159f03d6 The CI is green on Windows, and I believe it's not needed anymore with the current lookup mechanisms in ORCv2. The lookup in `addOrReplaceDefinition` was added during the upgrade to LLVM 13 and the rewrite to ORCv2: https://github.com/root-project/root/commit/5c8451557d6eb578468a48acd87ba51e8d17304b#diff-6f538c4c81f9684d6b725af96572958f38a55ddbf11226ac5404a35b8caca965 I don't think this was ever necessary, as argued in the commit message: ""Calling `getSymbolAddress` will force symbol emission, which is not needed if the intent is to replace it.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15966#issuecomment-2203206905:920,rewrite,rewrite,920,https://root.cern,https://github.com/root-project/root/pull/15966#issuecomment-2203206905,1,['rewrite'],['rewrite']
Modifiability,"> What is the advantage of having RNTuple distinct from RNTupleAnchor?. I did it for class hierarchy reasons. In this way, the page storage layer (which is also part of RNTupleLite) does not need to know about the RNTuple class. Depending on how the `RNTuple` interface evolves in the future, we may move it out of the RNTuple library into, e.g., a new `RNTupleUI` library so that the `RNTuple` class can reference RDF classes (like `RNTuple::MakeRDF`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10558#issuecomment-1126019356:270,evolve,evolves,270,https://root.cern,https://github.com/root-project/root/pull/10558#issuecomment-1126019356,1,['evolve'],['evolves']
Modifiability,"> When reading trees/chains, I'm not sure the configuration object will allow anything more than what we can already do with TEntryLists?. But that's the thing, with the configuration object we won't need to construct TEntryLists, at least not at the DistRDF level. This means we won't need localstarts and localends. > IIUC the redundant info is that globalend = globalstart + (localends - localstarts).sum() (i.e. we could avoid passing globalend). You can avoid passing `localstarts` and `localends`, since you can calculate them from `globalstart, globalend, filelist, treesnentries`. The latter is what I expect we would need if we use RDF with a configuration object: globalstart and globalend would be included in the configuration object to represent a range in the dataset, and `filelist` and `treesnentries` would be used to construct the TChain with which we would construct the RDF.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646#issuecomment-895336570:46,config,configuration,46,https://root.cern,https://github.com/root-project/root/pull/8646#issuecomment-895336570,4,['config'],['configuration']
Modifiability,"> Why ""all"" volumes? Wouldn't we be limited with the set of ""directory of the dll"" and directorys in %PATH% and other path variables?. No, as I said, I will most probably check only in the directories listed in the `%LIB%` environment variable",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156#issuecomment-672226907:123,variab,variables,123,https://root.cern,https://github.com/root-project/root/pull/6156#issuecomment-672226907,2,['variab'],"['variable', 'variables']"
Modifiability,"> Why we cannot have the test directory use the common ROOT configuration?. Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:; https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:; https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15490#issuecomment-2113616304:60,config,configuration,60,https://root.cern,https://github.com/root-project/root/pull/15490#issuecomment-2113616304,2,['config'],['configuration']
Modifiability,"> Will you do it?. Yes. This year we plan to do a major upgrade to the build system to follow “modern CMake” constructs, and to make ROOT follow FHS more closely. This will definitely include updates to FindROOT.cmake and friends like `root-config`. Since you agree that not using `root-config` is better, I am closing this PR, but we can open a JIRA issue to track progress on this particular problem (slowness of `FindROOT.cmake`) if you'd like.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1569#issuecomment-361870459:241,config,config,241,https://root.cern,https://github.com/root-project/root/pull/1569#issuecomment-361870459,2,['config'],['config']
Modifiability,"> With eclipse, for example, the problem is that you can set up your IDE to ""work"" in the build directory, but then it will only see the headers and not the source files. But you can compile.; > Or you set it up in the source directory. In this case, it sees everything, but you cannot necessarily compile (unless you make the compile command something like `cd ../build_dir; make` or similar.; > Or you set it up with both directories, but now you see every header twice. In VS you can just ""open the folder"" where ROOT is checked out and VS may even be smart enough to configure using CMake. Code navigation and intellisense (code completion and various kinds of assistance) usually work sufficiently. However, in this ""open folder"" mode, VS does not know all the compile options ROOT is configured with. Like compiler flags, preprocessor macros etc. Therefore it cannot run static code analysis from the IDE or while editing. You can only have these features if VS fully knows how the build works. Then you get these red squiggles for possible compile errors (before actually compiling) or the green squiggles for clang-tidy, clang static analyser or the Microsoft code analysis while typing, which is super useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6010#issuecomment-656564708:571,config,configure,571,https://root.cern,https://github.com/root-project/root/pull/6010#issuecomment-656564708,2,['config'],"['configure', 'configured']"
Modifiability,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test; > ... but; > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:; > ; > ```; > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):; > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified.; > Call Stack (most recent call first):; > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY); > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY); > ```; > ; > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > ; > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > ; > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before.; > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY; > ; > ```cmake; > IF(TARGET ${dictionary}); > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>); > ENDIF(); > ```; > ; > ```cmake; > IF(TARGET ${dictionary}); > target_sources(${dictionary} PRIVATE ${gensrcdict}); > ENDIF(); > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587581863:14,variab,variable,14,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587581863,2,['variab'],['variable']
Modifiability,"> Would it be acceptable to follow this change for v6.30 and up?. From my point of view, that's perfectly fine (and I'm welcoming this change!) — in the long run, that will also get rid of things like:; https://github.com/Homebrew/homebrew-core/blob/45a7698ed083556248e6c813436719f507f80a5e/Formula/r/root.rb#L13; and likely many other such constructions :wink:. . Of course, it will need changes in the downstream tools which already showed up here (and likely more), and ideally, the change would be carried through all places in ROOT (i.e. the banner / logo, the website at https://root.cern/install/all_releases/ etc.), but that will probably take some iterations to catch everyting. . To increase visibility, I guess a warning / announcement in the release notes would be sufficient — `root-config` and the website (which is parsed by some package management tooling, as shown above) are the changes which are most likely to cause breakage in tools which are not prepared for the change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1828463249:796,config,config,796,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1828463249,1,['config'],['config']
Modifiability,> Would it be better for me to evolve the code towards the new TStreamInfo? . You would need it only if you need to read files produces by v5 *and* the reading actually fail. > CytStatInfo.cpp:56: warning: ignoring #pragma link C [-Wunknown-pragmas]. Those should not be in the source file. How to you invoke `rootcint` (and/or `rootcling`)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755#issuecomment-1535153771:31,evolve,evolve,31,https://root.cern,https://github.com/root-project/root/issues/12755#issuecomment-1535153771,1,['evolve'],['evolve']
Modifiability,> Yes let's expose to users and we see how this fares. If we run into problems we make it less visible (e.g. only for notebooks). I think that is not the best approach. My general worry is that we are turning by default a feature which messes up with the lookup tables with no tests to improve the less used feature of unloading. I would propose to make this feature configurable and enable it only for ROOT through TCling to gather some usage experience.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532584411:367,config,configurable,367,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532584411,1,['config'],['configurable']
Modifiability,"> Yes, but realistically the exact same code can be run on different machines in different directories. It shouldn't make a difference whether I run something in /home/username/ or in /tmp/tmpdir_q4qw3/sandbox. Just do not use absolute path name when creating file. If you are using constructor:; ```; new TFile(""name.root?reproducible"",""recreate""); ```; `name.root` will be stored in file header.; And it can be reproduced on all nodes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-524224760:202,sandbox,sandbox,202,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-524224760,1,['sandbox'],['sandbox']
Modifiability,"> Yes, it's true that this class (or formerly two classes) are not covered by unit tests yet (and have never been). But I have some user workflows that I found using this class, and soon after fixing some remaining problems with that workflow I will make unit test out of it. As a proposal for the future, maybe change the order: Refactorings are always safer if there are tests exercising the code paths that are changed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12767#issuecomment-1535978068:330,Refactor,Refactorings,330,https://root.cern,https://github.com/root-project/root/pull/12767#issuecomment-1535978068,1,['Refactor'],['Refactorings']
Modifiability,"> Yes. That would be an improvement IMO because then an attacker would need to modify the workflow, which is more visible. Can't think of an elegant solution right now but I guess it could be stored as a variable in python and then deleted/restored at the right moments. (or never restored at all, it runs in a container)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1412514253:204,variab,variable,204,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1412514253,1,['variab'],['variable']
Modifiability,> [tcling] Use the autoload raii autoload object in RegisterModule. NFC . Could you extend the commit log to explain why the change is NFC (despite some of the call being 'conditional' in the old code and not in the new code).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3769#issuecomment-489451947:84,extend,extend,84,https://root.cern,https://github.com/root-project/root/pull/3769#issuecomment-489451947,1,['extend'],['extend']
Modifiability,"> `-Dimt=OFF -Dbuiltin_tbb=OFF`. I tried to add the 2 options you said, you can check the below steps, it still failed. The result look the same as the original error of this issue.; 1. `cmake -G ""Visual Studio 17 2022"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off -Dimt=OFF -Dbuiltin_tbb=OFF ..` ; 2. `msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild`. error message:; `C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\gitP\root-project\root\build_arm64ec\CMakeFiles\c47203b562f7dfc78de28a6cb0d4e391\Options.inc.rule;C:\gitP\root-project\root\build_arm64ec\CMakeFiles\ef6b5551e87d9b29a1350db42d169b36\ClangDriverOptions.rule;C:\gitP\root-project\root\interpreter\llvm-project\clang\include\clang\Driver\CMakeLists.txt' exited with code -1073741819.`. detailed logs:; [ROOT_Setup_arm64ec.log](https://github.com/user-attachments/files/16309437/ROOT_Setup_arm64ec.log); [ROOT_build_arm64ec.log](https://github.com/user-attachments/files/16309436/ROOT_build_arm64ec.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787#issuecomment-2238657100:379,Config,Configuration,379,https://root.cern,https://github.com/root-project/root/issues/11787#issuecomment-2238657100,1,['Config'],['Configuration']
Modifiability,"> ```; > +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TBaseClass>alreadyinTClassTable; > +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TEnumConstant>alreadyinTClassTable; > ```; > ; > The template ROOT::Detail::TTypedIter uses ClassDefInline and the registration of the class (i.e. the call to TClassTable::Add) is triggered by via a function static variable initialization. What these messages indicates (and we see that on Windows also) is that the ""function static variable"" are initialized multiple time.; > ; > Setting a breakpoint on TClassTable::Add with the condition `cname[0] == 'R' && cname[6] == 'D' && cname[24]=='<' && cname[32] == 'E'` will tell you exactly when/why this happens (on Windows, multiple library have identical copies of the functions and they are not ""de-duplicated"" by the linker (i.e. both copies are brought in independently). GDB did not stop there but I can see we have the same symbol in libCore.so and libTree.so (both are weak). These failures might have something to do with the 3 remaining failing tests in cling standalone (@Axel-Naumann is looking into them). Thanks for investigating!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-703223267:377,variab,variable,377,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-703223267,2,['variab'],['variable']
Modifiability,"> `clang-format` 14.0 in our check complains now:; > ; > ```; > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar; > Enabled: false; > ^; > ```. Sorry about that, It complied with my local schema:. ```; ""AlignConsecutiveAssignments"": {; ""title"": ""Style of aligning consecutive assignments."",; ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14690#issuecomment-1946111503:1473,config,configuration,1473,https://root.cern,https://github.com/root-project/root/pull/14690#issuecomment-1946111503,1,['config'],['configuration']
Modifiability,"> `json_fwd.hpp` exists since a while and included in many early distributions. My OpenSUSE has `nlohmann/json.hpp` version 3.10.5 with such forward declaration.; > ; > Problem is ROOT builds where `nlohmann/json.hpp` can be found only with extra settings for shell variables. In such cases none of its includes can be used in public ROOT interfaces. I know, but we have to do something, and as agreed on Wednesday, we actually *want* to ensure that users have the same version of `nlohmann/json`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11205#issuecomment-1220364104:266,variab,variables,266,https://root.cern,https://github.com/root-project/root/pull/11205#issuecomment-1220364104,1,['variab'],['variables']
Modifiability,"> a) because that's out of scope for this PR (I did not add the #include). Since `cstddef` usually includes `stddef.h` and adds a bit of C++ extras, there's no harm in changing it to the C++ header. > b) because we need size_t, not std::size_t. Even though the standard says that only `std::size_t` needs to be defined, `size_t` is defined anyway, because `cstddef` usually includes `stddef.h` before adding the C++ stuff on top. This is what I see in GCC; ```cpp; #ifndef _GLIBCXX_CSTDDEF; #define _GLIBCXX_CSTDDEF 1. #pragma GCC system_header. #include <bits/c++config.h>; #include <stddef.h>. #if __cplusplus >= 201103L; namespace std; {; // We handle size_t, ptrdiff_t, and nullptr_t in c++config.h.; using ::max_align_t;; }; #endif. #endif // _GLIBCXX_CSTDDEF; ```; and Boost; ```cpp; #ifndef __CSTDDEF_HEADER; #define __CSTDDEF_HEADER. #include <stddef.h>. namespace std {; using ::ptrdiff_t;; using ::size_t;; }. #endif // CSTDDEF_HEADER; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/668#issuecomment-310004523:564,config,config,564,https://root.cern,https://github.com/root-project/root/pull/668#issuecomment-310004523,2,['config'],['config']
Modifiability,"> but then it is not clear at all what to do. - Click on ""Configure Project"".; - After that, you can override the default DOCU_INPUT or DOCU_THREADS, or DOXYGEN_EXECUTABLE, as you consider. (under Projects, Build settings).; - Finally click on the Build icon (hammer).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1083459839:58,Config,Configure,58,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1083459839,1,['Config'],['Configure']
Modifiability,"> clang-format is ""wrong"" for ROOT header files. It does not support the align the function member name that we have been using since the start of the project. And indeed large ""white space"" only changes should be in their own PR. I temporarily turned on declaration alignment and ran clang-format. Unfortunately, member functions are also not perfectly aligned in ROOT and that confuses clang-format. If aligning member function names is a desire, I suggest to consider trailing return types. It's beautiful! And you there is also a clang-tidy check to rewrite all signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-656612230:554,rewrite,rewrite,554,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-656612230,1,['rewrite'],['rewrite']
Modifiability,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1255476176:80,config,config,80,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176,3,['config'],['config']
Modifiability,"> consider marking TKey final,. TBasket inherits from TKey.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-616804219:40,inherit,inherits,40,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-616804219,1,['inherit'],['inherits']
Modifiability,"> ctually, for me it does not seem to improve the code quality. The advantage is that the next time we refactor the code we will not forget the delete statements (this is what happened here) and make it clearer that the ownership is not delegated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2361#issuecomment-409641166:103,refactor,refactor,103,https://root.cern,https://github.com/root-project/root/pull/2361#issuecomment-409641166,1,['refactor'],['refactor']
Modifiability,"> do we need to keep R__USE_CXX11 and friends? Could be as easy as #if __cplusplus > ... #define R__USE_CXX11. I'd still prefer to get rid of them as there is no usage in ROOT. Yes. The R__USE were brought to life at a point of time where __cplusplus was not well defined *and* was not a good proxy for the compiler's actual feature set ... and we had not yet thought of and/or decide to purse try_compile (or configure equivalent). Nowadays, I think we should almost never really on __cplusplus but rather on try_compile (and thus furthermore not on R__USE_CXX11)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3183#issuecomment-448983469:410,config,configure,410,https://root.cern,https://github.com/root-project/root/pull/3183#issuecomment-448983469,1,['config'],['configure']
Modifiability,"> fname1 might be the right variable. However you code is misplaced.; > In your opinion, what does the code:; > ```; > if (!fname1 || !fname1[0]) {; > ....; > }; > ```; > given that `fname1` point to a `const char *` used as a C string?; > ; > > I havent been able to compile root locally as it throws me the error; > ; > We need to fix this first. PR should be uploaded/opened only once you have been able to verify their correctness locally (unless specifically requested by your mentor).; > ; > > ./root.exe: symbol lookup error: ./root.exe: undefined symbol: _ZN5TRintC1EPKcPiPPcPvibb ; > ; > This is very odd and might indicates a misconfigured build.; > ; > What was your cmake command line? What is your Operating System?. For cmake I just did ; ```; cd rootbuild; cmake ../root; make ; ```; I'm on WSL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10656#issuecomment-1147818517:28,variab,variable,28,https://root.cern,https://github.com/root-project/root/pull/10656#issuecomment-1147818517,1,['variab'],['variable']
Modifiability,"> he really new thing (although maybe not a product, but side-effect) is the p. But p stays null. F(x) is stored to a temporary variable, p is not set to F(x). > (if it really calculates them inside, that is quite surprising). It does. It's a technical workaround to have both paths to follow the same code. > It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least). I agree with you. So I would suggest to remove from your title ""add new method to handle this case"".; Making it non-default would force everyone to pass an argument. If one wants the old behavior, it will pass nullptr and get the bin edges as before, so no new extra method is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16784#issuecomment-2444656410:128,variab,variable,128,https://root.cern,https://github.com/root-project/root/issues/16784#issuecomment-2444656410,1,['variab'],['variable']
Modifiability,"> hi @bellenot : would it be hard to expose the standard in a potential new ROOT_CXX_STANDARD variable in your opinion?. No, but that requires quite some changes, also for the projects using ROOT. I'll investigate (I have plenty of changes for CMake on Windows anyway)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644#issuecomment-1833375824:94,variab,variable,94,https://root.cern,https://github.com/root-project/root/issues/7644#issuecomment-1833375824,1,['variab'],['variable']
Modifiability,"> if you just link your project with ROOT using those targets. in reality most projects set their `CMAKE_CXX_STANDARD` which trumps the target's property. > you can call get_property on a target to check this. ah, that's already way better than regex-matching, thanks!. > exporting this in a variable as well can make it easier for users indeed. :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644#issuecomment-1729641778:292,variab,variable,292,https://root.cern,https://github.com/root-project/root/issues/7644#issuecomment-1729641778,1,['variab'],['variable']
Modifiability,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308#issuecomment-787188897:92,inherit,inheritance,92,https://root.cern,https://github.com/root-project/root/issues/7308#issuecomment-787188897,3,"['evolve', 'inherit']","['evolve', 'inheritance']"
Modifiability,"> not really, but maybe I don't understand the question. what problems would you expect?. I'm thinking of a macro where somewhere in the first 100 lines you define filters, derived columns, etc. and eventually a Histo1D `histAbc`. The macro goes on. In line 300, you start using `histAbc`, position the legend, tune the axis, etc. At this point, however, you don't see anymore what the histogram contains because it has been defined way up. A bit like variable declarations in Pascal, where they always have to be at the beginning of a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7107#issuecomment-778201421:452,variab,variable,452,https://root.cern,https://github.com/root-project/root/pull/7107#issuecomment-778201421,1,['variab'],['variable']
Modifiability,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239#issuecomment-849364317:16,config,config,16,https://root.cern,https://github.com/root-project/root/pull/8239#issuecomment-849364317,2,['config'],"['config', 'configuration']"
Modifiability,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-778310928:15,variab,variable,15,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-778310928,1,['variab'],['variable']
Modifiability,"> or the default configuration for something we don't set manually changed. We tried to set everything explicit. If you find out what it is, we ought to update the .clang-format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/505#issuecomment-293935579:17,config,configuration,17,https://root.cern,https://github.com/root-project/root/pull/505#issuecomment-293935579,1,['config'],['configuration']
Modifiability,"> pcre2 10.40 (as mentioned in #11395) already comes with a pcre2-config.cmake (https://github.com/PCRE2Project/pcre2/blob/pcre2-10.40/cmake/pcre2-config.cmake.in) file. Can that be used instead of adding FindPCRE2.cmake ?. The packaged pcre2 in Fedora and RHEL/CentOS/Rocky/Alma does not ship the cmake files. They are only create/installed if pcre2 is built using cmake. The RPM for Fedora and RHEL are built using autotools, and therefore do not contain the cmake files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13771#issuecomment-1770946480:66,config,config,66,https://root.cern,https://github.com/root-project/root/pull/13771#issuecomment-1770946480,2,['config'],['config']
Modifiability,"> sounds both plausible and simple :-) Let us know, please!. I struggle a bit to find out exactly where CMake gets the LLVM library, unfortunately it doesn't look like it uses `llvm-config --libs`...; Will look around though",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666920625:182,config,config,182,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666920625,1,['config'],['config']
Modifiability,"> the 'size' variable is greater than 'maxsize'. . In principle, it is wrong set of arguments. `maxisze` is intend to be allocated memory size. ; But now I add check for such situation. > The old error-prone implementation worked at all my tests :). It was by chance. With old code if one call `SetNull(0)` and then `SetInt(0,0)` was causing segmentation violation. If I understand correct, all other tests fine for you.; If yes, I will merge changes in master. Do you need these fixes in older branches - like 6.22 or 6.20?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-774525353:13,variab,variable,13,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-774525353,1,['variab'],['variable']
Modifiability,"> the link you posted is broken. sorry, I rewrite the links",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633403375:42,rewrite,rewrite,42,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633403375,1,['rewrite'],['rewrite']
Modifiability,"> the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf. Small correction: Commit 2d304cf is not a reversion, but a cleanup of the infrastructure for the previous implementation; it happened in the same PR. > Reproducer: runtime_cxxmodules-reproducer.tar.gz. I have to say, this was quite hard to use and it took me some time to guess how things are supposed to work:; 1. Don't install a released version of cetmodules, but use the one in `third_party/` - I eventually found `standalone/runit`.; 2. The `cmake` configuration failed even with CMake 3.22 or CMake `master`: `$<EQUAL> parameter is not a valid integer.` - I replaced it with `STREQUAL` (in `third_party/cetmodules/Modules/BuildDictionary.cmake`).; 3. I have to specify `CMAKE_CXX_STANDARD=17` manually for the reproducer project. Anyway, I have it running now with `runtime_cxxmodules_9583_good` passing and `runtime_cxxmodules_9583_bad` crashing:; ```; #5 0x00007ff9c7acc0f0 in clang::Stmt::getEndLoc() const () from /home/jhahnfel/ROOT/build/lib/libCling.so; #6 0x00007ff9c797c8c8 in clang::FunctionDecl::setBody(clang::Stmt*) () from /home/jhahnfel/ROOT/build/lib/libCling.so; #7 0x00007ff9c5688477 in cling::AutoSynthesizer::Transform(clang::Decl*) () from /home/jhahnfel/ROOT/build/lib/libCling.so; #8 0x00007ff9c56a3f17 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/jhahnfel/ROOT/build/lib/libCling.so; #9 0x00007ff9c56a409f in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/jhahnfel/ROOT/build/lib/libCling.so; #10 0x00007ff9c56a4241 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jhahnfel/ROOT/build/lib/libCling.so; #11 0x00007ff9c5b21150 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jhahnfel/ROOT/build/lib/libCling.so; #12 0x00007ff9c643e4b7 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/jhahnfel/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9664#issuecomment-1020921609:546,config,configuration,546,https://root.cern,https://github.com/root-project/root/issues/9664#issuecomment-1020921609,1,['config'],['configuration']
Modifiability,"> turning by default a feature which messes up with the lookup tables. How does it mess things up?. > with no tests. As I said that won't be the case. > to improve the less used feature of unloading. I don't understand this part - do you mean unloading isn't used a lot? That's totally incorrect - it's the major missing feature of cling for physicists. Not even talking about all of cling's notebook users here. > make this feature configurable. Do you really believe we need a flag beyond `.rawInput`? Could you argue for this, please? Too many options kill usability...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532585952:433,config,configurable,433,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532585952,1,['config'],['configurable']
Modifiability,"> we might have broken old analysis, no?. I hope no real RDF code reads in-memory trees that have been just been written and that use the same underlying variable for multiple branches :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11522#issuecomment-1273313004:154,variab,variable,154,https://root.cern,https://github.com/root-project/root/pull/11522#issuecomment-1273313004,1,['variab'],['variable']
Modifiability,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5445#issuecomment-618848281:195,config,configuration,195,https://root.cern,https://github.com/root-project/root/pull/5445#issuecomment-618848281,1,['config'],['configuration']
Modifiability,"> what is ODR-using kNPOS?. https://godbolt.org/z/4EYM6nrnn. > With C++17, they are automatically inline and should not need the definition out-of-line. You can make a variable inline which does not need a definition outside of the class but they do not become inline automatically, iiuc. I expect if you make it inline to pollute all .o files and .so files. However, we do not seem to have an odr-use of this anywhere so the symbol is elided. So when python asks for `TString::kNPOS` we cannot promise that somebody throughout a codebase would have odr-used it - instead, the JIT should be able to force codegen of its symbol and provide it. The problem with the current cppyy is that it would exhaustively enumerate all of the members of a class which triggers that error. It's probably not worth fixing this as it is already fixed by design with the rework of cppyy we are doing... . > nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l. Can you do: `nm $ROOTSYS/lib/*.so | grep TString | grep kNPOS | wc -l`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860657604:168,variab,variable,168,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860657604,1,['variab'],['variable']
Modifiability,> what tests would you like to see?. At the very least tests in roottest/root/io/newstl (and possibly roottest/root/io/datamodelevolution/stl). There is a pattern for each class template. For example follow the use of listHolder[.C] or vectorHolder[.C]. It might be as easy as duplicating those and extending srun.C.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6960#issuecomment-747600325:299,extend,extending,299,https://root.cern,https://github.com/root-project/root/pull/6960#issuecomment-747600325,1,['extend'],['extending']
Modifiability,"> where the configure/Makefile dependencies (e.g. autoconf) . I think you might have meant:. > where the configure/Makefile dependencies (e.g. autoconf input files) . As in the failing case `autoconf` is not installed and if it was installed and was causing the problem, having `configure/Makefile` appear older than the extraction time would only make thing worse, woudn't it. (i.e. the reason the new behavior fails is the content's is time stamp to some arbitrary time (close to extraction time) which does not respect (anymore) the internal ordering of the time stamp of the content. This sounds literally like a bug in `CMake`'s implementation of the new behavior (which is very desirable ... for the cases where the tar files is updated more than once per decades).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11742#issuecomment-1320353970:12,config,configure,12,https://root.cern,https://github.com/root-project/root/pull/11742#issuecomment-1320353970,3,['config'],['configure']
Modifiability,"> where we want to 'stop' wasting time for the rest of the process by not even trying to use IoURing. That makes sense, but I feel this is a fairly niche optimization. It is only expected to arise if someone has requested the uring feature but does not have a viable system configuration for it to work (which unfortunately is the case for most distro default settings today). And in that case, I think it's reasonable to have a potential slight slowdown (and/or some repeated warnings) on an improperly configured machine. Especially since the fix doesn't require recompilation but a one-line adjustment to the user's `memlock` limits (we can improve documentation about this). To minimize the chances of it showing up at all, we could also reduce the default queue size -- maybe 1024 is too large.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824312511:274,config,configuration,274,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824312511,2,['config'],"['configuration', 'configured']"
Modifiability,"> why are all these super-important methods undocumented?. 'because' the code is ancient :( .... and there is some sparse documentation. TLeaf::GetLen has a one len documenation and GetLenStatic is trivial get for fLen (yes, the name don't match :( ) which has a documentation line. In summary the extent of the doc is:. ```; GetLenStatic : Number of fixed length elements.; GetLen : Return the number of effective elements of this leaf.; ```; And effectively we have the relationship:; ```; GetLen() == ( GetLenStatic() * variableDimensionSize ); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359049449:523,variab,variableDimensionSize,523,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359049449,1,['variab'],['variableDimensionSize']
Modifiability,"> 🤷‍♂️ no idea how setting a variable that isn't referenced anywhere would have an effect, but sure, if it's fixing it!. It's used here:; ```; if(ARG_BUILTINS); foreach(arg1 ${ARG_BUILTINS}); if(${arg1}_TARGET); add_dependencies(${library} ${${arg1}_TARGET}); endif(); endforeach(); endif(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12777#issuecomment-1536341138:29,variab,variable,29,https://root.cern,https://github.com/root-project/root/pull/12777#issuecomment-1536341138,1,['variab'],['variable']
Modifiability,">; $ env XRD_LOCALMETALINKFILE=1 root -l; root [0] auto f = TFile::Open(""root://localfile//home/amadio/hsimple.meta4""); (TFile *) @0x7fff1a925858; root [1] f->GetName(); (const char *) ""root://localfile//home/amadio/hsimple.meta4""; root [2] f->ls(); TNetXNGFile**		root://localfile//home/amadio/hsimple.meta4	Demo ROOT file with histograms; TNetXNGFile*		root://localfile//home/amadio/hsimple.meta4	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple. ```; Note that you must use the deprecated form for the URL (`root://localfile//...`), using the new form with `file://localhost/path/file.meta4` doesn't work (at least I could not make it work). That said, now that #11644 is merged, if you use ROOT's master branch and place your .meta4 file somewhere on EOS (i.e. somewhere in `/eos/...`), the redirection will now happen automatically, without the need to set environment variables:; ```bash; $ ssh lxplus9; lxplus ~ $ source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos9-gcc12-opt/setup.sh ; lxplus ~ $ root --version; ROOT Version: 6.27/01; Built for linuxx8664gcc on Nov 12 2022, 00:16:00; From heads/master@v6-25-02-2732-ga05d4beded; lxplus ~ $ cd /eos/home-a/amadio; lxplus amadio $ cat hsimple.meta4; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">; <file name=""hsimple.root"">; <url location=""ch"" priority=""1"">root://eosproject-r.cern.ch//eos/project/r/root-eos/public/hsimple.root</url>; <url location=""ch"" priority=""2"">root://eoshome-a.cern.ch//eos/user/a/amadio/hsimple.root</url>; </file>; </metalink>; lxplus amadio $ root -l; root [0] auto f = TFile::Open(""hsimple.meta4""); (TFile *) 0x2679210; root [1] f->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/hsimple.meta4""; root [2] f->ls(); TNetXNGFile**		root://eoshome-a.cern.ch//eos/user/a/amadio/hsimple.meta4	Demo ROOT f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11653#issuecomment-1315158490:1706,variab,variables,1706,https://root.cern,https://github.com/root-project/root/issues/11653#issuecomment-1315158490,1,['variab'],['variables']
Modifiability,">; > and XROOTD seems to have built successfully, but there seems to be some other errors. The configure step said that the ROOT version is 6-27-01. [build_out.log](https://github.com/root-project/root/files/8626646/build.log) [build_err.log](https://github.com/root-project/root/files/8626647/build_err.log). @eguiraud seems similar to https://root-forum.cern.ch/t/error-for-installing-root-source-in-ubuntu-22-04/49803/21",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518#issuecomment-1117901009:95,config,configure,95,https://root.cern,https://github.com/root-project/root/issues/10518#issuecomment-1117901009,1,['config'],['configure']
Modifiability,">> Also I suppose there are ways to reduce the up-front cost of the rootpcms (for example delaying their loading until needed); > That's what I am after. Do you have something in particular in mind. Currently, the rootpcms file is loaded when the library is loaded. Instead it could be open whenever there is a call to TClassTable::GetProtoClass for one of its content. This would require:. (a) have a (persistent) data structure that list of the available content of the rootpcms.; (b) extend the TClassTable data structure to record that information; (c) in TClassTable::GetProtoClass if the TProtoClass is no there but there is rootpcms listed, then open the rootpcms and load. When opening the rootpcms one should load all the TProtoClasses since opening the file takes time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-659533156:487,extend,extend,487,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-659533156,1,['extend'],['extend']
Modifiability,">> Should fASTProperty be inside fClassProperty, (and if not why)?; > How to manage the setting of the property together with the ones in the protoclass (see above)? I am thinking to state transitions. How is the state transition for the properties covered by fASTProperty differs from that of the properties covered by fClassProperty?. >> Should fASTProperty be set via TProtoClass? (for consistency); > This leaves out the classes in the libraries with an empty pcm such as Core, RIO and Thread. Sorta, this would also mean a second path to setting (as it is already the case for fProperty and fClassProperty). >> Shouldn't this multiple-inheritance flag be set via/in TClass::Property (via ClassInfo_ClassProperty for example)?; > I think I do not fully understand. . This PR introduces a completely different paths/pattern for setting the ASTProperties and all the other properties. Technically the 'nature' of the information is similar to that of stored in ClassInfo_ClassProperty). This question was one of the way to explore why/if the ASTProperties should be treated differently. >> Should fProperty and fClassProperty be set through the TClass constructor? (to benefit from the same ""all classes"" speed-up?; > I do not understand this question :(. Similarly to the above, this question is asking *if* the fASTProperties is 'better' than the old one then shouldn't the other two be moved towards the same pattern (and the speed-up that this PR introduced would, possibly, benefit the Property and fClassProperty usage too). Cheers,; Philippe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-412577148:640,inherit,inheritance,640,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-412577148,1,['inherit'],['inheritance']
Modifiability,">Though I do wonder how much I want to become involved in tweaking the ROOT configuration... There are many things that I'd love to change about the current ROOT CMake configuration (I find it pretty bad that target properties are used so sparsely in the configuration, using directory level configurations in most cases instead.), but I wouldn't have time to propose an update for those that I'd like... Hi Attila, thank you for the PR. Restructuring the build system is part of my work plan for the next year, so it's good to know that this is something that experiments will see as beneficial. I agree with you that we should be using target properties to propagate include directories and other settings that will allow dependent projects to simply add a `target_link_libraries()` call. This is one of the major motivations that we have for restructuring the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-351951349:76,config,configuration,76,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-351951349,4,['config'],"['configuration', 'configurations']"
Modifiability,">covert</code>, <code>tape</code>; remove unnecessary <code>tap</code> <a href=""https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded""><code>49c5f9f</code></a></li>; <li>[Tests] add <code>aud</code> in <code>posttest</code> <a href=""https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280""><code>228ae93</code></a></li>; <li>[meta] add <code>safe-publish-latest</code> <a href=""https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff""><code>01fc23f</code></a></li>; <li>[meta] update repo URLs <a href=""https://github.com/minimistjs/minimist/commit/6b164c7d68e0b6bf32f894699effdfb7c63041dd""><code>6b164c7</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.5...v1.2.6"">v1.2.6</a> - 2022-03-21</h2>; <h3>Commits</h3>; <ul>; <li>test from prototype pollution PR <a href=""https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb""><code>bc8ecee</code></a></li>; <li>isConstructorOrProto adapted from PR <a href=""https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d""><code>c2b9819</code></a></li>; <li>security notice for additional prototype pollution issue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:3033,adapt,adapted,3033,https://root.cern,https://github.com/root-project/root/pull/11865,1,['adapt'],['adapted']
Modifiability,"?? () from /lib/x86_64-linux-gnu/libc.so.6; [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174; [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186; [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location; [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249; [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-913117485:1209,sandbox,sandbox,1209,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-913117485,2,['sandbox'],['sandbox']
Modifiability,"@AdvaitDhingra can you provide a complete reproducer? Here is what I get with your `CMakeLists.txt` alone:; ```; C:\Users\bellenot\rootdev\AdvaitDhingra>cmake .; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.17763.; -- The C compiler identification is MSVC 19.24.28319.0; -- The CXX compiler identification is MSVC 19.24.28319.0; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Error at C:/Users/bellenot/build/release/RootMacros.cmake:442 (message):; Cannot find header Event.h to generate dictionary G__Event for. Did you; forget to set the INCLUDE_DIRECTORIES property for the current directory?; Call Stack (most recent call first):; CMakeLists.txt:7 (ROOT_GENERATE_DICTIONARY). -- Configuring incomplete, errors occurred!; See also ""C:/Users/bellenot/rootdev/AdvaitDhingra/CMakeFiles/CMakeOutput.log"".; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982#issuecomment-825601966:1613,Config,Configuring,1613,https://root.cern,https://github.com/root-project/root/issues/7982#issuecomment-825601966,1,['Config'],['Configuring']
Modifiability,"@AdvaitDhingra isn't that what @couet suggested by mentioning to just build the io part? But you still need to set environment variables like in the setting for: `EXAMPLE_PATH = $(DOXYGEN_EXAMPLE_PATH)` and you need to build the filter program`INPUT_FILTER = ./filter`. Furthermore I got from the discussion that some images needed to be generated, so ROOT has to be build...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887624659:127,variab,variables,127,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887624659,1,['variab'],['variables']
Modifiability,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2127807723:102,config,config,102,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2127807723,1,['config'],['config']
Modifiability,"@Axel-Naumann ,. ""This isn't going to ever work - C++ lookup is waaay too complex. And even if it were to work, we would be duplicating a large amount of (complex) functionality, and would have to update it with future language standards."". Except that a) it does work today (I think you're truly missing how much cppyy has evolved in functionality from the limited bindings that PyROOT offers, with portable binaries on all major platforms to boot), and b) most of the new language features are resolved in a way that is invisible to the bindings. A case like this PR is very rare. Neither this decl stuff nor the slowness of TClass and friends are material at this point (and simple to replace). What hurts cppyy much more, and what is taking up much more workaround code, is where ROOT/meta breaks things, like removing std::, or tries too hard to be smart, like with template instantiations or overload matching, where it doesn't even follow C++'s rules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-478652670:324,evolve,evolved,324,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-478652670,2,"['evolve', 'portab']","['evolved', 'portable']"
Modifiability,"@Axel-Naumann @pcanal I believe that there are too many places that need to be changed when changing the default compression. We should have a single source of truth for the default, and use its value everywhere else. So, instead of using `1` and `4` directly, it would be much better to use `ROOT::DefaultCompressionAlgorithm` or something similar to that. One good reason for this is that it's really hard to find which `4`s mean `LZ4` and which are just a regular `4`. It also seems that `R__HAS_DEFAULT_LZMA` isn't used anywhere, so it would be quite hard to set the default to that at the moment. Finally, when a user sets the default on his/her config file to something else, it will not affect any of these places where `1` and `4` are used directly in ROOT. That's made even worse by the fact that setting `-Dcompression_default=lzma` at CMake configuration time will not change any of these as well, which will definitely make users very confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414648413:651,config,config,651,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414648413,2,['config'],"['config', 'configuration']"
Modifiability,@Axel-Naumann @pcanal I would appreciate one of you looking over the core config part,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12351#issuecomment-1448912100:74,config,config,74,https://root.cern,https://github.com/root-project/root/pull/12351#issuecomment-1448912100,1,['config'],['config']
Modifiability,"@Axel-Naumann According to the [Xrootd README](https://github.com/xrootd/xrootd/blob/master/README), the only `OpenSSL` related variable we can pass is `OPENSSL_ROOT_DIR`. Not sure it would solve this issue...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10075#issuecomment-1084648721:128,variab,variable,128,https://root.cern,https://github.com/root-project/root/issues/10075#issuecomment-1084648721,1,['variab'],['variable']
Modifiability,"@Axel-Naumann I get a segfault when I try to compile `compile_20k.cxx` with gcc + libc++ following the instructions at https://releases.llvm.org/11.0.0/projects/libcxx/docs/UsingLibcxx.html#using-libc-with-gcc, i.e.:. ```bash; $ g++ -nostdinc++ -I/usr/include/c++/v1 compile_20k.cxx -nodefaultlibs -lc++ -lc++abi -lm -lc -lgcc_s -lgcc -c $(root-config --cflags); <tons of compile warnings>; g++: internal compiler error: Segmentation fault signal terminated program cc1plus; Please submit a full bug report, ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-804102008:345,config,config,345,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-804102008,1,['config'],['config']
Modifiability,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370#issuecomment-859371926:120,adapt,adapted,120,https://root.cern,https://github.com/root-project/root/issues/8370#issuecomment-859371926,1,['adapt'],['adapted']
Modifiability,"@Axel-Naumann I will merge after refactoring the tests then. One topic that I am not addressing in the PR is what should happen if the user gets an iterator, possibly uses it, then loads a new entry and tries to keep using the old iterator.; We could document that iterators on a certain entry are to be considered invalidated when the entry is switched, but _actually_ invalidating the iterators would be a bit cumbersome (and beyond the scope of this PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259#issuecomment-342938316:33,refactor,refactoring,33,https://root.cern,https://github.com/root-project/root/pull/1259#issuecomment-342938316,1,['refactor'],['refactoring']
Modifiability,"@Axel-Naumann PR is green (red status of Jenkins is because of outdated Github plugin) and looks good to me, can you check please as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-567407024:79,plugin,plugin,79,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-567407024,1,['plugin'],['plugin']
Modifiability,"@Axel-Naumann sadly looks like I can't add a check and warning when python is OFF, because python is BOOL and if(NOT python) will trigger warning all the time, after 'python' variable was initialized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5131#issuecomment-597732808:175,variab,variable,175,https://root.cern,https://github.com/root-project/root/pull/5131#issuecomment-597732808,1,['variab'],['variable']
Modifiability,"@Axel-Naumann thank you for configuring `liburing`, it looks like the tests ran and passed :) ; http://cdash.cern.ch/testDetails.php?test=2001040&build=11437. I am not sure about the python failures, and think the compiler warnings are maybe from using a newer gcc?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-668746900:28,config,configuring,28,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-668746900,1,['config'],['configuring']
Modifiability,"@Axel-Naumann the tests on `fedora32` look good, and all the other linux nodes ""failed successfully"" during the configuration search :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-669936949:112,config,configuration,112,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-669936949,1,['config'],['configuration']
Modifiability,"@AxelKrypton I'm sorry, I didn't read your initial report closely enough: what you see is a leak report that we turn off due to how ROOT uses the LLVM and Clang libraries:; https://github.com/root-project/root/blob/479d383c1019a2c75b3ca736f3ff0d1ebd3b0d63/core/sanitizer/SanitizerSetup.cxx#L22; I don't remember the details, but it's possible that the method we're using to suppress the leak sanitizer doesn't work with GCC and that's why switching to Clang solved the issue during build. For your own application, you need to pull in that same code, which should happen automatically if you use `ROOT_EXECUTABLE`. Can you check how your application is created?. If it's not possible to use `ROOT_EXECUTABLE`, you can also manually link in `ROOT::ROOTStaticSanitizerConfig`. Alternatively you can try setting the environment variable `ASAN_OPTIONS=""detect_leaks=0""`. Hope this helps, let me know if you have further problems!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1814583869:825,variab,variable,825,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1814583869,1,['variab'],['variable']
Modifiability,"@HDembinski thanks! Could you rewrite this branch so we have meaningful commits to merge? That reduces the chances that one of us hits ""Rebase & merge"" instead of ""Squash & merge"" :-). @lmoneta please have a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719576870:30,rewrite,rewrite,30,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719576870,1,['rewrite'],['rewrite']
Modifiability,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7413#issuecomment-793876470:201,config,configuration,201,https://root.cern,https://github.com/root-project/root/pull/7413#issuecomment-793876470,2,['config'],['configuration']
Modifiability,@SyahmieS it is maybe related to https://github.com/root-project/root/issues/15321 and https://github.com/root-project/root/issues/9445; I'm pretty sure that building ROOT without the following environment variables will work:; ```; & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336#issuecomment-2077012521:206,variab,variables,206,https://root.cern,https://github.com/root-project/root/issues/15336#issuecomment-2077012521,1,['variab'],['variables']
Modifiability,"@VanyaBelyaev I can't reproduce with latest dev3, does it still fail for you?. I use this `CMakeLists.txt` on lxplus, after sourcing latest dev3:. ```; cmake_minimum_required(VERSION 3.16). project(TestProject). find_package(ROOT 6 CONFIG REQUIRED ); find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. and the output I get for Python3 is:. ```; -- Found Python3: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/bin/python3.9 (found suitable version ""3.9.6"", minimum required is ""3.6.9"") found components: Interpreter Development NumPy Development.Module Development.Embed ; ```. There was maybe some temporary problem with the NumPy installation in dev3?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942#issuecomment-914281135:232,CONFIG,CONFIG,232,https://root.cern,https://github.com/root-project/root/issues/8942#issuecomment-914281135,1,['CONFIG'],['CONFIG']
Modifiability,"@aandvalenzuela @smuzaffar if you have some cycles, can you test this change with CMSSW on AArch64? This should align the configurations with x86_64 to also enable `runtime_cxxmodules` by default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16401#issuecomment-2406939093:122,config,configurations,122,https://root.cern,https://github.com/root-project/root/pull/16401#issuecomment-2406939093,1,['config'],['configurations']
Modifiability,"@agheata What do we need to do to solve:; ```; Error in <TVirtualGeoConverter::Instance()>: ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++; It appears that you are missing or having outdated support for VecGeom package. To enable it, configure ROOT with:; -Dvecgeom -DCMAKE_PREFIX_PATH=<vecgeom_prefix_path>/lib/CMake/VecGeom; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12315#issuecomment-1430164226:255,config,configure,255,https://root.cern,https://github.com/root-project/root/pull/12315#issuecomment-1430164226,1,['config'],['configure']
Modifiability,@albert-github thanks for trying out the ROOT documentation. You need root installed to make the ROOT documentation because ROOT documentation uses a filter to create on the fly the picture for all code examples we expose and also to generate the graph of libraries needed by a given class. So to make ROOT do:. - `clone https://github.com/root-project/root.git`; - `mkdir rootbuild`; - `cd rootbuild`; - `cmake ../root`; - `make -j8`; - `source bin/thisroot.sh` // this defines the $ROOTSYS environment variables and more...; - cd ../root/documentation/doxygen; - Edit Doxyfile to reduce the number of paths in the `INPUT` variable otherwise it will take a day. Keep `../../io/io` for instance ; - `make -j8` // this will creat `~/rootdoc`. Open `~rootdoc/html/index.html`; ; We have also [this page](https://root.cern/for_developers/doxygen/) on our web site which tells a bit the same. Thanks for pointing the wrong page. I will check.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887506839:504,variab,variables,504,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887506839,2,['variab'],"['variable', 'variables']"
Modifiability,"@alja . Can you fix warning about defined but not used `cnt` variable?. I was in vacations for three weeks, now I am back.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15092#issuecomment-2056672309:61,variab,variable,61,https://root.cern,https://github.com/root-project/root/pull/15092#issuecomment-2056672309,1,['variab'],['variable']
Modifiability,@alja . You forget to remove increment of `cnt` variable as well.; I modify your last commit - probably it will compile now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15092#issuecomment-2058426394:48,variab,variable,48,https://root.cern,https://github.com/root-project/root/pull/15092#issuecomment-2058426394,1,['variab'],['variable']
Modifiability,"@alja I asked `const std::string &`. If you use `std::string &`, you have to declare extra variable before calling such method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4103#issuecomment-513940960:91,variab,variable,91,https://root.cern,https://github.com/root-project/root/pull/4103#issuecomment-513940960,1,['variab'],['variable']
Modifiability,"@amadio . I add two definitions into RConfigure.h, but they not works (remains undefined); Seems to be, variables which I define in sub-modules cmake files, not exported to top-level make.; Please check it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-365675688:104,variab,variables,104,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-365675688,1,['variab'],['variables']
Modifiability,"@amadio . I have problem with roottest. I think, it has to do with new structure of cmake files. ; Here is output of cmake. ````; [shell] cmake /d/roottest (05.07. 12:23:42) !396 ; -- The C compiler identification is GNU 8.1.1; -- The CXX compiler identification is GNU 8.1.1; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for bitness: Found 64 bit architecture.; -- Found PythonInterp: /usr/bin/python3.6 (found version ""3.6.5"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so (found version ""2.7.15"") ; -- Scanning subdirectories for tests...; CMake Error at cmake/modules/RootCTestMacros.cmake:134 (ROOT_SHOW_OPTIONS):; Unknown CMake command ""ROOT_SHOW_OPTIONS"".; Call Stack (most recent call first):; root/meta/CMakeLists.txt:16 (ROOTTEST_ADD_TEST). -- Configuring incomplete, errors occurred!; See also ""/d/build/roottest/CMakeFiles/CMakeOutput.log"". ````",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2280#issuecomment-402678002:1234,Config,Configuring,1234,https://root.cern,https://github.com/root-project/root/pull/2280#issuecomment-402678002,1,['Config'],['Configuring']
Modifiability,@amadio ; There are many no-longer-used flags in config/Makefile.in file.; Maybe one could just remove them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4127#issuecomment-515937564:49,config,config,49,https://root.cern,https://github.com/root-project/root/pull/4127#issuecomment-515937564,1,['config'],['config']
Modifiability,"@amadio I know there is mac, but seems most of builds were failing with warnings ;( :; ```; /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang90-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '<RConfig.h>'; specified path differs in case from file name on disk [-Wnonportable-include-path]; ```; I cleaned my log accidentally.; It means build was ok?right? just warnings..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-359038581:203,portab,portable,203,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-359038581,1,['portab'],['portable']
Modifiability,@amadio I provide requested changes. ; Question - why one needs `FASTCGI_INCLUDE_DIRS` and `FASTCGI_LIBRARIES` as uncached variables? Should I use them when building THttpServer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4127#issuecomment-516320347:123,variab,variables,123,https://root.cern,https://github.com/root-project/root/pull/4127#issuecomment-516320347,1,['variab'],['variables']
Modifiability,@amadio IIRC the LCG CMake builds were configured without SSL - that was the real problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1499#issuecomment-359160093:39,config,configured,39,https://root.cern,https://github.com/root-project/root/pull/1499#issuecomment-359160093,1,['config'],['configured']
Modifiability,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket.; - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs.; - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in.; - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio.; - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700.; - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ.; - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion).; - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-984509014:834,variab,variables,834,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-984509014,1,['variab'],['variables']
Modifiability,"@amadio Thanks!. I have delved a bit into the recent changes, and I think it's this one:; https://github.com/root-project/root/commit/f45f2c283752de0a3a2fdc278b00d1653e116833; `ROOT_VERSION` appears to use the double-dot notiation, while most other user-exposed places (web page release announcements, banner etc.) use the other notiation. ; For example, the banner / logo uses `ROOT_RELEASE`, which still has the dot-slash notation:; https://github.com/root-project/root/blob/18b789c7ca051f09d84471fc948b410b61670f6e/core/base/src/TROOT.cxx#L699C23-L699C35. So probably, the main question is: Which notation is correct / should be used, and in case it's the double-dot notation, should `root-config` stay backwards-compatible? . In case the actual change linked above was not intended, but was just about dropping the `sed` (which is a good thing to do! :+1: ), maybe defining a CMake variable using the dot-slash notation in https://github.com/root-project/root/blob/18b789c7ca051f09d84471fc948b410b61670f6e/cmake/modules/SetROOTVersion.cmake; and using it in `root-config` would be best.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1815217164:693,config,config,693,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1815217164,3,"['config', 'variab']","['config', 'variable']"
Modifiability,"@amadio You're right, we overlooked that. We should discuss in the RooFit dev meeting how to do this, also in the long run. I guess for the time being, setting it to `OFF` by default sounds reasonable. What do you think @guitargeek @lmoneta?. If this is indeed what we do, it would be quite important (imho) that CI still builds with `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` so that future changes don't break it. Then, when the new `libzmq` version is released, it will be easy to adapt the CMake config to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981727286:508,adapt,adapt,508,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981727286,2,"['adapt', 'config']","['adapt', 'config']"
Modifiability,@amadio could maybe look at the standalone roottest issue - is that known?. We check out roottest into src/ and configure ROOT with `-Dtesting=On -Droottest=On` and it picks up roottest and enabled `ctest`. But Jenkins ran roottest for us and is happy :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2280#issuecomment-402445890:112,config,configure,112,https://root.cern,https://github.com/root-project/root/pull/2280#issuecomment-402445890,1,['config'],['configure']
Modifiability,"@amadio looks like it will be still impossible to remove Python hacks in https://github.com/root-project/root/blob/master/cmake/modules/SearchRootCoreDeps.cmake: `CMake 3.14 is the minimum because in 3.12 and 3.13, despite find_package(PythonX) being present, the Numpy-related variables are not set`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336#issuecomment-854531002:278,variab,variables,278,https://root.cern,https://github.com/root-project/root/pull/8336#issuecomment-854531002,1,['variab'],['variables']
Modifiability,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339152573:327,config,configuration,327,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339152573,1,['config'],['configuration']
Modifiability,"@amadio, the commented code is intentional: it is part of a copy-paste from clang (as we discussed before) and those parts were commented out to adapt it to fit ROOT requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632#issuecomment-366935808:145,adapt,adapt,145,https://root.cern,https://github.com/root-project/root/pull/1632#issuecomment-366935808,1,['adapt'],['adapt']
Modifiability,"@andresailer, it looks like we have externally built Vc and we do not pass in the location of its header files. IIRC, we had the same issue for the cuda builds and we solved it by passing the include path in the env variable `ROOT_INCLUDE_PATH`. For example, something like that fixes the crash for me: `ROOT_INCLUDE_PATH=/build/sailer/testReprRoot/testLcgcmake/install/dev3/Vc/1.4.2/x86_64-centos7-gcc10-dbg/include/ root.exe -l -b -q `. In order to move forward this issue needs to be fixed on the LCG side. I am cc-ing @peremato as we did such a fix some time ago for the ROOT CUDA builds. I bet he knows where to add it as he already did it once.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1025259524:216,variab,variable,216,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1025259524,1,['variab'],['variable']
Modifiability,"@bbockelm thanks. 1. `TTreeReader` does not support multiple leaves per branch, so TDF does not either; 2. what does it mean to have a `fLeafCount` _and_ a `GetLen() > 1`? Is it a variable-sized array or a fixed-sized array? Or a variable-sized array of fixed-sized arrays, in which case I have no idea how `TTreeReaderArray` would handle it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359008341:180,variab,variable-sized,180,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359008341,2,['variab'],['variable-sized']
Modifiability,@bbockelm thanks. Could you please double-check the following pseudo-code?. ```c++; TLeaf *l = GetALeaf();; if (l->GetLeafCount() != nullptr) {; // this is a variable-sized array; } else if (l->GetLen() > 1) {; // this is a fixed-sized array; } else {; // l->GetLen() == 1 and this is a single element; }; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359003577:158,variab,variable-sized,158,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359003577,1,['variab'],['variable-sized']
Modifiability,@bbockelm the only thing I can come up with is the how-to for using @phsft-bot: https://github.com/phsft-bot/build-configuration/blob/master/README.md,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/839#issuecomment-320744017:115,config,configuration,115,https://root.cern,https://github.com/root-project/root/pull/839#issuecomment-320744017,1,['config'],['configuration']
Modifiability,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. ; Unfortunately this is not a top priority from my side atm, so it's sort of best effort.; Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6818#issuecomment-734001448:279,enhance,enhance,279,https://root.cern,https://github.com/root-project/root/pull/6818#issuecomment-734001448,1,['enhance'],['enhance']
Modifiability,"@bellenot Grate! You are back to RBrowser!. Probably, we should avoid use of `const char *`, especially as return values from the methods.; This can be problematic in case of dynamic content - when icon names read from some configuration file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4140#issuecomment-517194327:224,config,configuration,224,https://root.cern,https://github.com/root-project/root/pull/4140#issuecomment-517194327,1,['config'],['configuration']
Modifiability,"@bellenot I don't see how TH1::Scale(1.0) does the same thing. Doesn't that just scale the histogram by 1.0, leaving it exactly the same? This function scales it to unit integral. @lmoneta I didn't realize that TH1::Scale() had the ""option"" argument. I'll rewrite this function to include the bin width option, as you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5218#issuecomment-605460870:256,rewrite,rewrite,256,https://root.cern,https://github.com/root-project/root/pull/5218#issuecomment-605460870,1,['rewrite'],['rewrite']
Modifiability,@bellenot I finish refactoring of eve7 code. Now one can apply your Windows patch - after rebasing it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3362#issuecomment-468206613:19,refactor,refactoring,19,https://root.cern,https://github.com/root-project/root/pull/3362#issuecomment-468206613,1,['refactor'],['refactoring']
Modifiability,"@bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6144:53,config,configure,53,https://root.cern,https://github.com/root-project/root/pull/6144,1,['config'],['configure']
Modifiability,"@bellenot on windows I'm getting ; ```; hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:; stdout: ; stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists.; ```; ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2709#issuecomment-425372789:47,plugin,plugins,47,https://root.cern,https://github.com/root-project/root/pull/2709#issuecomment-425372789,1,['plugin'],['plugins']
Modifiability,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches.; @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5503#issuecomment-621667320:175,config,configuration,175,https://root.cern,https://github.com/root-project/root/pull/5503#issuecomment-621667320,1,['config'],['configuration']
Modifiability,"@bellenot, I am confused. This PR introduces another way to express the LD_LIBRARY_PATH. IIUC, the PATH variable is the analog of LD_LIBRARY_PATH for Windows. What happens if somebody defines a variable ROOT_LIBRARY_PATH and not update the PATH? On unix it'd work just fine but fail on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-764654931:104,variab,variable,104,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-764654931,2,['variab'],['variable']
Modifiability,"@bellenot; I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]; [...]; //# We need to paste the content of the cling plugins disabling link symbol optimizations.; set(CLING_PLUGIN_LINK_LIBS); if (clad); if (APPLE); set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator); elseif(MSVC); set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator); set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""); else(); set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive); endif(); endif(); [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:; I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet?. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872020099:170,plugin,plugins,170,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872020099,3,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,"@bluehood - if any of the `TLeaf`s of the branch contains a `fLeafCount`, then it is a variable-sized array. So, you want to look and see if `GetLeafCount()` returns `nullptr`; if so, it is fixed-size. The number of fixed-sized elements is returned by `GetLen()`. Note that `fNdata` appears tempting to use, but it's only computed on the leaf's read.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359002538:87,variab,variable-sized,87,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359002538,1,['variab'],['variable-sized']
Modifiability,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4965#issuecomment-592032641:317,plugin,plugins,317,https://root.cern,https://github.com/root-project/root/pull/4965#issuecomment-592032641,1,['plugin'],['plugins']
Modifiability,"@bluehood, that's weird. I think it is because we have broken clang-format file (according to clang-format-3.9 on the bot). I am thinking to follow up renaming of one of the configs from `SplitEmptyFunctionBody` to `SplitEmptyFunction`. Could you locally do it and let me know if your clang-format would be happy with the shorthand `SplitEmptyFunction`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/835#issuecomment-320444804:174,config,configs,174,https://root.cern,https://github.com/root-project/root/pull/835#issuecomment-320444804,1,['config'],['configs']
Modifiability,"@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1923,extend,extended,1923,https://root.cern,https://github.com/root-project/root/issues/10478,1,['extend'],['extended']
Modifiability,@cgleggett could you please post a CMake configuration log? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6368#issuecomment-694094893:41,config,configuration,41,https://root.cern,https://github.com/root-project/root/issues/6368#issuecomment-694094893,1,['config'],['configuration']
Modifiability,"@couet . Hi Olivier,; Probably one more check is missing.; If one specifies BarOffset for X, but BarWidth for Y axis, one can get configuration, where ; `Hparam.xbaroffset + Hparam.xbarwidth > 1` or `Hparam.ybaroffset + Hparam.ybarwidth > 1`.; In principle, it was possible before, but maybe one should check that bin does not exceed original place?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1553#issuecomment-360716773:130,config,configuration,130,https://root.cern,https://github.com/root-project/root/pull/1553#issuecomment-360716773,1,['config'],['configuration']
Modifiability,"@couet . That also can be done - one can extend `TLatex` functionality, adding `#url` command:; ```; auto l1 = new TLatex(0.5, 0.5, ""Link on #url[https://root.cern]{root.cern} web site"");; ```; Using TLatex syntax, one can provide more attributes like colors or underline.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16512#issuecomment-2387725134:41,extend,extend,41,https://root.cern,https://github.com/root-project/root/issues/16512#issuecomment-2387725134,1,['extend'],['extend']
Modifiability,@dciangot Can you try please meanwhile access file exporting `BEARER_TOKEN` environment variable?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802#issuecomment-776820430:88,variab,variable,88,https://root.cern,https://github.com/root-project/root/issues/6802#issuecomment-776820430,1,['variab'],['variable']
Modifiability,"@dpiparo - we discussed the idea of a condition variable, but I'm wary. The condition variable approach causes a per-task overhead that is _always_ paid (as notify would have to be done from the tasks). This per-task overhead is one of the things that make the pthreads implementation problematic. However, this particular case is a fairly obscure corner case: this code is only triggered when there is exactly one remaining basket to unzip, the main thread needs it, and one of the TBB threads is currently working on it. Talking to Zhe, I think the best way to go is a busy-loop (with `sched_yield` in the Linux case) instead. It has no penalty in the common case - and won't share the potential to overshoot the waiting by such a significant amount.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-333589667:48,variab,variable,48,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-333589667,2,['variab'],['variable']
Modifiability,@dpiparo I've adapted a bit the documentation to address your second point. Where should I put the tutorial you mention?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371608097:14,adapt,adapted,14,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371608097,1,['adapt'],['adapted']
Modifiability,"@dpiparo That makes sense. Most of the tests that are running for a long time are stress tests, or tests that tests some function under an extensive amount of configurations. Generating or setting up some example case is also a big performance hog on the tests. I think the trade-off for reducing the test time would be to reduce the comprehensiveness of some tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/408#issuecomment-285633703:159,config,configurations,159,https://root.cern,https://github.com/root-project/root/pull/408#issuecomment-285633703,1,['config'],['configurations']
Modifiability,"@dpiparo The GA optimiser uses ```toMinimize``` in ```ResultsMulticlass::EstimatorFunction``` to evaluate the fitness. This variable ended up being ```NaN``` if ```effTimesPur``` was very close to zero because of the assignment ```toMinimize = 1. / effTimesPur```. The already existing check is extended to avoid this situation (an ```std::isnan``` does not work since we compile with -ffast-math). I also verified that ```1. / std::numeric_limits<float>::min()``` does not generate a ```NaN```, so the function should be safe now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/450#issuecomment-287893037:124,variab,variable,124,https://root.cern,https://github.com/root-project/root/pull/450#issuecomment-287893037,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"@eguiraud @pcanal if you think this new extended `RFriendInfo` is the right way to go, I will also change the TTreeProcessorMT behaviour when reconstructing friend trees/chains accordingly and will fix the broken tests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-817648039:40,extend,extended,40,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-817648039,1,['extend'],['extended']
Modifiability,"@eguiraud Good question! I don't know whether we want to enforce this a configuration time. Would make sense, tbh, though this would enforce much more stricter requirements than the ones we have now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-617777435:72,config,configuration,72,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-617777435,1,['config'],['configuration']
Modifiability,"@eguiraud It finally compiled without error after using `g++` instead of `gcc`. ```; g++ -g -O1 $(root-config --libs --cflags) -o xAna_monoZ_preselect.o xAna_monoZ_preselect.C; ./xAna_monoZ_preselect.o ""../../../infiles_NCUGlobal/infiles_signal_Mx2-150_Mv-500_Mx1-1_ctau-1/NCUGlobalTuples_13.root"" ""testOutSignal.root""; ```. [massif.out.433729.txt](https://github.com/root-project/root/files/7423308/massif.out.433729.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087#issuecomment-952544605:103,config,config,103,https://root.cern,https://github.com/root-project/root/issues/9087#issuecomment-952544605,1,['config'],['config']
Modifiability,"@eguiraud That's a good question. As of now, the issue you linked only lists built-time problems (due to scripts running at build time), while this issue here is about issues with `root-config` after ROOT is built and locating it into a path with spaces (using binaries from release tarballs which were built in paths without spaces). . Of course, it might still be useful to merge both issues and extend the scope of the earlier one — but that's better decided by one of you ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10759#issuecomment-1156648303:186,config,config,186,https://root.cern,https://github.com/root-project/root/issues/10759#issuecomment-1156648303,2,"['config', 'extend']","['config', 'extend']"
Modifiability,"@eguiraud concerning .O1, should i change in MetaSema ; (not yet implemented) --> (implemented only for 0 and 1 ?) -->changed; And should I add (not yet implemented) to .undo or .U ? --> it seems to work for me. Also, I see that '.include' is implemented, but not documented. Should I add it? --> added; .stats and .fileEx are documented but not sure what they do.; What else from the CINT table above should be added that has been lost during the translation?; For example, .g still prints global variables, but .l does no longer print local variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065#issuecomment-1067891493:498,variab,variables,498,https://root.cern,https://github.com/root-project/root/issues/10065#issuecomment-1067891493,2,['variab'],['variables']
Modifiability,"@eguiraud thanks for the review and the comment. Nobody relies on the return code of root-config.bat on Windows, since it has only been introduced very recently (Oct 30, 2020). But I'll see what I can do",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663#issuecomment-805924278:90,config,config,90,https://root.cern,https://github.com/root-project/root/pull/7663#issuecomment-805924278,1,['config'],['config']
Modifiability,"@etejedor I will add a test with multiple files.; I propose to do the refactoring that moves the `TTreeView` members into `TTreeProcessorMT` to avoid duplication in another PR, as the changes would be quite big (working on it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2143#issuecomment-394779115:70,refactor,refactoring,70,https://root.cern,https://github.com/root-project/root/pull/2143#issuecomment-394779115,1,['refactor'],['refactoring']
Modifiability,@etejedor I've removed the preproc variable and put in a patch file. Should we put it in like this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3455#issuecomment-469314052:35,variab,variable,35,https://root.cern,https://github.com/root-project/root/pull/3455#issuecomment-469314052,1,['variab'],['variable']
Modifiability,"@etejedor small idea: lets add that it is deprecated from 6.22, so in 6.24 we can put a FATAL.; """"pyroot_experimental is a deprecated flag starting from 6.22.00. To build the new PyROOT, just configure with -Dpyroot=ON.""""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5790#issuecomment-639341920:192,config,configure,192,https://root.cern,https://github.com/root-project/root/pull/5790#issuecomment-639341920,1,['config'],['configure']
Modifiability,"@ferdymercury @vvolkl . Thank you for your responses!; I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs.; [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt); [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:; ```diff; --- a/tree/dataframe/test/CMakeLists.txt; +++ b/tree/dataframe/test/CMakeLists.txt; @@ -45,6 +45,7 @@; endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame); +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/); ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame); ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14769#issuecomment-1956212761:461,config,configuration,461,https://root.cern,https://github.com/root-project/root/issues/14769#issuecomment-1956212761,1,['config'],['configuration']
Modifiability,"@ferdymercury I look through the messages and did not found critical errors. ; Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. ; But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-800017654:245,variab,variable,245,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-800017654,1,['variab'],['variable']
Modifiability,"@ferdymercury thanks for the comments, I'll rewrite the code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7170#issuecomment-776753868:44,rewrite,rewrite,44,https://root.cern,https://github.com/root-project/root/pull/7170#issuecomment-776753868,1,['rewrite'],['rewrite']
Modifiability,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:; ```; # We need to paste the content of the cling plugins disabling link symbol optimizations.; set(CLING_PLUGIN_LINK_LIBS); message(STATUS ""clad = ${clad}""); if (clad); ```; and type `cmake .` in the build directory? You should see something like:; ```; -- [...]; -- And then fallback to: 'c++'; -- clad = OFF; -- Performing Test found_stdstringview; -- [...]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872164716:265,plugin,plugins,265,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872164716,1,['plugin'],['plugins']
Modifiability,"@gganis These are known, at least the statusbitcheck and xrootd plugin. Fixes for them are already on the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3063#issuecomment-442886530:64,plugin,plugin,64,https://root.cern,https://github.com/root-project/root/pull/3063#issuecomment-442886530,1,['plugin'],['plugin']
Modifiability,"@glmiotto IIUC, this is to be reviewed as an enhancement over the DAOS backend (i.e., improving separation between `RDaos` and the `RPage{Source,Sink}Daos`). Comments coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109#issuecomment-1490945717:45,enhance,enhancement,45,https://root.cern,https://github.com/root-project/root/pull/12109#issuecomment-1490945717,1,['enhance'],['enhancement']
Modifiability,"@guitargeek I believe the best course of action is remove Python2 usage first, then provide the `python3` executable path only, via `root-config`, in 6.32 as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12299#issuecomment-1808250651:138,config,config,138,https://root.cern,https://github.com/root-project/root/pull/12299#issuecomment-1808250651,1,['config'],['config']
Modifiability,@guitargeek I think one also needs to take care of the option here: `.github/workflows/root-ci-config/buildconfig/global.txt`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14830#issuecomment-1965920358:95,config,config,95,https://root.cern,https://github.com/root-project/root/pull/14830#issuecomment-1965920358,1,['config'],['config']
Modifiability,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:; ```; # root-config --version; 6.24/06; # root.exe --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Sep 02 2021, 14:20:23; From tags/v6-24-06@v6-24-06; # g++ --version; g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx ; #include <vector>; #include <TChain.h>. int func() {; std::vector<long long> v;; v.push_back(TChain::kBigNumber); // fail; v.push_back(TChain::kBigNumber - 1); // fine; return v.size();; }; # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test; /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':; (.text+0x20): undefined reference to `main'; /tmp/ccxkwRYF.o: In function `func()':; test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'; collect2: error: ld returned 1 exit status; ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9422#issuecomment-991995228:296,config,config,296,https://root.cern,https://github.com/root-project/root/issues/9422#issuecomment-991995228,2,['config'],['config']
Modifiability,"@hageboeck . > LGTM, I would advise squashing on merge. Why? These are three independent plugins and three commits. ; It would be easier to patch if I will made failure in one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5255#issuecomment-606468999:89,plugin,plugins,89,https://root.cern,https://github.com/root-project/root/pull/5255#issuecomment-606468999,1,['plugin'],['plugins']
Modifiability,"@hageboeck Ok, here:. ```; /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ...; -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set.; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: linux; -- ROOT Compiler: GNU 4.8.5; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = 'foo'); -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo; ...; ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-822487104:189,variab,variable,189,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-822487104,1,['variab'],['variable']
Modifiability,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1486461748:374,config,configuration,374,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1486461748,1,['config'],['configuration']
Modifiability,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750#issuecomment-1953609516:205,config,configurations,205,https://root.cern,https://github.com/root-project/root/pull/14750#issuecomment-1953609516,1,['config'],['configurations']
Modifiability,"@hahnjo ; > Hm, but you cannot have multiple std::unique_ptr reference the same object on the heap. I don't see that being the case, neither for master nor for my proposed change. What am I overlooking?. @xvallspl ; > In this solution we would only have a single std::unique_ptr reference. I don't know what you mean by ""reference"", I don't have lvalue references anywhere here. With my proposal, for all ROOT configuration cases we'd have a definition of three members, `fSequentialExecutor`, `fThreadExecutor`, `fProcessExecutor`. Their types differ depending on ROOT's configuration. Note that I'm using the (assumed) feature that having one or many `ROOT::TSequentialExecutor` doesn't make any difference; that might be wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7039#issuecomment-760117537:410,config,configuration,410,https://root.cern,https://github.com/root-project/root/issues/7039#issuecomment-760117537,2,['config'],['configuration']
Modifiability,"@hahnjo configure seems to finish without errors, but it still seems to target all possible archs:. ```; -- Targeting AArch64; -- Targeting AMDGPU; -- Targeting ARM; -- Targeting AVR; -- Targeting BPF; -- Targeting Hexagon; -- Targeting Lanai; -- Targeting Mips; -- Targeting MSP430; -- Targeting NVPTX; -- Targeting PowerPC; -- Targeting RISCV; -- Targeting Sparc; -- Targeting SystemZ; -- Targeting WebAssembly; -- Targeting X86; -- Targeting XCore; -- Clang version: 13.0.0; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; ```. build ongoing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14115#issuecomment-1827335476:8,config,configure,8,https://root.cern,https://github.com/root-project/root/pull/14115#issuecomment-1827335476,1,['config'],['configure']
Modifiability,"@hahnjo configure seems to work now:. ```; -- LLVM host triple: x86_64-unknown-freebsd13.2; -- LLVM default target triple: x86_64-unknown-freebsd13.2; -- Building with -fPIC; -- Found Python3: /usr/local/bin/python3 (found suitable version ""3.9.18"", minimum required is ""3.0"") found components: Interpreter ; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 13.0.0; ```; the build will take a while.; thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14115#issuecomment-1827463656:8,config,configure,8,https://root.cern,https://github.com/root-project/root/pull/14115#issuecomment-1827463656,1,['config'],['configure']
Modifiability,"@hahnjo hm that's an interesting clue, but then I still don't fully understand why `RooFit::TestStatistics::RooUnbinnedL` would give a different answer, because it also just calls `RooAbsPdf::extendedTerm`, so it should still get the exact same result... Or is the problem that the FMA operation on the different parts of the sum (the likelihood is calculated over multiple event ranges in the test that is failing, which are summed afterwards) has higher rounding errors on non-x86 so that in the end the result indeed differs?. Or, even more problematically, could such FMA operations also cause similar rounding errors on x86 so that EXPECT_EQ indeed becomes impossible (and I just got lucky with the current parameters on x86)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1544370239:192,extend,extendedTerm,192,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1544370239,1,['extend'],['extendedTerm']
Modifiability,"@hahnjo so the problem was the llvm build configuration - the TargetMachine for x86 was not built/linked in which in turn caused some stuff to be uninitialized. I had `-DDLVM_TARGETS_TO_BUILD=""NVPTX""` (since ""NVPTX;host"" does not work as discussed in #13865 I followed the observation of @eamjensen and removed ""host"" to make it configure. The arch needs to be specified explicitly as (in my case) ""X86"": ; `-DDLVM_TARGETS_TO_BUILD=""X86;NVPTX""` seems to do the trick.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075#issuecomment-1826254915:42,config,configuration,42,https://root.cern,https://github.com/root-project/root/issues/14075#issuecomment-1826254915,2,['config'],"['configuration', 'configure']"
Modifiability,@hahnjo which of the variable in core/io were you concerned about?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11157#issuecomment-1215473390:21,variab,variable,21,https://root.cern,https://github.com/root-project/root/pull/11157#issuecomment-1215473390,1,['variab'],['variable']
Modifiability,"@hahnjo, your CMake test will either compile or not. It can't both compile and not compile at the same time. If including the forward declaration in a CMake test compiles, you set a variable that enables it in the code; otherwise, the forward declaration is switched off in the code. What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1218522298:182,variab,variable,182,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1218522298,1,['variab'],['variable']
Modifiability,"@hahnjo; I think the issue is maybe that this test uses:. ```; static UInt_t id = 0;; TTree *data = new TTree(name, name);; data->Branch(""EventNumber"", &id, ""EventNumber/I"");; ```. but later:. ```; Float_t fevNum;; fReader.AddSpectator(""EventNumber"", &fevNum);; tree->SetBranchAddress(""EventNumber"", &fevNum);; ```. In contrast, TestCrossValidationIntVar seems to correctly use two variables to properly read the tree and spectate:. ```; Int_t uid;; Float_t fid;; reader.AddSpectator(""EventNumber"", &fid);; tree->SetBranchAddress(""EventNumber"", &uid);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10010#issuecomment-2079405188:382,variab,variables,382,https://root.cern,https://github.com/root-project/root/issues/10010#issuecomment-2079405188,1,['variab'],['variables']
Modifiability,"@henryiii If you configure ROOT with `-Dtesting=ON -Droottest=ON`, then you can run the tests with `ctest -R minuit2`, but it may also be important to run `ctest -R roostats` (or all tests, really, since some mathcore tests also use Minuit2). However, to see the failures, just the Minuit2 tests are enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689#issuecomment-371488120:17,config,configure,17,https://root.cern,https://github.com/root-project/root/pull/1689#issuecomment-371488120,1,['config'],['configure']
Modifiability,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls?. We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ?. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html; ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'; 126 | const auto* existing_field = model.Get<bool>(name);; | ^~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'; 126 | const auto* existing_field = model.Get<bool>(name);; | ^~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token; 77 | model.AddField<UInt_t>(""run"", &m_run);; | ^; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]; 77 | model.A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14454#issuecomment-1914756475:754,plugin,plugins,754,https://root.cern,https://github.com/root-project/root/pull/14454#issuecomment-1914756475,1,['plugin'],['plugins']
Modifiability,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-922713482:494,plugin,plugin,494,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482,1,['plugin'],['plugin']
Modifiability,"@jgrosseo Can you try please to make ""clean build"" with patch on the top? I see you still have mixed env variables.; My output from ""clean build"":. ``` ; linux-vdso.so.1 (0x00007ffd0a4fe000); libgif.so.7 => /usr/lib/libgif.so.7 (0x00007f1ce73db000); libtiff.so.5 => /usr/lib/libtiff.so.5 (0x00007f1ce734c000); libpng16.so.16 => /home/oksana/CERN/libpng/lib/libpng16.so.16 (0x00007f1ce7305000); libz.so.1 => /usr/lib/libz.so.1 (0x00007f1ce72eb000); libjpeg.so.8 => /usr/lib/libjpeg.so.8 (0x00007f1ce7254000); libfreetype.so.6 => /usr/lib/libfreetype.so.6 (0x00007f1ce7186000); libSM.so.6 => /usr/lib/libSM.so.6 (0x00007f1ce717a000); libICE.so.6 => /usr/lib/libICE.so.6 (0x00007f1ce715d000); libX11.so.6 => /usr/lib/libX11.so.6 (0x00007f1ce701d000); libXext.so.6 => /usr/lib/libXext.so.6 (0x00007f1ce7008000); libGraf.so => /home/oksana/CERN_sources/root/builds/lib/libGraf.so (0x00007f1ce6e94000); libHist.so => /home/oksana/CERN_sources/root/builds/lib/libHist.so (0x00007f1ce6a7f000); libMatrix.so => /home/oksana/CERN_sources/root/builds/lib/libMatrix.so (0x00007f1ce68ff000); libMathCore.so => /home/oksana/CERN_sources/root/builds/lib/libMathCore.so (0x00007f1ce66e6000); libImt.so => /home/oksana/CERN_sources/root/builds/lib/libImt.so (0x00007f1ce66d4000); libRIO.so => /home/oksana/CERN_sources/root/builds/lib/libRIO.so (0x00007f1ce62fd000); libThread.so => /home/oksana/CERN_sources/root/builds/lib/libThread.so (0x00007f1ce62a7000); libCore.so => /home/oksana/CERN_sources/root/builds/lib/libCore.so (0x00007f1ce5e2b000); libpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007f1ce5e07000); libstdc++.so.6 => /usr/lib/libstdc++.so.6 (0x00007f1ce5c1e000); libm.so.6 => /usr/lib/libm.so.6 (0x00007f1ce5ad8000); libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x00007f1ce5abe000); libc.so.6 => /usr/lib/libc.so.6 (0x00007f1ce58f8000); libzstd.so.1 => /usr/lib/libzstd.so.1 (0x00007f1ce584e000); liblzma.so.5 => /usr/lib/liblzma.so.5 (0x00007f1ce5824000); libbz2.so.1.0 => /usr/lib/libbz2.so.1.0 (0x00007f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5717#issuecomment-635323121:105,variab,variables,105,https://root.cern,https://github.com/root-project/root/pull/5717#issuecomment-635323121,1,['variab'],['variables']
Modifiability,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5081#issuecomment-593975063:187,config,configuration,187,https://root.cern,https://github.com/root-project/root/pull/5081#issuecomment-593975063,1,['config'],['configuration']
Modifiability,"@karies: Thanks a lot, and sorry for the long turn-around on my side. Note that I also added https://github.com/root-mirror/roottest/pull/6 to test this feature to some limited extend; let me know if anything else needs to be done there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/212#issuecomment-261899539:177,extend,extend,177,https://root.cern,https://github.com/root-project/root/pull/212#issuecomment-261899539,1,['extend'],['extend']
Modifiability,"@kgertsenberger ; As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 ; If you can implement methods for other plugins - it would be grate. ; Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-507209448:149,plugin,plugins,149,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-507209448,1,['plugin'],['plugins']
Modifiability,"@ktf Hi Giulio, thank you for bringing this issue to our attention (slow `FindROOT.cmake`). However, I'm not sure the approach taken here is the best. I think that it would be better to change `FindROOT.cmake` to not rely on the `root-config`, but be generated directly from a `FindROOT.cmake.in` with all the paths already computed. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1569#issuecomment-361843478:235,config,config,235,https://root.cern,https://github.com/root-project/root/pull/1569#issuecomment-361843478,1,['config'],['config']
Modifiability,@ktf could an extra layer of inheritance help circumventing the `protected` access in your case?; See https://godbolt.org/z/o5X_r-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428#issuecomment-463615794:29,inherit,inheritance,29,https://root.cern,https://github.com/root-project/root/pull/3428#issuecomment-463615794,1,['inherit'],['inheritance']
Modifiability,"@ktf, here is how to get the fedora38 debug build failure according to the bot:. ```; Grab the image:; $ docker run --shm-size=1g -m 16g --security-opt label=disable -it registry.cern.ch/root-ci/fedora38:buildready; Then:; ; ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/fedora38/master/Debug/c8bf26fbd62398395855e8d992e7688980a1d318/2023-10-05.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin refs/pull/13808/head:reduce-memory-usage; git checkout reduce-memory-usage; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'Debug' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; )```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1791153635:694,config,config,694,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1791153635,3,['config'],['config']
Modifiability,"@ktf, try to run it from the very root directory. It should pick up our configuration :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371765383:72,config,configuration,72,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371765383,1,['config'],['configuration']
Modifiability,"@ktf, what is your build configuration? To see these asserts one needs to enable assertions in LLVM with `-DLLVM_ENABLE_ASSERTIONS=On`. However, I'd suggest to build ROOT with debug LLVM with `-DLLVM_BUILD_TYPE=Debug`. This way you will be able to debug the failure directly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1788545068:25,config,configuration,25,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1788545068,1,['config'],['configuration']
Modifiability,@linev ; I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8333#issuecomment-854900524:199,config,configuration,199,https://root.cern,https://github.com/root-project/root/pull/8333#issuecomment-854900524,1,['config'],['configuration']
Modifiability,"@linev Thank you for the comments. I implemented all of the suggested corrections, except change of variable in REveFrameBox::fFramePoints because it requires changes in implementation of REveFrameBox::SetAAQuadXY and REveFrameBox::SetAAQuadXZ, but does not effect functionality. I can return to this subject later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4986#issuecomment-587945294:100,variab,variable,100,https://root.cern,https://github.com/root-project/root/pull/4986#issuecomment-587945294,1,['variab'],['variable']
Modifiability,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4127#issuecomment-516328534:66,variab,variables,66,https://root.cern,https://github.com/root-project/root/pull/4127#issuecomment-516328534,3,"['config', 'variab']","['config', 'configure-based', 'variables']"
Modifiability,@linev would that tool be portable to JS?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10660#issuecomment-1471784768:26,portab,portable,26,https://root.cern,https://github.com/root-project/root/issues/10660#issuecomment-1471784768,1,['portab'],['portable']
Modifiability,"@linev yes, it's the `INSTALL` variable that expands to nothing (will post the makefile in a sec)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789819392:31,variab,variable,31,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789819392,1,['variab'],['variable']
Modifiability,"@linev your patch fixes that problem, and unfortunately I cannot reproduce the original problem anymore. I think in the meanwhile I must have installed some packages the fixed the empty INSTALL variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789889203:194,variab,variable,194,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789889203,1,['variab'],['variable']
Modifiability,"@lmoneta , we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in this PR? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IB",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10650#issuecomment-1149048876:818,plugin,pluginFWCoreServicesPlugins,818,https://root.cern,https://github.com/root-project/root/pull/10650#issuecomment-1149048876,1,['plugin'],['pluginFWCoreServicesPlugins']
Modifiability,@lmoneta I am using your branch to test with the cmake command:; ```; '/mnt/build/lcgsoft/releases/cmake-3.15.7-Linux-x86_64/bin/cmake' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_INSTALL_PREFIX=/build/lcgsoft/releases/dev4cuda/ROOT/fix_cuda14/x86_64-centos7-gcc8-opt' '-Dpython=ON' '-Dpython3=ON' '-Dpython_version=3' '-Dbuiltin_lz4=ON' '-Dbuiltin_pcre=ON' '-Dbuiltin_xxhash=ON' '-Dbuiltin_ftgl=ON' '-Dbuiltin_afterimage=ON' '-Dbuiltin_glew=ON' '-Dbuiltin_unuran=ON' '-Dbuiltin_zstd=ON' '-Dcintex=ON' '-Dcuda=ON' '-Dtmva-gpu=ON' '-DCMAKE_CUDA_STANDARD=14' '-Ddavix=ON' '-Dexceptions=ON' '-Dexplicitlink=ON' '-Dfftw3=ON' '-Dgdml=ON' '-Dgsl_shared=ON' '-Dhttp=ON' '-Dgenvector=ON' '-Dvc=ON' '-Dmathmore=ON' '-Dminuit2=ON' '-Dmysql=ON' '-Dopengl=ON' '-Dpgsql=OFF' '-Dpythia6=OFF' '-Dpythia8=OFF' '-Dreflex=ON' '-Dr=OFF' '-Droofit=ON' '-Dssl=ON' '-Dunuran=ON' '-Dfortran=ON' '-Dxft=ON' '-Dxml=ON' '-Dxrootd=ON' '-Dzlib=ON' '-DCINTMAXSTRUCT=36000' '-DCINTMAXTYPEDEF=36000' '-DCINTLONGLINE=4096' '-Dfail-on-missing=ON' '-Dfitsio=ON' '-Doracle=OFF' '-Dgfal=OFF' '-DCMAKE_CXX_STANDARD=17' '-Ddcache=ON' '-Dgfal=ON' '-DGFAL_DIR=/build/lcgsoft/releases/dev4cuda/Grid/gfal/1.13.0-0/x86_64-centos7-gcc8-opt' '-DSRM_IFCE_DIR=/build/lcgsoft/releases/dev4cuda/Grid/srm-ifce/1.13.0-0/x86_64-centos7-gcc8-opt' '-Doracle=ON' '-DORACLE_HOME=/build/lcgsoft/releases/dev4cuda/oracle/19.3.0.0.0/x86_64-centos7-gcc8-opt' '-GUnix Makefiles' '/build/lcgsoft/root'; ```; And I am getting the following error:; ```; -- Configuring done; CMake Error at cmake/modules/RootMacros.cmake:894 (add_library):; CUDA_STANDARD is set to invalid value '17'; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1295 (ROOT_LINKER_LIBRARY); tmva/tmva/CMakeLists.txt:53 (ROOT_STANDARD_LIBRARY_PACKAGE). -- Generating done; ```; Any idea?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5598#issuecomment-627358751:1487,Config,Configuring,1487,https://root.cern,https://github.com/root-project/root/pull/5598#issuecomment-627358751,1,['Config'],['Configuring']
Modifiability,"@lmoneta I had many of those errors in my effort to write the patch. Could you either send me or post a full trace of configuration + building please ?; To generate it I use:. ```; make VERBOSE=1; ```. thanks!. EDIT: note that there may be an issue if you use . ```; make -jx; ```. with x number of cores. I cannot confirm it, but I've witnessed that on some builds make might get to the building of the cmaes part in ROOT before the libcmaes has compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-64233376:118,config,configuration,118,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-64233376,1,['config'],['configuration']
Modifiability,"@lmoneta Thanks for investigating. I am a bit confused now. If this crash only happens when OMP is enabled, then it is probably related to my use of thread_local variables. I don't have much experience with what can go wrong there. Is there an easy way for me to reproduce this on my computer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-734956836:162,variab,variables,162,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-734956836,1,['variab'],['variables']
Modifiability,"@lmoneta as you suggested, the last patch lets cmake download both eigen3 and libcmaes, installs them locally within ROOT build repo and uses them to compile and run ROOT:. ```; cmake ../ -Dall=on -Dtesting=on -Dlibcmaes=on; ```. now does not require pkg-config, though uses pkg-config and an existing build of libcmaes if one is detected. The patch has been tested with and without CMA-ES support. Let me know how it goes and what is the next issue (if any :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-64083303:255,config,config,255,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-64083303,2,['config'],['config']
Modifiability,@lmoneta at this point I think it would be wise for you to finish it off. I clearly have other priorities as this has been open for a year. Thanks for offering to refactor it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1533#issuecomment-458600502:163,refactor,refactor,163,https://root.cern,https://github.com/root-project/root/pull/1533#issuecomment-458600502,1,['refactor'],['refactor']
Modifiability,"@martinmine, it looks like the build failed due to configuration issues. Could you have a look, this is on a separate branch called `runtime-cxxmodules`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/504#issuecomment-293918914:51,config,configuration,51,https://root.cern,https://github.com/root-project/root/pull/504#issuecomment-293918914,1,['config'],['configuration']
Modifiability,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17?. Windows build seems to be ""green"":; ```; Error(s) when building project; 0 Compiler errors; 51 or more Compiler warnings; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4945#issuecomment-585718964:93,config,configuration,93,https://root.cern,https://github.com/root-project/root/pull/4945#issuecomment-585718964,1,['config'],['configuration']
Modifiability,"@maxgalli, yes I agree with you that we need to refactor this code in future. We should not reinstall things twice. @etejedor, I would like to play safe and would be in favor of @oshadura's solution in #4775.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4763#issuecomment-574226949:48,refactor,refactor,48,https://root.cern,https://github.com/root-project/root/pull/4763#issuecomment-574226949,1,['refactor'],['refactor']
Modifiability,@mdessole I cancelled the CI jobs on `mac12` and `mac13` - they were stuck since 3 hours in the CMake configuration step (same result as previous runs that timed out after 6 hours). Maybe try rebasing the PR with the latest CI fixes in `master`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14618#issuecomment-1938513519:102,config,configuration,102,https://root.cern,https://github.com/root-project/root/pull/14618#issuecomment-1938513519,1,['config'],['configuration']
Modifiability,"@mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14115:96,config,configuration,96,https://root.cern,https://github.com/root-project/root/pull/14115,1,['config'],['configuration']
Modifiability,"@mkrzewic I'm slightly confused because your reproducer doesn't mention setting `LVM_TARGETS_TO_BUILD` while https://github.com/root-project/root/issues/13865#issuecomment-1779361849 does... That said, I think I see what's going on, there was an oversight where we would not get the updated `LVM_TARGETS_TO_BUILD` after `builtin_llvm` replaced special targets such as `all` and `host`/`Native` (after https://github.com/root-project/root/pull/13420). In addition there is one minor missing update to automatically configure only the LLVM targets that are needed on FreeBSD, which should also dramatically reduce your build time and binary sizes. Can you maybe give https://github.com/root-project/root/pull/14115 a try?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075#issuecomment-1827286471:514,config,configure,514,https://root.cern,https://github.com/root-project/root/issues/14075#issuecomment-1827286471,1,['config'],['configure']
Modifiability,"@oshadura @Axel-Naumann ; Before I can merge it in master, one should change `Jenkins` configuration, otherwise it will try to disable `builtin_nlohmannjson` for every platform :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6690#issuecomment-715207268:87,config,configuration,87,https://root.cern,https://github.com/root-project/root/pull/6690#issuecomment-715207268,1,['config'],['configuration']
Modifiability,"@oshadura If we want to have numba in this tutorial, we would have to add a `FindNumba.cmake` thingy, to enable/disable the tutorial during configure time. This is quite some overhead ... What do you recommend?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5194#issuecomment-602512943:140,config,configure,140,https://root.cern,https://github.com/root-project/root/pull/5194#issuecomment-602512943,1,['config'],['configure']
Modifiability,@oshadura Now we've actually thought about using a proper `RootBuildOption` called `-Dasserts` to implement the same thing. What do you think? Build option or plain cmake variable (like the `ROOT_ENABLE_ASSERTS` above)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6560#issuecomment-704213653:171,variab,variable,171,https://root.cern,https://github.com/root-project/root/pull/6560#issuecomment-704213653,1,['variab'],['variable']
Modifiability,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```; ROOT_STANDARD_LIBRARY_PACKAGE(RInterface; HEADERS; RExports.h; TRDataFrame.h; TRFunctionExport.h; TRFunctionImport.h; TRInterface.h; TRInternalFunction.h; TRObject.h; SOURCES; RExports.cxx; TRCompletion.cxx; TRDataFrame.cxx; TRFunctionExport.cxx; TRFunctionImport.cxx; TRInterface.cxx; TRObject.cxx; DICTIONARY_OPTIONS; -I${R_INCLUDE_DIR}; -I${R_Rcpp_INCLUDE_DIR}; -I${R_RInside_INCLUDE_DIR}; LIBRARIES; R::R readline; DEPENDENCIES; Core; Matrix; RIO; Thread; ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2651#issuecomment-423230293:184,variab,variables,184,https://root.cern,https://github.com/root-project/root/pull/2651#issuecomment-423230293,1,['variab'],['variables']
Modifiability,"@oshadura please let us know of any build system requirements / recommendations you have here, e.g. where to do this config test and how to convey the result (""need -lgcc"") to the linker invocation of `libRooFitCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6855#issuecomment-731733091:117,config,config,117,https://root.cern,https://github.com/root-project/root/issues/6855#issuecomment-731733091,1,['config'],['config']
Modifiability,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. ; I tried to use your code around `builtin_glew`, but it does not work.; `nlohmann_json` does not appear in exported targets.; Also direct call like; ```; export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake); ```; fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784#issuecomment-724615880:137,config,configuration-file,137,https://root.cern,https://github.com/root-project/root/issues/6784#issuecomment-724615880,1,['config'],['configuration-file']
Modifiability,@pcanal - Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8390#issuecomment-859239302:64,extend,extended,64,https://root.cern,https://github.com/root-project/root/pull/8390#issuecomment-859239302,1,['extend'],['extended']
Modifiability,@pcanal - HDFS can go. We still use it at most of the CMS Tier-2 sites but not through the ROOT plugin.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-453535140:96,plugin,plugin,96,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-453535140,1,['plugin'],['plugin']
Modifiability,"@pcanal - thanks, but adding the header to the command line still does not work if that header does not include:. ```c++; #ifndef TwoInts_h; #define TwoInts_h. //#include <ROOT/RDataFrame.hxx>; //#include <ROOT/RVec.hxx>; //; //using namespace ROOT::VecOps;. struct TwoInts {; int a, b;; };. #endif /* TwoInts_h */; ```; ```bash; % rootcling -f mydict.cxx -rmf libmydict.rootmap -rml libmydict.so TwoInts.h LinkDef.h ; yana@iannas-macbook-pro AK-RDF % clang++ -mmacosx-version-min=11.6 -shared -o libmydict.so mydict.cxx `root-config --cflags --libs` ; mydict.cxx:56:70: error: no member named 'VecOps' in namespace 'ROOT'; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::VecOps::RVec<ROOT::VecOps::RVec<int> >*); ~~~~~~~~^; mydict.cxx:56:89: error: no member named 'VecOps' in namespace 'ROOT'; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::VecOps::RVec<ROOT::VecOps::RVec<int> >*); ~~~~~~^; mydict.cxx:56:105: error: expected '(' for function-style cast or type construction; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::VecOps::RVec<ROOT::VecOps::RVec<int> >*); ~~~^; mydict.cxx:56:107: error: expected ')'; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::VecOps::RVec<ROOT::VecOps::RVec<int> >*); ^; mydict.cxx:56:55: note: to match this '('; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::VecOps::RVec<ROOT::VecOps::RVec<int> >*); ^; mydict.cxx:58:15: error: no member named 'VecOps' in namespace 'ROOT'; ::ROOT::VecOps::RVec<ROOT::VecOps::RVec<int> > *ptr = 0;; ~~~~~~~~^; mydict.cxx:58:34: error: no member named 'VecOps' in namespace 'ROOT'; ::ROOT::VecOps::RVec<ROOT::VecOps::RVec<int> > *ptr = 0;; ~~~~~~^; ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9920#issuecomment-1044024611:527,config,config,527,https://root.cern,https://github.com/root-project/root/issues/9920#issuecomment-1044024611,1,['config'],['config']
Modifiability,"@pcanal - this is the refactoring you requested in #240 . Since it's now more visible, I also added a few small comments in `RConfig.h` about when these macros should be utilized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/242:22,refactor,refactoring,22,https://root.cern,https://github.com/root-project/root/pull/242,1,['refactor'],['refactoring']
Modifiability,"@pcanal : I agree that there is a limited danger of variable inconsistency. However, in ALICE, we are already doing it in a way similar to what you suggest: the ROOT variables are dynamically calculated and preset (before ROOT is launched) as part of the software stack initialization. There are no hard-coded things (and no one is supposed to change compiler paths on the GRID). Since we launch many ALICE-O2 executables, the preset actually needs to be done on a global level instead for every executable (otherwise we would not gain anything).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1681837382:52,variab,variable,52,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1681837382,2,['variab'],"['variable', 'variables']"
Modifiability,"@pcanal @bbockelm I think there are two possible refactoring approaches.; 1. I could extract all signal handling related functions and attributes out from TSystem(.h,.cxx) and modify both TUnixSystem and TWinNT; 2. I create SignalHandling class in another class and add it as an class member in TUnixSystem. In that sense, I need to overwrite all signal handling functions and point them to the corresponding functions in new class SignalHandling.; Which one is better? The first one is more clear to me but I am not sure how it will impact the windows machine. Zhe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/97#issuecomment-170733479:49,refactor,refactoring,49,https://root.cern,https://github.com/root-project/root/pull/97#issuecomment-170733479,1,['refactor'],['refactoring']
Modifiability,@pcanal Can you approve my changes in `TreePlayer`. I extend virtual interface to be able use `TVirtualTreePlayer` class from GUI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5231#issuecomment-604999842:54,extend,extend,54,https://root.cern,https://github.com/root-project/root/pull/5231#issuecomment-604999842,1,['extend'],['extend']
Modifiability,"@pcanal How should we proceed?; Is it goes in right direction?; If yes, should we extend `TClass::HasDefaultConstructor(bool testio=false)` or add new method `TClass::HasIOConstructor()`?; Also problem with array of objects is not clear for me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5133#issuecomment-597828998:82,extend,extend,82,https://root.cern,https://github.com/root-project/root/pull/5133#issuecomment-597828998,1,['extend'],['extend']
Modifiability,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/583#issuecomment-302386104:148,variab,variable,148,https://root.cern,https://github.com/root-project/root/pull/583#issuecomment-302386104,1,['variab'],['variable']
Modifiability,"@pcanal I found the problem. It seems that the calls to type->InheritsFrom does some autoloading behind the scenes that leads later to the crash in the tests. Even if originalTest and newTest always yield the same result, the newTest is non-const and thus affects those handful of tests. So not sure how to circumvent this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1991482725:62,Inherit,InheritsFrom,62,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1991482725,1,['Inherit'],['InheritsFrom']
Modifiability,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. ; The main difference is design-wise, for the fact that RNTuple's quantization is:; - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`; - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16390#issuecomment-2360136674:226,variab,variable,226,https://root.cern,https://github.com/root-project/root/pull/16390#issuecomment-2360136674,2,['variab'],['variable']
Modifiability,"@pcanal actually my idea to transform the error into a warning does not work: without VecGeom support, the plugin mechanism already issues errors if I do:; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```; The return value looks wrong by the way, I would expect -1 in this case. Is there a way to check if a module was compiled without issuing errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12315#issuecomment-1430946012:107,plugin,plugin,107,https://root.cern,https://github.com/root-project/root/pull/12315#issuecomment-1430946012,1,['plugin'],['plugin']
Modifiability,@pcanal added logs; [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log); [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1919517114:26,config,configure-err,26,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1919517114,4,['config'],"['configure-err', 'configure-out']"
Modifiability,@pcanal can you please review this PR? and give some suggestions how it could be improved extended?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5081#issuecomment-623408251:90,extend,extended,90,https://root.cern,https://github.com/root-project/root/pull/5081#issuecomment-623408251,1,['extend'],['extended']
Modifiability,"@pcanal in the end we always use `TLeaf::GetCount` (never `TLeaf::GetCounter`) together with `GetLenStatic` to find out if the branch is an array and, if it is, what we should put as a counter in the leaflist. In particular we get the counter like this:; ```c++; leaf->GetLeafCount() ? std::string(leaf->GetLeafCount()->GetName()) : std::to_string(leaf->GetLenStatic());; ```; which seems to work for the cases supported by `TTreeReaderValue`: one single leaf per branch, either a fixed-sized or a variable-sized unidimensional array.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359390695:498,variab,variable-sized,498,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359390695,1,['variab'],['variable-sized']
Modifiability,"@pcanal yes, I left a `TODO` in the comments in this PR that suggests exactly that.; It's not super straightforward because we need to add logic that calls `TTree::Branch` the first time and `SetBranchAddress` subsequent times, per worker thread. edit: so I would first go back to a working `Snapshot`, then add tests that ensure we don't break it again ( #1086 ) and then go on with this last refactoring.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1085#issuecomment-333403070:394,refactor,refactoring,394,https://root.cern,https://github.com/root-project/root/pull/1085#issuecomment-333403070,1,['refactor'],['refactoring']
Modifiability,"@pcanal, regarding your requirements:; * I've already run `clang-format` on my laptop. If the CI version behaves differently, I am of course happy to fix further stuff.; * The documentation is on par with `TCsvDS`, given I copied most of it from there. I am happy to improve it further in a subsequent PR.; * The tests are on par with `datasource_csv`, given I simply adapted it to my case. I will of course add more as I experiment more with it myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371615688:368,adapt,adapted,368,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371615688,1,['adapt'],['adapted']
Modifiability,"@peremato, @Axel-Naumann do you remember why we added this checks if `CLANG_BUILD_EXAMPLES` is set. In https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/examples/CMakeLists.txt we check this flag and ignore the examples. Did you mean to name this variable (adding a new option) `CLANG_INCLUDE_EXAMPLES` following the `LLVM_INCLUDE_EXAMPLES` pattern?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/716#issuecomment-311989265:279,variab,variable,279,https://root.cern,https://github.com/root-project/root/pull/716#issuecomment-311989265,1,['variab'],['variable']
Modifiability,@phsft-bot build just on mac11.0/default because I changed your config and want to test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-733763719:64,config,config,64,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-733763719,1,['config'],['config']
Modifiability,@phsft-bot build just on mac11.0/default because I might have fixed your config,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-733764419:73,config,config,73,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-733764419,1,['config'],['config']
Modifiability,@phsft-bot build. Let's see again about the CentoOS 8 error. I suspect that it's unrelated to this PR but related to the recent build node configuration change,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10746#issuecomment-1157597860:139,config,configuration,139,https://root.cern,https://github.com/root-project/root/pull/10746#issuecomment-1157597860,1,['config'],['configuration']
Modifiability,"@phsft-bot build. Let's see if the tests are still passing and then merge the PR, which @bellenot already approved. I like the idea of making the timeout configurable :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10886#issuecomment-1808868564:154,config,configurable,154,https://root.cern,https://github.com/root-project/root/pull/10886#issuecomment-1808868564,1,['config'],['configurable']
Modifiability,"@rodwalker : before examining the core dump could you install `xrootd-debuginfo` and then when in `gdb` could you go to frame 4 (type: `f 4`), you should be then in this source file:. https://github.com/xrootd/xrootd/blob/93871f8241e478a308c8e722fd99aeaa08ff6459/src/XrdNet/XrdNetAddr.cc#L268. could you then print the value of `iP` variable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760231024:333,variab,variable,333,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760231024,1,['variab'],['variable']
Modifiability,"@sazio, as I said on the other PR, you originally based your local work on the `latest-stable` branch, which is only used by users to get the latest release, but not to check in new content into ROOT's repository. As you see in the change diff, there are lots of changes that are not meant to be there (that you should also have seen before creating the pull request, in the ""Review changes"" section). Also there are a number of merge conflicts. You must solve this locally before creating the PR. You must rebase your commits on top of `master`, otherwise this is not going to work. Here's what I would recommend, provided that your actual commits are on a local branch called `latest-stable`:; ```bash; $ git branch -m latest-stable tmva-variable-plotter # Renames your local branch; $ git fetch origin master:master; $ git checkout tmva-variable-plotter. # Rebase your 'tmva-variable-plotter' branch onto 'master', provided that the fork point of your branch was 'origin/latest-stable'.; # The default editor will open showing a number of 'pick' lines; just verify that those commits are part of your work. You may; # need to fix any merge conflict that might happen here.; $ git rebase --interactive --onto master origin/latest-stable. # If you mess up at some point while rebasing, you can revert to the previous state issueing `$ git rebase --abort`. # Then push your changes to GitHub and open a new pull-request; $ git push ...; ```. Afterward, you can open a new pull request with origin on `sazio:tmva-variable-plotter` targetting `root-project:master`. Other than that, I will close this pull-request, as it cannot be merged in its current state. Cheers,; Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8698#issuecomment-882434733:740,variab,variable-plotter,740,https://root.cern,https://github.com/root-project/root/pull/8698#issuecomment-882434733,4,['variab'],['variable-plotter']
Modifiability,@seth Could you retry with the following two changes to the ROOT configuration:; ```; 12c12; < '-Dpch:BOOL=ON'; ---; > '-Dpch:BOOL=OFF'; 15c15; < '-Druntime_cxxmodules:BOOL=OFF'; ---; > '-Druntime_cxxmodules:BOOL=ON'; ```; because the new option are the new defaults and may affect the code path we saw.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1089597995:65,config,configuration,65,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1089597995,1,['config'],['configuration']
Modifiability,"@shahor02, I forgot to ask you to update the release notes. In the same commit please mention that ACLiC can be configured to call rootcling with special flags via this option somewhere [here](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v622/index.md#core-libraries). Sorry I missed to mention that earlier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-611887114:112,config,configured,112,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-611887114,1,['config'],['configured']
Modifiability,"@shahor02, thanks a lot! Maybe the changes to `config/rootrc.in` accidentally dropped out. Also please make it all a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-610843589:47,config,config,47,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-610843589,1,['config'],['config']
Modifiability,"@simonmichal maybe they use `-Wl,--as-needed`, and pull the xrd libraries in through their or ROOT's plugin mechanism?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-748027035:101,plugin,plugin,101,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-748027035,1,['plugin'],['plugin']
Modifiability,"@smuzaffar, thank you!. `ROOT CI / mac14 ARM64 LLVM_ENABLE_ASSERTIONS=On` seems to be broken at cmake configuration and I do not see how this could be caused by this PR. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15374#issuecomment-2088450695:102,config,configuration,102,https://root.cern,https://github.com/root-project/root/pull/15374#issuecomment-2088450695,1,['config'],['configuration']
Modifiability,"@steffen-AEI what is your use case for the `pbuilder` sandbox? As mentioned before, ROOT seems to generally work on Ubuntu 22.04 and we (as the ROOT team) cannot support all possible configuration and sandbox possibilities out there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1169577022:54,sandbox,sandbox,54,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1169577022,3,"['config', 'sandbox']","['configuration', 'sandbox']"
Modifiability,"@stwunsch : The machine running the installation of the reference guide is root-ubuntu-2004-2. I logged on this machine and simply tried (stupidly) to type ""pyspark"". I know nothing about this tool but surprisingly I got an answer saying it seems wrongly installed there ... Dod you have an idea about that ? what should be done ? A Python expert might know better. ```; sftnight@root-ubuntu-2004-2:~$ pyspark; Could not find valid SPARK_HOME while searching ['/home', '/usr/local/bin']. Did you install PySpark via a package manager such as pip or Conda? If so,; PySpark was not found in your Python environment. It is possible your; Python environment does not properly bind with your package manager. Please check your default 'python' and if you set PYSPARK_PYTHON and/or; PYSPARK_DRIVER_PYTHON environment variables, and see if you can import; PySpark, for example, 'python -c 'import pyspark'. If you cannot import, you can install by using the Python executable directly,; for example, 'python -m pip install pyspark [--user]'. Otherwise, you can also; explicitly set the Python executable, that has PySpark installed, to; PYSPARK_PYTHON or PYSPARK_DRIVER_PYTHON environment variables, for example,; 'PYSPARK_PYTHON=python3 pyspark'. /usr/local/bin/pyspark: line 24: /bin/load-spark-env.sh: No such file or directory; /usr/local/bin/pyspark: line 68: /bin/spark-submit: No such file or directory; sftnight@root-ubuntu-2004-2:~$ . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7802#issuecomment-822528404:811,variab,variables,811,https://root.cern,https://github.com/root-project/root/issues/7802#issuecomment-822528404,2,['variab'],['variables']
Modifiability,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds.; You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-821318359:220,variab,variables,220,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-821318359,1,['variab'],['variables']
Modifiability,"@vepadulano @pcanal I just noticed that all the 31 bit ugly stuff was due to an outdated documentation. It's no longer the case, minor and major have now independent variables both 64-bits. So this simplifies things significantly.; See https://github.com/root-project/root/commit/19b0ca55fe1643eb07c9bca362b64a4d2111674f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14967#issuecomment-2013036145:166,variab,variables,166,https://root.cern,https://github.com/root-project/root/pull/14967#issuecomment-2013036145,1,['variab'],['variables']
Modifiability,"@vepadulano I've integrated the support for subnames in TChains, see the adapted output at the bottom of the summary above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7829#issuecomment-821074977:73,adapt,adapted,73,https://root.cern,https://github.com/root-project/root/issues/7829#issuecomment-821074977,1,['adapt'],['adapted']
Modifiability,@veprbl you are building the latest `master`? Could you share your system setup and configuration options?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1674271078:84,config,configuration,84,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1674271078,1,['config'],['configuration']
Modifiability,"@vgvassilev ; > For example, I'd recommend to move the include_directories to target_include_directories outside of this PR. Not always it can be done easily. In several places I have to change from `target_include_directories` to `include_directories` to solve dependency issue between library and dictionary. We were discussing it in mattermost, but now I delete myself from discussion trying adding you. Maybe @oshadura could help us to recover it. Long story short - dictionary need information about library includes BEFORE `target_include_directories` for that library is called. There is workaround in cmake (generator expressions), but it is not flexible enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5181#issuecomment-606589395:654,flexible,flexible,654,https://root.cern,https://github.com/root-project/root/pull/5181#issuecomment-606589395,1,['flexible'],['flexible']
Modifiability,"@vgvassilev ; > should we put the veccore enablement options on the web?. I would prefer to wait until developments using VecCore within ROOT are more stable. In its current form, the targets are not setup correctly, so if you configure ROOT with VecCore=ON and Vc=OFF things are likely to break. That should definitely not be the case in the long term. Either we use Vc directly, or we rely on VecCore and write code that won't break unless Vc is turned ON.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/497#issuecomment-309035267:227,config,configure,227,https://root.cern,https://github.com/root-project/root/pull/497#issuecomment-309035267,1,['config'],['configure']
Modifiability,"@vgvassilev I have uploaded a [snapshot image](https://hub.docker.com/layers/greenc/root_10861/build-snapshot/images/sha256-cde089095090f5cd9785cfcc2f2df341b24437b0868d7014b51efb8d3d7ab5ca?context=repo). The shell history will show exactly what was done, and the relevant build log is `/scratch/build-root-v6-28-00-patches-c14-p3913-debug`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1402618462:70,layers,layers,70,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1402618462,1,['layers'],['layers']
Modifiability,"@vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. ```; set(LLVM_VERSION_MAJOR 16) ; set(LLVM_VERSION_MINOR 0) ; set(LLVM_VERSION_PATCH 6) ; set(LLVM_VERSION_SUFFIX ) ; set(LLVM_PACKAGE_VERSION 2.13.2) ; set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) ; ```. not sure how it gets there, I guess it is generated here:; `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")`; which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1943776189:572,variab,variable,572,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1943776189,1,['variab'],['variable']
Modifiability,@vgvassilev The installation with LLVM Debug is there now; ```; $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh; $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log; -- Building LLVM in 'Debug' mode.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2016721218:275,config,configure,275,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2016721218,1,['config'],['configure']
Modifiability,"@vgvassilev Yes, of course. I need to tune them and reduce/chunk/extend them a little bit, but I will add a PR on roottest before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/567#issuecomment-301118434:65,extend,extend,65,https://root.cern,https://github.com/root-project/root/pull/567#issuecomment-301118434,1,['extend'],['extend']
Modifiability,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:; ```; Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master); > git config core.sparsecheckout # timeout=10; > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317; > git branch -a -v --no-abbrev # timeout=10; > git branch -D master # timeout=10; > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317; Commit message: ""Adding dependency for slavedict generation on masterdict""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2775#issuecomment-429016900:240,config,config,240,https://root.cern,https://github.com/root-project/root/pull/2775#issuecomment-429016900,1,['config'],['config']
Modifiability,"@vgvassilev mentioned a nice additional idea during the Users Workshop, concerning including the backtrace as part of the bug report. I like that idea a lot. However, it would be maybe convenient to strip 'user paths' that are outside of the ROOT-src folder, if possible before forwarding it to the Website. Maybe using [GetHomeDirectory](https://root.cern.ch/doc/master/classTSystem.html#a8b87bc3a30c896b8e04de8e153021784) and replacing all paths starting with this. I am not sure where to 'rescue this info' from. Is there maybe a variable in gSystem that stores the last lines printed in console?; I see https://root.cern.ch/doc/master/classTSystem.html#a10c356cb9cd90af5e43d8329406f6e42 but it only works forward in time, not backward after the backtrace was printed. One alternative could be to also store the last backtrace as string variable within gROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1122621672:533,variab,variable,533,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122621672,2,['variab'],['variable']
Modifiability,@vgvassilev the Jenkins git plugin fails to fetch the repo. It could be a bug in an old version of it that we are using. I'll ask around to see if we can get it updated soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453#issuecomment-288324693:28,plugin,plugin,28,https://root.cern,https://github.com/root-project/root/pull/453#issuecomment-288324693,1,['plugin'],['plugin']
Modifiability,@vgvassilev when should `module.idx` be regenerated? If a header changes? A dictionary / PCM module? A library? The CMake config?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7125#issuecomment-914057962:122,config,config,122,https://root.cern,https://github.com/root-project/root/issues/7125#issuecomment-914057962,1,['config'],['config']
Modifiability,"@vgvassilev, looks like modules does not stuck any more with new configuration (Ubuntu 16 + gcc5.4), should we merge this anyway?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2986#issuecomment-444150641:65,config,configuration,65,https://root.cern,https://github.com/root-project/root/pull/2986#issuecomment-444150641,1,['config'],['configuration']
Modifiability,@wmyyy It looks like there is a conflict with `C:/Strawberry/perl/bin/pkg-config.bat` (which is not needed). Can you remove `C:\Strawberry\perl\bin\` from the `PATH` and try again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9347#issuecomment-982455259:74,config,config,74,https://root.cern,https://github.com/root-project/root/issues/9347#issuecomment-982455259,1,['config'],['config']
Modifiability,@xvallspl @configure yes it looks good. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/567#issuecomment-301118423:11,config,configure,11,https://root.cern,https://github.com/root-project/root/pull/567#issuecomment-301118423,1,['config'],['configure']
Modifiability,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6054:636,config,configuration,636,https://root.cern,https://github.com/root-project/root/pull/6054,1,['config'],['configuration']
Modifiability,A bunch of improvements to distributed module:; 1. Add all sources to the `py_compile` command in cmake; 2. Use postponed evaluation for type hints and avoid implicit import ROOT; 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11241:299,variab,variables,299,https://root.cern,https://github.com/root-project/root/pull/11241,1,['variab'],['variables']
Modifiability,"A couple broken tutorials were fixed. Several variable names were changed for improved clarity as a well as compatibility with the older version of the interpreter. The syntax `~~~` was replaced with the more universal Markdown syntax ``` ``` ```. Several bug fixes and improvements were made to the convertonotebook script. this includes capitalizing the first letter in every Markdown cell, and ensuring the link in the header is reproduced appropriately. Lastly, many aesthetic improvements were made to the tutorials, including ensuring tabs are three spaces, and styling important comments with Markdown.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/217:46,variab,variable,46,https://root.cern,https://github.com/root-project/root/pull/217,1,['variab'],['variable']
Modifiability,"A couple concern. ; ```; export ROOT_LDSYSPATH=...; export ROOT_CPPSYSINCL=...; root.exe -q -e ""double x=1;""; ```; works perfectly but; ```; export ROOT_LDSYSPATH=...; export ROOT_CPPSYSINCL=...; PATH=/location_of_another_gcc/bin:${PATH}; root.exe -q -e ""double x=1;""; ```; fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of; ```; ... setup environment ...; launch_O2 some args # this is the process that eventually fork all the tasks; ```; have:; ```; ... setup environment ...; preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks; ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1680914709:491,variab,variables,491,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1680914709,1,['variab'],['variables']
Modifiability,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7343:70,extend,extended,70,https://root.cern,https://github.com/root-project/root/pull/7343,1,['extend'],['extended']
Modifiability,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7349:70,extend,extended,70,https://root.cern,https://github.com/root-project/root/pull/7349,1,['extend'],['extended']
Modifiability,"A more standalone repro:; ```python; import ROOT. ROOT.gInterpreter.Declare('''; #include <utility>. template <typename T>; class MySofieFunctorHelper {; };. auto helper_function() -> MySofieFunctorHelper<std::make_index_sequence<1>>; {; return MySofieFunctorHelper<std::make_index_sequence<1>>();; }. auto helper = MySofieFunctorHelper<std::make_index_sequence<1>>();; '''). print(ROOT.helper); print(ROOT.helper_function()); ```; prints; ```; <cppyy.gbl.MySofieFunctorHelper<integer_sequence<unsigned long,0> > object at 0x7f9190f75020>; None; ```; So printing the variable works fine, but printing the return value of the function doesn't. `std::make_index_sequence` seems to play some role here, because replacing it by e.g. `std::vector<int>` in the template argument makes the function also work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684#issuecomment-1167272032:567,variab,variable,567,https://root.cern,https://github.com/root-project/root/issues/10684#issuecomment-1167272032,1,['variab'],['variable']
Modifiability,"A new `xRooFit/Config.h` header is introduced to configure the xRooFit; namespace without using compiler flags. Also, a symlink to `inc/RooFit` is replaced with an; `add_include_directories` entry in the CMakeFiles, because the symlink; doesn't work on Windows. In a separate commit: the right type to use `std::vector::at()` is `size_t`, and like this we; avoid the problem that `ssize_t` is not defined on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11932:15,Config,Config,15,https://root.cern,https://github.com/root-project/root/pull/11932,2,"['Config', 'config']","['Config', 'configure']"
Modifiability,"A new class DFDescription is introduced.; It has 2 member strings, corresponding to the brief and the full description.; It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object.; As brief description is the output from RInterface::DescribeDataset.; As full description is the remaining code from RInterface::Describe.; Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:; * AsString(bool) -> returning brief/full description as a string; * Print(bool) -> printing the content of AsString(bool); * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false); * printValue -> returns string corresponding to AsString(shortFomat=false); * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9597:860,adapt,adapted,860,https://root.cern,https://github.com/root-project/root/pull/9597,2,['adapt'],['adapted']
Modifiability,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6231:9,refactor,refactoring,9,https://root.cern,https://github.com/root-project/root/pull/6231,1,['refactor'],['refactoring']
Modifiability,"A related problem is also in RooNLLVar::create that is called by RooAbsTestStatistic::initSimMode,; https://root.cern/doc/master/RooAbsTestStatistic_8cxx_source.html#l00500. When the sub-likelihood is created using the component pdf, one should pass the extend flag only if the pdf canBeExtended()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6894#issuecomment-736574660:254,extend,extend,254,https://root.cern,https://github.com/root-project/root/issues/6894#issuecomment-736574660,1,['extend'],['extend']
Modifiability,A variable transformation method Variance Threshold (VT) has been added in DataLoader class which computes the variance of all variables and return a new DataLoader with the selected variables which lie above a specific threshold. I have also created a Jupyter [notebook](https://github.com/abhinavmoudgil95/tmva-notebooks/blob/master/VarianceThreshold.ipynb) to demonstrate it. . Kindly review. ; cc: @omazapa @lmoneta,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/179:2,variab,variable,2,https://root.cern,https://github.com/root-project/root/pull/179,3,['variab'],"['variable', 'variables']"
Modifiability,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14921#issuecomment-1986476209:19,config,configure,19,https://root.cern,https://github.com/root-project/root/issues/14921#issuecomment-1986476209,1,['config'],['configure']
Modifiability,A/PDEFoamVect.h TMVA/PDF.h TMVA/QuickMVAProbEstimator.h TMVA/Ranking.h TMVA/Reader.h TMVA/RegressionVariance.h TMVA/ResultsClassification.h TMVA/Results.h TMVA/ResultsMulticlass.h TMVA/ResultsRegression.h TMVA/ROCCalc.h TMVA/ROCCurve.h TMVA/RootFinder.h TMVA/RuleCut.h TMVA/RuleEnsemble.h TMVA/RuleFitAPI.h TMVA/RuleFit.h TMVA/RuleFitParams.h TMVA/Rule.h TMVA/SdivSqrtSplusB.h TMVA/SeparationBase.h TMVA/SimulatedAnnealingFitter.h TMVA/SimulatedAnnealing.h TMVA/SVEvent.h TMVA/SVKernelFunction.h TMVA/SVKernelMatrix.h TMVA/SVWorkingSet.h TMVA/TActivationChooser.h TMVA/TActivation.h TMVA/TActivationIdentity.h TMVA/TActivationRadial.h TMVA/TActivationReLU.h TMVA/TActivationSigmoid.h TMVA/TActivationTanh.h TMVA/Timer.h TMVA/TNeuron.h TMVA/TNeuronInputAbs.h TMVA/TNeuronInputChooser.h TMVA/TNeuronInput.h TMVA/TNeuronInputSqSum.h TMVA/TNeuronInputSum.h TMVA/Tools.h TMVA/TransformationHandler.h TMVA/TSpline1.h TMVA/TSpline2.h TMVA/TSynapse.h TMVA/Types.h TMVA/VariableDecorrTransform.h TMVA/VariableGaussTransform.h TMVA/VariableIdentityTransform.h TMVA/VariableImportance.h TMVA/VariableInfo.h TMVA/VariableNormalizeTransform.h TMVA/VariablePCATransform.h TMVA/VariableRearrangeTransform.h TMVA/VariableTransformBase.h TMVA/VariableTransform.h TMVA/VarTransformHandler.h TMVA/Version.h TMVA/Volume.h TMVA/RTensor.hxx TMVA/RTensorUtils.hxx /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:223:9: error: no member named 'reverse' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/TMVA/RTensor.hxx:226:9: error: no member named 'reverse' in namespace 'std' ; - Error: Had to build non-system module ROOTDataFrame implicitly. You first need to ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libTMVA5e23216ab9_dictUmbrella.h) . ### Warnings:; - /mnt/build/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3907#issuecomment-498800780:6652,Variab,VariableGaussTransform,6652,https://root.cern,https://github.com/root-project/root/pull/3907#issuecomment-498800780,1,['Variab'],['VariableGaussTransform']
Modifiability,"Accidentally it was sent during the writing of this bug, so I had to edit that afterwards, sorry. I tried to search for the bug, but didn't do that extensively, because there might be a host of variants of this bug (I searched only for this title). I have to say that even if you oblige users to define all variables separately (which would be strange), this is a bit inconsistent with the fact that *RooArgList* can be defined inside the constructor of *RooProdPdf*.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8052#issuecomment-829971184:307,variab,variables,307,https://root.cern,https://github.com/root-project/root/issues/8052#issuecomment-829971184,1,['variab'],['variables']
Modifiability,Actually 'inherit' compression setting even if TTree is no attached.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6351:10,inherit,inherit,10,https://root.cern,https://github.com/root-project/root/pull/6351,1,['inherit'],['inherit']
Modifiability,"Actually, I did not modify ``config/rootrc.in``, now added",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-610877888:29,config,config,29,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-610877888,1,['config'],['config']
Modifiability,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ?. (*); [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`; [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root; *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81299)[0x7fb90c775299]; /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]; /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]; /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]; /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]; /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]; /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]; [0x7fb90dfab07e]; /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]; /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]; /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]; /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]; /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]; /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]; /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]; /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]; /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]; /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]; /usr/local/bin/root.exe[0x4008ac]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]; /usr/local/bin/root.exe[0x400918]; ======= Memory map: ========; 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe; 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe; 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802#issuecomment-776756405:53,variab,variable,53,https://root.cern,https://github.com/root-project/root/issues/6802#issuecomment-776756405,1,['variab'],['variable']
Modifiability,"Ad 1) With all the other modifications, I think in the end it is just simpler to build all the fields upfront. We'd save a bit of memory doing it on demand, but it will possibly take a little longer because we need to traverse the schema tree more often (for every leaf, we have to figure out again what are the parents). Ad 2) I'm fine with a squash on merge. I'd prefer not to squash individual commits, it's a long history and a partial rewrite will get it as wrong as the full history. Let me know if you like the squash commit over the rebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6700#issuecomment-797527506:440,rewrite,rewrite,440,https://root.cern,https://github.com/root-project/root/pull/6700#issuecomment-797527506,1,['rewrite'],['rewrite']
Modifiability,Adapt ROOT fitting to the new generalized Executor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7002:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/7002,1,['Adapt'],['Adapt']
Modifiability,Adapt TMVA::RandomGenerator for use with std::shuffle(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1449:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/1449,1,['Adapt'],['Adapt']
Modifiability,Adapt TTree::GetEntry to use TThreadExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/390:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/390,1,['Adapt'],['Adapt']
Modifiability,Adapt TTreeProcessorMT to use TThreadExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/388:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/388,1,['Adapt'],['Adapt']
Modifiability,Adapt tests to work with zlib-ng,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/14295,1,['Adapt'],['Adapt']
Modifiability,Adapt the code to RBrowser,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11729:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/11729,1,['Adapt'],['Adapt']
Modifiability,Adapt to gfal2 2.10 - uses a different #define,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/106:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/106,1,['Adapt'],['Adapt']
Modifiability,Adapting to a new field in Python 3.12:; https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15072:0,Adapt,Adapting,0,https://root.cern,https://github.com/root-project/root/pull/15072,1,['Adapt'],['Adapting']
Modifiability,Add HTTP Bearer token to Davix wrapper from config or env,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6818:44,config,config,44,https://root.cern,https://github.com/root-project/root/pull/6818,1,['config'],['config']
Modifiability,Add N-dimensional and more flexible histogram filling to RDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499:27,flexible,flexible,27,https://root.cern,https://github.com/root-project/root/pull/7499,1,['flexible'],['flexible']
Modifiability,"Add a new method TClass::GetListOfAllBases to retrieve all the base classes in the full inheritance chain of a class. Use the new function to correctly retrieve information about the hierarchy of a class type in cppyy. Related to #8817 , not a final solution but I'd like to see if it brings hell in the CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8834:88,inherit,inheritance,88,https://root.cern,https://github.com/root-project/root/pull/8834,1,['inherit'],['inheritance']
Modifiability,"Add an (almost) `root-config` equivalent script for Windows, but unfortunately not usable to compile code in a terminal, since command substitution doesn't work in the Windows command prompt...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6733:22,config,config,22,https://root.cern,https://github.com/root-project/root/pull/6733,1,['config'],['config']
Modifiability,Add commented code to httpsccess.C macro which configures authentication. And server can be used with external JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12889:47,config,configures,47,https://root.cern,https://github.com/root-project/root/pull/12889,1,['config'],['configures']
Modifiability,Add config switch to disable (x)proofd. Default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5432:4,config,config,4,https://root.cern,https://github.com/root-project/root/pull/5432,1,['config'],['config']
Modifiability,Add env variable to limit number of threads used by ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805:8,variab,variable,8,https://root.cern,https://github.com/root-project/root/issues/9805,1,['variab'],['variable']
Modifiability,Add missed $ sign before env var in thisroot.fish config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7953:50,config,config,50,https://root.cern,https://github.com/root-project/root/pull/7953,1,['config'],['config']
Modifiability,Add possibility to extend XML Buffer size for XMNL I/O in TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2224:19,extend,extend,19,https://root.cern,https://github.com/root-project/root/pull/2224,1,['extend'],['extend']
Modifiability,Add possibility to specify number of threads in PyKeras and set specific Tensorflow session config options,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2566:92,config,config,92,https://root.cern,https://github.com/root-project/root/pull/2566,1,['config'],['config']
Modifiability,Add root-config.bat for Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6733:9,config,config,9,https://root.cern,https://github.com/root-project/root/pull/6733,1,['config'],['config']
Modifiability,"Add scaling VarTransform functionality to TMVA preproccessing (like normalisation it linearly scales the data but the sign of the input and output data is retained). I have added to the functionality of the VariableNormalizeTransform class in the style of the VariableGaussTransform class to transform data such that it remains in the range of [-1,1], there is no offset, so the sign of the input data is unchanged by the transformation. . This is proving essential for my neural network analyses that treat a detector hit data like an image classification problem and use ReLU activation functions at the beginning of my network. I have also added a description to the TMVA documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4141:207,Variab,VariableNormalizeTransform,207,https://root.cern,https://github.com/root-project/root/pull/4141,2,['Variab'],"['VariableGaussTransform', 'VariableNormalizeTransform']"
Modifiability,"Add speedup printing, improve legibility, refactorization. Speedup printing can still be improved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1068:42,refactor,refactorization,42,https://root.cern,https://github.com/root-project/root/pull/1068,1,['refactor'],['refactorization']
Modifiability,Add support for LSTM and GRU Layers and add implemention all RNN layers using cuDNN,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4911:29,Layers,Layers,29,https://root.cern,https://github.com/root-project/root/pull/4911,2,"['Layers', 'layers']","['Layers', 'layers']"
Modifiability,Add support for abi-tags (adapted from Fedora's patch),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/124:26,adapt,adapted,26,https://root.cern,https://github.com/root-project/root/pull/124,1,['adapt'],['adapted']
Modifiability,"Add the missing `--prefix` flag, properly set `%ROOTSYS%` when called from the build directory, and therefore fix the variables relative to `%ROOTSYS%`, like for example `--tutdir` I will fix the `CMakeLists.txt` of `roottest` once this PR is merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13347:118,variab,variables,118,https://root.cern,https://github.com/root-project/root/pull/13347,1,['variab'],['variables']
Modifiability,Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. ; It includes also the test for Batch normalization operator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9307:59,extend,extends,59,https://root.cern,https://github.com/root-project/root/pull/9307,1,['extend'],['extends']
Modifiability,Added RNTupleTTreeCheckerFiles + adapted main/CMakeLists & tree/ntupl…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15904:33,adapt,adapted,33,https://root.cern,https://github.com/root-project/root/pull/15904,1,['adapt'],['adapted']
Modifiability,Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3399:52,refactor,refactor,52,https://root.cern,https://github.com/root-project/root/pull/3399,1,['refactor'],['refactor']
Modifiability,"Added notebooks to tutorials, fixed other notebooks, changed variable name",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/210:61,variab,variable,61,https://root.cern,https://github.com/root-project/root/pull/210,1,['variab'],['variable']
Modifiability,"Added support for the VecGeom library as external package (-Dvecgeom). Creating new library libConverterVG within geom module. This contains the conversion interface for ROOT shapes into vecgeom ones, activated using the plugin mechanism from ROOT. Included also the class TGeoVGShape bridging TGeoShape methods to either VecGeom solid (navigation) or existing ROOT shape (visualisation and the rest). The conversion can be done once a ROOT geometry is in memory using:; TVirtualGeoConverter::Instance()->ConvertGeometry(); Once this is done, all TGeo functionality and tests can be accessed as for a standard TGeo geometry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/156:221,plugin,plugin,221,https://root.cern,https://github.com/root-project/root/pull/156,2,['plugin'],['plugin']
Modifiability,Added the new ThreadPool class sharing TProcPool's MapReduce methods signature. Refactored the code so ThreadPool and TProcPool inherit from the new parent TPool.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/148:80,Refactor,Refactored,80,https://root.cern,https://github.com/root-project/root/pull/148,2,"['Refactor', 'inherit']","['Refactored', 'inherit']"
Modifiability,Adding code generation and AD support for the final class in upstream RooFit that is used in the CMS Higgs discovery workspace: the RooBernstein. Also:. * fix missing variable warning in `RooCBShape.cxx`. * fix AD support for RooLandau by using code that clad can digest. * implement test for RooLandau fits with AD,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15491:167,variab,variable,167,https://root.cern,https://github.com/root-project/root/pull/15491,1,['variab'],['variable']
Modifiability,Adding corrected C++ std flags for current compiler for root-config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3411:61,config,config,61,https://root.cern,https://github.com/root-project/root/pull/3411,1,['config'],['config']
Modifiability,"Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9538:248,variab,variable,248,https://root.cern,https://github.com/root-project/root/pull/9538,1,['variab'],['variable']
Modifiability,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11621:124,config,configuration,124,https://root.cern,https://github.com/root-project/root/pull/11621,1,['config'],['configuration']
Modifiability,"Addresses ROOT-9311. The verbosity level can also be changed with the environment variable; XRD_LOGLEVEL. The possible levels are: ""Info"", ""Debug"", ""Dump"" .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2243:82,variab,variable,82,https://root.cern,https://github.com/root-project/root/pull/2243,1,['variab'],['variable']
Modifiability,Addressing issue #7662 for bash root-config. Pretty much mirrored what was done for root-config.bat in #7663. Handle unknown feature. Unknown option is already handled. Preview:. spectre@localhost ~/root/compiled/bin; (improve-root-config-bash)> ./root-config --has-xml --has-cxx14 --has-improved; yes yes --has-improved: unknown feature!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8106:37,config,config,37,https://root.cern,https://github.com/root-project/root/pull/8106,4,['config'],"['config', 'config-bash']"
Modifiability,"Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for; - unified access to files, either local or remote; - Automatic handling of UNIX and Windows line breaks ; - Control of the I/O buffer mechanism. Current todos:; - [ ] Use upcoming `RStatus` / `RException` based error handling; - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation ; - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX; - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030:782,plugin,plugin,782,https://root.cern,https://github.com/root-project/root/pull/3030,1,['plugin'],['plugin']
Modifiability,Adds pythonizations for the `RooStats::SPlot` class. The constructor(which automatically calls `AddSWeight()`) and the `AddSWeight` method follows command argument pythonization ( `**kwargs` -> `RooCmdArgs`) which makes configuring options more pythonic. Also adds a translated RooStats tutorial which uses the added pythonisations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16333:220,config,configuring,220,https://root.cern,https://github.com/root-project/root/pull/16333,1,['config'],['configuring']
Modifiability,"Adds refactored BDT inference engine (WIP PR #4351) and frontend classes. The current workflow looks like this:. **External training:**; ```python; x, y = ... some dataset ...; xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3); xgb.fit(x, y); # Convert to model understood by the inference engine; ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myBDT"", ""bdts.root""); ```. **Application (Python):**; ```python; bdt = ROOT.TMVA.Experimental.RBDT[](""myBDT"", ""bdts.root""); # Native numpy support; x = np.array(... some data ...); y = bdt.Compute(x); ```. **Application (C++):**; ```cpp; TMVA::Experimental::RBDT bdt(""myBDT"", ""bdts.root"");; // Single event inference; auto y = bdt.Compute({... some intializer list resolving to a std::vector ... });; // Batch inference; RTensor<float> x({ ... shape ...});; auto y2 = bdt.Compute(x);; ```. **Application (RDataFrame):**; ```cpp; TMVA::Experimental::RBDT bdt(""myBDT"", ""bdts.root"");; ROOT::RDataFrame df(...);; auto df2 = df.Define(""y"", TMVA::Experimental::Compute<N, float>(bdt), { ... N inputs ...});; ```. Comparing against XGBoost in the Python application, we outperform them currently by a factor of 4 (without jitted backend). To be improved!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4401:5,refactor,refactored,5,https://root.cern,https://github.com/root-project/root/pull/4401,1,['refactor'],['refactored']
Modifiability,"Aesthetics fixes, variable names changes, markdown update",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/217:18,variab,variable,18,https://root.cern,https://github.com/root-project/root/pull/217,1,['variab'],['variable']
Modifiability,After #3961 one should inform users that method not yet implemented for all plugins; Also fix introduced compiler warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4017:76,plugin,plugins,76,https://root.cern,https://github.com/root-project/root/pull/4017,1,['plugin'],['plugins']
Modifiability,"After a discussion with @vepadulano it appears that it might be better to add a data member `fUrl` to `TAttText`, so that all the classes inheriting from it will benefit from this feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16512#issuecomment-2383615301:138,inherit,inheriting,138,https://root.cern,https://github.com/root-project/root/issues/16512#issuecomment-2383615301,1,['inherit'],['inheriting']
Modifiability,"After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in; `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15266:68,variab,variables,68,https://root.cern,https://github.com/root-project/root/pull/15266,1,['variab'],['variables']
Modifiability,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:41,config,configuration,41,https://root.cern,https://github.com/root-project/root/pull/15401,1,['config'],['configuration']
Modifiability,"After having install XPM headers, I tried to build root to not repeat the same error but had this:; Making include/compiledata.h; g++ -O2 -DNDEBUG -pipe -m64 -std=c++11 -Wshadow -Wall -W -Woverloaded-virtual -fPIC -Iinclude -pthread -MMD -MP -o core/base/src/TObject.o -c /home/julien/projects/root/core/base/src/TObject.cxx; In file included from include/TObject.h:16:0,; from /home/julien/projects/root/core/base/src/TObject.cxx:38:; include/RConfigure.h:39:2: error: invalid preprocessing directive #@; #@has_found_attribute_always_inline@ R__HAS_ATTRIBUTE_ALWAYS_INLINE /**/; ^. I searched about this error and found https://root-forum.cern.ch/t/compile-error-related-to-directive-in-rconfigure-h/23546/3. I also tried to follow the INSTALL file but:; 1) there's not ""root"" directory but there's a ""rootx"" directory; however ""cmake ../rootx"" (from <main dir>/build) displays some config and seems ok; 2) ""cmake --build ."" does nothing (no console message, no build) idem for ""make -j"". In brief, I don't know how to build :-(. I'm on x86-64 with Debian testing:; gcc (Debian 7.2.0-12) 7.2.1 20171025; cmake version 3.9.3; ldd (Debian GLIBC 2.24-17) 2.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239#issuecomment-341512534:884,config,config,884,https://root.cern,https://github.com/root-project/root/pull/1239#issuecomment-341512534,1,['config'],['config']
Modifiability,After introducing cling it is not allowed to redefine already existing variables in the macro.; Therefore one always should use unique names.; Also type of created variable always should be specified - at least `auto`.; Now one can store geometry which is defined in `tutorials/geom/mp3player.C` macro together with all other components. Adjust `tutorials/geom/mp3player.C` macro to avoid many duplicated transformation objects - it is enough to have few of them. Do not use canvas with spaces in names in `tutorials/geom/geodemo.C`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11900:71,variab,variables,71,https://root.cern,https://github.com/root-project/root/pull/11900,2,['variab'],"['variable', 'variables']"
Modifiability,"After investigating I think one needs to reset the global print level to the previous state. ; At building time by default the MinimumBuilder::PrintLevel() is set to the global MnPrint::Level().; If the user wishes to modify the print level just for the Builder (e.g. the VariableMetricBuilder (MIGRAD) ) he can do that. In this case it is good that we set the global level to be the same, so functions called from the MinimumBuilder (e.g. MnHesse or MnLineSearch) use the same level. ; After finishing it will be however good to restore the level as before. ; I will close this one and then make then a new PR doing this. . Thank you for looking into this and proposing these changes. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2305#issuecomment-597179285:272,Variab,VariableMetricBuilder,272,https://root.cern,https://github.com/root-project/root/pull/2305#issuecomment-597179285,1,['Variab'],['VariableMetricBuilder']
Modifiability,After investigating the bug reported here. https://sft.its.cern.ch/jira/browse/ROOT-10626. we noticed that the deprecated variables; PYTHON_EXECUTABLE; PYTHON_INCLUDE_DIRS; PYTHON_LIBRARIES; PYTHON_VERSION_MAJOR; PYTHON_VERSION_MINOR; PYTHON_VERSION_STRING; NUMPY_FOUND; NUMPY_INCLUDE_DIRS; are not set correctly in the CMakeCache. This should fix the problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5184:122,variab,variables,122,https://root.cern,https://github.com/root-project/root/pull/5184,2,['variab'],['variables']
Modifiability,"After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12521:184,evolve,evolve,184,https://root.cern,https://github.com/root-project/root/pull/12521,1,['evolve'],['evolve']
Modifiability,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8817#issuecomment-897023454:352,inherit,inheritance,352,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454,2,['inherit'],['inheritance']
Modifiability,"After the complete run of readcms310.C we get (this is all with the current master). pch+rdict: master and build of test as is (run MAKEP in cms310 subdirectory to build it. pch-rdict: use previous but mv the rdict: ```mv cms310/cms310ProjectDict_rdict.pcm cms310/cms310ProjectDict_rdict.pcm.moved```. module+rdict: use ```runtime_cxxmodules=""ON""```. module-rdict: use previous but mv the rdict out of the way. configure line:. ```; cmake -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dcxx17=""ON"" -Droottest=""ON"" [-Druntime_cxxmodules=""ON""] -Dtest=""ON"" -Dtmva=""OFF"" -Dxrootd=""OFF"" /local2/pcanal/cint_working/rootcling/root-module -G Ninja; ```. In the following table, the numbers are kB. They are as reported by ```/proc/${pid}/status```. phase | counter | pch+rdict | pch-rdict | module+rdict | module-rdict ; ------------ | ---------- | ------------ | ------------- | ------------ | ------------- ; after reading the entries | VmPeak | 413604 | 454132 | 490748 | 513176 ; after reading the entries | VmRSS | 140204 | 186148 | 169448 | 195008. For VmRSS. So without modules, avoiding to load the headers (i.e using the rdict) saves **46** MB ; Replacing the pch with modules add (as expected as the moment) **30** MB ; With modules, avoiding to load pcm content (i.e using the rdict) still saves **25** MB. For VmPeak. So without modules, avoiding to load the headers (i.e using the rdict) saves **40** MB;  Replacing the pch with modules add (as expected as the moment) **77** MB ; With modules, avoiding to load pcm content (i.e using the rdict) still saves **22** MB. So it seems to be me that the rdict are still as useful as they were, isn't it? (or am I still missing something?). Thanks,;  Philippe. PS. In run-time, I see an average of 1.20s for module+rdict vs an average of 1.3s for module-rdict (for a 'root.exe -b -l -q' average of .2s) ; and expected this is just an 'initialization' cost when increasing the number of entries read the difference stays around .1s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-473370043:411,config,configure,411,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-473370043,1,['config'],['configure']
Modifiability,"After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:50,rewrite,rewrite,50,https://root.cern,https://github.com/root-project/root/pull/6632,1,['rewrite'],['rewrite']
Modifiability,"After the upgrade to LLVM 13, the test `roottest-root-meta-tclass-execInitOrder` will *crash* with AddressSanitizer instrumentation:; ```; 2187: Processing /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx+...; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:859,inherit,inherit,859,https://root.cern,https://github.com/root-project/root/issues/11867,1,['inherit'],['inherit']
Modifiability,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11601:147,config,configuration,147,https://root.cern,https://github.com/root-project/root/issues/11601,1,['config'],['configuration']
Modifiability,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:; ```; ld: library not found for -lCheckFix; ```; What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782167119:121,extend,extended,121,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782167119,1,['extend'],['extended']
Modifiability,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-822270832:573,variab,variable,573,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-822270832,1,['variab'],['variable']
Modifiability,"Ah that makes sense. Extending the defintion of strings to add metadata to paths (globbing, the `#` syntax in `TFile::Open`, ...) is always going to be error prone. > but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This feels like an impossible task to define. Maybe a simplier solution would be to not support `?` when globbing and only apply globbing to the text before the query string? Or maybe just have a dedicated method (or argument type) for creating a RDataFrame from a glob rather than relying on huristics?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2366982360:21,Extend,Extending,21,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2366982360,1,['Extend'],['Extending']
Modifiability,"Ah yes sorry, apparently it seems rather tricky to properly use a $ sign in a csh string. This should work more reliably. I added the set DOLLAR='$' to each setenv call to not add any new environment variables to the original shell",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/407#issuecomment-285088078:200,variab,variables,200,https://root.cern,https://github.com/root-project/root/pull/407#issuecomment-285088078,1,['variab'],['variables']
Modifiability,"Ah, I know what this is, the ""important"" error message is:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available.; ```. in other words at the point `Snapshot` creates the branch `Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]`, the branch that contains the size, `Lambda_DTFL_KS_nPV`, has not been declared yet. And indeed we changed the order in which `Snapshot` creates output branches between 6.24 and 6.26, internally. Resolving https://github.com/root-project/root/issues/6932 would fix this issue, and I think it's the way to go. In the meanwhile, you can work around the issue by explicitly pass to `Snapshot` the list of columns to write, putting `Lambda_DTFL_KS_nPV` before `Lambda_DTFL_KS_M`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920#issuecomment-1177751857:178,variab,variable,178,https://root.cern,https://github.com/root-project/root/issues/10920#issuecomment-1177751857,1,['variab'],['variable']
Modifiability,"Ah, I see that error too now, just needed to enable ROOT 7 in the cmake config. So the issue is related to the latest nlohmann json release, and comes from these two PRs:. * https://github.com/root-project/root/pull/9278 ROOT forward declares nlohmann json manually; * https://github.com/nlohmann/json/pull/3590 nlohmann json added an ABI-tagged inline namespace, breaking out forward declarations. This is unfortunate, and we can't just update the forward declarations because they will change with each nlohmann json version now. I assigned this issue to @Axel-Naumann, because probably he remembers best why the manual forward declaration was introduced. Optimally, we'll find a solution where the official `json_fwd` header can be used again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1208713792:72,config,config,72,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1208713792,1,['config'],['config']
Modifiability,"Ah, checked on Alja's mac ... me R an idiot ... forgot to include config.h :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2251591979:66,config,config,66,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2251591979,1,['config'],['config']
Modifiability,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627#issuecomment-1330826120:394,refactor,refactoring,394,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120,1,['refactor'],['refactoring']
Modifiability,"Ah, now that I tried it: I see that it doesn't work, also with the official config!. So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine; https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15585#issuecomment-2122829174:76,config,config,76,https://root.cern,https://github.com/root-project/root/issues/15585#issuecomment-2122829174,1,['config'],['config']
Modifiability,"Ah, sorry, I just realized that on my Windows system I just installed it from the website. I have switched to my Ubuntu system, where I have built ROOT from source, and I now get this error:; ```; advait@advait-dhingra:~/Documents/Coding/HeatSimulation$ cmake .; CMake Error at CMakeLists.txt:11 (find_package):; By not providing ""FindROOT.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""ROOT"", but; CMake did not find one. Could not find a package configuration file provided by ""ROOT"" with any of; the following names:. ROOTConfig.cmake; root-config.cmake. Add the installation prefix of ""ROOT"" to CMAKE_PREFIX_PATH or set; ""ROOT_DIR"" to a directory containing one of the above files. If ""ROOT""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/advait/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". ```; I have root in my PATH (as the command `root`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982#issuecomment-825609610:416,config,configuration,416,https://root.cern,https://github.com/root-project/root/issues/7982#issuecomment-825609610,4,"['Config', 'config']","['Configuring', 'config', 'configuration']"
Modifiability,"All CMake files should have a call to the `project()` command. In particular,; not having the `project()` call here makes it impossible to configure standalone; Minuit2 with Clang for macOS, see; https://gitlab.kitware.com/cmake/cmake/issues/17712#note_371862",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5016:139,config,configure,139,https://root.cern,https://github.com/root-project/root/pull/5016,1,['config'],['configure']
Modifiability,"All of the code example/output in the PR description corresponds to with this PR included. Repeating the lookup without diagnostic suppression doesn't give the correct error message again; (this corresponds to the ""call attempt 1"" case in the output from test.py in the PR description). ie with superfluous debug output snipped out:; ```; declare ret True; creating helper; calling helper; call attempt 0; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug3/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug3/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug3/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; Failed to instantiate ""call_helper(Helper<vector<double> >*)""; Failed to instantiate ""call_helper(Helper<vector<double> >)""; call attempt 1; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1460106107:513,variab,variable,513,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1460106107,1,['variab'],['variable']
Modifiability,Allow CMake to configure with nvc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14370:15,config,configure,15,https://root.cern,https://github.com/root-project/root/pull/14370,1,['config'],['configure']
Modifiability,Allow plugins to handle custom pragmas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2769:6,plugin,plugins,6,https://root.cern,https://github.com/root-project/root/pull/2769,1,['plugin'],['plugins']
Modifiability,Allow setting up extra cling flags via EXTRA_CLING_ARGS env variable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1524:60,variab,variable,60,https://root.cern,https://github.com/root-project/root/pull/1524,1,['variab'],['variable']
Modifiability,Allow the training to be done multiple times for the BDT by setting a flag to false.; Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/286:111,Variab,VariableImportance,111,https://root.cern,https://github.com/root-project/root/pull/286,1,['Variab'],['VariableImportance']
Modifiability,Allow to populate ROOT at configure time using FetchContent (part1),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9516:26,config,configure,26,https://root.cern,https://github.com/root-project/root/pull/9516,1,['config'],['configure']
Modifiability,Allows -Dfail-on-missing -Dpyroot3 to fail configuration if only pyroot2 can be built.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5500:43,config,configuration,43,https://root.cern,https://github.com/root-project/root/pull/5500,1,['config'],['configuration']
Modifiability,Allows for extending not only entire fields and their columns but also only columns for existing fields.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16111:11,extend,extending,11,https://root.cern,https://github.com/root-project/root/pull/16111,1,['extend'],['extending']
Modifiability,Allows to configure CUDA sm level for Cling CUDA tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7190:10,config,configure,10,https://root.cern,https://github.com/root-project/root/pull/7190,1,['config'],['configure']
Modifiability,"Allows to create images for vector of pads at once.; Using ""%d"" or ""%03d"" or any similar printf qualifier one can put image; number into the file name. Like ""image%d.png"". Special handling for PDF. If qualifier in PDF file name not specified,; all provided pads will be placed into single PDF document. Can use normal (default) and web-based image production.; Only if web display is explicitly specified with `root --web`, will run chrome browser. . For web following formats are supported: ""png"", ""svg"", ""pdf"", ""jpg"", ""jpeg"", ""webp"". Also extend export into ROOT file - now it is possible to append object to existing ROOT file using ""a"" option.; Means if ""file.root"" is specified, all pads will be saved into that single ROOT file.; But if file name includes printf qualifier like ""file%d.root"", N root files will be created. ; Same is for XML files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13505:541,extend,extend,541,https://root.cern,https://github.com/root-project/root/pull/13505,1,['extend'],['extend']
Modifiability,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff; diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx; index 5900743..165b98a 100644; --- a/math/vecops/inc/ROOT/RVec.hxx; +++ b/math/vecops/inc/ROOT/RVec.hxx; @@ -1259,6 +1259,7 @@ public:; using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;; using size_type = typename SmallVectorTemplateCommon<T>::size_type;; using SmallVectorTemplateCommon<T>::begin;; + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx); {; ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806499314:65,inherit,inheritance,65,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806499314,1,['inherit'],['inheritance']
Modifiability,Also let configure some attributes via environment variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2927:9,config,configure,9,https://root.cern,https://github.com/root-project/root/pull/2927,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,Also make isBinnedDistribution depend on the vars rather than always return true. ## Changes or fixes:. Makes ParamHistFunc more flexible/powerful. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10516:129,flexible,flexible,129,https://root.cern,https://github.com/root-project/root/pull/10516,1,['flexible'],['flexible']
Modifiability,"Also on a fresh ubuntu docker image I can't trigger the segfault:; ```; root@0deac9fbdde6:/rootproject# cat /etc/os-release | grep PRETTY_NAME; PRETTY_NAME=""Ubuntu 23.04""; root@0deac9fbdde6:/rootproject# root --version; ROOT Version: 6.29/01; Built for linuxx8664gcc on May 25 2023, 10:46:00; From heads/master@v6-25-02-4827-g0f578379d8; root@0deac9fbdde6:/rootproject# python -c ""import ROOT; import numpy""; root@0deac9fbdde6:/rootproject# python --version; Python 3.11.2; ```. Maybe we are using different cmake configurations, I just build with `cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874#issuecomment-1562756836:514,config,configurations,514,https://root.cern,https://github.com/root-project/root/issues/12874#issuecomment-1562756836,1,['config'],['configurations']
Modifiability,"Also reproducible on gentoo. ```; jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git; Cloning into 'cling'...; remote: Enumerating objects: 31202, done.; remote: Counting objects: 100% (651/651), done.; remote: Compressing objects: 100% (193/193), done.; remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551; Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done.; Resolving deltas: 100% (23380/23380), done.; jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF; -- The C compiler identification is GNU 11.3.1; -- The CXX compiler identification is GNU 11.3.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config; -- Performing Test HAVE_FFI_CALL; -- Performing Test HAVE_FFI_CALL - Success; -- Found FFI: /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:1095,config,config,1095,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['config'],['config']
Modifiability,Also see https://root-forum.cern.ch/t/cmake-configuration-error-since-76f472aca2/25576,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/777#issuecomment-315741208:44,config,configuration-error-since-,44,https://root.cern,https://github.com/root-project/root/pull/777#issuecomment-315741208,1,['config'],['configuration-error-since-']
Modifiability,"Also, one can remove obsolete defines like:; ```; #if (__GNUC__ >= 3) && !defined(__INTEL_COMPILER); // Prevent -Weffc++ from complaining about the inheritance; // TListIter from std::iterator.; #pragma GCC system_header; #endif; ```; while we no longer using inheritance from `std::iterator`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10571#issuecomment-1127322211:148,inherit,inheritance,148,https://root.cern,https://github.com/root-project/root/pull/10571#issuecomment-1127322211,2,['inherit'],['inheritance']
Modifiability,"Also, update the doxygen configuration file such that CUDA sources and headers are scanned as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13419:25,config,configuration,25,https://root.cern,https://github.com/root-project/root/pull/13419,1,['config'],['configuration']
Modifiability,"Am skeptical this could ever have worked even in older releases, because looking at the code I see the method ""MakeSingleChannelWorkspace"" where the measurement object is passed, and therefore it is assuming any parameter in the constant list *must* be present in the channel???. Tomas do you get the same error message about ""cannot find the variable"" in 6.28, but it succeeds? It might be blind luck that it did. . If so the fix is a simple one to just skip over said variable if its not found in the channel.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225#issuecomment-1858155447:343,variab,variable,343,https://root.cern,https://github.com/root-project/root/issues/14225#issuecomment-1858155447,2,['variab'],['variable']
Modifiability,"Amadio: I removed const and variable name in catches when just rethrowing the initial exception.; About splitting the patch, I don't know how to do this simply without redoing the whole stuff.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-350868297:28,variab,variable,28,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-350868297,1,['variab'],['variable']
Modifiability,"And also, if you look at the inheritance diagram of TGraph:. <img width=""689"" alt=""Screenshot 2024-04-18 at 08 47 17"" src=""https://github.com/root-project/root/assets/4697738/c8f63171-4092-4f4a-af7e-ed7e1c0e36c6"">. you will notice that TGraphAsymmErrors TGraphBentErrors and TGraphMultiErrors will miss this new method. To be complete it should be added there too. Similarly, it should be also added in TGrpha2DAssymErrors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232#issuecomment-2063148620:29,inherit,inheritance,29,https://root.cern,https://github.com/root-project/root/pull/15232#issuecomment-2063148620,1,['inherit'],['inheritance']
Modifiability,And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16076:15,config,configuration,15,https://root.cern,https://github.com/root-project/root/pull/16076,1,['config'],['configuration']
Modifiability,"And general question - is it necessary to have individual config files for jupyter?; After this PR configuration files will be written in ROOT build/install directory and cannot be modified by users; I guess, @etejedor should comment on this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6155#issuecomment-671775596:58,config,config,58,https://root.cern,https://github.com/root-project/root/pull/6155#issuecomment-671775596,2,['config'],"['config', 'configuration']"
Modifiability,And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2753:4,refactor,refactor,4,https://root.cern,https://github.com/root-project/root/pull/2753,1,['refactor'],['refactor']
Modifiability,"And the (Likely) commits that do ""[thisroot: Clean JUPYTER related variables possibly set by ROOT 6](https://github.com/root-project/root/pull/11680#top)"" have already been merged in the v5-34-00-patches branches (earlier today)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11680#issuecomment-1309678204:67,variab,variables,67,https://root.cern,https://github.com/root-project/root/pull/11680#issuecomment-1309678204,1,['variab'],['variables']
Modifiability,"And to add on top of that, I would still be interested to understand where the modulemap files are searched and if there is another environment variable we could set to force the search in /opt/o2/include.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2084766180:144,variab,variable,144,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2084766180,1,['variab'],['variable']
Modifiability,"And to answer my own question, it looks like the current code read and parse the csv file in a single thread in a single function call (The TCsvDS constructor) and so 'technically' just replacing that implementation with a TTree::ReadFile/Stream [enhanced for type inference] would then have required a trick to duplicate the meta-data/cursor part of the TTree without duplicating the data. [Ie. Danilo's point]. Alternatively, one could have devised (and could still to enhance parallelism in the current scheme) a solution where rather than reading the file in one go, it would have been segmented (with some buffering of the line before parsing) and hence each thread's TTree would have been independent (looking at different data/part of the file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1160#issuecomment-335504407:247,enhance,enhanced,247,https://root.cern,https://github.com/root-project/root/pull/1160#issuecomment-335504407,2,['enhance'],"['enhance', 'enhanced']"
Modifiability,"And when building with gcc and only asan like:; ```; cmake -DCMAKE_BUILD_TYPE=""Release"" -Dasan=ON -Dtesting=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 /home/linev/git/webgui ; ```; I getting failure by simply starting ROOT: . ```; ==11405==ERROR: AddressSanitizer: use-after-poison on address 0x621000160c68 at pc 0x7fae6dbe9aa1 bp 0x7fff179941b0 sp 0x7fff179941a8; READ of size 8 at 0x621000160c68 thread T0; #0 0x7fae6dbe9aa0 in clang::LookupResult::configure() (/home/linev/build/asan/lib/libCling.so+0x9be9aa0) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); #1 0x7fae66c6d0ec in clad::plugin::CladPlugin::CheckBuiltins() [clone .part.0] (/home/linev/build/asan/lib/libCling.so+0x2c6d0ec) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); ```. Full error output: [start_log.txt](https://github.com/root-project/root/files/10519690/start_log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629#issuecomment-1406573290:449,config,configure,449,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406573290,2,"['config', 'plugin']","['configure', 'plugin']"
Modifiability,"And yet another idea was having a configuration objection, which can be passed to the RDF ctor to avoid this explosion of overloads.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7702#issuecomment-807118440:34,config,configuration,34,https://root.cern,https://github.com/root-project/root/issues/7702#issuecomment-807118440,1,['config'],['configuration']
Modifiability,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-1143791946:214,config,configuration,214,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-1143791946,3,"['config', 'variab']","['configuration', 'variable']"
Modifiability,Another hint is given by using clang10 and different STL versions:. ```bash; $ /usr/bin/time clang++ -c compile_10k.cxx $(root-config --cflags); 28.55user 0.80system 0:29.55elapsed 99%CPU (0avgtext+0avgdata 1724760maxresident)k; 150480inputs+37568outputs (677major+376065minor)pagefaults 0swaps. $ /usr/bin/time clang++ -c compile_10k.cxx $(root-config --cflags) -stdlib=libc++; 19.33user 0.49system 0:20.00elapsed 99%CPU (0avgtext+0avgdata 1211416maxresident)k; 148240inputs+24336outputs (661major+234808minor)pagefaults 0swaps; ```. And once again with 40k LOC:. ```bash; $ /usr/bin/time clang++ -c compile_40k.cxx $(root-config --cflags) -stdlib=libc++; 99.04user 1.90system 1:41.32elapsed 99%CPU (0avgtext+0avgdata 4303216maxresident)k; 148240inputs+93640outputs (661major+661663minor)pagefaults 0swaps. $ /usr/bin/time clang++ -c compile_40k.cxx $(root-config --cflags); 258.58user 2.35system 4:21.79elapsed 99%CPU (0avgtext+0avgdata 6391476maxresident)k; 150480inputs+148000outputs (677major+781217minor)pagefaults 0swaps; ```. **Take away:** It scales much better with libc++! So we won't end up with 1.5h given the 130k LOC jit. You can find a `-ftime-trace` for 40k LOC and both version here: [time-trace.tar.gz](https://github.com/root-project/root/files/6170914/time-trace.tar.gz),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-802775527:127,config,config,127,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-802775527,4,['config'],['config']
Modifiability,Any class that inherits from TObject must have a ClassDef otherwise some the routines are inconsistent (like IsA() ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-334460303:15,inherit,inherits,15,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-334460303,1,['inherit'],['inherits']
Modifiability,"Any clues on what variable to use. On 06/08/2015 12:54 PM, karies wrote:. > Thanks! Given that this is specifically macosx64 /with GCC/ - could ; > you select on that, and not penalize the main MacOS X compiler?; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/root-mirror/root/pull/64#issuecomment-110091485.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/64#issuecomment-110091636:18,variab,variable,18,https://root.cern,https://github.com/root-project/root/pull/64#issuecomment-110091636,1,['variab'],['variable']
Modifiability,"Anyway, as I said, we are focusing now on the new, Web based GUI, and not going to extend the existing one, especially for classes that are most probably not widely used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7156#issuecomment-776578410:83,extend,extend,83,https://root.cern,https://github.com/root-project/root/issues/7156#issuecomment-776578410,1,['extend'],['extend']
Modifiability,Apache 2.4 has now own FastCGI implementation and uses different name for parameter.; Also update docu with example FastCGI configuration for Apache 2.4 - older version no longer relevant,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6334:124,config,configuration,124,https://root.cern,https://github.com/root-project/root/pull/6334,1,['config'],['configuration']
Modifiability,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7179:1601,inherit,inheritance,1601,https://root.cern,https://github.com/root-project/root/issues/7179,1,['inherit'],['inheritance']
Modifiability,Apparently you can use (when not using the built-in):; ```; $ pkg-config gtest --modversion; 1.9.0. $ cat /usr/local/lib/pkgconfig/gtest.pc (or somewhere else); libdir=/usr/local/lib; includedir=/usr/local/include. Name: gtest; Description: GoogleTest (without main() function); Version: 1.9.0; URL: https://github.com/google/googletest; Libs: -L${libdir} -lgtest -pthread; Cflags: -I${includedir} -DGTEST_HAS_PTHREAD=1 -pthread; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15355#issuecomment-2079626801:66,config,config,66,https://root.cern,https://github.com/root-project/root/pull/15355#issuecomment-2079626801,1,['config'],['config']
Modifiability,"Apparently, inheriting from TObject is needed, unfortunately:; ```; root/io/io/src/TFileMergeServer.cxx:; In member function ‘void ROOT::Experimental::TFileMergeServer::Listen()’:; root/io/io/src/TFileMergeServer.cxx:271:29:; error: no matching function for call to ; ‘THashTable::Add(ROOT::Experimental::ThreadFileMerger*&)’; mergers.Add(info);; ^; ```. I will try to get rid of `ThreadFileMerger` by just fusing its functionality into `TFileMergeServer`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-299449320:12,inherit,inheriting,12,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-299449320,1,['inherit'],['inheriting']
Modifiability,"Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13023:57,config,configs,57,https://root.cern,https://github.com/root-project/root/pull/13023,1,['config'],['configs']
Modifiability,Apply some bug fixes in the TKDE class.; - Fix initialization for the automatic binning case; - Fix setting the bins using the setter functions.; - Fix mirroring for binned case (fix ROOT-8488); - Fix MirrorAsym case ; - Fix computation of non-adaptive bandwidth for binned case; ; Add also some improvements in the class avoid some unneeded re-initialization and some small speedup in the kernel calculations.; Improve also the documentations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7096:244,adapt,adaptive,244,https://root.cern,https://github.com/root-project/root/pull/7096,1,['adapt'],['adaptive']
Modifiability,"Apply some small improvements in Minuit2. ; When using strategy 0 (i.e. when Hesse is not computed at the end of the minimization), the same state is added 2 times in the FunctionMinimum class. This is now fixed by adding a flag runHessian in the VariableMetric code. Add another improvement: do not compute Hessian during the iteration.When not using debug mode the Hessian, which requires a matrix inversion, was computed for each iteration. This is now fixed by avoid its computation, that is not needed by the algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7109:247,Variab,VariableMetric,247,https://root.cern,https://github.com/root-project/root/pull/7109,1,['Variab'],['VariableMetric']
Modifiability,Apply the same CMAKE_ARCHIVE_OUTPUT_DIRECTORY for all configurations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4396:54,config,configurations,54,https://root.cern,https://github.com/root-project/root/pull/4396,1,['config'],['configurations']
Modifiability,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:; ```; if (ROOT_runtime_cxxmodules_FOUND); set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On); endif(); ```; and exclude these tests using; ```; if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES); ```; rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1992#issuecomment-387655602:264,variab,variable,264,https://root.cern,https://github.com/root-project/root/pull/1992#issuecomment-387655602,1,['variab'],['variable']
Modifiability,Aren't those change also needed in spirit in the configure/make files? Won't we need them for the backport to 5.34 for example?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/935#issuecomment-327229728:49,config,configure,49,https://root.cern,https://github.com/root-project/root/pull/935#issuecomment-327229728,1,['config'],['configure']
Modifiability,"Argh, Professor Jenkins doesn't like me. Tests don't compile. How do I compile / run tests locally (I need complete error messages or the console output)? Putting std::move instead of std::forward on a T&& seems wrong. I just re-ran make (with success), so I probably didn't compile tests and that's why this is now causing a problem. As for the other comments:; a) agree with const removal in TDFNodes.cxx; b) the const fCanGrow: clang-tidy suggested me to replace = default with =delete. I thought it might be more useful to be able to copy, thus I removed const instead. But I cannot really comment on that, not having used any v7 stuff yet. Finally the large modernize-loops: I think I should improve loop variable names before it is committed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1585#issuecomment-363247629:710,variab,variable,710,https://root.cern,https://github.com/root-project/root/pull/1585#issuecomment-363247629,1,['variab'],['variable']
Modifiability,"ArrayRef.h(92,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTDumper.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-07T14:04:17.178Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility(313,72): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\VerifyDiagnosticConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-02-07T14:04:18.139Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Allocator.h(87,69): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\RewriteMacros.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2022-02-07T14:04:18.139Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2022-02-07T14:04:18.139Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional(981,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\Attributor.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-02-07T14:04:18.139Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9529#issuecomment-1031504706:3455,Rewrite,Rewrite,3455,https://root.cern,https://github.com/root-project/root/pull/9529#issuecomment-1031504706,2,['Rewrite'],"['Rewrite', 'RewriteMacros']"
Modifiability,"As I pointed out in https://sft.its.cern.ch/jira/browse/ROOT-7567?focusedCommentId=108747&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-108747 :. > we should keep ROOT7 graphics open enough for people to be able to write it themselves if they wish. Given that there is no way we will do this (we don't have the resources and this is simply not important enough) I'd suggest we close this?. That hasn't changed, which only leaves [this](https://sft.its.cern.ch/jira/browse/ROOT-7567?focusedCommentId=109658&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-109658) open for @linev . > Just to help potential users interested in implementing this drawing option, could you tell us in which classes the drawing is done in ROOT7?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6682#issuecomment-713430893:114,plugin,plugin,114,https://root.cern,https://github.com/root-project/root/issues/6682#issuecomment-713430893,2,['plugin'],['plugin']
Modifiability,"As I said before, we should have just a TArrayL, a TH1L and THnSparseL all based on Long64_t. ; We could use as typedef TArrayL64 to TArrayL. It does not make any sense to keep a TArrayL based on Long_t that is not portable, using a 32 bit integer on a 32 bit machine and a 64 bit integrated on a 64 bit machine. ; @Axel-Naumann , @pcanal do you agree with this ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1306817432:215,portab,portable,215,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1306817432,1,['portab'],['portable']
Modifiability,"As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13003:408,variab,variable,408,https://root.cern,https://github.com/root-project/root/pull/13003,1,['variab'],['variable']
Modifiability,"As a quick summary:; The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc; * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages; * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-387726565:198,variab,variable,198,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-387726565,1,['variab'],['variable']
Modifiability,"As a side note, it appears that `dataframe_simple` printouts:; ```; [ RUN ] MT/RDFSimpleTests.WritingToFundamentalType/0; input_line_164:2:41: error: cannot assign to variable 'var0' with const-qualified type 'const int'; auto func22(const int var0){return var0 = 42; ~~~~ ^; input_line_164:2:23: note: variable 'var0' declared const here; auto func22(const int var0){return var0 = 42; ~~~~~~~~~~^~~~; [ OK ] MT/RDFSimpleTests.WritingToFundamentalType/0 (1 ms); ```; but it does not make that sub-test fails. Is that intentional?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11552#issuecomment-1276684488:167,variab,variable,167,https://root.cern,https://github.com/root-project/root/pull/11552#issuecomment-1276684488,2,['variab'],['variable']
Modifiability,"As all PDFs, RooAddPdf inherits the protected evaluate(). It is, however, mistakenly listed as public.; Calling it will yield a useless value, because it bypasses the usual normalisation steps applied; for other PDFs. Reducing the visibility will prevent this, and also remove it from doxygen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3511:23,inherit,inherits,23,https://root.cern,https://github.com/root-project/root/pull/3511,1,['inherit'],['inherits']
Modifiability,"As discussed in ROOT-8011, TPython can't work with the ROOT C++; kernel for Jupyter because the current implementation relies; on a plain shared library to run the cell code and capture; its output and error. In particular, a crash happens when; the library, libJupyROOT, tries to get the __main__ module; in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's; initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5334:524,variab,variable,524,https://root.cern,https://github.com/root-project/root/pull/5334,1,['variab'],['variable']
Modifiability,"As discussed in https://root-forum.cern.ch/t/binned-likelihood-fit-with-variable-bin-sizes, it is not trivial in RooFit to make a plot where a data histogram and a `RooHistPdf` with non-uniform binning are compared: the data is given in event counts per bin, and the RooHistPdf gives the expected counts *per bin volume*. A way to easily plot a RooHistPdf without bin-width correction should be implemented for such data comparisons. Possibly with a new RooFit command argument that could be named `BinVolumeCorrection`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8935:72,variab,variable-bin-sizes,72,https://root.cern,https://github.com/root-project/root/issues/8935,1,['variab'],['variable-bin-sizes']
Modifiability,"As discussed we'd /love/ to see this PR's refactoring (minus the exceptions) in a new PR; basically to leave this PR as a historical marker should we ever change our mind wrt exceptions. Thanks & looking forward to the refactoring PR, it's _much_ nicer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/200#issuecomment-233976654:42,refactor,refactoring,42,https://root.cern,https://github.com/root-project/root/pull/200#issuecomment-233976654,2,['refactor'],['refactoring']
Modifiability,"As discussed with @bluehood and @dpiparo, having ""passive"" function names is not desirable. Therefore, we adapt the interface accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2626:106,adapt,adapt,106,https://root.cern,https://github.com/root-project/root/pull/2626,1,['adapt'],['adapt']
Modifiability,"As discussed with Stefan, `Pythonize.cxx` *knows* the C++ type of a `PyObject`. Instead of annotating a subset of classes as done here we should make use of that knowledge to have a generic binding to `cling::printValue` for `PyObject`s. This is not meant to veto this PR. But @etejedor could you open a Jira ticket that points this enhancement out, if this PR gets merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-392758982:333,enhance,enhancement,333,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-392758982,1,['enhance'],['enhancement']
Modifiability,"As far as I can tell, it is currently not possible to use the REFLEX_GENERATE_DICTIONARY without variables that define include directories (or compile definitions). I would like to be able to let those be extract from target properties. I would also like to be not forced to set directory properties to have a more fine grained handle on dependencies. Even with directory properties extracting, e.g., include directories doesn't work when the generator expression comes out to be a list of directories.; E.g.; ```cmake; include_directories( $<TARGET_PROPERTY:podio::podio,INCLUDE_DIRECTORIES> ); ```; would lead to `... -I dir1;dir2`. Joining by hand (`$<JOIN....>`) also doesn't work because either the whitespace is not treated correctly, or COMMAND_EXPAND_LISTS is not part of ADD_CUSTOM_COMMAND, but that wouldn't solve my problem with using directory properties in the first place. So I propose the contained changes, which then lets one do; E.g.; ```cmake; add_library(edm4hep SHARED ${sources} ${headers}); target_link_libraries(edm4hep; PUBLIC; podio::podio; ); target_include_directories(edm4hep; PUBLIC; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep>; $<INSTALL_INTERFACE:edm4hep>; ); REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml; USES edm4hep; ); ```; And all the required include directories are derived automatically from the edm4hep target given to `USES`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019:97,variab,variables,97,https://root.cern,https://github.com/root-project/root/pull/5019,1,['variab'],['variables']
Modifiability,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5324#issuecomment-611401968:164,refactor,refactor,164,https://root.cern,https://github.com/root-project/root/pull/5324#issuecomment-611401968,1,['refactor'],['refactor']
Modifiability,"As first reported in https://github.com/root-project/root/issues/12685:. The problem of not resolving typdefs extends to the specification of the underlying integer type, e.g.; ```; enum A : int {};; TEnum::GetEnum(""A"")->GetUnderlyingType() // --> (EDataType) (kInt_t) : (int) 3; ```; but; ```; enum B : std::int32_t {};; TEnum::GetEnum(""B"")->GetUnderlyingType() // --> (EDataType) (kNumDataTypes) : (int) 23; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15460:110,extend,extends,110,https://root.cern,https://github.com/root-project/root/issues/15460,1,['extend'],['extends']
Modifiability,"As for the ""VM"": We have an image of AnalysisBase-21.2.139 here:. https://hub.docker.com/layers/atlas/analysisbase/21.2.139/images/sha256-cf69e10defa9cb564dcb60c9ca723f0de9e7a1813f588bdde1d1a06a944c1e3e?context=repo. But the issue does not show up in it. So it's of not much help...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757851295:89,layers,layers,89,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757851295,1,['layers'],['layers']
Modifiability,"As for the `includePaths` variable in `G__vectorDict.cxx` of the build dir, here is what I get with the three different builds I've used so far. In `rootbuild/debugmakefiles/core/clingutils/G__vectorDict.cxx`; ```; static const char* includePaths[] = {; 0; ```. In `rootbuild/devdebugtest/core/clingutils/G__vectorDict.cxx`; ```; static const char* includePaths[] = {; 0; ```; In `rootbuild/devrelease/core/clingutils/G__vectorDict.cxx`; ```; static const char* includePaths[] = {; 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-769700214:26,variab,variable,26,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-769700214,1,['variab'],['variable']
Modifiability,"As for the behavior when using `file://`, I guess we can follow what other redirections are doing. I don't have a strong feeling, but having `file://` disable the redirection was indeed the intention, apart from the fact that with `TChain` it cannot be disabled due to the fact that it strips the prefix. If you think we should be stripping in `TUrl`, I could add that, then the redirections would be controlled only by `TFile.CrossProtocolRedirects` in the configuration (which is enabled by default).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1308993481:458,config,configuration,458,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1308993481,1,['config'],['configuration']
Modifiability,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13809:87,Flexible,FlexibleInterpVar,87,https://root.cern,https://github.com/root-project/root/pull/13809,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"As noted in commit 538396a869 some weeks ago, Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12588:70,variab,variable,70,https://root.cern,https://github.com/root-project/root/pull/12588,1,['variab'],['variable']
Modifiability,"As per discussion with Axel:. - [x] instead of `R__DEPRECATE`, use a runtime printout: it's not possible to have `R__DEPRECATE` fire for users that inherit from `RDataSource` but not for ROOT builds, and maintain backwards-compatibility. But it's possible with a runtime error.; - [x] put a R__DEPRECATE in there even if it does not fire, e.g. as an attribute of an unused dummy struct.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9509#issuecomment-1008301736:148,inherit,inherit,148,https://root.cern,https://github.com/root-project/root/pull/9509#issuecomment-1008301736,1,['inherit'],['inherit']
Modifiability,"As per failed tests, the new logic fails to recognize variable length arrays in some cases.; Maybe @pcanal can suggest what is the right condition to check to distinguish between scalars and arrays (we don't care about the difference between fixed and variable length, that's taken care of transparently by `TTreeReaderArray`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-358999475:54,variab,variable,54,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-358999475,2,['variab'],['variable']
Modifiability,"As pointed out by @eguiraud: We have to investigate the behaviour with different optimization levels. Here a test on just 1k LOC:. ```bash; $ /usr/bin/time clang++ -O0 -c compile_1k.cxx $(root-config --cflags); 4.27user 0.18system 0:04.64elapsed 96%CPU (0avgtext+0avgdata 316668maxresident)k; 146312inputs+5224outputs (652major+69301minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O1 -c compile_1k.cxx $(root-config --cflags); 19.59user 0.27system 0:20.00elapsed 99%CPU (0avgtext+0avgdata 485228maxresident)k; 152088inputs+3984outputs (681major+157387minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O2 -c compile_1k.cxx $(root-config --cflags); 171.13user 0.82system 2:52.27elapsed 99%CPU (0avgtext+0avgdata 680344maxresident)k; 153304inputs+2608outputs (688major+243079minor)pagefaults 0swap; ```. Doing the same exercise with 10k LOC results in a crazy compile time of >1h for O1! See here:. ```bash; $ /usr/bin/time clang++ -O0 -c compile_10k.cxx $(root-config --cflags); 29.44user 0.65system 0:30.36elapsed 99%CPU (0avgtext+0avgdata 1727376maxresident)k; 146312inputs+37672outputs (652major+317460minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O1 -c compile_10k.cxx $(root-config --cflags); 3963.21user 16.08system 1:06:27elapsed 99%CPU (0avgtext+0avgdata 17906760maxresident)k; 213696inputs+25224outputs (967major+7615032minor)pagefaults 0swaps; ```. Here the same exercise with 1k LOC but another STL version. Surprisingly, with `-stdlib=libc++` O1 is reasonably fast, though O2 takes ages:. ```bash; $ /usr/bin/time clang++ -O0 -c compile_1k.cxx $(root-config --cflags) -stdlib=libc++; 3.92user 0.14system 0:04.18elapsed 97%CPU (0avgtext+0avgdata 275288maxresident)k; 145816inputs+4088outputs (653major+57802minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O1 -c compile_1k.cxx $(root-config --cflags) -stdlib=libc++; 13.17user 0.18system 0:13.49elapsed 98%CPU (0avgtext+0avgdata 353276maxresident)k; 150736inputs+3160outputs (679major+86578minor)pagefaults 0swaps. $ /usr/bin/time clan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-802808997:193,config,config,193,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-802808997,4,['config'],['config']
Modifiability,"As reported by @behrenhoff MethodDL did not have so far an implementation for the dropout. ; (see https://root-forum.cern.ch/t/method-kdl-in-tmva/32863); This PR fixes the dropout for dense layers, implementing what has been done for the previous MethodDNN. . The implementation removes (by setting to zero) randomly input nodes and re-scale the surviving ones by a factor 1/(1.- dropout_probability). In this way no changes are needed for testing and evaluating a trained network with dropout. . The PR applies also some other small improvements such as print out of optimizer names and some fixes in the cross-evaluation function to avoid NaN outputs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3516:190,layers,layers,190,https://root.cern,https://github.com/root-project/root/pull/3516,1,['layers'],['layers']
Modifiability,As reported in #7412. Most of them use of `strcpy` and nullptr in `strchr`; Also several unused variables removed; Simplify TFolder::FindObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7420:96,variab,variables,96,https://root.cern,https://github.com/root-project/root/pull/7420,1,['variab'],['variables']
Modifiability,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4974:360,config,configuration,360,https://root.cern,https://github.com/root-project/root/pull/4974,1,['config'],['configuration']
Modifiability,"As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578; there is a bug in building a combined RooDataHist from single RooDataHist objects.; When importing diorectly from TH1 object works fine, as shown in the tutorial ; https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used.; Code example:; ```; {; using namespace RooFit;; TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");; TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");; ; // Declare observable x; RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms; RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c; /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));; RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);; RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. ; RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine; RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));; dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8015:95,variab,variables-bad-combined-data,95,https://root.cern,https://github.com/root-project/root/issues/8015,1,['variab'],['variables-bad-combined-data']
Modifiability,"As reported in https://root-forum.cern.ch/t/unexpected-additional-bins-appear-in-histogram-projection-when-using-bin-labels/41828/. projection of histogram with labels created additional bins.; This is due to scaling TH1::FindBin instead of TH1::FindFixBin and TH1::SetBinContent that internally extends also the axis if extendable. . Also as shown in test below, projection of TH2 and TH3 to Profille's do not preserve labels. . ```; void dinko() {; gStyle->SetLabelSize(0.1);; ; auto hist = new TH2F(""hist"", """", 2, 0, 2, 2, 0, 2);; printf( ""2D x-axis N bins: %d \n"", hist->GetXaxis()->GetNbins());; TH1D* hist_px = hist->ProjectionX();. printf( ""1D N bins: %d \n"",hist_px->GetXaxis()->GetNbins());. hist->GetXaxis()->SetBinLabel(1, ""A"");; hist->GetXaxis()->SetBinLabel(2, ""B"");; printf( ""2D x-axis N bins: %d \n"", hist->GetXaxis()->GetNbins());. hist_px = hist->ProjectionX();; auto c1 = new TCanvas();; c1->Divide(1,4);; c1->cd(1);; hist_px->DrawCopy();. printf( ""1D N bins: %d \n"", hist_px->GetXaxis()->GetNbins() );; hist_px->LabelsDeflate();; printf( ""1D N bins: %d \n"", hist_px->GetXaxis()->GetNbins() );. // test profile projection. auto prof_px = hist->ProfileX();; c1->cd(2);; prof_px->Draw();; printf( ""PROFILE N bins: %d \n"", prof_px->GetXaxis()->GetNbins() );; ; ; //// Test 3D; printf(""\nTEST 3D case \n"");; auto hist3 = new TH3F(""hist3"", """", 2, 0, 2, 2, 0, 3, 2, 0, 4);; hist3->GetXaxis()->SetBinLabel(1, ""A"");; hist3->GetXaxis()->SetBinLabel(2, ""B"");; hist_px = hist3->ProjectionX(""x"");; printf( ""1D N bins: %d \n"", hist_px->GetXaxis()->GetNbins() );; c1->cd(3);; hist_px->DrawCopy();. auto prof2_px = hist3->Project3DProfile(""yx"");; printf( ""PROFILE N bins: %d \n"", prof2_px->GetXaxis()->GetNbins() );; c1->cd(4);; prof2_px->Draw();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6658:296,extend,extends,296,https://root.cern,https://github.com/root-project/root/issues/6658,2,['extend'],"['extendable', 'extends']"
Modifiability,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11660:216,extend,extended,216,https://root.cern,https://github.com/root-project/root/issues/11660,3,['extend'],['extended']
Modifiability,"As reported in:. https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-10501?filter=allopenissues. commit 1d2e76 deletes the host's Python installation. Here two conditions are introduced to run the command:. - the flag pyroot_experimental was specified during the configuration;; - the variable CMAKE_INSTALL_PREFIX doesn't start with ""/usr"", making; the command run only if the above mentioned variable was customized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4748:266,config,configuration,266,https://root.cern,https://github.com/root-project/root/pull/4748,3,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"As said in https://github.com/root-project/root/issues/10777#issuecomment-1207995020, LTO is not a supported configuration for building ROOT. Some of that is probably due to the upstream LLVM issue, so I don't see what should be done from our side...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11135#issuecomment-1208042732:109,config,configuration,109,https://root.cern,https://github.com/root-project/root/issues/11135#issuecomment-1208042732,1,['config'],['configuration']
