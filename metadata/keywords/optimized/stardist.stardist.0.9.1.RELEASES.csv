quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"## Changes. * Add support for Keras 3 in #266; * TensorFlow 2.16+ has Keras 3.x as a dependency (although it is possible to use legacy Keras 2.x if need-be); * Enable training with sparse label masks in 7a68fa7b8476a8d2e7b4860ab57836d0ae500aaa (inspired by @ksugar); * Add support for Python 3.12; * Various bug fixes and improvements, including; * Resolve integer overflow when running on a large 3D image by @ximion in https://github.com/stardist/stardist/pull/249; * Fix and improve the export function for Bioimage.IO by @qin-yu in https://github.com/stardist/stardist/pull/254. **Breaking changes**; * Exporting to TensorFlow's ""SavedModel"" format is no longer supported when using Keras 3. **Full Changelog**: https://github.com/stardist/stardist/compare/0.8.5...0.9.0",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.9.0:194,mask,masks,194,,https://github.com/stardist/stardist/releases/tag/0.9.0,1,['mask'],['masks']
Availability,"Maintenance release to support TensorFlow >= 2.6.0, requiring CSBDeep >= 0.6.3 (see [release notes](https://github.com/CSBDeep/CSBDeep/releases/tag/0.6.3)). Please note the new installation instructions:. - *Unchanged* when using TensorFlow 2.x: `pip install stardist`; - *Updated* when using TensorFlow 1.x: `pip install ""stardist[tf1]""`",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.3:0,Mainten,Maintenance,0,,https://github.com/stardist/stardist/releases/tag/0.7.3,1,['Mainten'],['Maintenance']
Availability,"The file `dsb2018.zip` contains the train and test images with associated ground truth labels as used in [our paper](https://arxiv.org/abs/1806.03535). They are a subset of the `stage1_train` images from the Kaggle 2018 Data Science Bowl, which are [available in full](https://data.broadinstitute.org/bbbc/BBBC038/) from the [Broad Bioimage Benchmark Collection](https://data.broadinstitute.org/bbbc/).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.1.0:250,avail,available,250,,https://github.com/stardist/stardist/releases/tag/0.1.0,1,['avail'],['available']
Availability,"This is a maintenance release with the following changes:. - Support Python 3.11; - Fix issue when using TensorFlow 2.13.0; - Fix various deprecation warnings; - Fix issue when using 'None' as class labels; - Suppress some outputs from Keras/TensorFlow (cf. [forum post](https://forum.image.sc/t/turn-off-output-of-stardist/77653)); - Require [CSBDeep 0.7.4](https://github.com/CSBDeep/CSBDeep/releases/tag/0.7.4). Not part of the Python package, but important:. - Update documentation (with contributions from @psobolewskiPhD and @ajinkya-kulkarni); - Update Dockerfile; - Fix matplotlib configuration issue in example notebooks; - Fix a bioimage.io test issue (@FynnBe); - Update GitHub issue templates; - Fix various GitHub action issues",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.8.4:10,mainten,maintenance,10,,https://github.com/stardist/stardist/releases/tag/0.8.4,1,['mainten'],['maintenance']
Deployability,* Small bugfix for windows installation,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.5:27,install,installation,27,,https://github.com/stardist/stardist/releases/tag/0.3.5,1,['install'],['installation']
Deployability,- Fix installation problems on Windows.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.1:6,install,installation,6,,https://github.com/stardist/stardist/releases/tag/0.3.1,1,['install'],['installation']
Deployability,- Major update that introduces 3D object detection with star-convex polyhedra.; - Lots of changes under the hood that include several breaking changes.; - New example notebooks.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.0:8,update,update,8,,https://github.com/stardist/stardist/releases/tag/0.3.0,1,['update'],['update']
Deployability,"- Provide pre-compiled binaries (""wheels"") for most platforms, i.e. no need for compilation during installation; - Bug fixes and improvements; - Improve tests, documentation and notebooks; - Internal changes related to testing",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.6.2:99,install,installation,99,,https://github.com/stardist/stardist/releases/tag/0.6.2,1,['install'],['installation']
Deployability,Bugfix release (missing files in [`stardist-0.7.0.tar.gz`](https://files.pythonhosted.org/packages/0a/18/e45dd94bfa6d302f42c906571b1c5eb129c7b155bd6514e12e2ed91ee2a0/stardist-0.7.0.tar.gz)). This only affects (presumably very few) people who can't install from [wheels](https://pypi.org/project/stardist/#files).; Everybody else should already be fine with the `0.7.0` release. See [StarDist 0.7.0](https://github.com/stardist/stardist/releases/tag/0.7.0) for release notes.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.1:7,release,release,7,,https://github.com/stardist/stardist/releases/tag/0.7.1,5,"['install', 'release']","['install', 'release', 'releases']"
Deployability,Bugfix release (problem with [source distribution](https://packaging.python.org/en/latest/glossary/#term-Source-Distribution-or-sdist) `stardist-0.8.4.tar.gz`). This only affects (presumably very few) people who can't install from [wheels](https://packaging.python.org/en/latest/glossary/#term-Wheel).; Everybody else should be fine with the 0.8.4 release.; (You're not affected if you already installed version 0.8.4 without problems.). See [StarDist 0.8.4](https://github.com/stardist/stardist/releases/tag/0.8.4) for release notes.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.8.5:7,release,release,7,,https://github.com/stardist/stardist/releases/tag/0.8.5,6,"['install', 'release']","['install', 'installed', 'release', 'releases']"
Deployability,"Bugfix release to address issues with arm64 wheels for macOS. (If you've cloned the repository, also note that the `master` branch has been renamed to `main`.). **Full Changelog**: https://github.com/stardist/stardist/compare/0.9.0...0.9.1",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.9.1:7,release,release,7,,https://github.com/stardist/stardist/releases/tag/0.9.1,1,['release'],['release']
Deployability,"Bugfix release, mainly to work around Windows installation issue due to [Windows 10 version 2004 fmod bug](https://developercommunity.visualstudio.com/comments/1243113/view.html). Also fixes a bug that occurred when training was continued for a model after it was loaded from disk. Thanks @Xqua!",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.6.1:7,release,release,7,,https://github.com/stardist/stardist/releases/tag/0.6.1,2,"['install', 'release']","['installation', 'release']"
Deployability,Fix installation bug,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.4.1:4,install,installation,4,,https://github.com/stardist/stardist/releases/tag/0.4.1,1,['install'],['installation']
Deployability,"Maintenance release to support TensorFlow >= 2.6.0, requiring CSBDeep >= 0.6.3 (see [release notes](https://github.com/CSBDeep/CSBDeep/releases/tag/0.6.3)). Please note the new installation instructions:. - *Unchanged* when using TensorFlow 2.x: `pip install stardist`; - *Updated* when using TensorFlow 1.x: `pip install ""stardist[tf1]""`",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.3:12,release,release,12,,https://github.com/stardist/stardist/releases/tag/0.7.3,7,"['Update', 'install', 'release']","['Updated', 'install', 'installation', 'release', 'releases']"
Deployability,Minor release. * Better tiling strategy for prediction; * Add tiling parameter in threshold optimization ; * Add overlap_label paramter in polyhedron rendering,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.6:6,release,release,6,,https://github.com/stardist/stardist/releases/tag/0.3.6,1,['release'],['release']
Deployability,PyPI release 0.2.1 contained partially wrong files. This release fixes that.; Also add utility function to export results as ImageJ ROIs.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.2.2:5,release,release,5,,https://github.com/stardist/stardist/releases/tag/0.2.2,2,['release'],['release']
Deployability,This is a big release with lots of (internal) changes:; - Support both TensorFlow 1 and 2 (via [CSBDeep](https://github.com/CSBDeep/CSBDeep) >= 0.6.0); - Support prediction for very large images via block-wise processing (cf. #36); - Remove Python 3.5 support and also add Python 3.8 support (when used with TensorFlow 2); - Add utility function to export 3D results as .obj file (OBJ geometry format); - Add possibility to train with data that doesn't fit in memory (cf. #57); - Fix installation bug when numpy is not installed (#71); - Host pre-trained models on GitHub (cf. #48); - Add new matching metrics; - Other bug fixes and improvements,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.6.0:14,release,release,14,,https://github.com/stardist/stardist/releases/tag/0.6.0,3,"['install', 'release']","['installation', 'installed', 'release']"
Deployability,"This is a maintenance release with the following changes:. - Support Python 3.11; - Fix issue when using TensorFlow 2.13.0; - Fix various deprecation warnings; - Fix issue when using 'None' as class labels; - Suppress some outputs from Keras/TensorFlow (cf. [forum post](https://forum.image.sc/t/turn-off-output-of-stardist/77653)); - Require [CSBDeep 0.7.4](https://github.com/CSBDeep/CSBDeep/releases/tag/0.7.4). Not part of the Python package, but important:. - Update documentation (with contributions from @psobolewskiPhD and @ajinkya-kulkarni); - Update Dockerfile; - Fix matplotlib configuration issue in example notebooks; - Fix a bioimage.io test issue (@FynnBe); - Update GitHub issue templates; - Fix various GitHub action issues",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.8.4:22,release,release,22,,https://github.com/stardist/stardist/releases/tag/0.8.4,6,"['Update', 'configurat', 'release']","['Update', 'configuration', 'release', 'releases']"
Deployability,"This is a minor release that fixes a few issues (cf. #57, #154, #156).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.2:16,release,release,16,,https://github.com/stardist/stardist/releases/tag/0.7.2,1,['release'],['release']
Deployability,This is a minor release with the following (non-breaking) changes:; - Add command line prediction scripts; - Update documentation regarding installation on Apple silicon; - Internal changes needed for stardist-napari (cf. https://github.com/stardist/stardist-napari/pull/20). We thank @romainGuiet and @psobolewskiPhD for contributing to this release.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.8.3:16,release,release,16,,https://github.com/stardist/stardist/releases/tag/0.8.3,4,"['Update', 'install', 'release']","['Update', 'installation', 'release']"
Deployability,"This release has many bug fixes and improvements, including:; - Improve non-maximum suppression (faster, interruptible, verbose option); - Make 2D distance computation more accurate (issue #33); - Add `export_TF` function to export the model for use in the companion [ImageJ/Fiji plugin](https://imagej.net/StarDist) (cf. #10); - Fix several bugs that only occurred when using multi-channel input images; - Fix some issues with ImageJ ROI export; - Fix bug to allow using input images without annotated objects (issue #25); - Add plotting functions to show instance segmentation (2D only); - Add support for building shared library for C++ code (work in progress); - Fix potential bug when using constant value label images; - Fix potential bug when using the [`edt`](https://github.com/seung-lab/euclidean-distance-transform-3d) package (deal with non-contiguous arrays). Minor (but *potentially breaking*) changes:; - Add `train_foreground_only` configuration parameter; - Data type of output label image now `int32` for both 2D and 3D (was `uint16` for 2D before); - Signature of `augmenter` function changed (now expects a single input/label image pair as input)",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.4.0:5,release,release,5,,https://github.com/stardist/stardist/releases/tag/0.4.0,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"With more than one year in the making, this is one of the biggest releases yet:. * Support for Python 3.9 ; * New support for multi-class object classification (e.g. for classifying nuclei into different types, details below); * Lots of additions to increase memory/time efficiency (details below); * Integration functions for the new [StarDist napari plugin](https://github.com/stardist/stardist-napari); * Many bug fixes. ### Object classification. In addition to detecting all *object instances* (e.g. cell nuclei), StarDist can now additionally classify each found object instance into a fixed number of different *object classes* (e.g. cell types). Please see the [example notebook](https://nbviewer.jupyter.org/github/stardist/stardist/blob/master/examples/other2D/multiclass.ipynb) for a demonstration with 2D images, but the feature also works for 3D images. ### Efficiency. There are many changes (mostly internal) that increase the overall efficiency. Highlights:. - Non-maximum suppression (NMS) has been refactored and is now considerably faster (now uses kd-trees internally, inspired by PR #40 from @GFleishman. Thanks!); - Better integration of [`edt`](https://github.com/seung-lab/euclidean-distance-transform-3d) to speed up training (we thank @william-silversmith for the discussion in #146); - CNN prediction is now vastly more memory-efficient for large images ([`sparse` flag](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L621-L623), enabled by default). If that's not memory-efficient enough, there's still the option of block-wise processing for very large images ([`predict_instances_big`](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L749-L800)).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.0:66,release,releases,66,,https://github.com/stardist/stardist/releases/tag/0.7.0,3,"['Integrat', 'integrat', 'release']","['Integration', 'integration', 'releases']"
Energy Efficiency,"With more than one year in the making, this is one of the biggest releases yet:. * Support for Python 3.9 ; * New support for multi-class object classification (e.g. for classifying nuclei into different types, details below); * Lots of additions to increase memory/time efficiency (details below); * Integration functions for the new [StarDist napari plugin](https://github.com/stardist/stardist-napari); * Many bug fixes. ### Object classification. In addition to detecting all *object instances* (e.g. cell nuclei), StarDist can now additionally classify each found object instance into a fixed number of different *object classes* (e.g. cell types). Please see the [example notebook](https://nbviewer.jupyter.org/github/stardist/stardist/blob/master/examples/other2D/multiclass.ipynb) for a demonstration with 2D images, but the feature also works for 3D images. ### Efficiency. There are many changes (mostly internal) that increase the overall efficiency. Highlights:. - Non-maximum suppression (NMS) has been refactored and is now considerably faster (now uses kd-trees internally, inspired by PR #40 from @GFleishman. Thanks!); - Better integration of [`edt`](https://github.com/seung-lab/euclidean-distance-transform-3d) to speed up training (we thank @william-silversmith for the discussion in #146); - CNN prediction is now vastly more memory-efficient for large images ([`sparse` flag](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L621-L623), enabled by default). If that's not memory-efficient enough, there's still the option of block-wise processing for very large images ([`predict_instances_big`](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L749-L800)).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.0:1354,efficient,efficient,1354,,https://github.com/stardist/stardist/releases/tag/0.7.0,2,['efficient'],['efficient']
Integrability,"## Changes. * Add support for Keras 3 in #266; * TensorFlow 2.16+ has Keras 3.x as a dependency (although it is possible to use legacy Keras 2.x if need-be); * Enable training with sparse label masks in 7a68fa7b8476a8d2e7b4860ab57836d0ae500aaa (inspired by @ksugar); * Add support for Python 3.12; * Various bug fixes and improvements, including; * Resolve integer overflow when running on a large 3D image by @ximion in https://github.com/stardist/stardist/pull/249; * Fix and improve the export function for Bioimage.IO by @qin-yu in https://github.com/stardist/stardist/pull/254. **Breaking changes**; * Exporting to TensorFlow's ""SavedModel"" format is no longer supported when using Keras 3. **Full Changelog**: https://github.com/stardist/stardist/compare/0.8.5...0.9.0",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.9.0:85,depend,dependency,85,,https://github.com/stardist/stardist/releases/tag/0.9.0,1,['depend'],['dependency']
Integrability,"With more than one year in the making, this is one of the biggest releases yet:. * Support for Python 3.9 ; * New support for multi-class object classification (e.g. for classifying nuclei into different types, details below); * Lots of additions to increase memory/time efficiency (details below); * Integration functions for the new [StarDist napari plugin](https://github.com/stardist/stardist-napari); * Many bug fixes. ### Object classification. In addition to detecting all *object instances* (e.g. cell nuclei), StarDist can now additionally classify each found object instance into a fixed number of different *object classes* (e.g. cell types). Please see the [example notebook](https://nbviewer.jupyter.org/github/stardist/stardist/blob/master/examples/other2D/multiclass.ipynb) for a demonstration with 2D images, but the feature also works for 3D images. ### Efficiency. There are many changes (mostly internal) that increase the overall efficiency. Highlights:. - Non-maximum suppression (NMS) has been refactored and is now considerably faster (now uses kd-trees internally, inspired by PR #40 from @GFleishman. Thanks!); - Better integration of [`edt`](https://github.com/seung-lab/euclidean-distance-transform-3d) to speed up training (we thank @william-silversmith for the discussion in #146); - CNN prediction is now vastly more memory-efficient for large images ([`sparse` flag](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L621-L623), enabled by default). If that's not memory-efficient enough, there's still the option of block-wise processing for very large images ([`predict_instances_big`](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L749-L800)).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.0:301,Integrat,Integration,301,,https://github.com/stardist/stardist/releases/tag/0.7.0,2,"['Integrat', 'integrat']","['Integration', 'integration']"
Modifiability,"This is a maintenance release with the following changes:. - Support Python 3.11; - Fix issue when using TensorFlow 2.13.0; - Fix various deprecation warnings; - Fix issue when using 'None' as class labels; - Suppress some outputs from Keras/TensorFlow (cf. [forum post](https://forum.image.sc/t/turn-off-output-of-stardist/77653)); - Require [CSBDeep 0.7.4](https://github.com/CSBDeep/CSBDeep/releases/tag/0.7.4). Not part of the Python package, but important:. - Update documentation (with contributions from @psobolewskiPhD and @ajinkya-kulkarni); - Update Dockerfile; - Fix matplotlib configuration issue in example notebooks; - Fix a bioimage.io test issue (@FynnBe); - Update GitHub issue templates; - Fix various GitHub action issues",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.8.4:589,config,configuration,589,,https://github.com/stardist/stardist/releases/tag/0.8.4,1,['config'],['configuration']
Modifiability,"This release has many bug fixes and improvements, including:; - Improve non-maximum suppression (faster, interruptible, verbose option); - Make 2D distance computation more accurate (issue #33); - Add `export_TF` function to export the model for use in the companion [ImageJ/Fiji plugin](https://imagej.net/StarDist) (cf. #10); - Fix several bugs that only occurred when using multi-channel input images; - Fix some issues with ImageJ ROI export; - Fix bug to allow using input images without annotated objects (issue #25); - Add plotting functions to show instance segmentation (2D only); - Add support for building shared library for C++ code (work in progress); - Fix potential bug when using constant value label images; - Fix potential bug when using the [`edt`](https://github.com/seung-lab/euclidean-distance-transform-3d) package (deal with non-contiguous arrays). Minor (but *potentially breaking*) changes:; - Add `train_foreground_only` configuration parameter; - Data type of output label image now `int32` for both 2D and 3D (was `uint16` for 2D before); - Signature of `augmenter` function changed (now expects a single input/label image pair as input)",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.4.0:280,plugin,plugin,280,,https://github.com/stardist/stardist/releases/tag/0.4.0,2,"['config', 'plugin']","['configuration', 'plugin']"
Modifiability,"With more than one year in the making, this is one of the biggest releases yet:. * Support for Python 3.9 ; * New support for multi-class object classification (e.g. for classifying nuclei into different types, details below); * Lots of additions to increase memory/time efficiency (details below); * Integration functions for the new [StarDist napari plugin](https://github.com/stardist/stardist-napari); * Many bug fixes. ### Object classification. In addition to detecting all *object instances* (e.g. cell nuclei), StarDist can now additionally classify each found object instance into a fixed number of different *object classes* (e.g. cell types). Please see the [example notebook](https://nbviewer.jupyter.org/github/stardist/stardist/blob/master/examples/other2D/multiclass.ipynb) for a demonstration with 2D images, but the feature also works for 3D images. ### Efficiency. There are many changes (mostly internal) that increase the overall efficiency. Highlights:. - Non-maximum suppression (NMS) has been refactored and is now considerably faster (now uses kd-trees internally, inspired by PR #40 from @GFleishman. Thanks!); - Better integration of [`edt`](https://github.com/seung-lab/euclidean-distance-transform-3d) to speed up training (we thank @william-silversmith for the discussion in #146); - CNN prediction is now vastly more memory-efficient for large images ([`sparse` flag](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L621-L623), enabled by default). If that's not memory-efficient enough, there's still the option of block-wise processing for very large images ([`predict_instances_big`](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L749-L800)).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.0:352,plugin,plugin,352,,https://github.com/stardist/stardist/releases/tag/0.7.0,2,"['plugin', 'refactor']","['plugin', 'refactored']"
Performance,"Bugfix release, mainly to work around Windows installation issue due to [Windows 10 version 2004 fmod bug](https://developercommunity.visualstudio.com/comments/1243113/view.html). Also fixes a bug that occurred when training was continued for a model after it was loaded from disk. Thanks @Xqua!",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.6.1:264,load,loaded,264,,https://github.com/stardist/stardist/releases/tag/0.6.1,1,['load'],['loaded']
Performance,"Changes:; - Support and include pretrained models (cf. #46); - Improve ImageJ RoI export (subpixel resolution); - Fix minor bugs related to polygon representations and plotting; - Deprecate Python 3.5. *Starting with StarDist 0.6.0, Python 3.5 will no longer be supported.*. Improve example notebooks (although not part of the python package itself):; - Include evaluation and detection performance after training; - Demonstrate how prediction results can be saved (cf. #45); - Show and use pretrained models; - Fix some minor bugs in the `other2D` notebooks; - Add data augmentation example for 2D model training; - Notebooks can be run standalone, no need to clone the whole repository anymore",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.5.0:387,perform,performance,387,,https://github.com/stardist/stardist/releases/tag/0.5.0,1,['perform'],['performance']
Performance,Minor release. * Better tiling strategy for prediction; * Add tiling parameter in threshold optimization ; * Add overlap_label paramter in polyhedron rendering,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.6:92,optimiz,optimization,92,,https://github.com/stardist/stardist/releases/tag/0.3.6,1,['optimiz'],['optimization']
Safety,- Major update that introduces 3D object detection with star-convex polyhedra.; - Lots of changes under the hood that include several breaking changes.; - New example notebooks.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.0:41,detect,detection,41,,https://github.com/stardist/stardist/releases/tag/0.3.0,1,['detect'],['detection']
Safety,"Changes:; - Support and include pretrained models (cf. #46); - Improve ImageJ RoI export (subpixel resolution); - Fix minor bugs related to polygon representations and plotting; - Deprecate Python 3.5. *Starting with StarDist 0.6.0, Python 3.5 will no longer be supported.*. Improve example notebooks (although not part of the python package itself):; - Include evaluation and detection performance after training; - Demonstrate how prediction results can be saved (cf. #45); - Show and use pretrained models; - Fix some minor bugs in the `other2D` notebooks; - Add data augmentation example for 2D model training; - Notebooks can be run standalone, no need to clone the whole repository anymore",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.5.0:377,detect,detection,377,,https://github.com/stardist/stardist/releases/tag/0.5.0,2,"['detect', 'predict']","['detection', 'prediction']"
Safety,Minor release. * Better tiling strategy for prediction; * Add tiling parameter in threshold optimization ; * Add overlap_label paramter in polyhedron rendering,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.6:44,predict,prediction,44,,https://github.com/stardist/stardist/releases/tag/0.3.6,1,['predict'],['prediction']
Safety,This is a big release with lots of (internal) changes:; - Support both TensorFlow 1 and 2 (via [CSBDeep](https://github.com/CSBDeep/CSBDeep) >= 0.6.0); - Support prediction for very large images via block-wise processing (cf. #36); - Remove Python 3.5 support and also add Python 3.8 support (when used with TensorFlow 2); - Add utility function to export 3D results as .obj file (OBJ geometry format); - Add possibility to train with data that doesn't fit in memory (cf. #57); - Fix installation bug when numpy is not installed (#71); - Host pre-trained models on GitHub (cf. #48); - Add new matching metrics; - Other bug fixes and improvements,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.6.0:162,predict,prediction,162,,https://github.com/stardist/stardist/releases/tag/0.6.0,1,['predict'],['prediction']
Safety,This is a minor release with the following (non-breaking) changes:; - Add command line prediction scripts; - Update documentation regarding installation on Apple silicon; - Internal changes needed for stardist-napari (cf. https://github.com/stardist/stardist-napari/pull/20). We thank @romainGuiet and @psobolewskiPhD for contributing to this release.,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.8.3:87,predict,prediction,87,,https://github.com/stardist/stardist/releases/tag/0.8.3,1,['predict'],['prediction']
Safety,"With more than one year in the making, this is one of the biggest releases yet:. * Support for Python 3.9 ; * New support for multi-class object classification (e.g. for classifying nuclei into different types, details below); * Lots of additions to increase memory/time efficiency (details below); * Integration functions for the new [StarDist napari plugin](https://github.com/stardist/stardist-napari); * Many bug fixes. ### Object classification. In addition to detecting all *object instances* (e.g. cell nuclei), StarDist can now additionally classify each found object instance into a fixed number of different *object classes* (e.g. cell types). Please see the [example notebook](https://nbviewer.jupyter.org/github/stardist/stardist/blob/master/examples/other2D/multiclass.ipynb) for a demonstration with 2D images, but the feature also works for 3D images. ### Efficiency. There are many changes (mostly internal) that increase the overall efficiency. Highlights:. - Non-maximum suppression (NMS) has been refactored and is now considerably faster (now uses kd-trees internally, inspired by PR #40 from @GFleishman. Thanks!); - Better integration of [`edt`](https://github.com/seung-lab/euclidean-distance-transform-3d) to speed up training (we thank @william-silversmith for the discussion in #146); - CNN prediction is now vastly more memory-efficient for large images ([`sparse` flag](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L621-L623), enabled by default). If that's not memory-efficient enough, there's still the option of block-wise processing for very large images ([`predict_instances_big`](https://github.com/stardist/stardist/blob/3451a4f9e7b6dcef91b09635cc8fa78939fb0d29/stardist/models/base.py#L749-L800)).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.7.0:466,detect,detecting,466,,https://github.com/stardist/stardist/releases/tag/0.7.0,2,"['detect', 'predict']","['detecting', 'prediction']"
Testability,- Add support for multi-channel input images; - Add tests for NMS and poly labeling; - Fix NMS bug on Windows,MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.3.3:52,test,tests,52,,https://github.com/stardist/stardist/releases/tag/0.3.3,1,['test'],['tests']
Testability,"- Provide pre-compiled binaries (""wheels"") for most platforms, i.e. no need for compilation during installation; - Bug fixes and improvements; - Improve tests, documentation and notebooks; - Internal changes related to testing",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.6.2:153,test,tests,153,,https://github.com/stardist/stardist/releases/tag/0.6.2,2,['test'],"['testing', 'tests']"
Testability,"The file `dsb2018.zip` contains the train and test images with associated ground truth labels as used in [our paper](https://arxiv.org/abs/1806.03535). They are a subset of the `stage1_train` images from the Kaggle 2018 Data Science Bowl, which are [available in full](https://data.broadinstitute.org/bbbc/BBBC038/) from the [Broad Bioimage Benchmark Collection](https://data.broadinstitute.org/bbbc/).",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.1.0:46,test,test,46,,https://github.com/stardist/stardist/releases/tag/0.1.0,2,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"This is a maintenance release with the following changes:. - Support Python 3.11; - Fix issue when using TensorFlow 2.13.0; - Fix various deprecation warnings; - Fix issue when using 'None' as class labels; - Suppress some outputs from Keras/TensorFlow (cf. [forum post](https://forum.image.sc/t/turn-off-output-of-stardist/77653)); - Require [CSBDeep 0.7.4](https://github.com/CSBDeep/CSBDeep/releases/tag/0.7.4). Not part of the Python package, but important:. - Update documentation (with contributions from @psobolewskiPhD and @ajinkya-kulkarni); - Update Dockerfile; - Fix matplotlib configuration issue in example notebooks; - Fix a bioimage.io test issue (@FynnBe); - Update GitHub issue templates; - Fix various GitHub action issues",MatchSource.RELEASES,stardist,stardist,0.9.1,https://github.com/stardist/stardist/releases/tag/0.8.4:651,test,test,651,,https://github.com/stardist/stardist/releases/tag/0.8.4,1,['test'],['test']
